{"version":3,"file":"ethereal.es.js","sources":["../../../node_modules/three/src/math/Vector2.js","../../../node_modules/three/src/math/MathUtils.js","../../../node_modules/three/src/math/Quaternion.js","../../../node_modules/three/src/math/Vector3.js","../../../node_modules/three/src/math/Vector4.js","../../../node_modules/three/src/math/Matrix4.js","../../../node_modules/three/src/math/Euler.js","../../../node_modules/three/src/math/Color.js","../../../node_modules/three/src/math/Box2.js","../../../node_modules/three/src/math/Box3.js","../../../node_modules/three/src/math/Ray.js","../../../node_modules/three/src/math/Line3.js","../../../node_modules/three/src/math/Matrix3.js","../../../node_modules/three/src/math/Plane.js","../../core/math-utils.ts","../../core/MemoizationCache.ts","../../core/SpatialMetrics.ts","../../core/SpatialOptimizer.ts","../../core/SpatialObjective.ts","../../core/SpatialLayout.ts","../../../node_modules/@popmotion/easing/dist/easing.es.js","../../core/Transitionable.ts","../../core/SpatialAdapter.ts","../../core/LayoutFrustum.ts","../../../node_modules/mathjs/lib/esm/core/config.js","../../../node_modules/mathjs/lib/esm/utils/is.js","../../../node_modules/mathjs/lib/esm/utils/object.js","../../../node_modules/mathjs/lib/esm/core/function/config.js","../../../node_modules/typed-function/typed-function.js","../../../node_modules/mathjs/lib/esm/utils/number.js","../../../node_modules/mathjs/lib/esm/utils/bignumber/formatter.js","../../../node_modules/mathjs/lib/esm/utils/string.js","../../../node_modules/mathjs/lib/esm/error/DimensionError.js","../../../node_modules/mathjs/lib/esm/error/IndexError.js","../../../node_modules/mathjs/lib/esm/utils/array.js","../../../node_modules/mathjs/lib/esm/utils/factory.js","../../../node_modules/mathjs/lib/esm/core/function/typed.js","../../../node_modules/mathjs/lib/esm/type/resultset/ResultSet.js","../../../node_modules/decimal.js/decimal.mjs","../../../node_modules/mathjs/lib/esm/type/bignumber/BigNumber.js","../../../node_modules/complex.js/complex.js","../../../node_modules/mathjs/lib/esm/type/complex/Complex.js","../../../node_modules/fraction.js/fraction.js","../../../node_modules/mathjs/lib/esm/type/fraction/Fraction.js","../../../node_modules/mathjs/lib/esm/type/matrix/Range.js","../../../node_modules/mathjs/lib/esm/type/matrix/Matrix.js","../../../node_modules/mathjs/lib/esm/type/matrix/DenseMatrix.js","../../../node_modules/mathjs/lib/esm/utils/collection.js","../../../node_modules/mathjs/lib/esm/plain/number/arithmetic.js","../../../node_modules/mathjs/lib/esm/function/utils/isNumeric.js","../../../node_modules/mathjs/lib/esm/utils/bignumber/nearlyEqual.js","../../../node_modules/mathjs/lib/esm/function/relational/equalScalar.js","../../../node_modules/mathjs/lib/esm/utils/complex.js","../../../node_modules/mathjs/lib/esm/type/matrix/SparseMatrix.js","../../../node_modules/mathjs/lib/esm/type/number.js","../../../node_modules/mathjs/lib/esm/type/bignumber/function/bignumber.js","../../../node_modules/mathjs/lib/esm/type/fraction/function/fraction.js","../../../node_modules/mathjs/lib/esm/type/matrix/function/matrix.js","../../../node_modules/mathjs/lib/esm/function/arithmetic/unaryMinus.js","../../../node_modules/mathjs/lib/esm/function/arithmetic/abs.js","../../../node_modules/mathjs/lib/esm/function/arithmetic/addScalar.js","../../../node_modules/mathjs/lib/esm/type/matrix/utils/algorithm11.js","../../../node_modules/mathjs/lib/esm/type/matrix/utils/algorithm14.js","../../../node_modules/mathjs/lib/esm/function/arithmetic/ceil.js","../../../node_modules/mathjs/lib/esm/function/arithmetic/fix.js","../../../node_modules/mathjs/lib/esm/function/arithmetic/floor.js","../../../node_modules/mathjs/lib/esm/type/matrix/utils/algorithm01.js","../../../node_modules/mathjs/lib/esm/type/matrix/utils/algorithm04.js","../../../node_modules/mathjs/lib/esm/type/matrix/utils/algorithm10.js","../../../node_modules/mathjs/lib/esm/type/matrix/utils/algorithm13.js","../../../node_modules/mathjs/lib/esm/type/matrix/utils/algorithm02.js","../../../node_modules/mathjs/lib/esm/type/matrix/utils/algorithm03.js","../../../node_modules/mathjs/lib/esm/type/matrix/utils/algorithm05.js","../../../node_modules/mathjs/lib/esm/type/matrix/utils/algorithm12.js","../../../node_modules/mathjs/lib/esm/function/arithmetic/mod.js","../../../node_modules/mathjs/lib/esm/function/arithmetic/multiplyScalar.js","../../../node_modules/mathjs/lib/esm/function/arithmetic/multiply.js","../../../node_modules/mathjs/lib/esm/function/arithmetic/subtract.js","../../../node_modules/mathjs/lib/esm/type/matrix/utils/algorithm07.js","../../../node_modules/mathjs/lib/esm/function/complex/conj.js","../../../node_modules/mathjs/lib/esm/utils/lruQueue.js","../../../node_modules/mathjs/lib/esm/utils/function.js","../../../node_modules/mathjs/lib/esm/function/matrix/identity.js","../../../node_modules/mathjs/lib/esm/utils/noop.js","../../../node_modules/mathjs/lib/esm/error/ArgumentsError.js","../../../node_modules/mathjs/lib/esm/function/matrix/size.js","../../../node_modules/mathjs/lib/esm/utils/customs.js","../../../node_modules/mathjs/lib/esm/function/matrix/subset.js","../../../node_modules/mathjs/lib/esm/function/matrix/zeros.js","../../../node_modules/mathjs/lib/esm/function/string/format.js","../../../node_modules/mathjs/lib/esm/function/utils/numeric.js","../../../node_modules/mathjs/lib/esm/function/arithmetic/divideScalar.js","../../../node_modules/mathjs/lib/esm/function/arithmetic/pow.js","../../../node_modules/mathjs/lib/esm/function/arithmetic/round.js","../../../node_modules/mathjs/lib/esm/function/relational/equal.js","../../../node_modules/mathjs/lib/esm/function/relational/smaller.js","../../../node_modules/mathjs/lib/esm/function/relational/larger.js","../../../node_modules/mathjs/lib/esm/type/matrix/FibonacciHeap.js","../../../node_modules/mathjs/lib/esm/type/matrix/Spa.js","../../../node_modules/mathjs/lib/esm/utils/bignumber/constants.js","../../../node_modules/mathjs/lib/esm/type/unit/Unit.js","../../../node_modules/mathjs/lib/esm/type/unit/function/unit.js","../../../node_modules/mathjs/lib/esm/type/unit/function/createUnit.js","../../../node_modules/mathjs/lib/esm/function/arithmetic/add.js","../../../node_modules/mathjs/lib/esm/function/matrix/dot.js","../../../node_modules/mathjs/lib/esm/expression/keywords.js","../../../node_modules/mathjs/lib/esm/expression/node/Node.js","../../../node_modules/mathjs/lib/esm/expression/transform/utils/errorTransform.js","../../../node_modules/mathjs/lib/esm/expression/node/utils/access.js","../../../node_modules/mathjs/lib/esm/expression/node/AccessorNode.js","../../../node_modules/mathjs/lib/esm/expression/node/ArrayNode.js","../../../node_modules/mathjs/lib/esm/expression/operators.js","../../../node_modules/mathjs/lib/esm/expression/node/AssignmentNode.js","../../../node_modules/mathjs/lib/esm/expression/node/utils/assign.js","../../../node_modules/mathjs/lib/esm/expression/node/BlockNode.js","../../../node_modules/mathjs/lib/esm/expression/node/ConditionalNode.js","../../../node_modules/escape-latex/dist/index.js","../../../node_modules/mathjs/lib/esm/utils/latex.js","../../../node_modules/mathjs/lib/esm/expression/node/ConstantNode.js","../../../node_modules/mathjs/lib/esm/expression/node/FunctionAssignmentNode.js","../../../node_modules/mathjs/lib/esm/expression/node/IndexNode.js","../../../node_modules/mathjs/lib/esm/expression/node/ObjectNode.js","../../../node_modules/mathjs/lib/esm/expression/node/OperatorNode.js","../../../node_modules/mathjs/lib/esm/expression/node/ParenthesisNode.js","../../../node_modules/mathjs/lib/esm/expression/node/RangeNode.js","../../../node_modules/mathjs/lib/esm/expression/node/RelationalNode.js","../../../node_modules/mathjs/lib/esm/expression/node/FunctionNode.js","../../../node_modules/mathjs/lib/esm/expression/parse.js","../../../node_modules/mathjs/lib/esm/entry/dependenciesAny/dependenciesBigNumberClass.generated.js","../../../node_modules/mathjs/lib/esm/entry/dependenciesAny/dependenciesComplexClass.generated.js","../../../node_modules/mathjs/lib/esm/entry/dependenciesAny/dependenciesMatrixClass.generated.js","../../../node_modules/mathjs/lib/esm/entry/dependenciesAny/dependenciesDenseMatrixClass.generated.js","../../../node_modules/mathjs/lib/esm/entry/dependenciesAny/dependenciesFractionClass.generated.js","../../../node_modules/mathjs/lib/esm/entry/dependenciesAny/dependenciesTyped.generated.js","../../../node_modules/mathjs/lib/esm/entry/dependenciesAny/dependenciesEqualScalar.generated.js","../../../node_modules/mathjs/lib/esm/entry/dependenciesAny/dependenciesSparseMatrixClass.generated.js","../../../node_modules/mathjs/lib/esm/entry/dependenciesAny/dependenciesNumber.generated.js","../../../node_modules/mathjs/lib/esm/entry/dependenciesAny/dependenciesFraction.generated.js","../../../node_modules/mathjs/lib/esm/entry/dependenciesAny/dependenciesMatrix.generated.js","../../../node_modules/mathjs/lib/esm/entry/dependenciesAny/dependenciesUnaryMinus.generated.js","../../../node_modules/mathjs/lib/esm/entry/dependenciesAny/dependenciesAbs.generated.js","../../../node_modules/mathjs/lib/esm/entry/dependenciesAny/dependenciesAddScalar.generated.js","../../../node_modules/mathjs/lib/esm/entry/dependenciesAny/dependenciesRound.generated.js","../../../node_modules/mathjs/lib/esm/entry/dependenciesAny/dependenciesZeros.generated.js","../../../node_modules/mathjs/lib/esm/entry/dependenciesAny/dependenciesMod.generated.js","../../../node_modules/mathjs/lib/esm/entry/dependenciesAny/dependenciesMultiplyScalar.generated.js","../../../node_modules/mathjs/lib/esm/entry/dependenciesAny/dependenciesSize.generated.js","../../../node_modules/mathjs/lib/esm/entry/dependenciesAny/dependenciesMultiply.generated.js","../../../node_modules/mathjs/lib/esm/entry/dependenciesAny/dependenciesDot.generated.js","../../../node_modules/mathjs/lib/esm/entry/dependenciesAny/dependenciesConj.generated.js","../../../node_modules/mathjs/lib/esm/entry/dependenciesAny/dependenciesSubtract.generated.js","../../../node_modules/mathjs/lib/esm/entry/dependenciesAny/dependenciesLarger.generated.js","../../../node_modules/mathjs/lib/esm/entry/dependenciesAny/dependenciesIdentity.generated.js","../../../node_modules/mathjs/lib/esm/entry/dependenciesAny/dependenciesAdd.generated.js","../../../node_modules/mathjs/lib/esm/entry/dependenciesAny/dependenciesNumeric.generated.js","../../../node_modules/mathjs/lib/esm/entry/dependenciesAny/dependenciesBignumber.generated.js","../../../node_modules/mathjs/lib/esm/entry/dependenciesAny/dependenciesDivideScalar.generated.js","../../../node_modules/mathjs/lib/esm/entry/dependenciesAny/dependenciesSubset.generated.js","../../../node_modules/mathjs/lib/esm/entry/dependenciesAny/dependenciesUnitClass.generated.js","../../../node_modules/mathjs/lib/esm/entry/dependenciesAny/dependenciesEqual.generated.js","../../../node_modules/mathjs/lib/esm/entry/dependenciesAny/dependenciesFix.generated.js","../../../node_modules/mathjs/lib/esm/entry/dependenciesAny/dependenciesCeil.generated.js","../../../node_modules/mathjs/lib/esm/entry/dependenciesAny/dependenciesFloor.generated.js","../../../node_modules/mathjs/lib/esm/entry/dependenciesAny/dependenciesFormat.generated.js","../../../node_modules/mathjs/lib/esm/entry/dependenciesAny/dependenciesIsNumeric.generated.js","../../../node_modules/mathjs/lib/esm/entry/dependenciesAny/dependenciesPow.generated.js","../../../node_modules/mathjs/lib/esm/entry/dependenciesAny/dependenciesUnitFunction.generated.js","../../../node_modules/mathjs/lib/esm/entry/dependenciesAny/dependenciesCreateUnit.generated.js","../../../node_modules/mathjs/lib/esm/entry/dependenciesAny/dependenciesNode.generated.js","../../../node_modules/mathjs/lib/esm/entry/dependenciesAny/dependenciesSymbolNode.generated.js","../../../node_modules/mathjs/lib/esm/expression/node/SymbolNode.js","../../../node_modules/mathjs/lib/esm/entry/dependenciesAny/dependenciesEvaluate.generated.js","../../../node_modules/mathjs/lib/esm/entry/dependenciesAny/dependenciesParse.generated.js","../../../node_modules/mathjs/lib/esm/entry/dependenciesAny/dependenciesAccessorNode.generated.js","../../../node_modules/mathjs/lib/esm/entry/dependenciesAny/dependenciesArrayNode.generated.js","../../../node_modules/mathjs/lib/esm/entry/dependenciesAny/dependenciesAssignmentNode.generated.js","../../../node_modules/mathjs/lib/esm/entry/dependenciesAny/dependenciesBlockNode.generated.js","../../../node_modules/mathjs/lib/esm/entry/dependenciesAny/dependenciesResultSet.generated.js","../../../node_modules/mathjs/lib/esm/entry/dependenciesAny/dependenciesConditionalNode.generated.js","../../../node_modules/mathjs/lib/esm/entry/dependenciesAny/dependenciesConstantNode.generated.js","../../../node_modules/mathjs/lib/esm/entry/dependenciesAny/dependenciesFunctionAssignmentNode.generated.js","../../../node_modules/mathjs/lib/esm/entry/dependenciesAny/dependenciesFunctionNode.generated.js","../../../node_modules/mathjs/lib/esm/entry/dependenciesAny/dependenciesIndexNode.generated.js","../../../node_modules/mathjs/lib/esm/entry/dependenciesAny/dependenciesRangeClass.generated.js","../../../node_modules/mathjs/lib/esm/entry/dependenciesAny/dependenciesObjectNode.generated.js","../../../node_modules/mathjs/lib/esm/entry/dependenciesAny/dependenciesOperatorNode.generated.js","../../../node_modules/mathjs/lib/esm/entry/dependenciesAny/dependenciesParenthesisNode.generated.js","../../../node_modules/mathjs/lib/esm/entry/dependenciesAny/dependenciesRangeNode.generated.js","../../../node_modules/mathjs/lib/esm/entry/dependenciesAny/dependenciesRelationalNode.generated.js","../../../node_modules/mathjs/lib/esm/expression/function/evaluate.js","../../../node_modules/mathjs/lib/esm/entry/dependenciesAny/dependenciesDivide.generated.js","../../../node_modules/mathjs/lib/esm/entry/dependenciesAny/dependenciesInv.generated.js","../../../node_modules/mathjs/lib/esm/entry/dependenciesAny/dependenciesDet.generated.js","../../../node_modules/mathjs/lib/esm/entry/dependenciesAny/dependenciesLup.generated.js","../../../node_modules/mathjs/lib/esm/entry/dependenciesAny/dependenciesSpaClass.generated.js","../../../node_modules/mathjs/lib/esm/entry/dependenciesAny/dependenciesFibonacciHeapClass.generated.js","../../../node_modules/mathjs/lib/esm/entry/dependenciesAny/dependenciesSmaller.generated.js","../../../node_modules/mathjs/lib/esm/function/algebra/decomposition/lup.js","../../../node_modules/mathjs/lib/esm/function/matrix/det.js","../../../node_modules/mathjs/lib/esm/function/matrix/inv.js","../../../node_modules/mathjs/lib/esm/function/arithmetic/divide.js","../../../node_modules/tiny-emitter/index.js","../../../node_modules/mathjs/lib/esm/core/function/import.js","../../../node_modules/mathjs/lib/esm/core/create.js","../../../node_modules/mathjs/lib/esm/utils/emitter.js","../../core/EtherealLayoutSystem.ts","../../core/SphericalCoordinate.ts","../../web-layer/dom-utils.ts","../../../node_modules/fast-text-encoding/text.min.js","../../../node_modules/lru_map/lru.js","../../web-layer/xml-serializer.ts","../../../node_modules/fast-sha256/sha256.js","../../web-layer/WebLayer.ts","../../../node_modules/@juggle/resize-observer/lib/utils/resizeObservers.js","../../../node_modules/@juggle/resize-observer/lib/ResizeObserverBoxOptions.js","../../../node_modules/@juggle/resize-observer/lib/algorithms/deliverResizeLoopError.js","../../../node_modules/@juggle/resize-observer/lib/utils/freeze.js","../../../node_modules/@juggle/resize-observer/lib/utils/queueMicroTask.js","../../../node_modules/@juggle/resize-observer/lib/ResizeObserverSize.js","../../../node_modules/@juggle/resize-observer/lib/DOMRectReadOnly.js","../../../node_modules/@juggle/resize-observer/lib/utils/element.js","../../../node_modules/@juggle/resize-observer/lib/utils/global.js","../../../node_modules/@juggle/resize-observer/lib/algorithms/calculateBoxSize.js","../../../node_modules/@juggle/resize-observer/lib/ResizeObserverEntry.js","../../../node_modules/@juggle/resize-observer/lib/algorithms/calculateDepthForNode.js","../../../node_modules/@juggle/resize-observer/lib/algorithms/broadcastActiveObservations.js","../../../node_modules/@juggle/resize-observer/lib/algorithms/gatherActiveObservationsAtDepth.js","../../../node_modules/@juggle/resize-observer/lib/utils/process.js","../../../node_modules/@juggle/resize-observer/lib/algorithms/hasActiveObservations.js","../../../node_modules/@juggle/resize-observer/lib/algorithms/hasSkippedObservations.js","../../../node_modules/@juggle/resize-observer/lib/utils/scheduler.js","../../../node_modules/@juggle/resize-observer/lib/utils/queueResizeObserver.js","../../../node_modules/@juggle/resize-observer/lib/ResizeObservation.js","../../../node_modules/@juggle/resize-observer/lib/ResizeObserverDetail.js","../../../node_modules/@juggle/resize-observer/lib/ResizeObserverController.js","../../../node_modules/@juggle/resize-observer/lib/ResizeObserver.js","../../web-layer/WebRenderer.ts","../../web-layer/three/three-web-layer.ts","../ethereal.ts"],"sourcesContent":["class Vector2 {\n\n\tconstructor( x = 0, y = 0 ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.x;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.x = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.y;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.y = value;\n\n\t}\n\n\tset( x, y ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.x * v.y - this.y * v.x;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tangle() {\n\n\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\tconst angle = Math.atan2( - this.y, - this.x ) + Math.PI;\n\n\t\treturn angle;\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y;\n\t\treturn dx * dx + dy * dy;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\n\t\treturn this;\n\n\t}\n\n\trotateAround( center, angle ) {\n\n\t\tconst c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\tconst x = this.x - center.x;\n\t\tconst y = this.y - center.y;\n\n\t\tthis.x = x * c - y * s + center.x;\n\t\tthis.y = x * s + y * c + center.y;\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\n\t\treturn this;\n\n\t}\n\n}\n\nVector2.prototype.isVector2 = true;\n\nexport { Vector2 };\n","const _lut = [];\n\nfor ( let i = 0; i < 256; i ++ ) {\n\n\t_lut[ i ] = ( i < 16 ? '0' : '' ) + ( i ).toString( 16 );\n\n}\n\nlet _seed = 1234567;\n\n\nconst DEG2RAD = Math.PI / 180;\nconst RAD2DEG = 180 / Math.PI;\n\n// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\nfunction generateUUID() {\n\n\tconst d0 = Math.random() * 0xffffffff | 0;\n\tconst d1 = Math.random() * 0xffffffff | 0;\n\tconst d2 = Math.random() * 0xffffffff | 0;\n\tconst d3 = Math.random() * 0xffffffff | 0;\n\tconst uuid = _lut[ d0 & 0xff ] + _lut[ d0 >> 8 & 0xff ] + _lut[ d0 >> 16 & 0xff ] + _lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d1 & 0xff ] + _lut[ d1 >> 8 & 0xff ] + '-' + _lut[ d1 >> 16 & 0x0f | 0x40 ] + _lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d2 & 0x3f | 0x80 ] + _lut[ d2 >> 8 & 0xff ] + '-' + _lut[ d2 >> 16 & 0xff ] + _lut[ d2 >> 24 & 0xff ] +\n\t\t\t_lut[ d3 & 0xff ] + _lut[ d3 >> 8 & 0xff ] + _lut[ d3 >> 16 & 0xff ] + _lut[ d3 >> 24 & 0xff ];\n\n\t// .toUpperCase() here flattens concatenated strings to save heap memory space.\n\treturn uuid.toUpperCase();\n\n}\n\nfunction clamp( value, min, max ) {\n\n\treturn Math.max( min, Math.min( max, value ) );\n\n}\n\n// compute euclidian modulo of m % n\n// https://en.wikipedia.org/wiki/Modulo_operation\nfunction euclideanModulo( n, m ) {\n\n\treturn ( ( n % m ) + m ) % m;\n\n}\n\n// Linear mapping from range <a1, a2> to range <b1, b2>\nfunction mapLinear( x, a1, a2, b1, b2 ) {\n\n\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n}\n\n// https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/\nfunction inverseLerp( x, y, value ) {\n\n\tif ( x !== y ) {\n\n\t\treturn ( value - x ) / ( y - x );\n\n\t\t } else {\n\n\t\treturn 0;\n\n\t\t }\n\n}\n\n// https://en.wikipedia.org/wiki/Linear_interpolation\nfunction lerp( x, y, t ) {\n\n\treturn ( 1 - t ) * x + t * y;\n\n}\n\n// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\nfunction damp( x, y, lambda, dt ) {\n\n\treturn lerp( x, y, 1 - Math.exp( - lambda * dt ) );\n\n}\n\n// https://www.desmos.com/calculator/vcsjnyz7x4\nfunction pingpong( x, length = 1 ) {\n\n\treturn length - Math.abs( euclideanModulo( x, length * 2 ) - length );\n\n}\n\n// http://en.wikipedia.org/wiki/Smoothstep\nfunction smoothstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * ( 3 - 2 * x );\n\n}\n\nfunction smootherstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n}\n\n// Random integer from <low, high> interval\nfunction randInt( low, high ) {\n\n\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n}\n\n// Random float from <low, high> interval\nfunction randFloat( low, high ) {\n\n\treturn low + Math.random() * ( high - low );\n\n}\n\n// Random float from <-range/2, range/2> interval\nfunction randFloatSpread( range ) {\n\n\treturn range * ( 0.5 - Math.random() );\n\n}\n\n// Deterministic pseudo-random float in the interval [ 0, 1 ]\nfunction seededRandom( s ) {\n\n\tif ( s !== undefined ) _seed = s % 2147483647;\n\n\t// Park-Miller algorithm\n\n\t_seed = _seed * 16807 % 2147483647;\n\n\treturn ( _seed - 1 ) / 2147483646;\n\n}\n\nfunction degToRad( degrees ) {\n\n\treturn degrees * DEG2RAD;\n\n}\n\nfunction radToDeg( radians ) {\n\n\treturn radians * RAD2DEG;\n\n}\n\nfunction isPowerOfTwo( value ) {\n\n\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n}\n\nfunction ceilPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction floorPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction setQuaternionFromProperEuler( q, a, b, c, order ) {\n\n\t// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\n\n\t// rotations are applied to the axes in the order specified by 'order'\n\t// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\n\t// angles are in radians\n\n\tconst cos = Math.cos;\n\tconst sin = Math.sin;\n\n\tconst c2 = cos( b / 2 );\n\tconst s2 = sin( b / 2 );\n\n\tconst c13 = cos( ( a + c ) / 2 );\n\tconst s13 = sin( ( a + c ) / 2 );\n\n\tconst c1_3 = cos( ( a - c ) / 2 );\n\tconst s1_3 = sin( ( a - c ) / 2 );\n\n\tconst c3_1 = cos( ( c - a ) / 2 );\n\tconst s3_1 = sin( ( c - a ) / 2 );\n\n\tswitch ( order ) {\n\n\t\tcase 'XYX':\n\t\t\tq.set( c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YZY':\n\t\t\tq.set( s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZXZ':\n\t\t\tq.set( s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'XZX':\n\t\t\tq.set( c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YXY':\n\t\t\tq.set( s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZYZ':\n\t\t\tq.set( s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order );\n\n\t}\n\n}\n\n\n\n\nexport {\n\tDEG2RAD,\n\tRAD2DEG,\n\tgenerateUUID,\n\tclamp,\n\teuclideanModulo,\n\tmapLinear,\n\tinverseLerp,\n\tlerp,\n\tdamp,\n\tpingpong,\n\tsmoothstep,\n\tsmootherstep,\n\trandInt,\n\trandFloat,\n\trandFloatSpread,\n\tseededRandom,\n\tdegToRad,\n\tradToDeg,\n\tisPowerOfTwo,\n\tceilPowerOfTwo,\n\tfloorPowerOfTwo,\n\tsetQuaternionFromProperEuler,\n};\n","import * as MathUtils from './MathUtils.js';\n\nclass Quaternion {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t}\n\n\tstatic slerp( qa, qb, qm, t ) {\n\n\t\tconsole.warn( 'THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead.' );\n\t\treturn qm.slerpQuaternions( qa, qb, t );\n\n\t}\n\n\tstatic slerpFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tlet x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( t === 0 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x0;\n\t\t\tdst[ dstOffset + 1 ] = y0;\n\t\t\tdst[ dstOffset + 2 ] = z0;\n\t\t\tdst[ dstOffset + 3 ] = w0;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( t === 1 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x1;\n\t\t\tdst[ dstOffset + 1 ] = y1;\n\t\t\tdst[ dstOffset + 2 ] = z1;\n\t\t\tdst[ dstOffset + 3 ] = w1;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tlet s = 1 - t;\n\t\t\tconst cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tconst sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tconst tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tconst f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t}\n\n\tstatic multiplyQuaternionsFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1 ) {\n\n\t\tconst x0 = src0[ srcOffset0 ];\n\t\tconst y0 = src0[ srcOffset0 + 1 ];\n\t\tconst z0 = src0[ srcOffset0 + 2 ];\n\t\tconst w0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 ];\n\t\tconst y1 = src1[ srcOffset1 + 1 ];\n\t\tconst z1 = src1[ srcOffset1 + 2 ];\n\t\tconst w1 = src1[ srcOffset1 + 3 ];\n\n\t\tdst[ dstOffset ] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;\n\t\tdst[ dstOffset + 1 ] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;\n\t\tdst[ dstOffset + 2 ] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;\n\t\tdst[ dstOffset + 3 ] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;\n\n\t\treturn dst;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget w() {\n\n\t\treturn this._w;\n\n\t}\n\n\tset w( value ) {\n\n\t\tthis._w = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t}\n\n\tcopy( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromEuler( euler, update ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tconst x = euler._x, y = euler._y, z = euler._z, order = euler._order;\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tconst cos = Math.cos;\n\t\tconst sin = Math.sin;\n\n\t\tconst c1 = cos( x / 2 );\n\t\tconst c2 = cos( y / 2 );\n\t\tconst c3 = cos( z / 2 );\n\n\t\tconst s1 = sin( x / 2 );\n\t\tconst s2 = sin( y / 2 );\n\t\tconst s3 = sin( z / 2 );\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .setFromEuler() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tif ( update !== false ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAxisAngle( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tconst halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\tconst s = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromUnitVectors( vFrom, vTo ) {\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tlet r = vFrom.dot( vTo ) + 1;\n\n\t\tif ( r < Number.EPSILON ) {\n\n\t\t\t// vFrom and vTo point in opposite directions\n\n\t\t\tr = 0;\n\n\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\tthis._x = - vFrom.y;\n\t\t\t\tthis._y = vFrom.x;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = r;\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = - vFrom.z;\n\t\t\t\tthis._z = vFrom.y;\n\t\t\t\tthis._w = r;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n\n\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n\t\t\tthis._w = r;\n\n\t\t}\n\n\t\treturn this.normalize();\n\n\t}\n\n\tangleTo( q ) {\n\n\t\treturn 2 * Math.acos( Math.abs( MathUtils.clamp( this.dot( q ), - 1, 1 ) ) );\n\n\t}\n\n\trotateTowards( q, step ) {\n\n\t\tconst angle = this.angleTo( q );\n\n\t\tif ( angle === 0 ) return this;\n\n\t\tconst t = Math.min( 1, step / angle );\n\n\t\tthis.slerp( q, t );\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\treturn this.set( 0, 0, 0, 1 );\n\n\t}\n\n\tinvert() {\n\n\t\t// quaternion is assumed to have unit length\n\n\t\treturn this.conjugate();\n\n\t}\n\n\tconjugate() {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t}\n\n\tnormalize() {\n\n\t\tlet l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( q, p ) {\n\n\t\tif ( p !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\n\t\t\treturn this.multiplyQuaternions( q, p );\n\n\t\t}\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t}\n\n\tpremultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t}\n\n\tmultiplyQuaternions( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tconst qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tconst qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerp( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tconst x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tlet cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\n\n\t\t\tconst s = 1 - t;\n\t\t\tthis._w = s * w + t * this._w;\n\t\t\tthis._x = s * x + t * this._x;\n\t\t\tthis._y = s * y + t * this._y;\n\t\t\tthis._z = s * z + t * this._z;\n\n\t\t\tthis.normalize();\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\tconst halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tconst ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerpQuaternions( qa, qb, t ) {\n\n\t\tthis.copy( qa ).slerp( qb, t );\n\n\t}\n\n\tequals( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis._x = attribute.getX( index );\n\t\tthis._y = attribute.getY( index );\n\t\tthis._z = attribute.getZ( index );\n\t\tthis._w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n}\n\nQuaternion.prototype.isQuaternion = true;\n\nexport { Quaternion };\n","import * as MathUtils from './MathUtils.js';\nimport { Quaternion } from './Quaternion.js';\n\nclass Vector3 {\n\n\tconstructor( x = 0, y = 0, z = 0 ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t}\n\n\tset( x, y, z ) {\n\n\t\tif ( z === undefined ) z = this.z; // sprite.scale.set(x,y)\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\n\t\t\treturn this.multiplyVectors( v, w );\n\n\t\t}\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyVectors( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyEuler( euler ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\treturn this.applyQuaternion( _quaternion.setFromEuler( euler ) );\n\n\t}\n\n\tapplyAxisAngle( axis, angle ) {\n\n\t\treturn this.applyQuaternion( _quaternion.setFromAxisAngle( axis, angle ) );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\treturn this.applyMatrix3( m ).normalize();\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tconst w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// calculate quat * vector\n\n\t\tconst ix = qw * x + qy * z - qz * y;\n\t\tconst iy = qw * y + qz * x - qx * z;\n\t\tconst iz = qw * z + qx * y - qy * x;\n\t\tconst iw = - qx * x - qy * y - qz * z;\n\n\t\t// calculate result * inverse quat\n\n\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n\t\treturn this;\n\n\t}\n\n\tproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\n\n\t}\n\n\tunproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t}\n\n\t// TODO lengthSquared?\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tcross( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\n\t\t\treturn this.crossVectors( v, w );\n\n\t\t}\n\n\t\treturn this.crossVectors( this, v );\n\n\t}\n\n\tcrossVectors( a, b ) {\n\n\t\tconst ax = a.x, ay = a.y, az = a.z;\n\t\tconst bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t}\n\n\tprojectOnVector( v ) {\n\n\t\tconst denominator = v.lengthSq();\n\n\t\tif ( denominator === 0 ) return this.set( 0, 0, 0 );\n\n\t\tconst scalar = v.dot( this ) / denominator;\n\n\t\treturn this.copy( v ).multiplyScalar( scalar );\n\n\t}\n\n\tprojectOnPlane( planeNormal ) {\n\n\t\t_vector.copy( this ).projectOnVector( planeNormal );\n\n\t\treturn this.sub( _vector );\n\n\t}\n\n\treflect( normal ) {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\treturn this.sub( _vector.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( MathUtils.clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t}\n\n\tsetFromSpherical( s ) {\n\n\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\n\n\t}\n\n\tsetFromSphericalCoords( radius, phi, theta ) {\n\n\t\tconst sinPhiRadius = Math.sin( phi ) * radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( theta );\n\t\tthis.y = Math.cos( phi ) * radius;\n\t\tthis.z = sinPhiRadius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCylindrical( c ) {\n\n\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\n\n\t}\n\n\tsetFromCylindricalCoords( radius, theta, y ) {\n\n\t\tthis.x = radius * Math.sin( theta );\n\t\tthis.y = y;\n\t\tthis.z = radius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixPosition( m ) {\n\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixScale( m ) {\n\n\t\tconst sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tconst sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tconst sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixColumn( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t}\n\n\tsetFromMatrix3Column( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 3 );\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\n\t\treturn this;\n\n\t}\n\n}\n\nVector3.prototype.isVector3 = true;\n\nconst _vector = /*@__PURE__*/ new Vector3();\nconst _quaternion = /*@__PURE__*/ new Quaternion();\n\nexport { Vector3 };\n","class Vector4 {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.z;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.z = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.w;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.w = value;\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\t\tthis.w = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( w ) {\n\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tcase 3: this.w = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tcase 3: return this.w;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\t\tthis.w += v.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\t\tthis.w += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\t\tthis.w = a.w + b.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\t\tthis.w += v.w * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\t\tthis.w -= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\t\tthis.w -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\t\tthis.w = a.w - b.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\t\tthis.w *= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\t\tthis.w *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z, w = this.w;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tsetAxisAngleFromQuaternion( q ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t// q is assumed to be normalized\n\n\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\tconst s = Math.sqrt( 1 - q.w * q.w );\n\n\t\tif ( s < 0.0001 ) {\n\n\t\t\tthis.x = 1;\n\t\t\tthis.y = 0;\n\t\t\tthis.z = 0;\n\n\t\t} else {\n\n\t\t\tthis.x = q.x / s;\n\t\t\tthis.y = q.y / s;\n\t\t\tthis.z = q.z / s;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetAxisAngleFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tlet angle, x, y, z; // variables for result\n\t\tconst epsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\tte = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t// singularity found\n\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t}\n\n\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\tangle = Math.PI;\n\n\t\t\tconst xx = ( m11 + 1 ) / 2;\n\t\t\tconst yy = ( m22 + 1 ) / 2;\n\t\t\tconst zz = ( m33 + 1 ) / 2;\n\t\t\tconst xy = ( m12 + m21 ) / 4;\n\t\t\tconst xz = ( m13 + m31 ) / 4;\n\t\t\tconst yz = ( m23 + m32 ) / 4;\n\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\tx = 0;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\ty = xy / x;\n\t\t\t\t\tz = xz / x;\n\n\t\t\t\t}\n\n\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\tx = xy / y;\n\t\t\t\t\tz = yz / y;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\tx = xz / z;\n\t\t\t\t\ty = yz / z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.set( x, y, z, angle );\n\n\t\t\treturn this; // return 180 deg rotation\n\n\t\t}\n\n\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\tlet s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t\t( m13 - m31 ) * ( m13 - m31 ) +\n\t\t\t( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\tthis.x = ( m32 - m23 ) / s;\n\t\tthis.y = ( m13 - m31 ) / s;\n\t\tthis.z = ( m21 - m12 ) / s;\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\t\tthis.w = Math.min( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\t\tthis.w = Math.max( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\t\tthis.w = Math.max( minVal, Math.min( maxVal, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\t\tthis.w = Math.floor( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\t\tthis.w = Math.ceil( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\t\tthis.w = Math.round( this.w );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\t\tthis.w = - this.w;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\t\tthis.w = v1.w + ( v2.w - v1.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\t\tthis.w = array[ offset + 3 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\t\tarray[ offset + 3 ] = this.w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\t\tthis.w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\t\tthis.w = Math.random();\n\n\t\treturn this;\n\n\t}\n\n}\n\nVector4.prototype.isVector4 = true;\n\nexport { Vector4 };\n","import { Vector3 } from './Vector3.js';\n\nclass Matrix4 {\n\n\tconstructor() {\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t];\n\n\t\tif ( arguments.length > 0 ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Matrix4().fromArray( this.elements );\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\treturn this;\n\n\t}\n\n\tcopyPosition( m ) {\n\n\t\tconst te = this.elements, me = m.elements;\n\n\t\tte[ 12 ] = me[ 12 ];\n\t\tte[ 13 ] = me[ 13 ];\n\t\tte[ 14 ] = me[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix3( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 3 ], me[ 6 ], 0,\n\t\t\tme[ 1 ], me[ 4 ], me[ 7 ], 0,\n\t\t\tme[ 2 ], me[ 5 ], me[ 8 ], 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmakeBasis( xAxis, yAxis, zAxis ) {\n\n\t\tthis.set(\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractRotation( m ) {\n\n\t\t// this method does not support reflection matrices\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tconst scaleX = 1 / _v1.setFromMatrixColumn( m, 0 ).length();\n\t\tconst scaleY = 1 / _v1.setFromMatrixColumn( m, 1 ).length();\n\t\tconst scaleZ = 1 / _v1.setFromMatrixColumn( m, 2 ).length();\n\n\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromEuler( euler ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tconst te = this.elements;\n\n\t\tconst x = euler.x, y = euler.y, z = euler.z;\n\t\tconst a = Math.cos( x ), b = Math.sin( x );\n\t\tconst c = Math.cos( y ), d = Math.sin( y );\n\t\tconst e = Math.cos( z ), f = Math.sin( z );\n\n\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - c * f;\n\t\t\tte[ 8 ] = d;\n\n\t\t\tte[ 1 ] = af + be * d;\n\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\tte[ 9 ] = - b * c;\n\n\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\tte[ 6 ] = be + af * d;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce + df * b;\n\t\t\tte[ 4 ] = de * b - cf;\n\t\t\tte[ 8 ] = a * d;\n\n\t\t\tte[ 1 ] = a * f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b;\n\n\t\t\tte[ 2 ] = cf * b - de;\n\t\t\tte[ 6 ] = df + ce * b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce - df * b;\n\t\t\tte[ 4 ] = - a * f;\n\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\tte[ 1 ] = cf + de * b;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\tte[ 2 ] = - a * d;\n\t\t\tte[ 6 ] = b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = be * d - af;\n\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\tte[ 1 ] = c * f;\n\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\tte[ 2 ] = - d;\n\t\t\tte[ 6 ] = b * c;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\tte[ 1 ] = f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b * e;\n\n\t\t\tte[ 2 ] = - d * e;\n\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - f;\n\t\t\tte[ 8 ] = d * e;\n\n\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\tte[ 6 ] = b * e;\n\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t}\n\n\t\t// bottom row\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// last column\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromQuaternion( q ) {\n\n\t\treturn this.compose( _zero, q, _one );\n\n\t}\n\n\tlookAt( eye, target, up ) {\n\n\t\tconst te = this.elements;\n\n\t\t_z.subVectors( eye, target );\n\n\t\tif ( _z.lengthSq() === 0 ) {\n\n\t\t\t// eye and target are in the same position\n\n\t\t\t_z.z = 1;\n\n\t\t}\n\n\t\t_z.normalize();\n\t\t_x.crossVectors( up, _z );\n\n\t\tif ( _x.lengthSq() === 0 ) {\n\n\t\t\t// up and z are parallel\n\n\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t_z.x += 0.0001;\n\n\t\t\t} else {\n\n\t\t\t\t_z.z += 0.0001;\n\n\t\t\t}\n\n\t\t\t_z.normalize();\n\t\t\t_x.crossVectors( up, _z );\n\n\t\t}\n\n\t\t_x.normalize();\n\t\t_y.crossVectors( _z, _x );\n\n\t\tte[ 0 ] = _x.x; te[ 4 ] = _y.x; te[ 8 ] = _z.x;\n\t\tte[ 1 ] = _x.y; te[ 5 ] = _y.y; te[ 9 ] = _z.y;\n\t\tte[ 2 ] = _x.z; te[ 6 ] = _y.z; te[ 10 ] = _z.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m, n ) {\n\n\t\tif ( n !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\n\t\t\treturn this.multiplyMatrices( m, n );\n\n\t\t}\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\tconst a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\tconst b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\tconst n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\tconst n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\tconst n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t//TODO: make this more efficient\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\treturn (\n\t\t\tn41 * (\n\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t - n13 * n24 * n32\n\t\t\t\t - n14 * n22 * n33\n\t\t\t\t + n12 * n24 * n33\n\t\t\t\t + n13 * n22 * n34\n\t\t\t\t - n12 * n23 * n34\n\t\t\t) +\n\t\t\tn42 * (\n\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t - n11 * n24 * n33\n\t\t\t\t + n14 * n21 * n33\n\t\t\t\t - n13 * n21 * n34\n\t\t\t\t + n13 * n24 * n31\n\t\t\t\t - n14 * n23 * n31\n\t\t\t) +\n\t\t\tn43 * (\n\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t - n11 * n22 * n34\n\t\t\t\t - n14 * n21 * n32\n\t\t\t\t + n12 * n21 * n34\n\t\t\t\t + n14 * n22 * n31\n\t\t\t\t - n12 * n24 * n31\n\t\t\t) +\n\t\t\tn44 * (\n\t\t\t\t- n13 * n22 * n31\n\t\t\t\t - n11 * n23 * n32\n\t\t\t\t + n11 * n22 * n33\n\t\t\t\t + n13 * n21 * n32\n\t\t\t\t - n12 * n21 * n33\n\t\t\t\t + n12 * n23 * n31\n\t\t\t)\n\n\t\t);\n\n\t}\n\n\ttranspose() {\n\n\t\tconst te = this.elements;\n\t\tlet tmp;\n\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tsetPosition( x, y, z ) {\n\n\t\tconst te = this.elements;\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tte[ 12 ] = x.x;\n\t\t\tte[ 13 ] = x.y;\n\t\t\tte[ 14 ] = x.z;\n\n\t\t} else {\n\n\t\t\tte[ 12 ] = x;\n\t\t\tte[ 13 ] = y;\n\t\t\tte[ 14 ] = z;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tinvert() {\n\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ], n41 = te[ 3 ],\n\t\t\tn12 = te[ 4 ], n22 = te[ 5 ], n32 = te[ 6 ], n42 = te[ 7 ],\n\t\t\tn13 = te[ 8 ], n23 = te[ 9 ], n33 = te[ 10 ], n43 = te[ 11 ],\n\t\t\tn14 = te[ 12 ], n24 = te[ 13 ], n34 = te[ 14 ], n44 = te[ 15 ],\n\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\tconst det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\tte[ 4 ] = t12 * detInv;\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\tte[ 8 ] = t13 * detInv;\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\tte[ 12 ] = t14 * detInv;\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\tscale( v ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = v.x, y = v.y, z = v.z;\n\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxScaleOnAxis() {\n\n\t\tconst te = this.elements;\n\n\t\tconst scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\tconst scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\tconst scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t}\n\n\tmakeTranslation( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, x,\n\t\t\t0, 1, 0, y,\n\t\t\t0, 0, 1, z,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationX( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, - s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationY( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t c, 0, s, 0,\n\t\t\t 0, 1, 0, 0,\n\t\t\t- s, 0, c, 0,\n\t\t\t 0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationZ( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationAxis( axis, angle ) {\n\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\tconst c = Math.cos( angle );\n\t\tconst s = Math.sin( angle );\n\t\tconst t = 1 - c;\n\t\tconst x = axis.x, y = axis.y, z = axis.z;\n\t\tconst tx = t * x, ty = t * y;\n\n\t\tthis.set(\n\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0, 0,\n\t\t\t0, y, 0, 0,\n\t\t\t0, 0, z, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeShear( xy, xz, yx, yz, zx, zy ) {\n\n\t\tthis.set(\n\n\t\t\t1, yx, zx, 0,\n\t\t\txy, 1, zy, 0,\n\t\t\txz, yz, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\n\t\tconst x2 = x + x,\ty2 = y + y, z2 = z + z;\n\t\tconst xx = x * x2, xy = x * y2, xz = x * z2;\n\t\tconst yy = y * y2, yz = y * z2, zz = z * z2;\n\t\tconst wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\tconst sx = scale.x, sy = scale.y, sz = scale.z;\n\n\t\tte[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n\t\tte[ 1 ] = ( xy + wz ) * sx;\n\t\tte[ 2 ] = ( xz - wy ) * sx;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = ( xy - wz ) * sy;\n\t\tte[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n\t\tte[ 6 ] = ( yz + wx ) * sy;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = ( xz + wy ) * sz;\n\t\tte[ 9 ] = ( yz - wx ) * sz;\n\t\tte[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = position.x;\n\t\tte[ 13 ] = position.y;\n\t\tte[ 14 ] = position.z;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tdecompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tlet sx = _v1.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\tconst sy = _v1.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\tconst sz = _v1.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t// if determine is negative, we need to invert one scale\n\t\tconst det = this.determinant();\n\t\tif ( det < 0 ) sx = - sx;\n\n\t\tposition.x = te[ 12 ];\n\t\tposition.y = te[ 13 ];\n\t\tposition.z = te[ 14 ];\n\n\t\t// scale the rotation part\n\t\t_m1.copy( this );\n\n\t\tconst invSX = 1 / sx;\n\t\tconst invSY = 1 / sy;\n\t\tconst invSZ = 1 / sz;\n\n\t\t_m1.elements[ 0 ] *= invSX;\n\t\t_m1.elements[ 1 ] *= invSX;\n\t\t_m1.elements[ 2 ] *= invSX;\n\n\t\t_m1.elements[ 4 ] *= invSY;\n\t\t_m1.elements[ 5 ] *= invSY;\n\t\t_m1.elements[ 6 ] *= invSY;\n\n\t\t_m1.elements[ 8 ] *= invSZ;\n\t\t_m1.elements[ 9 ] *= invSZ;\n\t\t_m1.elements[ 10 ] *= invSZ;\n\n\t\tquaternion.setFromRotationMatrix( _m1 );\n\n\t\tscale.x = sx;\n\t\tscale.y = sy;\n\t\tscale.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tmakePerspective( left, right, top, bottom, near, far ) {\n\n\t\tif ( far === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.' );\n\n\t\t}\n\n\t\tconst te = this.elements;\n\t\tconst x = 2 * near / ( right - left );\n\t\tconst y = 2 * near / ( top - bottom );\n\n\t\tconst a = ( right + left ) / ( right - left );\n\t\tconst b = ( top + bottom ) / ( top - bottom );\n\t\tconst c = - ( far + near ) / ( far - near );\n\t\tconst d = - 2 * far * near / ( far - near );\n\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\treturn this;\n\n\t}\n\n\tmakeOrthographic( left, right, top, bottom, near, far ) {\n\n\t\tconst te = this.elements;\n\t\tconst w = 1.0 / ( right - left );\n\t\tconst h = 1.0 / ( top - bottom );\n\t\tconst p = 1.0 / ( far - near );\n\n\t\tconst x = ( right + left ) * w;\n\t\tconst y = ( top + bottom ) * h;\n\t\tconst z = ( far + near ) * p;\n\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 * p;\tte[ 14 ] = - z;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\treturn array;\n\n\t}\n\n}\n\nMatrix4.prototype.isMatrix4 = true;\n\nconst _v1 = /*@__PURE__*/ new Vector3();\nconst _m1 = /*@__PURE__*/ new Matrix4();\nconst _zero = /*@__PURE__*/ new Vector3( 0, 0, 0 );\nconst _one = /*@__PURE__*/ new Vector3( 1, 1, 1 );\nconst _x = /*@__PURE__*/ new Vector3();\nconst _y = /*@__PURE__*/ new Vector3();\nconst _z = /*@__PURE__*/ new Vector3();\n\nexport { Matrix4 };\n","import { Quaternion } from './Quaternion.js';\nimport { Vector3 } from './Vector3.js';\nimport { Matrix4 } from './Matrix4.js';\nimport { clamp } from './MathUtils.js';\n\nconst _matrix = /*@__PURE__*/ new Matrix4();\nconst _quaternion = /*@__PURE__*/ new Quaternion();\n\nclass Euler {\n\n\tconstructor( x = 0, y = 0, z = 0, order = Euler.DefaultOrder ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget order() {\n\n\t\treturn this._order;\n\n\t}\n\n\tset order( value ) {\n\n\t\tthis._order = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, order ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order || this._order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t}\n\n\tcopy( euler ) {\n\n\t\tthis._x = euler._x;\n\t\tthis._y = euler._y;\n\t\tthis._z = euler._z;\n\t\tthis._order = euler._order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m, order, update ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements;\n\t\tconst m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\tconst m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\tconst m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\torder = order || this._order;\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\n\t\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m13 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\n\t\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m23 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\n\t\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m32 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = 0;\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\n\t\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m31 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\n\t\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m21 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\n\t\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m12 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._y = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tthis._order = order;\n\n\t\tif ( update !== false ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromQuaternion( q, order, update ) {\n\n\t\t_matrix.makeRotationFromQuaternion( q );\n\n\t\treturn this.setFromRotationMatrix( _matrix, order, update );\n\n\t}\n\n\tsetFromVector3( v, order ) {\n\n\t\treturn this.set( v.x, v.y, v.z, order || this._order );\n\n\t}\n\n\treorder( newOrder ) {\n\n\t\t// WARNING: this discards revolution information -bhouston\n\n\t\t_quaternion.setFromEuler( this );\n\n\t\treturn this.setFromQuaternion( _quaternion, newOrder );\n\n\t}\n\n\tequals( euler ) {\n\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t}\n\n\tfromArray( array ) {\n\n\t\tthis._x = array[ 0 ];\n\t\tthis._y = array[ 1 ];\n\t\tthis._z = array[ 2 ];\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._order;\n\n\t\treturn array;\n\n\t}\n\n\ttoVector3( optionalResult ) {\n\n\t\tif ( optionalResult ) {\n\n\t\t\treturn optionalResult.set( this._x, this._y, this._z );\n\n\t\t} else {\n\n\t\t\treturn new Vector3( this._x, this._y, this._z );\n\n\t\t}\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n}\n\nEuler.prototype.isEuler = true;\n\nEuler.DefaultOrder = 'XYZ';\nEuler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\n\nexport { Euler };\n","import * as MathUtils from './MathUtils.js';\n\nconst _colorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\nconst _hslA = { h: 0, s: 0, l: 0 };\nconst _hslB = { h: 0, s: 0, l: 0 };\n\nfunction hue2rgb( p, q, t ) {\n\n\tif ( t < 0 ) t += 1;\n\tif ( t > 1 ) t -= 1;\n\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\tif ( t < 1 / 2 ) return q;\n\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\treturn p;\n\n}\n\nfunction SRGBToLinear( c ) {\n\n\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\n\n}\n\nfunction LinearToSRGB( c ) {\n\n\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\n\n}\n\nclass Color {\n\n\tconstructor( r, g, b ) {\n\n\t\tif ( g === undefined && b === undefined ) {\n\n\t\t\t// r is THREE.Color, hex or string\n\t\t\treturn this.set( r );\n\n\t\t}\n\n\t\treturn this.setRGB( r, g, b );\n\n\t}\n\n\tset( value ) {\n\n\t\tif ( value && value.isColor ) {\n\n\t\t\tthis.copy( value );\n\n\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\tthis.setHex( value );\n\n\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\tthis.setStyle( value );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.r = scalar;\n\t\tthis.g = scalar;\n\t\tthis.b = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetHex( hex ) {\n\n\t\thex = Math.floor( hex );\n\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\treturn this;\n\n\t}\n\n\tsetRGB( r, g, b ) {\n\n\t\tthis.r = r;\n\t\tthis.g = g;\n\t\tthis.b = b;\n\n\t\treturn this;\n\n\t}\n\n\tsetHSL( h, s, l ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\th = MathUtils.euclideanModulo( h, 1 );\n\t\ts = MathUtils.clamp( s, 0, 1 );\n\t\tl = MathUtils.clamp( l, 0, 1 );\n\n\t\tif ( s === 0 ) {\n\n\t\t\tthis.r = this.g = this.b = l;\n\n\t\t} else {\n\n\t\t\tconst p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\tconst q = ( 2 * l ) - p;\n\n\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetStyle( style ) {\n\n\t\tfunction handleAlpha( string ) {\n\n\t\t\tif ( string === undefined ) return;\n\n\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tlet m;\n\n\t\tif ( m = /^((?:rgb|hsl)a?)\\(([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t// rgb / hsl\n\n\t\t\tlet color;\n\t\t\tconst name = m[ 1 ];\n\t\t\tconst components = m[ 2 ];\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'rgb':\n\t\t\t\tcase 'rgba':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'hsl':\n\t\t\t\tcase 'hsla':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\t\t\t\t\t\tconst h = parseFloat( color[ 1 ] ) / 360;\n\t\t\t\t\t\tconst s = parseInt( color[ 2 ], 10 ) / 100;\n\t\t\t\t\t\tconst l = parseInt( color[ 3 ], 10 ) / 100;\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setHSL( h, s, l );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t} else if ( m = /^\\#([A-Fa-f\\d]+)$/.exec( style ) ) {\n\n\t\t\t// hex color\n\n\t\t\tconst hex = m[ 1 ];\n\t\t\tconst size = hex.length;\n\n\t\t\tif ( size === 3 ) {\n\n\t\t\t\t// #ff0\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\n\n\t\t\t\treturn this;\n\n\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t// #ff0000\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( style && style.length > 0 ) {\n\n\t\t\treturn this.setColorName( style );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetColorName( style ) {\n\n\t\t// color keywords\n\t\tconst hex = _colorKeywords[ style.toLowerCase() ];\n\n\t\tif ( hex !== undefined ) {\n\n\t\t\t// red\n\t\t\tthis.setHex( hex );\n\n\t\t} else {\n\n\t\t\t// unknown color\n\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t}\n\n\tcopy( color ) {\n\n\t\tthis.r = color.r;\n\t\tthis.g = color.g;\n\t\tthis.b = color.b;\n\n\t\treturn this;\n\n\t}\n\n\tcopyGammaToLinear( color, gammaFactor = 2.0 ) {\n\n\t\tthis.r = Math.pow( color.r, gammaFactor );\n\t\tthis.g = Math.pow( color.g, gammaFactor );\n\t\tthis.b = Math.pow( color.b, gammaFactor );\n\n\t\treturn this;\n\n\t}\n\n\tcopyLinearToGamma( color, gammaFactor = 2.0 ) {\n\n\t\tconst safeInverse = ( gammaFactor > 0 ) ? ( 1.0 / gammaFactor ) : 1.0;\n\n\t\tthis.r = Math.pow( color.r, safeInverse );\n\t\tthis.g = Math.pow( color.g, safeInverse );\n\t\tthis.b = Math.pow( color.b, safeInverse );\n\n\t\treturn this;\n\n\t}\n\n\tconvertGammaToLinear( gammaFactor ) {\n\n\t\tthis.copyGammaToLinear( this, gammaFactor );\n\n\t\treturn this;\n\n\t}\n\n\tconvertLinearToGamma( gammaFactor ) {\n\n\t\tthis.copyLinearToGamma( this, gammaFactor );\n\n\t\treturn this;\n\n\t}\n\n\tcopySRGBToLinear( color ) {\n\n\t\tthis.r = SRGBToLinear( color.r );\n\t\tthis.g = SRGBToLinear( color.g );\n\t\tthis.b = SRGBToLinear( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tcopyLinearToSRGB( color ) {\n\n\t\tthis.r = LinearToSRGB( color.r );\n\t\tthis.g = LinearToSRGB( color.g );\n\t\tthis.b = LinearToSRGB( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tconvertSRGBToLinear() {\n\n\t\tthis.copySRGBToLinear( this );\n\n\t\treturn this;\n\n\t}\n\n\tconvertLinearToSRGB() {\n\n\t\tthis.copyLinearToSRGB( this );\n\n\t\treturn this;\n\n\t}\n\n\tgetHex() {\n\n\t\treturn ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;\n\n\t}\n\n\tgetHexString() {\n\n\t\treturn ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );\n\n\t}\n\n\tgetHSL( target ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Color: .getHSL() target is now required' );\n\t\t\ttarget = { h: 0, s: 0, l: 0 };\n\n\t\t}\n\n\t\tconst r = this.r, g = this.g, b = this.b;\n\n\t\tconst max = Math.max( r, g, b );\n\t\tconst min = Math.min( r, g, b );\n\n\t\tlet hue, saturation;\n\t\tconst lightness = ( min + max ) / 2.0;\n\n\t\tif ( min === max ) {\n\n\t\t\thue = 0;\n\t\t\tsaturation = 0;\n\n\t\t} else {\n\n\t\t\tconst delta = max - min;\n\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\tswitch ( max ) {\n\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t}\n\n\t\t\thue /= 6;\n\n\t\t}\n\n\t\ttarget.h = hue;\n\t\ttarget.s = saturation;\n\t\ttarget.l = lightness;\n\n\t\treturn target;\n\n\t}\n\n\tgetStyle() {\n\n\t\treturn 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';\n\n\t}\n\n\toffsetHSL( h, s, l ) {\n\n\t\tthis.getHSL( _hslA );\n\n\t\t_hslA.h += h; _hslA.s += s; _hslA.l += l;\n\n\t\tthis.setHSL( _hslA.h, _hslA.s, _hslA.l );\n\n\t\treturn this;\n\n\t}\n\n\tadd( color ) {\n\n\t\tthis.r += color.r;\n\t\tthis.g += color.g;\n\t\tthis.b += color.b;\n\n\t\treturn this;\n\n\t}\n\n\taddColors( color1, color2 ) {\n\n\t\tthis.r = color1.r + color2.r;\n\t\tthis.g = color1.g + color2.g;\n\t\tthis.b = color1.b + color2.b;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.r += s;\n\t\tthis.g += s;\n\t\tthis.b += s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( color ) {\n\n\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( color ) {\n\n\t\tthis.r *= color.r;\n\t\tthis.g *= color.g;\n\t\tthis.b *= color.b;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tthis.r *= s;\n\t\tthis.g *= s;\n\t\tthis.b *= s;\n\n\t\treturn this;\n\n\t}\n\n\tlerp( color, alpha ) {\n\n\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpColors( color1, color2, alpha ) {\n\n\t\tthis.r = color1.r + ( color2.r - color1.r ) * alpha;\n\t\tthis.g = color1.g + ( color2.g - color1.g ) * alpha;\n\t\tthis.b = color1.b + ( color2.b - color1.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpHSL( color, alpha ) {\n\n\t\tthis.getHSL( _hslA );\n\t\tcolor.getHSL( _hslB );\n\n\t\tconst h = MathUtils.lerp( _hslA.h, _hslB.h, alpha );\n\t\tconst s = MathUtils.lerp( _hslA.s, _hslB.s, alpha );\n\t\tconst l = MathUtils.lerp( _hslA.l, _hslB.l, alpha );\n\n\t\tthis.setHSL( h, s, l );\n\n\t\treturn this;\n\n\t}\n\n\tequals( c ) {\n\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.r = array[ offset ];\n\t\tthis.g = array[ offset + 1 ];\n\t\tthis.b = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.r;\n\t\tarray[ offset + 1 ] = this.g;\n\t\tarray[ offset + 2 ] = this.b;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.r = attribute.getX( index );\n\t\tthis.g = attribute.getY( index );\n\t\tthis.b = attribute.getZ( index );\n\n\t\tif ( attribute.normalized === true ) {\n\n\t\t\t// assuming Uint8Array\n\n\t\t\tthis.r /= 255;\n\t\t\tthis.g /= 255;\n\t\t\tthis.b /= 255;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.getHex();\n\n\t}\n\n}\n\nColor.NAMES = _colorKeywords;\n\nColor.prototype.isColor = true;\nColor.prototype.r = 1;\nColor.prototype.g = 1;\nColor.prototype.b = 1;\n\nexport { Color };\n","import { Vector2 } from './Vector2.js';\n\nconst _vector = /*@__PURE__*/ new Vector2();\n\nclass Box2 {\n\n\tconstructor( min = new Vector2( + Infinity, + Infinity ), max = new Vector2( - Infinity, - Infinity ) ) {\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector.copy( size ).multiplyScalar( 0.5 );\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = + Infinity;\n\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .getCenter() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .getSize() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .getParameter() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 4 splitting planes to rule out intersections\n\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .clampPoint() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\tconst clampedPoint = _vector.copy( point ).clamp( this.min, this.max );\n\t\treturn clampedPoint.sub( point ).length();\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nBox2.prototype.isBox2 = true;\n\nexport { Box2 };\n","import { Vector3 } from './Vector3.js';\n\nclass Box3 {\n\n\tconstructor( min = new Vector3( + Infinity, + Infinity, + Infinity ), max = new Vector3( - Infinity, - Infinity, - Infinity ) ) {\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromArray( array ) {\n\n\t\tlet minX = + Infinity;\n\t\tlet minY = + Infinity;\n\t\tlet minZ = + Infinity;\n\n\t\tlet maxX = - Infinity;\n\t\tlet maxY = - Infinity;\n\t\tlet maxZ = - Infinity;\n\n\t\tfor ( let i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\tconst x = array[ i ];\n\t\t\tconst y = array[ i + 1 ];\n\t\t\tconst z = array[ i + 2 ];\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromBufferAttribute( attribute ) {\n\n\t\tlet minX = + Infinity;\n\t\tlet minY = + Infinity;\n\t\tlet minZ = + Infinity;\n\n\t\tlet maxX = - Infinity;\n\t\tlet maxY = - Infinity;\n\t\tlet maxZ = - Infinity;\n\n\t\tfor ( let i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\tconst x = attribute.getX( i );\n\t\t\tconst y = attribute.getY( i );\n\t\t\tconst z = attribute.getZ( i );\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector.copy( size ).multiplyScalar( 0.5 );\n\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromObject( object ) {\n\n\t\tthis.makeEmpty();\n\n\t\treturn this.expandByObject( object );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getCenter() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getSize() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\texpandByObject( object ) {\n\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t// accounting for both the object's, and children's, world transforms\n\n\t\tobject.updateWorldMatrix( false, false );\n\n\t\tconst geometry = object.geometry;\n\n\t\tif ( geometry !== undefined ) {\n\n\t\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\t\tgeometry.computeBoundingBox();\n\n\t\t\t}\n\n\t\t\t_box.copy( geometry.boundingBox );\n\t\t\t_box.applyMatrix4( object.matrixWorld );\n\n\t\t\tthis.union( _box );\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tthis.expandByObject( children[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\n\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getParameter() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 6 splitting planes to rule out intersections.\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\t// Find the point on the AABB closest to the sphere center.\n\t\tthis.clampPoint( sphere.center, _vector );\n\n\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\treturn _vector.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\tlet min, max;\n\n\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t} else {\n\n\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t}\n\n\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t}\n\n\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t}\n\n\t\treturn ( min <= - plane.constant && max >= - plane.constant );\n\n\t}\n\n\tintersectsTriangle( triangle ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// compute box center and extents\n\t\tthis.getCenter( _center );\n\t\t_extents.subVectors( this.max, _center );\n\n\t\t// translate triangle to aabb origin\n\t\t_v0.subVectors( triangle.a, _center );\n\t\t_v1.subVectors( triangle.b, _center );\n\t\t_v2.subVectors( triangle.c, _center );\n\n\t\t// compute edge vectors for triangle\n\t\t_f0.subVectors( _v1, _v0 );\n\t\t_f1.subVectors( _v2, _v1 );\n\t\t_f2.subVectors( _v0, _v2 );\n\n\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\t\tlet axes = [\n\t\t\t0, - _f0.z, _f0.y, 0, - _f1.z, _f1.y, 0, - _f2.z, _f2.y,\n\t\t\t_f0.z, 0, - _f0.x, _f1.z, 0, - _f1.x, _f2.z, 0, - _f2.x,\n\t\t\t- _f0.y, _f0.x, 0, - _f1.y, _f1.x, 0, - _f2.y, _f2.x, 0\n\t\t];\n\t\tif ( ! satForAxes( axes, _v0, _v1, _v2, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// test 3 face normals from the aabb\n\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\n\t\tif ( ! satForAxes( axes, _v0, _v1, _v2, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// finally testing the face normal of the triangle\n\t\t// use already existing triangle edge vectors here\n\t\t_triangleNormal.crossVectors( _f0, _f1 );\n\t\taxes = [ _triangleNormal.x, _triangleNormal.y, _triangleNormal.z ];\n\n\t\treturn satForAxes( axes, _v0, _v1, _v2, _extents );\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .clampPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\tconst clampedPoint = _vector.copy( point ).clamp( this.min, this.max );\n\n\t\treturn clampedPoint.sub( point ).length();\n\n\t}\n\n\tgetBoundingSphere( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.error( 'THREE.Box3: .getBoundingSphere() target is now required' );\n\t\t\t//target = new Sphere(); // removed to avoid cyclic dependency\n\n\t\t}\n\n\t\tthis.getCenter( target.center );\n\n\t\ttarget.radius = this.getSize( _vector ).length() * 0.5;\n\n\t\treturn target;\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\t// transform of empty box is an empty box.\n\t\tif ( this.isEmpty() ) return this;\n\n\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t_points[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t_points[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t_points[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t_points[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t_points[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t_points[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t_points[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t_points[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111\n\n\t\tthis.setFromPoints( _points );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nBox3.prototype.isBox3 = true;\n\nconst _points = [\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3()\n];\n\nconst _vector = /*@__PURE__*/ new Vector3();\n\nconst _box = /*@__PURE__*/ new Box3();\n\n// triangle centered vertices\n\nconst _v0 = /*@__PURE__*/ new Vector3();\nconst _v1 = /*@__PURE__*/ new Vector3();\nconst _v2 = /*@__PURE__*/ new Vector3();\n\n// triangle edge vectors\n\nconst _f0 = /*@__PURE__*/ new Vector3();\nconst _f1 = /*@__PURE__*/ new Vector3();\nconst _f2 = /*@__PURE__*/ new Vector3();\n\nconst _center = /*@__PURE__*/ new Vector3();\nconst _extents = /*@__PURE__*/ new Vector3();\nconst _triangleNormal = /*@__PURE__*/ new Vector3();\nconst _testAxis = /*@__PURE__*/ new Vector3();\n\nfunction satForAxes( axes, v0, v1, v2, extents ) {\n\n\tfor ( let i = 0, j = axes.length - 3; i <= j; i += 3 ) {\n\n\t\t_testAxis.fromArray( axes, i );\n\t\t// project the aabb onto the seperating axis\n\t\tconst r = extents.x * Math.abs( _testAxis.x ) + extents.y * Math.abs( _testAxis.y ) + extents.z * Math.abs( _testAxis.z );\n\t\t// project all 3 vertices of the triangle onto the seperating axis\n\t\tconst p0 = v0.dot( _testAxis );\n\t\tconst p1 = v1.dot( _testAxis );\n\t\tconst p2 = v2.dot( _testAxis );\n\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\n\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t// the axis is seperating and we can exit\n\t\t\treturn false;\n\n\t\t}\n\n\t}\n\n\treturn true;\n\n}\n\nexport { Box3 };\n","import { Vector3 } from './Vector3.js';\n\nconst _vector = /*@__PURE__*/ new Vector3();\nconst _segCenter = /*@__PURE__*/ new Vector3();\nconst _segDir = /*@__PURE__*/ new Vector3();\nconst _diff = /*@__PURE__*/ new Vector3();\n\nconst _edge1 = /*@__PURE__*/ new Vector3();\nconst _edge2 = /*@__PURE__*/ new Vector3();\nconst _normal = /*@__PURE__*/ new Vector3();\n\nclass Ray {\n\n\tconstructor( origin = new Vector3(), direction = new Vector3( 0, 0, - 1 ) ) {\n\n\t\tthis.origin = origin;\n\t\tthis.direction = direction;\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\tthis.origin.copy( origin );\n\t\tthis.direction.copy( direction );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( ray ) {\n\n\t\tthis.origin.copy( ray.origin );\n\t\tthis.direction.copy( ray.direction );\n\n\t\treturn this;\n\n\t}\n\n\tat( t, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Ray: .at() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( this.direction ).multiplyScalar( t ).add( this.origin );\n\n\t}\n\n\tlookAt( v ) {\n\n\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\treturn this;\n\n\t}\n\n\trecast( t ) {\n\n\t\tthis.origin.copy( this.at( t, _vector ) );\n\n\t\treturn this;\n\n\t}\n\n\tclosestPointToPoint( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Ray: .closestPointToPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\ttarget.subVectors( point, this.origin );\n\n\t\tconst directionDistance = target.dot( this.direction );\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn target.copy( this.origin );\n\n\t\t}\n\n\t\treturn target.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t}\n\n\tdistanceSqToPoint( point ) {\n\n\t\tconst directionDistance = _vector.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t// point behind the ray\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t}\n\n\t\t_vector.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t\treturn _vector.distanceToSquared( point );\n\n\t}\n\n\tdistanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t// It returns the min distance between the ray and the segment\n\t\t// defined by v0 and v1\n\t\t// It can also set two optional targets :\n\t\t// - The closest point on the ray\n\t\t// - The closest point on the segment\n\n\t\t_segCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t_segDir.copy( v1 ).sub( v0 ).normalize();\n\t\t_diff.copy( this.origin ).sub( _segCenter );\n\n\t\tconst segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\tconst a01 = - this.direction.dot( _segDir );\n\t\tconst b0 = _diff.dot( this.direction );\n\t\tconst b1 = - _diff.dot( _segDir );\n\t\tconst c = _diff.lengthSq();\n\t\tconst det = Math.abs( 1 - a01 * a01 );\n\t\tlet s0, s1, sqrDist, extDet;\n\n\t\tif ( det > 0 ) {\n\n\t\t\t// The ray and segment are not parallel.\n\n\t\t\ts0 = a01 * b1 - b0;\n\t\t\ts1 = a01 * b0 - b1;\n\t\t\textDet = segExtent * det;\n\n\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\tconst invDet = 1 / det;\n\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 5\n\n\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t// region 4\n\n\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t// region 3\n\n\t\t\t\t\ts0 = 0;\n\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 2\n\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Ray and segment are parallel.\n\n\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t}\n\n\t\tif ( optionalPointOnRay ) {\n\n\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\n\n\t\t}\n\n\t\tif ( optionalPointOnSegment ) {\n\n\t\t\toptionalPointOnSegment.copy( _segDir ).multiplyScalar( s1 ).add( _segCenter );\n\n\t\t}\n\n\t\treturn sqrDist;\n\n\t}\n\n\tintersectSphere( sphere, target ) {\n\n\t\t_vector.subVectors( sphere.center, this.origin );\n\t\tconst tca = _vector.dot( this.direction );\n\t\tconst d2 = _vector.dot( _vector ) - tca * tca;\n\t\tconst radius2 = sphere.radius * sphere.radius;\n\n\t\tif ( d2 > radius2 ) return null;\n\n\t\tconst thc = Math.sqrt( radius2 - d2 );\n\n\t\t// t0 = first intersect point - entrance on front of sphere\n\t\tconst t0 = tca - thc;\n\n\t\t// t1 = second intersect point - exit point on back of sphere\n\t\tconst t1 = tca + thc;\n\n\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\n\t\tif ( t0 < 0 && t1 < 0 ) return null;\n\n\t\t// test to see if t0 is behind the ray:\n\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t// in order to always return an intersect point that is in front of the ray.\n\t\tif ( t0 < 0 ) return this.at( t1, target );\n\n\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\treturn this.at( t0, target );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn this.distanceSqToPoint( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tdistanceToPlane( plane ) {\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t// Return if the ray never intersects the plane\n\n\t\treturn t >= 0 ? t : null;\n\n\t}\n\n\tintersectPlane( plane, target ) {\n\n\t\tconst t = this.distanceToPlane( plane );\n\n\t\tif ( t === null ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn this.at( t, target );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// check if the ray lies on the plane first\n\n\t\tconst distToPoint = plane.distanceToPoint( this.origin );\n\n\t\tif ( distToPoint === 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\treturn false;\n\n\t}\n\n\tintersectBox( box, target ) {\n\n\t\tlet tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\tconst invdirx = 1 / this.direction.x,\n\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\tconst origin = this.origin;\n\n\t\tif ( invdirx >= 0 ) {\n\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t} else {\n\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t}\n\n\t\tif ( invdiry >= 0 ) {\n\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t} else {\n\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t}\n\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\t// These lines also handle the case where tmin or tmax is NaN\n\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\n\n\t\tif ( tymin > tmin || tmin !== tmin ) tmin = tymin;\n\n\t\tif ( tymax < tmax || tmax !== tmax ) tmax = tymax;\n\n\t\tif ( invdirz >= 0 ) {\n\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t} else {\n\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t}\n\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t//return point closest to the ray (positive side)\n\n\t\tif ( tmax < 0 ) return null;\n\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn this.intersectBox( box, _vector ) !== null;\n\n\t}\n\n\tintersectTriangle( a, b, c, backfaceCulling, target ) {\n\n\t\t// Compute the offset origin, edges, and normal.\n\n\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t_edge1.subVectors( b, a );\n\t\t_edge2.subVectors( c, a );\n\t\t_normal.crossVectors( _edge1, _edge2 );\n\n\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\tlet DdN = this.direction.dot( _normal );\n\t\tlet sign;\n\n\t\tif ( DdN > 0 ) {\n\n\t\t\tif ( backfaceCulling ) return null;\n\t\t\tsign = 1;\n\n\t\t} else if ( DdN < 0 ) {\n\n\t\t\tsign = - 1;\n\t\t\tDdN = - DdN;\n\n\t\t} else {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t_diff.subVectors( this.origin, a );\n\t\tconst DdQxE2 = sign * this.direction.dot( _edge2.crossVectors( _diff, _edge2 ) );\n\n\t\t// b1 < 0, no intersection\n\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst DdE1xQ = sign * this.direction.dot( _edge1.cross( _diff ) );\n\n\t\t// b2 < 0, no intersection\n\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// b1+b2 > 1, no intersection\n\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Line intersects triangle, check if ray does.\n\t\tconst QdN = - sign * _diff.dot( _normal );\n\n\t\t// t < 0, no intersection\n\t\tif ( QdN < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Ray intersects triangle.\n\t\treturn this.at( QdN / DdN, target );\n\n\t}\n\n\tapplyMatrix4( matrix4 ) {\n\n\t\tthis.origin.applyMatrix4( matrix4 );\n\t\tthis.direction.transformDirection( matrix4 );\n\n\t\treturn this;\n\n\t}\n\n\tequals( ray ) {\n\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nexport { Ray };\n","import { Vector3 } from './Vector3.js';\nimport * as MathUtils from './MathUtils.js';\n\nconst _startP = /*@__PURE__*/ new Vector3();\nconst _startEnd = /*@__PURE__*/ new Vector3();\n\nclass Line3 {\n\n\tconstructor( start = new Vector3(), end = new Vector3() ) {\n\n\t\tthis.start = start;\n\t\tthis.end = end;\n\n\t}\n\n\tset( start, end ) {\n\n\t\tthis.start.copy( start );\n\t\tthis.end.copy( end );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( line ) {\n\n\t\tthis.start.copy( line.start );\n\t\tthis.end.copy( line.end );\n\n\t\treturn this;\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .getCenter() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t}\n\n\tdelta( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .delta() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.subVectors( this.end, this.start );\n\n\t}\n\n\tdistanceSq() {\n\n\t\treturn this.start.distanceToSquared( this.end );\n\n\t}\n\n\tdistance() {\n\n\t\treturn this.start.distanceTo( this.end );\n\n\t}\n\n\tat( t, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .at() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tclosestPointToPointParameter( point, clampToLine ) {\n\n\t\t_startP.subVectors( point, this.start );\n\t\t_startEnd.subVectors( this.end, this.start );\n\n\t\tconst startEnd2 = _startEnd.dot( _startEnd );\n\t\tconst startEnd_startP = _startEnd.dot( _startP );\n\n\t\tlet t = startEnd_startP / startEnd2;\n\n\t\tif ( clampToLine ) {\n\n\t\t\tt = MathUtils.clamp( t, 0, 1 );\n\n\t\t}\n\n\t\treturn t;\n\n\t}\n\n\tclosestPointToPoint( point, clampToLine, target ) {\n\n\t\tconst t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .closestPointToPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.start.applyMatrix4( matrix );\n\t\tthis.end.applyMatrix4( matrix );\n\n\t\treturn this;\n\n\t}\n\n\tequals( line ) {\n\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nexport { Line3 };\n","class Matrix3 {\n\n\tconstructor() {\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t];\n\n\t\tif ( arguments.length > 0 ) {\n\n\t\t\tconsole.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrix3Column( this, 0 );\n\t\tyAxis.setFromMatrix3Column( this, 1 );\n\t\tzAxis.setFromMatrix3Column( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix4( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\n\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\n\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t}\n\n\tinvert() {\n\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ],\n\t\t\tn12 = te[ 3 ], n22 = te[ 4 ], n32 = te[ 5 ],\n\t\t\tn13 = te[ 6 ], n23 = te[ 7 ], n33 = te[ 8 ],\n\n\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\tte[ 3 ] = t12 * detInv;\n\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\tte[ 6 ] = t13 * detInv;\n\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\ttranspose() {\n\n\t\tlet tmp;\n\t\tconst m = this.elements;\n\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tgetNormalMatrix( matrix4 ) {\n\n\t\treturn this.setFromMatrix4( matrix4 ).invert().transpose();\n\n\t}\n\n\ttransposeIntoArray( r ) {\n\n\t\tconst m = this.elements;\n\n\t\tr[ 0 ] = m[ 0 ];\n\t\tr[ 1 ] = m[ 3 ];\n\t\tr[ 2 ] = m[ 6 ];\n\t\tr[ 3 ] = m[ 1 ];\n\t\tr[ 4 ] = m[ 4 ];\n\t\tr[ 5 ] = m[ 7 ];\n\t\tr[ 6 ] = m[ 2 ];\n\t\tr[ 7 ] = m[ 5 ];\n\t\tr[ 8 ] = m[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetUvTransform( tx, ty, sx, sy, rotation, cx, cy ) {\n\n\t\tconst c = Math.cos( rotation );\n\t\tconst s = Math.sin( rotation );\n\n\t\tthis.set(\n\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\n\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\n\t\t\t0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tscale( sx, sy ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= sx; te[ 3 ] *= sx; te[ 6 ] *= sx;\n\t\tte[ 1 ] *= sy; te[ 4 ] *= sy; te[ 7 ] *= sy;\n\n\t\treturn this;\n\n\t}\n\n\trotate( theta ) {\n\n\t\tconst c = Math.cos( theta );\n\t\tconst s = Math.sin( theta );\n\n\t\tconst te = this.elements;\n\n\t\tconst a11 = te[ 0 ], a12 = te[ 3 ], a13 = te[ 6 ];\n\t\tconst a21 = te[ 1 ], a22 = te[ 4 ], a23 = te[ 7 ];\n\n\t\tte[ 0 ] = c * a11 + s * a21;\n\t\tte[ 3 ] = c * a12 + s * a22;\n\t\tte[ 6 ] = c * a13 + s * a23;\n\n\t\tte[ 1 ] = - s * a11 + c * a21;\n\t\tte[ 4 ] = - s * a12 + c * a22;\n\t\tte[ 7 ] = - s * a13 + c * a23;\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( tx, ty ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] += tx * te[ 2 ]; te[ 3 ] += tx * te[ 5 ]; te[ 6 ] += tx * te[ 8 ];\n\t\tte[ 1 ] += ty * te[ 2 ]; te[ 4 ] += ty * te[ 5 ]; te[ 7 ] += ty * te[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\treturn array;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().fromArray( this.elements );\n\n\t}\n\n}\n\nMatrix3.prototype.isMatrix3 = true;\n\nexport { Matrix3 };\n","import { Matrix3 } from './Matrix3.js';\nimport { Vector3 } from './Vector3.js';\n\nconst _vector1 = /*@__PURE__*/ new Vector3();\nconst _vector2 = /*@__PURE__*/ new Vector3();\nconst _normalMatrix = /*@__PURE__*/ new Matrix3();\n\nclass Plane {\n\n\tconstructor( normal = new Vector3( 1, 0, 0 ), constant = 0 ) {\n\n\t\t// normal is assumed to be normalized\n\n\t\tthis.normal = normal;\n\t\tthis.constant = constant;\n\n\t}\n\n\tset( normal, constant ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = constant;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponents( x, y, z, w ) {\n\n\t\tthis.normal.set( x, y, z );\n\t\tthis.constant = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromNormalAndCoplanarPoint( normal, point ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = - point.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCoplanarPoints( a, b, c ) {\n\n\t\tconst normal = _vector1.subVectors( c, b ).cross( _vector2.subVectors( a, b ) ).normalize();\n\n\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( plane ) {\n\n\t\tthis.normal.copy( plane.normal );\n\t\tthis.constant = plane.constant;\n\n\t\treturn this;\n\n\t}\n\n\tnormalize() {\n\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\tconst inverseNormalLength = 1.0 / this.normal.length();\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\tthis.constant *= inverseNormalLength;\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.constant *= - 1;\n\t\tthis.normal.negate();\n\n\t\treturn this;\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.normal.dot( point ) + this.constant;\n\n\t}\n\n\tdistanceToSphere( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t}\n\n\tprojectPoint( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Plane: .projectPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.distanceToPoint( point ) ).add( point );\n\n\t}\n\n\tintersectLine( line, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Plane: .intersectLine() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tconst direction = line.delta( _vector1 );\n\n\t\tconst denominator = this.normal.dot( direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\treturn target.copy( line.start );\n\n\t\t\t}\n\n\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn target.copy( direction ).multiplyScalar( t ).add( line.start );\n\n\t}\n\n\tintersectsLine( line ) {\n\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\tconst startSign = this.distanceToPoint( line.start );\n\t\tconst endSign = this.distanceToPoint( line.end );\n\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsPlane( this );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn sphere.intersectsPlane( this );\n\n\t}\n\n\tcoplanarPoint( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Plane: .coplanarPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t}\n\n\tapplyMatrix4( matrix, optionalNormalMatrix ) {\n\n\t\tconst normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix( matrix );\n\n\t\tconst referencePoint = this.coplanarPoint( _vector1 ).applyMatrix4( matrix );\n\n\t\tconst normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.constant -= offset.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tequals( plane ) {\n\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nPlane.prototype.isPlane = true;\n\nexport { Plane };\n","import {Vector2} from 'three/src/math/Vector2'\nimport {Vector3} from 'three/src/math/Vector3'\nimport {Vector4} from 'three/src/math/Vector4'\nimport {Quaternion} from 'three/src/math/Quaternion'\nimport {Euler} from 'three/src/math/Euler'\nimport {Color} from 'three/src/math/Color'\nimport {Box2} from 'three/src/math/Box2'\nimport {Box3} from 'three/src/math/Box3'\nimport {Ray} from 'three/src/math/Ray'\nimport {Line3} from 'three/src/math/Line3'\nimport {Plane} from 'three/src/math/Plane'\n\n// import {Matrix3} from 'three/src/math/Matrix3'\n// import {Matrix4} from 'three/src/math/Matrix4'\n\n\n// export class PropertyIterator<T = any> implements Iterator<number> {\n//     constructor(private _obj:T, private _keys:ReadonlyArray<keyof T>) {}\n//     private _idx = 0\n//     next() : IteratorResult<number, number> {\n//         return {\n//             done: this._idx === (Vector2Keys.length - 1),\n//             value: this._obj[this._keys[this._idx++]] as any\n//         }\n//     }\n// }\n\n// declare module 'three/src/math/Vector2' {\n//     interface Vector2 {\n//         [Symbol.iterator](): PropertyIterator\n//     }\n// }\n// const Vector2Keys = ['x','y'] as const\n// Vector2.prototype[Symbol.iterator] = function () {\n//     return new PropertyIterator(this, Vector2Keys)\n// }\n\n// declare module 'three/src/math/Vector3' {\n//     interface Vector3 {\n//         [Symbol.iterator](): PropertyIterator\n//     }\n// }\n// const Vector3Keys = ['x','y','z'] as const\n// Vector3.prototype[Symbol.iterator] = function () {\n//     return new PropertyIterator(this, Vector3Keys)\n// }\n\n// declare module 'three/src/math/Quaternion' {\n//     interface Quaternion {\n//         [Symbol.iterator](): PropertyIterator\n//     }\n// }\n// const QuaternionKeys = ['x','y','z'] as const\n// Quaternion.prototype[Symbol.iterator] = function () {\n//     return new PropertyIterator(this, QuaternionKeys)\n// }\n\n// import {tracked} from './tracking'\n// tracked(Vector2.prototype, 'x')\n// tracked(Vector2.prototype, 'y')\n// tracked(Vector3.prototype, 'x')\n// tracked(Vector3.prototype, 'y')\n// tracked(Vector3.prototype, 'z')\n// tracked(Vector4.prototype, 'x')\n// tracked(Vector4.prototype, 'y')\n// tracked(Vector4.prototype, 'z')\n// tracked(Vector4.prototype, 'w')\n// tracked(Quaternion.prototype, '_x')\n// tracked(Quaternion.prototype, '_y')\n// tracked(Quaternion.prototype, '_z')\n// tracked(Quaternion.prototype, '_w')\n// tracked(Color.prototype, 'r')\n// tracked(Color.prototype, 'g')\n// tracked(Color.prototype, 'b')\n\nexport const V_00 = Object.freeze(new Vector2(0,0))\nexport const V_11 = Object.freeze(new Vector2(1,1))\nexport const V_000 = Object.freeze(new Vector3(0,0,0))\nexport const V_100 = Object.freeze(new Vector3(1,0,0))\nexport const V_010 = Object.freeze(new Vector3(0,1,0))\nexport const V_001 = Object.freeze(new Vector3(0,0,1))\nexport const V_111 = Object.freeze(new Vector3(1,1,1))\nexport const Q_IDENTITY = Object.freeze(new Quaternion)\n\nexport const DIRECTION = {\n    RIGHT: Object.freeze(new Vector3(1, 0, 0)),\n    UP: Object.freeze(new Vector3(0, 1, 0)),\n    NEAR: Object.freeze(new Vector3(0, 0, 1)),\n    LEFT: Object.freeze(new Vector3(-1, 0, 0)),\n    DOWN: Object.freeze(new Vector3(0, -1, 0)),\n    FAR: Object.freeze(new Vector3(0, 0, -1))\n}\n\n// declare module 'three/src/math/Box3' {\n//     interface Box3 {\n//         left:number\n//         right:number\n//         bottom:number\n//         top:number\n//         center:Vector3\n//     }\n// }\n\n// Object.defineProperty(Box3.prototype, 'left', {\n//     get(this:Box3) {\n//         return this.min.x\n//     }\n// })\n\n// Object.defineProperty(Box3.prototype, 'right', {\n//     get(this:Box3) {\n//         return this.max.x\n//     }\n// })\n\n// Object.defineProperty(Box3.prototype, 'top', {\n//     get(this:Box3) {\n//         return this.min.y\n//     }\n// })\n\n// Object.defineProperty(Box3.prototype, 'bottom', {\n//     get(this:Box3) {\n//         return this.max.y\n//     }\n// })\n\n// const centerMap = new WeakMap<Box3>()\n// Object.defineProperty(Box3.prototype, 'center', {\n//     get(this:Box3) {\n//         if (!centerMap.has(this)) centerMap.set(this, new Vector3)\n//         return this.getCenter(centerMap.get(this))\n//     }\n// })\n\n// const sizeMap = new WeakMap<Box3>()\n// Object.defineProperty(Box3.prototype, 'size', {\n//     get(this:Box3) {\n//         if (!sizeMap.has(this)) sizeMap.set(this, new Vector3)\n//         return this.getSize(sizeMap.get(this))\n//     }\n// })\n\nexport {\n    Vector2,\n    Vector3,\n    Vector4,\n    Quaternion,\n    Euler,\n    Color,\n    Box2,\n    Box3,\n    Ray,\n    Line3,\n    Plane,\n}\n\n\n// export interface Vector2Like {x:number, y:number}\n// export interface Vector3Like {x:number, y:number, z:number}\n// export interface Vector4Like {x:number, y:number, z:number, w:number}\n// export interface QuaternionLike {x:number, y:number, z:number, w:number}\n// export interface ColorLike {r:number, g:number, b:number}\n// export interface Box3Like {min:Vector3Like, max:Vector3Like}\n// export interface RayLike {origin:Vector3Like, direction:Vector3Like}\n\nexport * from 'three/src/math/Matrix3'\nexport * from 'three/src/math/Matrix4'\nexport * as MathUtils from 'three/src/math/MathUtils'\n\n/*\n* The relative difference is a unitless scalar measure of the difference\n* between the `target` value and the previous target value (staged or committed)\n* @see https://en.wikipedia.org/wiki/Relative_change_and_difference\n* \n* Exactly how relative difference is calculated is based on the value type:\n\n* number - linear distance between / avg absolute value\n* vector - linear distance between / avg magnitude\n* box - avg corresponding corner distances / avg size magnitude\n* quaternion - angular distance between / max angular distance (180 deg)\n* color - avg rgb distance / max rgb distance (white = sqrt(3))\n* \n* If there is no change, the relative difference is 0\n* Otherwise, the relative difference is positive. \n*/\nexport function computeRelativeDifference<T extends MathType = MathType>(start:T, end:T) {\n    if (typeof start === 'number') return computedRelativeDifferenceNumber(start, end as number)    \n    if ('isVector3' in start) return computedRelativeDifferenceVector3(start as Vector3, end as Vector3)    \n    if ('isVector2' in start) return computedRelativeDifferenceVector2(start as Vector2, end as Vector2)    \n    if ('isBox3' in start) return computedRelativeDifferenceBox3(start as Box3, end as Box3)\n    // the following types are naturally bounded,\n    // so instead of dividing by average magnitudes,\n    // we can simply divide by the maximum distance \n    // between any two possible values\n    if ('isQuaternion' in start) return computedRelativeDifferenceQuaternion(start as Quaternion, end as Quaternion)\n    if ('isColor' in start) return computedRelativeDifferenceColor(start as Color, end as Color)\n    return Infinity\n}\nexport type MathType = number|Vector2|Vector3|Color|Quaternion|Box3\n\n\nfunction computedRelativeDifferenceNumber(s:number, e:number) {\n    if (e === s) return 0\n    const distance = Math.abs(e-s)\n    const avgAbsoluteValue = ((Math.abs(e) + Math.abs(s))/2)\n    return distance / avgAbsoluteValue\n}\n\nfunction computedRelativeDifferenceVector3(s:THREE.Vector3,e:THREE.Vector3) {\n    if (e.equals(s)) return 0\n    const distance = e.distanceTo(s)\n    const avgMagnitude = (e.length() + s.length())/2\n    return distance / avgMagnitude\n}\n\nfunction computedRelativeDifferenceVector2(s:THREE.Vector2,e:THREE.Vector2) {\n    if (e.equals(s)) return 0\n    const distance = e.distanceTo(s)\n    const avgMagnitude = (e.length() + s.length())/2\n    return distance / avgMagnitude\n}\n\nfunction computedRelativeDifferenceBox3(s:Box3, e:Box3) {\n    if (s.equals(e)) return 0\n    const v = scratchV3\n    const minDist = e.min.distanceTo(s.min)\n    const maxDist = e.max.distanceTo(s.max)\n    const avgDistance = (minDist + maxDist) / 2\n    const avgSizeMagnitude = (e.getSize(v).length() + s.getSize(v).length()) / 2\n    return avgDistance / avgSizeMagnitude\n}\nconst scratchV3 = new Vector3\n\nfunction computedRelativeDifferenceQuaternion(s:Quaternion, e:Quaternion) {\n    if (s.equals(e)) return 0\n    return s.angleTo(e) / Math.PI\n}\n\nfunction computedRelativeDifferenceColor(s:Color, e:Color) {\n    if (s.equals(e)) return 0\n    const v = scratchV3\n    const distance = v.set(\n        Math.abs(e.r - s.r),\n        Math.abs(e.g - s.g), \n        Math.abs(e.b - s.b)\n    ).length()\n    return distance / sqrt3\n}\nconst sqrt3 = Math.sqrt(3)\n\n\n\n/** \n * Return random number with gaussian distribution\n * @param [standardDeviation=1]\n */\nexport const gaussian = (standardDeviation=1) => {\n  var u = Math.random()\n  return (u%1e-8>5e-9?1:-1)*Math.sqrt(-Math.log(Math.max(1e-9,u)))*standardDeviation;\n}\n// export const gaussian = (() => {\n//     const _2PI = Math.PI\n//     let z0:number, z1:number\n//     let generate = false\n//     return (standardDeviation=1) => {\n//         generate = !generate\n//         if (!generate) return z1 * standardDeviation\n//         let u1:number, u2:number\n//         do { u1 = Math.random() } while (u1 < Number.EPSILON)\n//         u2 = Math.random()\n//         z0 = Math.sqrt(-2.0 * Math.log(u1)) * Math.cos(_2PI * u2)\n//         z1 = Math.sqrt(-2.0 * Math.log(u1)) * Math.sin(_2PI * u2)\n//         return z0 * standardDeviation\n//     }\n// })()\n\n/**\n * Return random number with levy distribution\n * @param [scale=1]\n * \n * Based on:\n * http://andreweckford.blogspot.com/2011/05/generating-levy-random-variables-from.html\n */\nexport const levy = (scale=1) =>  {\n    const stdDeviation = Math.sqrt( Math.sqrt(1 / (2 * scale)) )\n    return 1 / (gaussian(stdDeviation) ** 2)\n}\n\n/**\n * Return a random quaternion\n * @param out \n * @param twistScale \n * @param swingScale \n */\nexport const randomQuaternion = (() => {\n    const _2PI = Math.PI * 2\n    const V_001 = new Vector3(0,0,1)\n    const twist = new Quaternion\n    const swing = new Quaternion\n    const swingAxis = new Vector3\n    const out = new Quaternion\n    return function randomQuaternion(twistScale=1, swingScale=1) {\n        var twistMagnitude = (Math.random() - 0.5) * _2PI * twistScale \n        var swingDirection = Math.random() * _2PI\n        var swingMagnitude = Math.random() * Math.PI * swingScale\n        swingAxis.set(1,0,0).applyAxisAngle(V_001, swingDirection)\n        twist.setFromAxisAngle(V_001, twistMagnitude)\n        swing.setFromAxisAngle(swingAxis, swingMagnitude)\n        return out.multiplyQuaternions(swing, twist)\n    }\n})()\n\nexport function randomSelect<T>(arr:T[], weights?:number[]) : T {\n    let total = 0\n    for (let i=0; i< arr.length; i++) { total += weights?.[i]||1 }\n    const threshold = Math.random() * total\n    total = 0\n    for (let i=0; i< arr.length; i++) {\n        total += weights?.[i]||1\n        if (total > threshold) return arr[i]\n    }\n    return arr[0] // make tsc happy\n}\n\n/**\n * Use the swing-twist decomposition to get the component of a rotation\n * around the given axis.\n * \n * @param rotation  The rotation.\n * @param direction The axis (should be normalized).\n * @return The component of rotation about the axis.\n */\nexport const extractRotationAboutAxis = (() => {\n    const vec = new Vector3\n    return function extractRotationAboutAxis(rot:Quaternion, direction:Vector3, out:Quaternion) {\n        const rotAxis = vec.set(rot.x, rot.y, rot.z)\n        const dotProd = direction.dot(rotAxis)      \n        // Shortcut calculation of `projection` requires `direction` to be normalized\n        const projection = vec.copy(direction).multiplyScalar(dotProd)\n        const twist = out.set(projection.x, projection.y, projection.z, rot.w).normalize()\n        if (dotProd < 0.0) {\n            // Ensure `twist` points towards `direction`\n            twist.x = -twist.x\n            twist.y = -twist.y\n            twist.z = -twist.z\n            twist.w = -twist.w\n        }\n        return twist\n    }\n})()","\n\ninterface MemoizedFunction<R> {\n    ():R\n    needsUpdate: boolean\n}\n\nexport class MemoizationCache {\n    callbacks = [] as MemoizedFunction<any>[]\n    memoize<R>(cb:()=>R, ...caches:MemoizationCache[]) : MemoizedFunction<R> {\n        caches.push(this)\n        const memoized = memoize(cb)\n        for (const cache of caches) {\n            cache.callbacks.push(memoized)\n        }\n        return memoized\n    }\n    invalidateAll() {\n        const callbacks = this.callbacks\n        for (let i=0; i < this.callbacks.length; i++) {\n            callbacks[i].needsUpdate = true\n        }\n    }\n    isFullyInvalid() {\n        const callbacks = this.callbacks\n        for (let i=0; i < this.callbacks.length; i++) {\n            if (!callbacks[i].needsUpdate) return false\n        }\n        return true\n    }\n}\n\n\nconst UNSET = undefined //Symbol('unset')\n\nfunction memoize<R>(cb:()=>R) : MemoizedFunction<R> {\n    let value:R = UNSET as any\n    const wrapped:MemoizedFunction<R> = () => {\n        if (wrapped.needsUpdate) {\n            wrapped.needsUpdate = false\n            value = cb()\n        }\n        // if (value as any === UNSET) {\n        //     throw new Error(\"Possible recursive memoization detected\")\n        // }\n        return value\n    }\n    wrapped.needsUpdate = true\n    return wrapped\n}","\nimport { Box3, Vector3, Quaternion, Matrix4, V_000, DIRECTION, V_111, Box2, Vector2, Q_IDENTITY } from './math-utils'\nimport { EtherealLayoutSystem, Node3D } from './EtherealLayoutSystem'\nimport { MemoizationCache } from './MemoizationCache'\nimport { SpatialAdapter } from './SpatialAdapter'\n\nconst InternalRawState = Symbol(\"raw\")\nconst InternalCurrentState = Symbol(\"current\")\nconst InternalTargetState = Symbol(\"target\")\nconst InternalPreviousTargetState = Symbol(\"previousTarget\")\n\nexport class NodeState<N extends Node3D=Node3D> {\n\n    constructor(public mode:'current'|'target', public metrics:SpatialMetrics<N>) {}\n    \n    private _cache = new MemoizationCache\n\n    invalidate() {\n        this._cache.invalidateAll()\n    }\n\n    opacity = 1\n \n    get parent() {\n        return this._parent\n    }\n    set parent(val:N|null) {\n        const current = this._parent\n        if (current !== val) {\n            this._parent = val\n            this.invalidate()\n        }\n    }\n    private _parent : N|null = null\n\n    get parentState() {\n        return this.metrics.parentMetrics?.[this.mode]\n    }\n    \n    get referenceState() {\n        return this.metrics.referenceMetrics?.[this.mode]\n    }\n\n    private _cachedLocalMatrix = this._cache.memoize(() => {\n        this._localMatrix.decompose(this._localPosition, this._localOrientation, this._localScale)\n        this._localOrientation.normalize()\n        this._localOrientationInverse.copy(this._localOrientation).invert()\n        this._localRotation.makeRotationFromQuaternion(this._localOrientation)\n        this._localRotationInverse.makeRotationFromQuaternion(this._localOrientationInverse)\n        return this._localMatrix\n    })\n    get localMatrix() { return this._localMatrix }\n    set localMatrix(val:Matrix4) {\n        if (isNaN(val.elements[0])) throw new Error()\n        if (!this._localMatrix.equals(val)) {\n            this.invalidate()\n            this._localMatrix.copy(val)\n            this._localMatrixInverse.copy(this._localMatrix).invert()\n        }\n    }\n\n    private _localMatrix = new Matrix4\n    private _localMatrixInverse = new Matrix4\n    \n    private _localPosition = new Vector3\n    private _localOrientation = new Quaternion\n    private _localOrientationInverse = new Quaternion\n    private _localScale = new Vector3(1,1,1)\n    private _localRotation = new Matrix4\n    private _localRotationInverse = new Matrix4\n\n    get localMatrixInverse() {\n        return this._localMatrixInverse\n    }\n\n    get localPosition() {\n        this._cachedLocalMatrix()\n        return this._localPosition\n    }\n\n    get localOrientation() {\n        this._cachedLocalMatrix()\n        return this._localOrientation\n    }\n\n    get localOrientationInverse() {\n        this._cachedLocalMatrix()\n        return this._localOrientationInverse\n    }\n\n    get localScale() {\n        this._cachedLocalMatrix()\n        return this._localScale\n    }\n\n    /**\n     * Local rotation matrix\n     */\n    get localRotation() {\n        this._cachedLocalMatrix()\n        return this._localRotation\n    }\n\n    /**\n     * Local Orientation matrix inverse\n     */\n    get localRotationInverse() {\n        this._cachedLocalMatrix()\n        return this._localRotationInverse\n    }\n\n    private _cachedWorldMatrix = this._cache.memoize(() => {\n        const matrix = this._worldMatrix.copy(this.localMatrix)\n        const parentState = this.parentState\n        if (parentState) {\n            matrix.premultiply(parentState.worldMatrix)\n        }\n        matrix.decompose(this._worldPosition, this._worldOrientation, this._worldScale)\n        this._worldMatrixInverse.copy(this._worldMatrix).invert()\n        this._worldOrientationInverse.copy(this._worldOrientation).invert()\n        this._worldRotation.makeRotationFromQuaternion(this._worldOrientation)\n        this._worldRotationInverse.makeRotationFromQuaternion(this._worldOrientationInverse)\n        return matrix\n    })\n    get worldMatrix() {\n        return this._cachedWorldMatrix()\n    }\n    \n    private _worldPosition = new Vector3\n    private _worldOrientation = new Quaternion\n    private _worldOrientationInverse = new Quaternion\n    private _worldScale = new Vector3\n    private _worldMatrix = new Matrix4\n    private _worldMatrixInverse = new Matrix4\n    private _worldRotation = new Matrix4\n    private _worldRotationInverse = new Matrix4\n\n    get worldMatrixInverse() {\n        this.worldMatrix\n        return this._worldMatrixInverse\n    }\n\n    get worldPosition() {\n        this.worldMatrix\n        return this._worldPosition\n    }\n\n    get worldOrientation() {\n        this.worldMatrix\n        return this._worldOrientation\n    }\n\n    get worldScale() {\n        this.worldMatrix\n        return this._worldScale\n    }\n\n    /**\n     * Inverse world orientation\n     */\n    get worldOrientationInverse() {\n        return this._worldOrientationInverse\n    }\n\n    /**\n     * World rotation matrix\n     */\n    get worldRotation() {\n        return this._worldRotation\n    }\n    \n    /**\n     * World rotation matrix inverse\n     */\n    get worldRotationInverse() {\n        return this._worldRotationInverse\n    }\n\n    /**\n     * The inner bounds center in world coordinates\n     */\n    private _cachedWorldCenter = this._cache.memoize(() => {\n        return this._worldCenter.copy(this.metrics.innerCenter).applyMatrix4(this.worldMatrix)\n    })\n    get worldCenter() {\n        return this._cachedWorldCenter()\n    }\n    private _worldCenter = new Vector3\n\n    /**\n     * Convert to world frame from spatial frame\n     * \n     * Spatial Frame = Reference Origin + My World Orientation\n     */\n    private _cachedSpatialMatrix = this._cache.memoize(() => {\n        const spatialMatrix = this._spatialMatrix.compose(this.outerOrigin, this.worldOrientation, V_111) \n        this._spatialMatrixInverse.copy(this._spatialMatrix).invert()\n        this._localFromSpatial.multiplyMatrices(this.worldMatrixInverse, spatialMatrix)\n        this._spatialFromLocal.copy(this._localFromSpatial).invert()\n        const reference = this.referenceState\n        if (reference) {\n            this._spatialFromReference.multiplyMatrices(this._spatialMatrixInverse, reference.worldMatrix)\n        } else {\n            this._spatialFromReference.copy(this._spatialMatrixInverse)\n        }\n        return spatialMatrix\n    })\n    get spatialMatrix() {\n        return this._cachedSpatialMatrix()\n    }\n\n    private _spatialMatrix = new Matrix4\n    private _spatialMatrixInverse = new Matrix4\n    private _localFromSpatial = new Matrix4\n    private _spatialFromLocal = new Matrix4\n    private _spatialFromReference = new Matrix4\n\n\n    /**\n     * Convert to spatial frame from world frame\n     */\n    get spatialMatrixInverse() {\n        this.spatialMatrix\n        return this._spatialMatrixInverse\n    }\n\n    /**\n     * Convert to local frame from spatial frame\n     */\n    get localFromSpatial() { \n        this.spatialMatrix\n        return this._localFromSpatial\n    }\n\n    /**\n     * Convert to spatial frame from local frame\n     */\n    get spatialFromLocal() { \n        this.spatialMatrix\n        return this._spatialFromLocal \n    }\n\n    /**\n     * Convert to spatial frame from reference frame\n     */\n    get spatialFromReference() { \n        this.spatialMatrix\n        return this._spatialFromReference \n    }\n    \n    /**\n     * The spatial bounds \n     */\n    private _cachedSpatialBounds = this._cache.memoize(() => {\n        this._spatialBounds.copy(this.metrics.innerBounds)\n        const bounds = this._spatialBounds.applyMatrix4(this.spatialFromLocal)\n        bounds.getCenter(this._spatialCenter)\n        bounds.getSize(this._spatialSize)\n        return bounds\n    })\n    get spatialBounds() { return this._cachedSpatialBounds() }\n    private _spatialBounds = new Box3\n    private _spatialSize = new Vector3\n    private _spatialCenter = new Vector3\n\n    /**\n     * The spatial size\n     */\n    get spatialSize() {\n        this.spatialBounds\n        return this._spatialSize\n    }\n\n    /**\n     * The spatial center\n     */\n    get spatialCenter() {\n        this.spatialBounds\n        return this._spatialCenter\n    }\n\n\n    private _cachedOuterBounds = this._cache.memoize(() => {\n        const bounds = this._outerBounds\n        const adapter = this.metrics.system.nodeAdapters.get(this.metrics.node)\n        if (adapter) {\n            bounds.copy(adapter.outerBounds[this.mode])\n        } else {\n            const referenceState = this.referenceState\n            if (!referenceState) bounds.setFromCenterAndSize(V_000,V_000)\n            else bounds.copy(referenceState.metrics.innerBounds)\n            bounds.applyMatrix4(this.spatialFromReference)\n        }\n        bounds.getCenter(this._outerCenter)\n        bounds.getSize(this._outerSize)\n        return bounds\n    })\n    /**\n    * The reference bounds in the spatial frame\n    */\n    get outerBounds() { return this._cachedOuterBounds() }\n    private _outerBounds = new Box3\n    private _outerCenter = new Vector3\n    private _outerSize = new Vector3\n\n    /**\n     * \n     */\n    get outerCenter() {\n        this.outerBounds\n        return this._outerCenter\n    }\n\n    /**\n     * The outer bounds size in the spatial frame\n     */\n    get outerSize() {\n        this.outerBounds\n        return this._outerSize\n    }\n\n    /**\n     * The outer bounds origin in the world frame\n     */\n    get outerOrigin() {\n        const adapter = this.metrics.system.nodeAdapters.get(this.metrics.node)\n        if (adapter) return adapter.outerOrigin[this.mode]\n        return this.referenceState?.worldCenter ?? V_000\n    }\n\n    /**\n     * The outer bounds orientation in the world frame\n     */\n    get outerOrientation() {\n        const adapter = this.metrics.system.nodeAdapters.get(this.metrics.node)\n        if (adapter) return adapter.outerOrientation[this.mode]\n        return this.referenceState?.worldOrientation ?? Q_IDENTITY\n    }\n\n    private _cachedOuterVisualBounds = this._cache.memoize(() => {\n        const bounds = this._outerVisualBounds\n        const adapter = this.metrics.system.nodeAdapters.get(this.metrics.node)\n        if (adapter) {\n            bounds.copy(adapter.outerVisualBounds[this.mode])\n        } else {\n            const referenceState = this.referenceState\n            if (!referenceState) bounds.setFromCenterAndSize(V_000, V_000)\n            else bounds.copy(referenceState.visualBounds)\n        }\n        bounds.getCenter(this._outerVisualCenter)\n        bounds.getSize(this._outerVisualSize)\n        return bounds\n    })\n    /**\n    * The reference bounds in the visual frame\n    */\n    get outerVisualBounds() { return this._cachedOuterVisualBounds() }\n    private _outerVisualBounds = new Box3\n    private _outerVisualCenter = new Vector3\n    private _outerVisualSize = new Vector3\n\n    /**\n     * \n     */\n    get outerVisualCenter() {\n        this.outerVisualBounds\n        return this._outerVisualCenter\n    }\n\n    /**\n     * The outerVisual bounds size in the spatial frame\n     */\n    get outerVisualSize() {\n        this.outerVisualBounds\n        return this._outerVisualSize\n    }\n\n\n    private get _viewState() {\n        if (this.metrics.system.viewNode === this.metrics.node) return this\n        const viewMetrics = this.metrics.system.viewMetrics\n        if (this.mode === 'current') return viewMetrics[InternalCurrentState]\n        return viewMetrics[InternalTargetState]\n    }\n\n\n    /**\n     * The view frame from world frame\n     */\n    get viewFromWorld() {\n        return this._viewFromWorld.multiplyMatrices(this._viewState.worldMatrixInverse, this.worldMatrix)\n    }\n    private _viewFromWorld = new Matrix4\n    \n    /**\n     * The view frame from spatial frame\n     */\n    get viewFromSpatial() {\n        return this._viewFromSpatial.multiplyMatrices(this._viewState.worldMatrixInverse, this.spatialMatrix)\n    }\n    private _viewFromSpatial = new Matrix4\n\n    /**\n     * Convert to parent frame from spatial frame\n     */\n    get spatialFromView() {\n        return this._spatialFromView.copy(this.viewFromSpatial).invert()\n    }\n    private _spatialFromView = new Matrix4\n\n    /**\n     * Normalized Device Coordinates\n     */\n    get ndcBounds() {\n        return this._cachedNDCBounds()\n    }\n    private _cachedNDCBounds = this._cache.memoize(() => {\n        if (this.metrics.system.viewNode === this.metrics.node) {\n            this._ndcBounds.min.setScalar(-1)\n            this._ndcBounds.max.setScalar(1)\n            return this._ndcBounds\n        }\n        const viewFrustum = this.metrics.system.viewFrustum\n        const projection = viewFrustum.perspectiveProjectionMatrix\n        const viewFromWorld = this.viewFromWorld\n        const viewProjectionFromWorld = this._viewProjectionFromWorld.multiplyMatrices(projection, viewFromWorld)\n        const bounds = this._ndcBounds.copy(this.metrics.innerBounds).applyMatrix4(viewProjectionFromWorld)\n        bounds.getCenter(this._ndcCenter)\n        bounds.getSize(this._ndcSize)\n        if (!isFinite(bounds.min.x) || !isFinite(bounds.min.y) || !isFinite(bounds.min.z) || \n            !isFinite(bounds.max.x) || !isFinite(bounds.max.y) || !isFinite(bounds.max.z)) {\n            bounds.min.setScalar(-1)\n            bounds.max.setScalar(1)\n            bounds.getCenter(this._ndcCenter)\n            bounds.getSize(this._ndcSize)\n        }\n        return bounds\n    }, this._viewState._cache)\n    private _viewProjectionFromWorld = new Matrix4\n    private _ndcBounds = new Box3\n    private _ndcCenter = new Vector3\n    private _ndcSize = new Vector3\n\n    get ndcCenter() {\n        this._cachedNDCBounds()\n        return this._ndcCenter\n    }\n    get ndcSize() {\n        this._cachedNDCBounds()\n        return this._ndcSize\n    }\n\n    /**\n     * The visual bounds of this node.\n     * \n     * Horizontal and vertical units are in pixels, with screen center at (0,0)\n     * Z dimension is in meters\n     */\n    get visualBounds() {\n        return this._cachedVisualBounds()\n    }\n    private _cachedVisualBounds = this._cache.memoize(() => {\n        const system = this.metrics.system\n        const projection = system.viewFrustum.perspectiveProjectionMatrix\n        const inverseProjection = this._inverseProjection.copy(projection).invert()\n        const bounds = this._visualBounds.copy(this.ndcBounds)\n        const v = this._v1\n        const nearMeters = v.set(0,0,bounds.min.z).applyMatrix4(inverseProjection).z\n        const farMeters = v.set(0,0,bounds.max.z).applyMatrix4(inverseProjection).z\n        bounds.min.z = farMeters\n        bounds.max.z = nearMeters\n        bounds.min.x *= 0.5 * system.viewResolution.x\n        bounds.max.x *= 0.5 * system.viewResolution.x\n        bounds.min.y *= 0.5 * system.viewResolution.y\n        bounds.max.y *= 0.5 * system.viewResolution.y\n        bounds.getCenter(this._visualCenter)\n        bounds.getSize(this._visualSize) \n        return bounds\n    }, this._viewState._cache)\n    private _visualBounds = new Box3\n    private _visualCenter = new Vector3\n    private _visualSize = new Vector3\n    private _v1 = new Vector3\n    private _inverseProjection = new Matrix4\n\n    get visualCenter() {\n        this._cachedVisualBounds()\n        return this._visualCenter\n    }\n    get visualSize() {\n        this._cachedVisualBounds()\n        return this._visualSize\n    }\n\n    /**\n     * The view position relative to this node state\n     */\n    get relativeViewPosition() {\n        return this._viewPosition.copy(this._viewState.worldPosition).applyMatrix4(this.worldMatrixInverse)\n    }\n    private _viewPosition = new Vector3\n\n\n    /**\n     * The local orthogonal (right-angled) orientation with the closest view orientation alignment\n     */\n    get viewAlignedOrientation() {\n        return this._cachedViewAlignedOrientation()\n    }\n    private _cachedViewAlignedOrientation = this._cache.memoize(() => {\n        const relativeViewMatrix = this._relativeViewMatrix.multiplyMatrices(this.worldMatrixInverse, this._viewState.worldMatrix)\n        const relativeViewRotation = this._relativeViewRotation.extractRotation(relativeViewMatrix)\n        const relativeViewOrientation = this._relativeViewOrientation.setFromRotationMatrix(relativeViewRotation)\n        const forwardDirection = this._relativeViewForward.set(0, 0, 1).applyQuaternion(relativeViewOrientation)\n        const upDirection = this._relativeViewUp.set(0, 1, 0).applyQuaternion(relativeViewOrientation)\n        \n        let distForward = Infinity\n        let distUp = Infinity\n        let closestForwardDirection : Vector3\n        let closestUpDirection : Vector3\n        let d : keyof typeof DIRECTION\n\n        for (d in DIRECTION) {\n            const dir = DIRECTION[d]\n            var dist = upDirection.distanceToSquared(dir)\n            if (dist < distUp) {\n                distUp = dist\n                closestUpDirection = dir\n            }\n        }\n    \n        for (d in DIRECTION) {\n            const dir = DIRECTION[d]    \n            // avoid having forward & up defined on the same axis\n            if (dir.x && closestUpDirection!.x) continue\n            if (dir.y && closestUpDirection!.y) continue\n            if (dir.z && closestUpDirection!.z) continue\n            const dist = forwardDirection.distanceToSquared(dir)\n            if (dist < distForward) {\n                distForward = dist\n                closestForwardDirection = dir\n            }\n        }\n    \n        const rot = this._orthogonalRotation.identity()\n        rot.lookAt(closestForwardDirection!, V_000, closestUpDirection!)\n        return this._orthogonalOrientation.setFromRotationMatrix(rot)\n    }, this._viewState._cache)\n    private _relativeViewMatrix = new Matrix4\n    private _relativeViewRotation = new Matrix4\n    private _relativeViewOrientation = new Quaternion\n    private _relativeViewUp = new Vector3\n    private _relativeViewForward = new Vector3\n    private _orthogonalRotation = new Matrix4\n    private _orthogonalOrientation = new Quaternion\n\n\n    private _computeOcclusion = this._cache.memoize(() => {\n        this._occludingPercent = 0\n        this._occludedPercent = 0\n        \n        const metrics = this.metrics\n        if (metrics.innerBounds.isEmpty()) return\n        \n        const system = metrics.system\n        const adapters = system.nodeAdapters.values()\n\n        const myBounds = this.visualBounds\n        const myNear = myBounds.min.z\n        const a = NodeState._boxA\n        const b = NodeState._boxB\n        a.min.set(myBounds.min.x, myBounds.min.y)\n        a.min.set(myBounds.max.x, myBounds.max.y)\n        const myLength = a.getSize(NodeState._sizeA).length()\n\n        for (const adapter of adapters) {\n            const otherMetrics = adapter.metrics\n            if (otherMetrics === metrics) continue\n            if (!otherMetrics.isAdaptive || otherMetrics.innerBounds.isEmpty()) continue\n            if (otherMetrics.containedByNode(adapter.node)) continue\n            \n            const otherState = this.mode === 'current' ? otherMetrics.current : otherMetrics.target\n            const otherBounds = otherState.visualBounds\n            a.min.set(myBounds.min.x, myBounds.min.y)\n            a.min.set(myBounds.max.x, myBounds.max.y)\n            b.min.set(otherBounds.min.x, otherBounds.min.y)\n            b.min.set(otherBounds.max.x, otherBounds.max.y)\n            const overlapPercent = a.intersect(b).getSize(NodeState._sizeB).length() / myLength\n            if (overlapPercent > 0)  {\n                if  (myNear < otherBounds.min.z) this._occludingPercent += overlapPercent\n                else this._occludedPercent += overlapPercent\n            }\n        }\n    },  this._viewState._cache)\n    private static _boxA = new Box2\n    private static _boxB = new Box2\n    private static _sizeA = new Vector2\n    private static _sizeB = new Vector2\n\n    /** \n     * The percent of this node occluding another node\n     */\n    get occludingPercent() {\n        this._computeOcclusion()\n        return this._occludingPercent\n    }\n    private _occludingPercent = 0\n\n    /**\n     * The percent of this node occluded by another node\n     */\n    get occludedPercent() {\n        this._computeOcclusion()\n        return this._occludedPercent\n    }\n    private _occludedPercent = 0\n\n    /**\n     * Used as a heuristic for view-size maximization\n     * (average edge length corresponds better with inncreasig visual area\n     * compared to area of the projected bounding-box in \n     * cases where the underlying aspect ratios are not fixed)\n     */\n    visualAverageEdgeLength() {\n\n    }\n\n}\n\n\n/**\n * Maintains current & target scenegraph state,\n * and efficiently/reactively compute spatial metrics \n * based on *target* (not current) scenegraph state. \n * \n * All metric values should be treated as read-only.\n */\nexport class SpatialMetrics<N extends Node3D=Node3D> {\n    \n    constructor(public system:EtherealLayoutSystem<N>, public node:N) {}\n\n    private _cache = new MemoizationCache()\n    \n    needsUpdate = true\n\n    parentNode! : N|null\n    parentMetrics! : SpatialMetrics<N>|null\n    referenceMetrics? : SpatialMetrics<N>|null\n\n    private _adapter? : SpatialAdapter<N>\n\n    /**\n     * Update metrics, if necessary\n     */\n    update() {\n        if (this.needsUpdate) {\n            this.needsUpdate = false\n\n            // this.previousTarget.parent = this.target.parent\n            // this.previousTarget.localMatrix = this.target.localMatrix\n\n            const adapter = this._adapter = this.system.nodeAdapters.get(this.node)\n\n            this.parentNode = this.raw.parent\n            this.parentMetrics = this.parentNode && this.system.getMetrics(this.parentNode)\n            const reference = adapter?.activeLayout?.referenceNode || adapter?.referenceNode || this.parentNode\n            this.referenceMetrics = reference && this.system.getMetrics(reference as N)\n\n            this.parentMetrics?.update()\n            this.referenceMetrics?.update()\n\n\n            if (adapter) {\n\n                adapter._update()\n\n            } else {\n                this.invalidateInnerBounds()\n                this.invalidateStates()\n            }\n\n        }\n    }\n    \n    private _cachedInnerBounds = this._cache.memoize(() => {\n        const inner = this._innerBounds\n\n        if (this.node !== this.system.viewNode) {\n            inner.copy(this.intrinsicBounds)\n            const childBounds = this._childBounds\n            for (const c of this.boundingChildMetrics) {\n                c.invalidateStates()\n                childBounds.copy(c.innerBounds)\n                childBounds.applyMatrix4(c.raw.localMatrix)\n                inner.union(childBounds)\n            }\n        }\n\n        const center = inner.getCenter(this._innerCenter)\n        const size = inner.getSize(this._innerSize)\n        if (size.length() > 0) {\n            // if the content is flat, give some thickness so that\n            // bounds-size meaningfully affects scale\n            const sizeEpsillon = this.system.epsillonMeters\n            if (Math.abs(size.x) <= sizeEpsillon) size.x = (Math.sign(size.x) || 1) * sizeEpsillon * 1000\n            if (Math.abs(size.y) <= sizeEpsillon) size.y = (Math.sign(size.y) || 1) * sizeEpsillon * 1000\n            if (Math.abs(size.z) <= sizeEpsillon) {\n                // for z size, make sure bounds are only extend backwards \n                // (this way, visual-bounds remain accurate)\n                size.z = (Math.sign(size.z) || 1) * sizeEpsillon * 1000\n                center.z -= sizeEpsillon * 1000 / 2\n            }\n            inner.setFromCenterAndSize(center, size)\n        }\n        return inner\n    })\n    private _childBounds = new Box3\n    private _innerBounds = new Box3\n    private _innerCenter = new Vector3\n    private _innerSize = new Vector3\n\n    /**\n     * The bounds of this node and non-adaptive child nodes in the local coordinate system\n     */\n    get innerBounds() {\n        return this._cachedInnerBounds()\n    }\n    \n    get innerCenter() {\n        this.innerBounds\n        return this._innerCenter\n    }\n\n    get innerSize() {\n        this.innerBounds\n        return this._innerSize\n    }\n\n    /**\n     * The intrinsic bounds of the geometry attached directly to this node (excluding child nodes)\n     */\n    get intrinsicBounds() : Readonly<Box3> {\n        if (this._intrinsicBoundsNeedsUpdate) {\n            this._intrinsicBoundsNeedsUpdate = false\n            this.system.bindings.getIntrinsicBounds(this, this._intrinsicBounds)\n            this._intrinsicBounds.getCenter(this._intrinsicCenter)\n            this._intrinsicBounds.getSize(this._intrinsicSize)\n        }\n        return this._intrinsicBounds\n    }\n\n    private _intrinsicBoundsNeedsUpdate = true\n    private _intrinsicBounds = new Box3\n    private _intrinsicCenter = new Vector3\n    private _intrinsicSize = new Vector3\n    \n    get intrinsicCenter() {\n        this.intrinsicBounds\n        return this._intrinsicCenter\n    }\n\n    get intrinsicSize() {\n        this.intrinsicBounds\n        return this._intrinsicSize\n    }\n\n    /**\n     * Invalidate intrinsic bounds in order to allow it to be recomputed\n     */\n    invalidateIntrinsicBounds() {\n        this._intrinsicBoundsNeedsUpdate = true\n        for (const c of this.boundingChildMetrics) {\n            c.invalidateIntrinsicBounds()\n        }\n    }\n\n    invalidateInnerBounds() {\n        if (this._cachedInnerBounds.needsUpdate) return\n        this._cachedNodeChildren.needsUpdate = true\n        this._cachedBoundsChildren.needsUpdate = true\n        this._cachedInnerBounds.needsUpdate = true\n        for (const c of this.boundingChildMetrics) {\n            c.invalidateInnerBounds()\n        }\n    }\n\n    /**\n     * Returns false if this node does not contain the passed node.\n     * If the given node is a descendent of this node, returns\n     * the closest child node.\n     */\n    containsNode(node:N) {\n        this.update()\n        let parentMetrics = this.system.getMetrics(node) as SpatialMetrics<N>|null\n        while (parentMetrics) {\n            if (parentMetrics.parentMetrics === this) return parentMetrics.node\n            parentMetrics = parentMetrics.parentMetrics\n        }\n        return false\n    }\n\n    containedByNode(node:N) {\n        this.update()\n        let parentMetrics = this.parentMetrics\n        while (parentMetrics) {\n            if (parentMetrics.node === node) return parentMetrics.node\n            parentMetrics = parentMetrics.parentMetrics\n        }\n        return false\n    }\n\n    /**\n     * \n     */\n    get nodeChildren() {\n        return this._cachedNodeChildren()\n    }\n    private _cachedNodeChildren = this._cache.memoize(() => {\n        this.system.bindings.getChildren(this, this._nodeChildren)\n        return this._nodeChildren\n    })\n    private _nodeChildren = new Array<N>()\n\n    /**\n     * Compute spatial state from spatial orientation & bounds\n     */\n    private _computeState = (() => {\n\n        const localMatrix = new Matrix4\n        const localOrientation = new Quaternion\n        const localPosition = new Vector3\n        const localScale = new Vector3\n\n        const worldMatrix = new Matrix4\n        const worldPosition = new Vector3\n        const worldOrientation = new Quaternion\n        const worldScale = new Vector3\n\n        const spatialCenter = new Vector3\n        const spatialSize = new Vector3\n        const spatialOffset = new Vector3\n        const innerOffset = new Vector3\n\n        return function computeState(this:SpatialMetrics<N>, state:NodeState<N>) {\n\n            const useCurrent = state.mode === 'current'\n            const adapter = this._adapter\n\n            localOrientation.copy( \n                ( useCurrent ? \n                    adapter?.orientation.enabled && adapter?.orientation.current :\n                    adapter?.orientation.enabled && adapter?.orientation.target\n                ) || this.raw.localOrientation\n            )\n                \n            const spatialBounds = useCurrent ? \n                adapter?.bounds.enabled && adapter?.bounds.current :\n                adapter?.bounds.enabled && adapter?.bounds.target\n\n            const parentMetrics = this.parentMetrics\n            state.parent = parentMetrics?.node ?? null\n\n            if (spatialBounds) {\n                spatialBounds.getCenter(spatialCenter)\n                spatialBounds.getSize(spatialSize)\n\n                const parentState = useCurrent ? \n                    parentMetrics?.current : \n                    parentMetrics?.target\n\n                const innerCenter = this.innerCenter\n                const innerSize = this.innerSize\n\n                const sizeEpsillon = this.system.epsillonMeters\n                if (Math.abs(spatialSize.x) <= sizeEpsillon) spatialSize.x = (Math.sign(spatialSize.x) || 1) * sizeEpsillon * 10\n                if (Math.abs(spatialSize.y) <= sizeEpsillon) spatialSize.y = (Math.sign(spatialSize.y) || 1) * sizeEpsillon * 10\n                if (Math.abs(spatialSize.z) <= sizeEpsillon) spatialSize.z = (Math.sign(spatialSize.z) || 1) * sizeEpsillon * 10\n\n                worldScale.copy(spatialSize)\n                if (Math.abs(innerSize.x) >= sizeEpsillon) worldScale.x /= innerSize.x\n                if (Math.abs(innerSize.y) >= sizeEpsillon) worldScale.y /= innerSize.y\n                if (Math.abs(innerSize.z) >= sizeEpsillon) worldScale.z /= innerSize.z\n\n                worldOrientation.multiplyQuaternions(state.outerOrientation, localOrientation).normalize()\n                spatialOffset.copy(spatialCenter).applyQuaternion(worldOrientation)\n                innerOffset.copy(innerCenter).multiply(worldScale).applyQuaternion(worldOrientation)\n                worldPosition.copy(state.outerOrigin).add(spatialOffset).sub(innerOffset)\n                \n                worldMatrix.compose(worldPosition,worldOrientation,worldScale)\n\n                parentState ?    \n                    localMatrix.multiplyMatrices(parentState.worldMatrixInverse, worldMatrix) :\n                    localMatrix.copy(worldMatrix)\n\n            } else {\n\n                localPosition.copy(this.raw.localPosition)\n                localScale.copy(this.raw.localScale)\n                localMatrix.compose(localPosition, localOrientation, localScale)\n                \n            }\n\n            // apply changes\n            state.localMatrix = localMatrix\n            return state\n        }\n    })()\n\n    invalidateStates(includeRaw=true) {\n        if (includeRaw) {\n            this._cachedRawState.needsUpdate = true\n            this[InternalRawState].invalidate()\n        }\n        this._cachedCurrentState.needsUpdate = true\n        this._cachedTargetState.needsUpdate = true\n        this[InternalCurrentState].invalidate()\n        this[InternalTargetState].invalidate()\n    }\n\n    /**\n     * The raw node state, before any update, with ancestor target states\n     */\n    get raw() : Readonly<NodeState<N>> {\n        return this._cachedRawState()\n    }\n    private _cachedRawState = this._cache.memoize(() => {\n        this.system.bindings.getState(this, this[InternalRawState])\n        return this[InternalRawState]\n    });\n    [InternalRawState]:NodeState<N> = new NodeState('target', this)\n\n    /**\n     * The current state\n     */\n    get current() {\n        this.update()\n        return this._cachedCurrentState()\n    }\n    private _cachedCurrentState = this._cache.memoize(() => {\n        return this._computeState(this[InternalCurrentState])\n    });\n    [InternalCurrentState]:NodeState<N> = new NodeState('current', this)\n\n    /**\n     * The target state\n     */\n    get target() {\n        this.update()\n        return this._cachedTargetState()\n    }\n    private _cachedTargetState = this._cache.memoize(() => {\n        return this._computeState(this[InternalTargetState])\n    });\n    [InternalTargetState]:NodeState<N> = new NodeState('target', this)\n\n\n    /**\n     * The previous target state\n     */\n    get previousTarget() {\n        this.update()\n        return this[InternalPreviousTargetState]\n    }\n    [InternalPreviousTargetState]:NodeState<N> = new NodeState('target', this)\n\n\n    /**\n     * The child nodes that are included in this bounding context\n     */\n    get boundingChildMetrics() : ReadonlyArray<SpatialMetrics<N>> {\n        return this._cachedBoundsChildren()\n    }\n    private _cachedBoundsChildren = this._cache.memoize(() => {\n        const nodeChildren = this.nodeChildren\n        const children = this._boundingChildren\n        children.length = 0\n        for (const child of nodeChildren) {\n            const metrics = this.system.getMetrics(child)\n            if (metrics.isAdaptive) continue\n            children.push(metrics)\n        }\n        return children\n    })\n    private _boundingChildren = [] as SpatialMetrics<N>[]\n\n    /**\n     * \n     */\n    get isAdaptive() {\n        return this.system.nodeAdapters.has(this.node)\n    }\n    \n}\n\n","import { EtherealLayoutSystem, Node3D } from './EtherealLayoutSystem'\nimport { Quaternion, Box3 } from './math-utils'\nimport { \n    LayoutSolution, \n    SpatialLayout,\n    MutationStrategy\n} from './SpatialLayout'\nimport { SpatialAdapter } from './SpatialAdapter'\n\nexport class OptimizerConfig {\n    constructor(config?:OptimizerConfig) {\n        config && Object.assign(this, config)\n    }\n\n    relativeTolerance? : number\n    stepSizeMin?: number\n    stepSizeMax?: number\n    stepSizeStart?: number\n    \n    /** Min number of seconds to wait after producing an infeasible layout */\n    minFeasibleTime?: number\n    /** Max number of seconds to wait for a feasible layout */\n    maxInfeasibleTime?: number\n\n    maxIterationsPerFrame? : number\n\n    /**\n     * The solution swarm size for each layout\n     */\n    swarmSize? : number\n\n    /**\n     * Ratio of exploitation vs exploration \n     */\n    pulseRate?: number // = 0.2\n    \n    /**\n     * The minimal distance that a pulse will cause movement towards a better solution\n     */\n    pulseFrequencyMin? : number // = 0\n    \n    /**\n     * The maximal distance that a pulse will cause movement towards a better solution\n     */\n    pulseFrequencyMax? : number // = 2\n}\n\n/**\n * Implements an optimization metaheuristic inspired by:\n *  - Novel Adaptive Bat Algorithm (NABA) \n *      - https://doi.org/10.5120/16402-6079\n *      - 1/5th successful mutation rule used to adaptively increase or decrease exploration/exploitation via :\n *          - standard deviation of gaussian distrubtion for random walks\n *  - New directional bat algorithm for continuous optimization problems\n *      - https://doi.org/10.1016/j.eswa.2016.10.050\n *      - Directional echolocation (move towards best and/or random better solution)\n *      - Accept new local solution if better than current local solution (instead of requiring better than best solution)\n *      - Update best soltuion regardless of local solution acceptance\n * \n * In order to allow for continual optimization that maximizes exploration vs exploitation strategies as needed:\n *  - exploitation consists of directional pulses towards the global best solution and (possibly) a random better solution\n *  - exploration consists of gaussian random perturbation of an arbitrary solution\n */\nexport class SpatialOptimizer<N extends Node3D> {\n\n    constructor(public system:EtherealLayoutSystem<N>) {}\n\n    private _config = new OptimizerConfig as Required<OptimizerConfig>\n\n    private _setConfig(config:OptimizerConfig) {\n        const defaultConfig = this.system.optimize\n        this._config.minFeasibleTime = config.minFeasibleTime ?? defaultConfig.minFeasibleTime\n        this._config.maxInfeasibleTime = config.maxInfeasibleTime ?? defaultConfig.maxInfeasibleTime\n        this._config.pulseRate = config.pulseRate ?? defaultConfig.pulseRate\n        this._config.maxIterationsPerFrame = config.maxIterationsPerFrame ?? defaultConfig.maxIterationsPerFrame\n        this._config.swarmSize = config.swarmSize ?? defaultConfig.swarmSize\n        this._config.pulseFrequencyMin = config.pulseFrequencyMin ?? defaultConfig.pulseFrequencyMin\n        this._config.pulseFrequencyMax = config.pulseFrequencyMax ?? defaultConfig.pulseFrequencyMax\n        this._config.stepSizeMax = config.stepSizeMax ?? defaultConfig.stepSizeMax\n        this._config.stepSizeMin = config.stepSizeMin ?? defaultConfig.stepSizeMin\n        this._config.stepSizeStart = config.stepSizeStart ?? defaultConfig.stepSizeStart\n    }\n\n    private _prevOrientation = new Quaternion\n    private _prevBounds = new Box3\n\n    /**\n     * Optimize the layouts defined on this adapter\n     * \n     * @returns false if there are no layouts\n     */\n    update(adapter:SpatialAdapter<any>) {\n\n        if (adapter.layouts.length === 0 || adapter.metrics.innerBounds.isEmpty()) {\n            adapter.activeLayout = null\n            return false\n        }\n\n        const prevOrientation = this._prevOrientation.copy(adapter.orientation.target)\n        const prevBounds = this._prevBounds.copy(adapter.bounds.target)\n\n        for (const layout of adapter.layouts) {\n            this._setConfig(layout)\n            this._updateLayout(adapter, layout)\n        }\n\n        let bestLayout:SpatialLayout|undefined\n        let bestSolution:LayoutSolution|undefined\n        for (const layout of adapter.layouts) {\n            const solution = layout.solutions[0]\n            if (!bestSolution || (!bestSolution.isFeasible && solution.isFeasible)) {\n                bestSolution = solution\n                bestLayout = layout\n                if (bestSolution.isFeasible) break\n            }\n        }\n        \n\n        adapter.layoutFeasibleTime += adapter.system.deltaTime\n        adapter.layoutInfeasibleTime += adapter.system.deltaTime\n\n        if (!bestSolution?.isFeasible) {\n            adapter.layoutFeasibleTime = 0\n        }\n        \n        if ((bestSolution && bestSolution.isFeasible && adapter.layoutFeasibleTime >= this._config.minFeasibleTime) ||  \n            adapter.layoutInfeasibleTime >= this._config.maxInfeasibleTime) {\n            adapter.layoutInfeasibleTime = 0\n            bestSolution!.apply(false)\n        } else {\n            adapter.orientation.target = prevOrientation\n            adapter.bounds.target = prevBounds\n            adapter.metrics.invalidateStates()\n        }\n\n        adapter.activeLayout = bestLayout!\n\n        return true\n    }\n\n\n    private _scratchSolution = new LayoutSolution()\n    private _scratchBestSolution = new LayoutSolution()\n\n    private _updateLayout(adapter:SpatialAdapter<any>, layout:SpatialLayout) {\n        adapter.measureBoundsCache.clear()\n\n        layout.processObjectives()\n        const solutions = layout.solutions\n        const c = this._config\n        const newSolution = this._scratchSolution\n        const bestSolution = this._scratchBestSolution\n        const diversificationFactor = 1.5 \n        const intensificationFactor = 1.5 ** (-1/4)\n        let iterations = c.maxIterationsPerFrame\n\n        // if (!adapter.hasValidContext || layout.solutions[0]?.isFeasible)\n        if (layout.solutions[0]?.isFeasible)\n            iterations = 1\n\n        // manage solution population (if necessary)\n        this._manageSolutionPopulation(adapter, layout, c.swarmSize, c.stepSizeStart)\n\n        // rescore previous best solution (in case the score changed)\n        solutions[0].apply()\n        // for (const s of solutions) s.apply()\n        // layout.sortSolutions()\n\n        // optimize solutions\n        for (let i=0; i< iterations; i++) {\n            layout.iteration++\n            bestSolution.copy(solutions[0])\n            \n            let changed = false\n\n            // update solutions\n            for (let j=0; j < solutions.length; j++) {\n                const solution = solutions[j]\n\n                // generate new solution\n                newSolution.copy(solution)\n                newSolution.mutationStrategies = solution.mutationStrategies\n                let mutationStrategy = undefined as MutationStrategy|undefined\n\n                if (Math.random() < c.pulseRate) { // emit directional pulses! (global search / exploration)\n                    // select best and random solution\n                    const best = bestSolution !== solution ? bestSolution : solutions[1] \n                    let randomSolution:LayoutSolution|undefined\n                    if (solutions.length > 2) {\n                        do { randomSolution = solutions[Math.floor(Math.random()*solutions.length)] } \n                        while (randomSolution === solution) \n                    }\n                    // move towards best or both solutions\n                    newSolution.moveTowards(best, c.pulseFrequencyMin, c.pulseFrequencyMax)\n                    if (randomSolution && layout.compareSolutions(randomSolution, solution) <= 0) {\n                        newSolution.moveTowards(randomSolution, c.pulseFrequencyMin, c.pulseFrequencyMax)\n                    }\n                    \n                } else { // gaussian/levy random walk! (local search / exploitation)\n                    mutationStrategy = newSolution.perturb()\n                }\n\n                // evaluate new solutions\n                newSolution.apply()\n                \n                // better than previous ?\n                const success = layout.compareSolutions(newSolution, solution) < 0\n                if (success) {\n                    solution.copy(newSolution)\n                    if (solution !== solutions[0] && layout.compareSolutions(solution, solutions[0]) < 0) {\n                        solutions[0].copy(solution)\n                    }\n                    changed = true\n                }\n           \n                // adapt step size\n                if (mutationStrategy) {\n                    mutationStrategy.stepSize *= success ? diversificationFactor : intensificationFactor\n                    if (!success && mutationStrategy.stepSize < c.stepSizeMin || mutationStrategy.stepSize > c.stepSizeMax) {\n                        // random restart\n                        for (const m of solution.mutationStrategies) {\n                            m.stepSize = c.stepSizeStart\n                        }\n                        if (solution !== solutions[0]) {\n                            layout.restartRate = 0.001 + (1-0.001) * layout.restartRate\n                            solution.randomize(1)\n                            solution.apply()\n                            changed = true\n                        }\n                        // solution.bestScores.length = 0\n                        // for (const s of solution.scores) solution.bestScores.push(s)\n                    } else {\n                        if (solution !== solutions[0]) {\n                            layout.restartRate = (1-0.001) * layout.restartRate\n                        }\n                        // if (!success && solution !== solutions[0] && Math.random() < 2 ** (50 * mutationStrategy.stepSize / c.stepSizeStart - 50))\n                        //     solution.copy(newSolution)\n                    }\n                }\n\n            }\n\n            // best solution may have changed\n            if (changed) layout.sortSolutions()\n            if (layout.compareSolutions(bestSolution, solutions[0]) <= 0) {\n                layout.successRate = (1-0.005) * layout.successRate\n            } else {\n                layout.successRate = 0.005 + (1-0.005) * layout.successRate\n            }                \n        }\n    }\n\n    private _manageSolutionPopulation(adapter:SpatialAdapter<N>, layout:SpatialLayout, swarmSize:number, startStepSize:number) {\n        if (swarmSize <= 1) throw new Error('Swarm size must be larger than 1')\n        if (layout.solutions.length < swarmSize) {\n            while (layout.solutions.length < swarmSize) {\n                const solution = new LayoutSolution(layout)\n                for (const s of solution.mutationStrategies) s.stepSize = startStepSize\n                solution.randomize(1)\n                layout.solutions.push(solution)\n            }\n        } else if (layout.solutions.length > swarmSize) {\n            while (layout.solutions.length > swarmSize) {\n                layout.solutions.pop()\n            }\n        }\n    }\n\n}","import { MathUtils, Vector3, Quaternion, Box3, Euler } from './math-utils'\nimport { SpatialLayout } from './SpatialLayout'\n\nexport type OneOrMany<T> = T|T[]\n\nexport type DiscreteOrContinuous<T> = T|{gt:T,lt:T}|{gt:T}|{lt:T}\n\nexport type ConstraintSpec<T=string> = DiscreteOrContinuous<T>\n\nexport type NumberConstraintSpec = ConstraintSpec<string|number>\n\nexport type AtLeastOneProperty<T, U = {[K in keyof T]: Pick<T, K> }> = Partial<T> & U[keyof U]\n\nexport type Vector3Spec = AtLeastOneProperty<{\n    x:NumberConstraintSpec, y:NumberConstraintSpec, z:NumberConstraintSpec,\n    magnitude:NumberConstraintSpec\n}>\n\nexport type QuaternionSpec = \n    OneOrMany<\n        { x:number, y:number, z:number, w:number } |\n        AtLeastOneProperty<{ swingRange:{x:string, y:string}, twistRange:string }>\n    >\n\nexport interface ObjectiveOptions {\n    relativeTolerance?:number|(() => number), \n    absoluteTolerance?:number|(() => number)\n}\n\nexport type BoundsMeasureType = 'spatial'|'visual'|'view'\nexport type BoundsMeasureSubType = \n    'left'|'bottom'|'top'|'right'|'front'|'back'|\n    'sizex'|'sizey'|'sizez'|'sizediagonal'|\n    'centerx'|'centery'|'centerz'|'centerdistance'\n \nexport type DiscreteSpec<T> = Exclude<T,any[]|undefined|Partial<{gt:any,lt:any}>>\nexport type ContinuousSpec<T> = T extends any[] | undefined ? never : \n    T extends {gt:any,lt:any} ? T : never\n\nexport abstract class SpatialObjective {\n\n    static isDiscreteSpec<T>(s:T) : s is DiscreteSpec<T> {\n        const type = typeof s\n        return type === 'string' || type === 'number'\n    }\n\n    static isContinuousSpec<T>(s:T) : s is ContinuousSpec<T> {\n        return s !== undefined && s instanceof Array === false && typeof s === 'object' && ('gt' in s || 'lt' in s) === true\n    }\n\n    type : keyof typeof SpatialLayout.prototype.absoluteTolerance = 'ratio'\n    sortBlame = 0\n\n    // bestScore = -1000\n\n    get bestScore() {\n        return this.layout.solutions[0].scores[this.index]\n    }\n\n    relativeTolerance ?: number = undefined\n    absoluteTolerance ?: number|string = undefined\n    computedAbsoluteTolerance : number = -Infinity\n    computedRelativeTolerance : number = -Infinity\n\n    priority = 0\n    index = -1\n\n    layout:SpatialLayout\n\n    constructor(layout:SpatialLayout) {\n        this.layout = layout\n    }\n\n    abstract evaluate() : number;\n\n    protected reduceFromOneOrManySpec = <V,S>(value:V, spec:OneOrMany<S>|undefined, applyFn:(value:V, spec:S)=>number) => {\n        if (spec === undefined) return 0\n        // score for compound spec is best score in the list\n        if (spec instanceof Array) {\n            let score = -Infinity\n            for (const s of spec) {\n                score = Math.max(applyFn(value, s), score)\n            }\n            return score\n        }\n        return applyFn(value, spec)\n    }\n\n    protected getNumberScore(value:number, spec:OneOrMany<NumberConstraintSpec>) {\n        return this.reduceFromOneOrManySpec(value, spec, this._getNumberScoreSingle)\n    }\n\n    private _getNumberScoreSingle = (value:number, spec:NumberConstraintSpec) => {\n        let diff = 0\n        if (typeof spec !== 'object') {\n            const target = this.layout.adapter.system.measureNumber(spec)\n            diff = -Math.abs(value - target)\n        } else {\n            const min = 'gt' in spec ? this.layout.adapter.system.measureNumber(spec.gt): undefined\n            const max = 'lt' in spec ? this.layout.adapter.system.measureNumber(spec.lt): undefined\n            if (min !== undefined && value < min) {\n                diff = value - min\n            }\n            else if (max !== undefined && value > max) {\n                diff = max - value\n            }\n        }\n        return diff\n    }\n\n    protected getVector3Score(value:Vector3, spec:OneOrMany<Vector3Spec>|undefined) {        \n        return this.reduceFromOneOrManySpec(value, spec, this._getVector3ScoreSingle)\n    }\n\n    private _getVector3ScoreSingle = (value:Vector3, spec:Vector3Spec) => {\n        // penalty for discrete spec is distance from the valid value\n        const xScore = ('x' in spec && typeof spec.x !== 'undefined') ? this.getNumberScore(value.x, spec.x) : 0\n        const yScore = ('y' in spec && typeof spec.y !== 'undefined') ? this.getNumberScore(value.y, spec.y) : 0\n        const zScore = ('z' in spec && typeof spec.z !== 'undefined') ? this.getNumberScore(value.z, spec.z) : 0\n        const magnitudeScore = ('magnitude' in spec && typeof spec.magnitude !== 'undefined') ? this.getNumberScore(value.length(), spec.magnitude) : 0\n        return xScore + yScore + zScore + magnitudeScore\n    }\n\n    protected getQuaternionScore(value:Quaternion, spec:OneOrMany<QuaternionSpec>|undefined) {\n        return this.reduceFromOneOrManySpec(value, spec, this._getQuaternionScoreSingle)\n    }\n\n    private _quat = new Quaternion\n    private _euler = new Euler\n\n    private _getQuaternionScoreSingle = (value:Quaternion, spec:QuaternionSpec|undefined) => {\n        if (spec === undefined) return 0\n        // absolute score = - angle from target  \n        // relative score = (- angle from target / max magnitude) \n        if ('x' in spec) {\n            const s = this._quat.copy(spec as any)\n            return - s.angleTo(value) * MathUtils.RAD2DEG\n        } else if ('swingRange' in spec) {\n            const euler = this._euler.setFromQuaternion(value)\n            const swingX = euler.x * MathUtils.RAD2DEG\n            const swingY = euler.y * MathUtils.RAD2DEG\n            const twistZ = euler.z * MathUtils.RAD2DEG\n            const system = this.layout.adapter.system\n            const deg = system.mathScope.degree\n            let swingRangeX = spec.swingRange?.x ? system.measureNumber(spec.swingRange.x, deg) : 0\n            let swingRangeY = spec.swingRange?.y ? system.measureNumber(spec.swingRange.y, deg) : 0\n            swingRangeX = Math.max(swingRangeX, 0.01)\n            swingRangeY = Math.max(swingRangeY, 0.01)\n            const twistRange = spec.twistRange ? system.measureNumber(spec.twistRange, deg) : 0\n            // const swingRange = Math.acos( \n            //     Math.cos( swingRangeX * MathUtils.DEG2RAD ) * \n            //     Math.cos( swingRangeY * MathUtils.DEG2RAD )\n            // ) * MathUtils.RAD2DEG\n            const swingScore = (1 - (swingX / swingRangeX) ** 2 - (swingY / swingRangeY) ** 2)\n            const twistScore = twistRange - Math.abs(twistZ)\n            return (swingScore > 0 ? 0 : swingScore) + (twistScore > 0 ? 0 : twistScore)\n        }\n\n        return 0\n    }\n\n    protected getBoundsScore(spec:SpatialBoundsSpec|undefined, boundsType:BoundsMeasureType) {\n        if (spec === undefined) return 0\n        let score = 0\n        for (const key in spec) {\n            if (key === 'absolute') {\n                continue\n            } \n            let k = key as keyof SpatialBoundsSpec\n            if (k === 'size' || k === 'center') {\n                const subSpec = spec[k]\n                for (const subKey of VECTOR3_SPEC_KEYS) {\n                    let sk = subKey as keyof NonNullable<typeof spec[typeof k]>\n                    if (boundsType !== 'spatial') {\n                        if (this.type === 'meter' && sk !== 'z') continue\n                        if (this.type === 'pixel' && sk === 'z') continue\n                    }\n                    score += this.getBoundsMeasureScore(subSpec?.[sk], boundsType, k+sk as any)\n                }\n            } else {\n                if (boundsType !== 'spatial') {\n                    if (this.type === 'meter' && k !== 'back' && k !== 'front')\n                        continue\n                    if (this.type === 'pixel' && (k === 'back' || k === 'front'))\n                        continue\n                }\n                score += this.getBoundsMeasureScore(spec[k], boundsType, k)\n            }\n        }\n        return score\n    }\n\n    protected getBoundsMeasureScore(spec:OneOrMany<NumberConstraintSpec>|undefined, type:BoundsMeasureType, subType:BoundsMeasureSubType) {\n        if (spec === undefined) return 0\n        const state = this.layout.adapter.metrics.target\n        let bounds : Box3\n        let center : Vector3\n        let size : Vector3\n        switch (type) {\n            case 'spatial': \n                bounds = state.spatialBounds\n                center = state.spatialCenter\n                size = state.spatialSize\n                break\n            case 'visual': \n            case 'view':\n                bounds = state.visualBounds\n                center = state.visualCenter\n                size = state.visualSize\n                break\n            default: \n                throw new Error(`Unknown measure type \"${type}.${subType}\" in spec:\\n \"${spec}\"`)\n        }\n        let value = 0\n        switch (subType) {\n            case 'left':    value = bounds.min.x; break\n            case 'right':   value = bounds.max.x; break\n            case 'bottom':  value = bounds.min.y; break\n            case 'top':     value = bounds.max.y; break\n            case 'back':    value = bounds.min.z; break\n            case 'front':   value = bounds.max.z; break\n            case 'centerx': value = center.x; break\n            case 'centery': value = center.y; break\n            case 'centerz': value = center.z; break\n            case 'centerdistance': value = type === 'spatial' ? \n                center.length() : Math.sqrt(center.x**2 + size.y**2); break\n            case 'sizex':   value = size.x; break\n            case 'sizey':  value = size.y; break\n            case 'sizez':   value = size.z; break\n            case 'sizediagonal': value = type === 'spatial' ? \n                size.length() : Math.sqrt(size.x**2 + size.y**2); break\n            default: \n                throw new Error(`Unknown measure subtype ${type}.${subType} in spec \"${spec}\"`)\n        }\n\n        // score for compound spec is best score in the list\n        if (spec instanceof Array) {\n            let score = -Infinity\n            for (const s of spec) {\n                score = Math.max(this._getBoundsMeasureScoreSingle(value, s, type, subType), score)\n            }\n            return score\n        }\n        return this._getBoundsMeasureScoreSingle(value, spec, type, subType)\n    }\n\n    private _getBoundsMeasureScoreSingle = (value:number, spec:NumberConstraintSpec|undefined, type:BoundsMeasureType, subType:BoundsMeasureSubType) => {\n        if (spec === undefined) return 0\n        // penalty for single spec is distance from any valid value\n        if (typeof spec === 'object') {\n            if ('gt' in spec) {\n                const min = this.layout.adapter.measureBounds(spec.gt, type, subType)\n                if (value < min) return value - min\n            }\n            if ('lt' in spec) {\n                const max = this.layout.adapter.measureBounds(spec.lt, type, subType)\n                if (value > max) return max - value\n            }  \n            return 0\n        }\n        return - Math.abs(value - this.layout.adapter.measureBounds(spec, type, subType))\n    }\n\n    /**  Attenuate visual score when out of view */\n    protected attenuateVisualScore(score:number) : number {\n        let penalty = 0\n        const acc = this.layout.getComputedAbsoluteTolerance('pixel')\n        const adapter = this.layout.adapter\n        const viewResolution = adapter.system.viewResolution\n        const viewFrustum = adapter.system.viewFrustum\n        const vw = viewResolution.x\n        const vh = viewResolution.y\n        const viewSize = viewResolution.length()\n        const visualBounds = adapter.metrics.target.visualBounds\n        const leftOffset = visualBounds.min.x - -vw/2 + acc\n        const rightOffset = visualBounds.max.x - vw/2 - acc\n        const bottomOffset = visualBounds.min.y - -vh/2 + acc\n        const topOffset = visualBounds.max.y - vh/2 - acc\n        const nearOffset = visualBounds.max.z + viewFrustum.nearMeters\n        if (leftOffset < 0) penalty += Math.abs(leftOffset / vw)\n        if (rightOffset > 0) penalty += Math.abs(rightOffset / vw) \n        if (bottomOffset < 0) penalty += Math.abs(bottomOffset / vh)\n        if (topOffset > 0) penalty += Math.abs(topOffset / vh)\n        if (nearOffset > 0) penalty += nearOffset * 10\n        return score - Math.abs(viewSize)*penalty\n    }\n}\n\n// export class RelativePositionConstraint extends SpatialObjective {\n//     spec?:Vector3Spec\n\n//     constructor(layout:SpatialLayout) {\n//         super(layout)\n//         this.type = 'meter'\n//     }\n\n//     evaluate() {\n//         const state = this.layout.adapter.metrics.target\n//         return this.getVector3Score(state.spatialCenter, this.spec)\n//     }\n// }\n\nexport class RelativeOrientationConstraint extends SpatialObjective {\n    spec?:QuaternionSpec\n\n    constructor(layout:SpatialLayout) {\n        super(layout)\n        this.type = 'degree'\n    }\n\n    evaluate() {\n        const state = this.layout.adapter.metrics.target\n        return this.getQuaternionScore(state.localOrientation, this.spec)\n    }\n}\n\n\nexport class WorldScaleConstraint extends SpatialObjective {\n    spec?:Vector3Spec\n\n    constructor(layout:SpatialLayout) {\n        super(layout)\n        this.type = 'ratio'\n    }\n\n    evaluate() {\n        const state = this.layout.adapter.metrics.target\n        return this.getVector3Score(state.worldScale, this.spec)\n    }\n}\n\nexport class AspectConstraint extends SpatialObjective {\n    mode = 'xyz' as 'xyz'|'xy'\n\n    private _scale = new Vector3\n\n    constructor(layout:SpatialLayout) {\n        super(layout)\n        this.type = 'ratio'\n    }\n\n    evaluate() {\n        const state = this.layout.adapter.metrics.target\n        const mode = this.mode\n        if (!mode) return 0\n        // const worldScale = state.worldScale\n        const s = this._scale.copy(state.worldScale)\n        const largest = mode === 'xyz' ? \n            Math.max(Math.abs(s.x), Math.abs(s.y), Math.abs(s.z)) : \n            Math.max(Math.abs(s.x), Math.abs(s.y))\n        const aspectFill = s.divideScalar(largest)\n        return  -(1/aspectFill.x) + 1 +\n                -(1/aspectFill.y) + 1 +\n                (mode === 'xyz' ? \n                    -(1/aspectFill.z) + 1:\n                    // prevent z from being scaled largest when doing preserved 2D aspect\n                    aspectFill.z > 1 ? 1-aspectFill.z : 0)\n        // return  (aspectFill.x - 1) +\n        //         (aspectFill.y - 1) +\n        //         (mode === 'xyz' ? \n        //             aspectFill.z - 1:\n        //             // prevent z from being scaled largest when doing preserved 2D aspect\n        //             aspectFill.z > 1 ? 1-aspectFill.z : 0)\n    }\n}\n\nexport interface SpatialBoundsSpec {\n    /** meters */ left? : OneOrMany<ConstraintSpec>   \n    /** meters */ bottom? : OneOrMany<ConstraintSpec> \n    /** meters */ right? :  OneOrMany<ConstraintSpec>  \n    /** meters */ top? :  OneOrMany<ConstraintSpec>    \n    /** meters */ front? :  OneOrMany<ConstraintSpec>  \n    /** meters */ back? :  OneOrMany<ConstraintSpec>\n    size? : {\n    /** meters */ x?: OneOrMany<NumberConstraintSpec>,\n    /** meters */ y?: OneOrMany<NumberConstraintSpec>, \n    /** meters */ z?: OneOrMany<NumberConstraintSpec>, \n    /** meters */ diagonal?: OneOrMany<ConstraintSpec>\n    },\n    center? : {\n    /** meters */ x?: OneOrMany<NumberConstraintSpec>,\n    /** meters */ y?: OneOrMany<NumberConstraintSpec>, \n    /** meters */ z?: OneOrMany<NumberConstraintSpec>,\n    /** meters */ distance?: OneOrMany<ConstraintSpec>\n    }\n}\n\nconst VECTOR3_SPEC_KEYS = ['x','y','z','diagonal', 'distance']\n\nexport class SpatialBoundsConstraint extends SpatialObjective {\n    spec?:SpatialBoundsSpec\n\n    constructor(layout:SpatialLayout) {\n        super(layout)\n        this.type = 'meter'\n    }\n\n    evaluate() {\n        return this.getBoundsScore(this.spec, 'spatial')\n    }\n}\n\nexport interface VisualBoundsSpec {\n    absolute?: {\n        /** pixels */ left? : OneOrMany<ConstraintSpec>   \n        /** pixels */ bottom? : OneOrMany<ConstraintSpec> \n        /** pixels */ right? : OneOrMany<ConstraintSpec>  \n        /** pixels */ top? : OneOrMany<ConstraintSpec>    \n        /** meters */ front? : OneOrMany<ConstraintSpec>   \n        /** meters */ back? : OneOrMany<ConstraintSpec>,\n        center? : {\n            /** pixels */ x?:OneOrMany<ConstraintSpec>,\n            /** pixels */ y?:OneOrMany<ConstraintSpec>, \n            /** meters */ z?:OneOrMany<ConstraintSpec>,\n        }\n    },\n    /** pixels */ left? : OneOrMany<ConstraintSpec>   \n    /** pixels */ bottom? : OneOrMany<ConstraintSpec> \n    /** pixels */ right? : OneOrMany<ConstraintSpec>  \n    /** pixels */ top? : OneOrMany<ConstraintSpec>    \n    /** meters */ front? : OneOrMany<ConstraintSpec>   \n    /** meters */ back? : OneOrMany<ConstraintSpec>,\n    center? : {\n        /** pixels */ x?:OneOrMany<NumberConstraintSpec>,\n        /** pixels */ y?:OneOrMany<NumberConstraintSpec>, \n        /** meters */ z?:OneOrMany<ConstraintSpec>,\n        /** pixels */ distance?: OneOrMany<ConstraintSpec>,\n    }\n    size? : {\n    /** pixels */ x?:OneOrMany<ConstraintSpec>,\n    /** pixels */ y?:OneOrMany<ConstraintSpec>, \n    /** meters */ z?:OneOrMany<ConstraintSpec>, \n    /** pixels */ diagonal?:OneOrMany<ConstraintSpec>\n    }\n}\n\nexport class VisualBoundsConstraint extends SpatialObjective {\n    spec?:VisualBoundsSpec\n\n    constructor(layout:SpatialLayout) {\n        super(layout)\n        this.type = \"pixel\"\n    }\n\n    evaluate() {\n        return this.attenuateVisualScore(\n            this.getBoundsScore(this.spec, 'visual') + \n            this.getBoundsScore(this.spec?.absolute, 'view')\n        )\n    }\n}\n\n\nexport class VisualMaximizeObjective extends SpatialObjective {\n\n    constructor(layout:SpatialLayout) {\n        super(layout)\n        this.type = \"pixel\"\n    }\n\n    minAreaPercent = 0\n\n    evaluate() {\n        const target = this.layout.adapter.metrics.target\n        const visualSize = target.visualSize\n        const viewSize = this.layout.adapter.system.viewResolution\n        const visualArea = Math.min(visualSize.x * visualSize.y, viewSize.x * viewSize.y)\n        const refVisualSize = target.referenceState?.visualSize || viewSize\n        const refVisualArea = refVisualSize.x * refVisualSize.y\n        const score = this.attenuateVisualScore(visualArea) - refVisualArea * this.minAreaPercent\n        return score\n    }\n}\n\n\nexport class MagnetizeObjective extends SpatialObjective {\n\n    constructor(layout:SpatialLayout) {\n        super(layout)\n        this.type = \"meter\"\n        this.absoluteTolerance = 1e10\n    }\n\n    evaluate() {\n        const center = this.layout.adapter.metrics.target.visualCenter\n        return -center.length()\n    }\n}\n\n\nexport class MaximizeTemporalCoherenceObjective extends SpatialObjective {\n\n    constructor(layout:SpatialLayout) {\n        super(layout)\n        this.type = \"meter\"\n        this.relativeTolerance = 0\n    }\n\n    evaluate() {\n        if (!this.layout.bestSolution?.isFeasible) return 10000000\n        const metrics = this.layout.adapter.metrics\n        const previousCenter = metrics.previousTarget.spatialCenter\n        const targetCenter = metrics.target.spatialCenter\n        const previousOrientation = metrics.previousTarget.localOrientation\n        const targetOrientation = metrics.target.localOrientation\n        const previousScale = metrics.previousTarget.localScale.lengthSq()\n        const targetScale = metrics.target.localScale.lengthSq()\n        const dist = previousCenter.distanceTo(targetCenter) * 100\n        const orientationDiff = previousOrientation.angleTo(targetOrientation) / Math.PI\n        const scaleDiff = Math.abs(previousScale-targetScale) * 0.1\n        return Math.min(1 / (dist + scaleDiff + orientationDiff), 10000000)\n    }\n}\n\n\nexport class MinimizeOcclusionObjective extends SpatialObjective {\n\n    constructor(layout:SpatialLayout) {\n        super(layout)\n        this.type = \"meter\"\n    }\n\n    evaluate() {\n        const targetState = this.layout.adapter.metrics.target\n        return 1 / (targetState.occludedPercent + targetState.occludingPercent)\n    }\n}\n\n\n\n\n","import { Node3D } from './EtherealLayoutSystem'\nimport { Vector3, Quaternion, Box3, MathUtils, randomSelect, randomQuaternion, gaussian, levy} from './math-utils'\nimport { SpatialAdapter } from './SpatialAdapter'\nimport { OptimizerConfig } from './SpatialOptimizer'\nimport { \n    ObjectiveOptions, \n    Vector3Spec, //RelativePositionConstraint as RelativePositionConstraint, \n    QuaternionSpec, RelativeOrientationConstraint as RelativeOrientationConstraint,\n    WorldScaleConstraint as WorldScaleConstraint, AspectConstraint,\n    SpatialBoundsSpec, SpatialBoundsConstraint,\n    VisualBoundsSpec, VisualBoundsConstraint, \n    VisualMaximizeObjective as MaximizeObjective,\n    SpatialObjective, MagnetizeObjective, MinimizeOcclusionObjective\n} from './SpatialObjective'\n\n\n/**\n * Defines spatial layout constraints/goals\n */\nexport class SpatialLayout extends OptimizerConfig {\n\n    constructor(public adapter:SpatialAdapter<any>) {\n        super()\n    }\n    \n    relativeTolerance?:number\n    absoluteTolerance = {\n        meter: '4mm',\n        pixel: '4px',\n        degree: '0.002deg',\n        ratio: 0.005\n    }\n\n    getComputedAbsoluteTolerance(type: keyof typeof SpatialLayout.prototype.absoluteTolerance) {\n        return this.adapter.system.measureNumber(this.absoluteTolerance[type], type)\n    }\n\n    successRate = 0\n\n    restartRate = 0\n\n    /**\n     * The objectives applied to this layout\n     */\n    objectives = new Array<SpatialObjective>() as ReadonlyArray<SpatialObjective>\n    \n    /**\n     * The reference frame for position and orientation constraints. \n     * if not defined, the parent node becomes the reference frame. \n     */\n    referenceNode?:Node3D|null = null\n\n    /**\n     * Define a reference frame for position and orientation constraints.\n     * @param reference \n     */\n    poseRelativeTo(reference?:Node3D|null) {\n        this.referenceNode = reference\n        return this\n    }\n\n    maximize(opts?:Partial<MaximizeObjective>) {\n        const obj = this.maximizeObjective = \n            this.maximizeObjective ?? new MaximizeObjective(this)\n        obj.priority = -1000\n        obj.relativeTolerance = 0.1\n        return this.addObjective(obj,opts)\n    }\n    maximizeObjective?:MaximizeObjective\n\n    /**\n     * Add a relative orientation constraint\n     */\n    orientation(spec:QuaternionSpec, opts?:Partial<RelativeOrientationConstraint>) {\n        const obj = this.orientationConstraint = this.orientationConstraint ?? new RelativeOrientationConstraint(this)\n        obj.spec = spec\n        obj.priority = -999\n        return this.addObjective(obj, opts)\n    }\n    orientationConstraint?:RelativeOrientationConstraint\n\n    /**\n    * Add an aspect-ratio constraint\n    * Constrain normalized world scale to preserve\n    * xyz or xy aspect ratios\n    */\n    keepAspect(mode:'xyz'|'xy'= 'xyz', opts?:Partial<AspectConstraint>) {\n        const obj = this.keepAspectConstraint = this.keepAspectConstraint ?? new AspectConstraint(this)\n        obj.mode = mode\n        obj.priority = -998\n        return this.addObjective(obj, opts)\n    }\n    keepAspectConstraint?:AspectConstraint\n\n    // /**\n    //  * Add a relative position constraint\n    //  */\n    // position(spec:Vector3Spec, opts?:Partial<RelativePositionConstraint>) {\n    //     const obj = this.positionConstraint = this.positionConstraint ?? new RelativePositionConstraint(this)\n    //     obj.spec = spec\n    //     obj.priority = -2\n    //     return this.addObjective(obj, opts)\n    // }\n    // positionConstraint?:RelativePositionConstraint\n\n    /**\n     * Add a world scale constraint\n     */\n    scale(spec:Vector3Spec, opts?:Partial<WorldScaleConstraint>) {\n        const obj = this.scaleConstraint = this.scaleConstraint ?? new WorldScaleConstraint(this)\n        obj.spec = spec\n        obj.priority = -2\n        return this.addObjective(obj, opts)\n    }\n    scaleConstraint?:WorldScaleConstraint\n\n\n    bounds(spec:SpatialBoundsSpec, opts?:Partial<SpatialBoundsConstraint>) {\n        const obj = this.boundsConstraint =  this.boundsConstraint ?? new SpatialBoundsConstraint(this)\n        obj.spec = spec\n        return this.addObjective(obj, opts)\n    }\n    boundsConstraint?:SpatialBoundsConstraint\n\n    visualOrientation(spec:QuaternionSpec, opts?:ObjectiveOptions) {\n\n    }\n\n    visualBounds(spec:VisualBoundsSpec, opts?:Partial<VisualBoundsConstraint>) {\n        const meterConstraint = this.visualBoundsMeterConstraint = \n            this.visualBoundsMeterConstraint ?? new VisualBoundsConstraint(this)\n        const pixelConstraint = this.visualBoundsPixelConstraint = \n            this.visualBoundsPixelConstraint ?? new VisualBoundsConstraint(this)\n        meterConstraint.spec = spec\n        meterConstraint.type = 'meter'\n        pixelConstraint.spec = spec\n        pixelConstraint.type = 'pixel'\n        return this.addObjective(meterConstraint, opts).addObjective(pixelConstraint, opts)\n    }\n    visualBoundsMeterConstraint?:VisualBoundsConstraint\n    visualBoundsPixelConstraint?:VisualBoundsConstraint\n\n    magnetize(opts?:Partial<MagnetizeObjective>) {\n        const obj = this.magnetizeObjective = this.magnetizeObjective ?? new MagnetizeObjective(this)\n        obj.priority = -900\n        obj.relativeTolerance = 0.95\n        return this.addObjective(obj, opts)\n    }\n    magnetizeObjective?:MagnetizeObjective\n\n    avoidOcclusion(opts?:Partial<MinimizeOcclusionObjective>) {\n        const obj = this.minimizeOcclusionObjective = \n            this.minimizeOcclusionObjective ?? new MagnetizeObjective(this)\n        obj.priority = 11\n        return this.addObjective(obj, opts)\n    }\n    minimizeOcclusionObjective?:MagnetizeObjective\n\n    /**\n     * Add an objective with it's options.\n     * If the objective instance is already present, it's not added again.\n     * \n     * After an objective is added, the objective list is stably sorted, \n     * according to the priority of each objective.\n     */\n    addObjective<T extends SpatialObjective>(obj:T, opts?:Partial<T>) {\n        Object.assign(obj, opts)\n        if (this.objectives.indexOf(obj) === -1) \n            (this.objectives as Array<SpatialObjective>).push(obj)\n        this.processObjectives()\n        return this\n    }\n    \n\n    /**\n     * The solutions being explored for this layout\n     */\n    solutions = new Array<LayoutSolution>()\n\n    /**\n     * The current optimization iteration\n     */\n    iteration = 0\n\n    /**\n     * Return true if this layout has a valid solution\n     */\n    get hasValidSolution() {\n        return this.solutions[0]?.isFeasible === true\n    }\n\n    /** stable-sort objectives by priority */\n    // private _prioritySort(a:SpatialObjective,b:SpatialObjective) {\n    //     return a.index - b.index\n    //     // if (a.priority === b.priority) return a.index - b.index\n    //     // return a.priority - b.priority\n    // }\n\n    processObjectives() {\n        const sys = this.adapter.system\n        const objectives = this.objectives as Array<SpatialObjective>\n        let index = 0\n        for (const o of objectives) {\n            o.index = index++\n            o.computedAbsoluteTolerance = o.absoluteTolerance !== undefined ? \n                sys.measureNumber(o.absoluteTolerance, sys.mathScope[o.type]) :\n                this.getComputedAbsoluteTolerance(o.type)\n            o.computedRelativeTolerance = o.relativeTolerance ??\n                this.relativeTolerance ??\n                this.adapter.system.optimize.relativeTolerance\n        }\n        // objectives.sort(this._prioritySort)\n    }\n\n    bestSolution! : LayoutSolution\n\n    /**\n     * Update best scores and sort solutions\n     */\n    sortSolutions() {\n        this.solutions.sort(this.compareSolutions)\n        this.bestSolution = this.solutions[0]\n    }\n\n    /**\n     * Each objective function should return a scalar value \n     * that increases in correlation with improved fitness. \n     * \n     * The fitness value does not need to be normalized, as \n     * individual objectives are not weighted directly against\n     * one another. Rather, solutions are ranked by preferring \n     * the solution that has the highest score (within tolerance)\n     * of each objective, in order of objective priority. \n     * \n     * If one solution is feasible (no negative scores) and the \n     * other soltion isn't, the feasible one is always ranked higher. \n     * \n     * In all other cases, solutions are compared by examining\n     * their objective scores sequentially:\n     * \n     * If at any point the difference between scores is larger \n     * than the tolerance for a given objective, the two solutions \n     * will be ranked by that objective. \n     * \n     * If any two solutions are within relative tolerance \n     * of one another for all objectives, those two will be\n     * compared to one another by the lowest priority objective\n     * \n     * If either solution breaks constraints, then\n     * the one with the lowest penalty is ranked higher\n     */\n    compareSolutions = (a:LayoutSolution, b:LayoutSolution) => {\n\n        // const aMin = a.bounds.min\n        // const aMax = a.bounds.max\n        // if (isNaN(aMin.x)||isNaN(aMin.y)||isNaN(aMin.z)||isNaN(aMax.x)||isNaN(aMax.y)||isNaN(aMax.z))\n        //     return 1\n\n        const objectives = this.objectives\n        if (a.scores.length < objectives.length) return 1\n        if (b.scores.length < objectives.length) return -1\n\n        const aFeasible = a.isFeasible\n        const bFeasible = b.isFeasible\n        if (aFeasible && !bFeasible) return -1\n        if (bFeasible && !aFeasible) return 1\n\n        let rank = 0\n        \n        const bestScores = this.solutions[0].scores\n        for (let i = 0; i < objectives.length; i++) {\n            const scoreA = a.scores[i] \n            const scoreB = b.scores[i] \n            if (isNaN(scoreA)) return 1\n            if (isNaN(scoreB)) return -1\n            const objective = objectives[i]\n            const oRelTol = objective.computedRelativeTolerance\n            const oAbsTol = objective.computedAbsoluteTolerance\n            const best = Math.max(bestScores[i], scoreA, scoreB)\n            const tolerance = Math.min(best - Math.abs(best) * oRelTol, -oAbsTol)\n            if (scoreA < tolerance || scoreB < tolerance) {\n                objective.sortBlame++\n                return scoreB - scoreA // rank by highest score\n            }\n            if (scoreB - scoreA !== 0) rank = scoreB - scoreA\n        }\n\n        // If all scores are within relative tolerance of one another,\n        // sort by lowest priority score\n        return rank\n    }\n}\n\nexport interface MutationStrategy {type:string, stepSize: number}\n\nexport class LayoutSolution {\n\n    constructor(layout?:SpatialLayout) { \n        if (layout) this.layout = layout\n    }\n\n    /**\n     * The layout associated with this solution\n     */\n    layout: SpatialLayout = undefined as any\n\n    /**\n     * The layout orientation (relative to parent orientation)\n     */\n    orientation = new Quaternion\n\n    /**\n     * The layout bounds (world units)\n     */\n    bounds = new Box3\n\n\n    get aspectPenalty() {\n        return this.scores[this.layout.objectives.indexOf(this.layout.keepAspectConstraint!)]||0\n    }\n\n    get orientationPenalty() {\n        return this.scores[this.layout.objectives.indexOf(this.layout.orientationConstraint!)]||0\n    }\n\n    get spatialBoundsPenalty() {\n        return this.scores[this.layout.objectives.indexOf(this.layout.boundsConstraint!)]||0\n    }\n\n    /**\n     * The objectives fitness scores for this solution\n     * (one for each objective, higher is better)\n     */\n    scores = [] as number[]\n\n    /**\n     * All constraints are satisfied\n     */\n    isFeasible = false\n    \n\n    mutationStrategies = [\n        {type:'rotate', stepSize: 0.1},\n        {type:'center', stepSize: 0.1},\n        {type:'size', stepSize: 0.1},\n        {type:'minmax', stepSize: 0.1},\n    ]\n\n    private _selectStrategy() {\n        const strategies = this.mutationStrategies\n        const weights = this._mutationWeights\n\n        const orientationConstraint = this.layout.orientationConstraint\n        const aspectConstraint = this.layout.keepAspectConstraint\n\n        for (let i=0; i < strategies.length; i++) {\n            weights[i] = strategies[i].stepSize\n            if (orientationConstraint && strategies[i].type == 'rotate' \n                && this.orientationPenalty > -orientationConstraint.computedAbsoluteTolerance)\n                weights[i] *= 0.01\n            if (aspectConstraint && strategies[i].type == 'size' \n                && this.aspectPenalty < -aspectConstraint.computedAbsoluteTolerance)\n                weights[i] *= 100\n        }\n\n        return randomSelect(strategies, weights)\n    }\n    private _mutationWeights = [] as number[]\n\n    copy(solution:LayoutSolution) {\n        this.layout = solution.layout\n        this.orientation.copy( solution.orientation )\n        this.bounds.copy( solution.bounds )\n        this.scores.length = 0\n        // this.bestScores.length = 0\n        for (let i = 0; i < solution.scores.length; i++) {\n            this.scores[i] = solution.scores[i]\n            // this.bestScores[i] = solution.bestScores[i]\n        }\n        this.isFeasible = solution.isFeasible\n        return this\n    }\n\n    private static _scratchV1 = new Vector3 \n    private static _scratchV2 = new Vector3\n\n    randomize(sizeHint:number) {\n        // this.orientation.copy(randomQuaternion())\n        const far = levy(sizeHint)\n        // const center = LayoutSolution._scratchV1.set(\n        //     ((Math.random() - 0.5) * gaussian(sizeHint * 0.1)) * far,\n        //     ((Math.random() - 0.5) * gaussian(sizeHint * 0.1)) * far,\n        //     - far\n        // )\n        const center = LayoutSolution._scratchV1.set(\n            0,\n            0,\n            - far\n        )\n\n        const viewState = this.layout.adapter.system.viewMetrics.target\n\n        \n\n        center.applyMatrix4(viewState.worldMatrix)\n        const parentState = this.layout.adapter.metrics.target.parentState\n        parentState && center.applyMatrix4(parentState.worldMatrixInverse)\n\n        this.orientation.copy(viewState.worldOrientation)\n        parentState && this.orientation.multiply(parentState.worldOrientationInverse)\n\n        // const halfSize = LayoutSolution._scratchV2.set(\n        //     Math.random() * sizeHint * 2 + sizeHint * 0.1,\n        //     Math.random() * sizeHint * 2 + sizeHint * 0.1,\n        //     Math.random() * sizeHint * 2 + sizeHint * 0.1\n        // )\n        const inner = this.layout.adapter.metrics.innerBounds\n        const size = inner.isEmpty() ? \n            LayoutSolution._scratchV2.set(1,1,1) : \n            inner.getSize(LayoutSolution._scratchV2)\n        size.normalize()\n        size.multiplyScalar(far * 2 * Math.tan(5 * MathUtils.DEG2RAD))\n        // size.multiplyScalar(Math.random() * sizeHint * 2)\n        this.bounds.setFromCenterAndSize(center, size)\n        // this.bounds.min.copy(center).sub(halfSize)\n        // this.bounds.max.copy(center).add(halfSize)\n        // this.bounds = this.bounds\n        return this\n    }\n\n    private static _direction = new Vector3\n    private static _center = new Vector3\n    private static _size = new Vector3\n    private static _otherCenter = new Vector3\n    private static _otherSize = new Vector3\n\n    moveTowards(solution:LayoutSolution, minFreq:number, maxFreq:number) {\n        const center = this.bounds.getCenter(LayoutSolution._center)\n        const size = this.bounds.getSize(LayoutSolution._size)\n        const otherBounds = solution.bounds\n        const otherCenter = otherBounds.getCenter(LayoutSolution._otherCenter)\n        const otherSize = otherBounds.getSize(LayoutSolution._otherSize)\n        this.orientation.slerp(solution.orientation, LayoutSolution.generatePulseFrequency(minFreq, maxFreq)).normalize()\n        if (Math.random() < 0.5) {\n            center.lerp(otherCenter, LayoutSolution.generatePulseFrequency(minFreq, maxFreq))\n            size.lerp(otherSize, LayoutSolution.generatePulseFrequency(minFreq, maxFreq))\n            this.bounds.setFromCenterAndSize(center, size)\n        } else {\n            this.bounds.min.lerp(otherBounds.min, LayoutSolution.generatePulseFrequency(minFreq, maxFreq))\n            this.bounds.max.lerp(otherBounds.max, LayoutSolution.generatePulseFrequency(minFreq, maxFreq))\n        }\n    }\n    \n    /**\n     *  \n     * @param stepSize \n     * \n     */\n    perturb() : typeof LayoutSolution.prototype.mutationStrategies[0] {\n        \n        const strategy = this._selectStrategy()\n        const strategyType = strategy.type\n        let stepSize = strategy.stepSize\n\n        // orientation mutation strategy\n        if (strategyType === 'rotate' || Math.random() < 0.001) {\n            const orientationSpec = this.layout.orientationConstraint?.spec as any\n            if (orientationSpec?.isQuaternion && \n                this.orientationPenalty < orientationSpec.computedAbsoluteTolerance && \n                Math.random() < 0.01) {\n                this.orientation.copy(orientationSpec)\n            } else {\n                const scale = Math.min(levy(Math.min(stepSize, 1)*0.0001), 1)\n                this.orientation.multiply(randomQuaternion(scale, scale)).normalize()\n            }\n        }\n\n        const bounds = this.bounds\n        const center = bounds.getCenter(LayoutSolution._center)\n        const size = bounds.getSize(LayoutSolution._size)\n\n        // center mutation strategies\n        if (strategyType === 'center')  {\n            const offset = LayoutSolution._direction.set(0,0,1).applyQuaternion(randomQuaternion(1,1))\n            offset.setLength(gaussian(stepSize)).multiplyScalar(size.length())\n            center.add(offset)\n        }\n\n        // size mutation strategies\n        if (strategyType === 'size') {\n            const scale = 2 ** gaussian(stepSize)\n            size.multiplyScalar(scale)\n        }\n\n        size.clampScalar(this.layout.adapter.system.epsillonMeters/10,1e20)\n        bounds.setFromCenterAndSize(center, size)\n\n\n        if (strategyType === 'minmax') {\n            const offset = LayoutSolution._direction.set(0,0,1).applyQuaternion(randomQuaternion(1,1))\n            offset.setLength(gaussian(stepSize)).multiply(size)\n            if (Math.random() < 0.5) {\n                bounds.min.add(offset)\n            } else {\n                bounds.min.add(offset)\n            }\n        }\n\n\n        // make sure size has no negative components, or else \n        // Box3 is unable to transition properly\n        // alternative fix: update Box3 to support negative size components\n        const min = bounds.min\n        const max = bounds.max\n        if (min.x > max.x) this._swap(min,max,'x')\n        if (min.y > max.y) this._swap(min,max,'y')\n        if (min.z > max.z) this._swap(min,max,'z')\n        \n        return strategy\n    }\n\n    private _swap(a:Vector3, b:Vector3, key:'x'|'y'|'z') {\n        const aValue = a[key]\n        const bValue = b[key]\n        a[key] = bValue\n        b[key] = aValue\n    }\n\n    static generatePulseFrequency(min:number,max:number) {\n        return min + Math.random() * (max - min)\n    }\n\n    apply(evaluate=true) {\n        const layout = this.layout\n        const adapter = layout.adapter\n        adapter.orientation.target = this.orientation\n        adapter.bounds.target = this.bounds\n        adapter.metrics.invalidateStates(false)\n        if (evaluate) {\n            this.isFeasible = true\n            for (let i=0; i < layout.objectives.length; i++) {\n                const o = layout.objectives[i]\n                const score = this.scores[i] = o.evaluate()\n                if (score < -o.computedAbsoluteTolerance || !isFinite(score)) \n                    this.isFeasible = false\n            }\n        }\n    }\n}","var DEFAULT_OVERSHOOT_STRENGTH = 1.525;\nvar reversed = function (easing) {\n    return function (p) {\n        return 1 - easing(1 - p);\n    };\n};\nvar mirrored = function (easing) {\n    return function (p) {\n        return p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n    };\n};\nvar createReversedEasing = reversed;\nvar createMirroredEasing = mirrored;\nvar createExpoIn = function (power) {\n    return function (p) {\n        return Math.pow(p, power);\n    };\n};\nvar createBackIn = function (power) {\n    return function (p) {\n        return p * p * ((power + 1) * p - power);\n    };\n};\nvar createAnticipateEasing = function (power) {\n    var backEasing = createBackIn(power);\n    return function (p) {\n        return (p *= 2) < 1 ? 0.5 * backEasing(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n    };\n};\nvar linear = function (p) {\n    return p;\n};\nvar easeIn = /*#__PURE__*/createExpoIn(2);\nvar easeOut = /*#__PURE__*/reversed(easeIn);\nvar easeInOut = /*#__PURE__*/mirrored(easeIn);\nvar circIn = function (p) {\n    return 1 - Math.sin(Math.acos(p));\n};\nvar circOut = /*#__PURE__*/reversed(circIn);\nvar circInOut = /*#__PURE__*/mirrored(circOut);\nvar backIn = /*#__PURE__*/createBackIn(DEFAULT_OVERSHOOT_STRENGTH);\nvar backOut = /*#__PURE__*/reversed(backIn);\nvar backInOut = /*#__PURE__*/mirrored(backIn);\nvar anticipate = /*#__PURE__*/createAnticipateEasing(DEFAULT_OVERSHOOT_STRENGTH);\nvar BOUNCE_FIRST_THRESHOLD = 4.0 / 11.0;\nvar BOUNCE_SECOND_THRESHOLD = 8.0 / 11.0;\nvar BOUNCE_THIRD_THRESHOLD = 9.0 / 10.0;\nvar ca = 4356.0 / 361.0;\nvar cb = 35442.0 / 1805.0;\nvar cc = 16061.0 / 1805.0;\nvar bounceOut = function (p) {\n    var p2 = p * p;\n    return p < BOUNCE_FIRST_THRESHOLD ? 7.5625 * p2 : p < BOUNCE_SECOND_THRESHOLD ? 9.075 * p2 - 9.9 * p + 3.4 : p < BOUNCE_THIRD_THRESHOLD ? ca * p2 - cb * p + cc : 10.8 * p * p - 20.52 * p + 10.72;\n};\nvar bounceIn = function (p) {\n    return 1.0 - bounceOut(1.0 - p);\n};\nvar bounceInOut = function (p) {\n    return p < 0.5 ? 0.5 * (1.0 - bounceOut(1.0 - p * 2.0)) : 0.5 * bounceOut(p * 2.0 - 1.0) + 0.5;\n};\nvar NEWTON_ITERATIONS = 8;\nvar NEWTON_MIN_SLOPE = 0.001;\nvar SUBDIVISION_PRECISION = 0.0000001;\nvar SUBDIVISION_MAX_ITERATIONS = 10;\nvar K_SPLINE_TABLE_SIZE = 11;\nvar K_SAMPLE_STEP_SIZE = 1.0 / (K_SPLINE_TABLE_SIZE - 1.0);\nvar FLOAT_32_SUPPORTED = typeof Float32Array !== 'undefined';\nvar a = function (a1, a2) {\n    return 1.0 - 3.0 * a2 + 3.0 * a1;\n};\nvar b = function (a1, a2) {\n    return 3.0 * a2 - 6.0 * a1;\n};\nvar c = function (a1) {\n    return 3.0 * a1;\n};\nvar getSlope = function (t, a1, a2) {\n    return 3.0 * a(a1, a2) * t * t + 2.0 * b(a1, a2) * t + c(a1);\n};\nvar calcBezier = function (t, a1, a2) {\n    return ((a(a1, a2) * t + b(a1, a2)) * t + c(a1)) * t;\n};\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    var sampleValues = FLOAT_32_SUPPORTED ? new Float32Array(K_SPLINE_TABLE_SIZE) : new Array(K_SPLINE_TABLE_SIZE);\n    var binarySubdivide = function (aX, aA, aB) {\n        var i = 0;\n        var currentX;\n        var currentT;\n        do {\n            currentT = aA + (aB - aA) / 2.0;\n            currentX = calcBezier(currentT, mX1, mX2) - aX;\n            if (currentX > 0.0) {\n                aB = currentT;\n            } else {\n                aA = currentT;\n            }\n        } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);\n        return currentT;\n    };\n    var newtonRaphsonIterate = function (aX, aGuessT) {\n        var i = 0;\n        var currentSlope = 0;\n        var currentX;\n        for (; i < NEWTON_ITERATIONS; ++i) {\n            currentSlope = getSlope(aGuessT, mX1, mX2);\n            if (currentSlope === 0.0) {\n                return aGuessT;\n            }\n            currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n            aGuessT -= currentX / currentSlope;\n        }\n        return aGuessT;\n    };\n    var calcSampleValues = function () {\n        for (var i = 0; i < K_SPLINE_TABLE_SIZE; ++i) {\n            sampleValues[i] = calcBezier(i * K_SAMPLE_STEP_SIZE, mX1, mX2);\n        }\n    };\n    var getTForX = function (aX) {\n        var intervalStart = 0.0;\n        var currentSample = 1;\n        var lastSample = K_SPLINE_TABLE_SIZE - 1;\n        var dist = 0.0;\n        var guessForT = 0.0;\n        var initialSlope = 0.0;\n        for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {\n            intervalStart += K_SAMPLE_STEP_SIZE;\n        }\n        --currentSample;\n        dist = (aX - sampleValues[currentSample]) / (sampleValues[currentSample + 1] - sampleValues[currentSample]);\n        guessForT = intervalStart + dist * K_SAMPLE_STEP_SIZE;\n        initialSlope = getSlope(guessForT, mX1, mX2);\n        if (initialSlope >= NEWTON_MIN_SLOPE) {\n            return newtonRaphsonIterate(aX, guessForT);\n        } else if (initialSlope === 0.0) {\n            return guessForT;\n        } else {\n            return binarySubdivide(aX, intervalStart, intervalStart + K_SAMPLE_STEP_SIZE);\n        }\n    };\n    calcSampleValues();\n    var resolver = function (aX) {\n        var returnValue;\n        if (mX1 === mY1 && mX2 === mY2) {\n            returnValue = aX;\n        } else if (aX === 0) {\n            returnValue = 0;\n        } else if (aX === 1) {\n            returnValue = 1;\n        } else {\n            returnValue = calcBezier(getTForX(aX), mY1, mY2);\n        }\n        return returnValue;\n    };\n    return resolver;\n}\n\nexport { reversed, mirrored, createReversedEasing, createMirroredEasing, createExpoIn, createBackIn, createAnticipateEasing, linear, easeIn, easeOut, easeInOut, circIn, circOut, circInOut, backIn, backOut, backInOut, anticipate, bounceOut, bounceIn, bounceInOut, cubicBezier };\n","\n// import { cached, tracked, TrackedArray } from './tracking'\nimport { \n    Vector2, \n    Vector3, \n    Quaternion, \n    Box3, \n    Color, \n    MathUtils, \n    V_00, \n    V_000, \n    Q_IDENTITY, \n    computeRelativeDifference,\n    MathType\n} from './math-utils'\nimport { EtherealLayoutSystem } from './EtherealLayoutSystem'\n\nimport * as easingImport from '@popmotion/easing'\n\n// becuase api-extractor complains about `import _ as _ from`,\n// we have to redeclare types here\nexport type Easing = (v: number) => number;\nexport type EasingModifier = (easing: Easing) => Easing;\nexport interface EasingModule {\n    reversed: EasingModifier;\n    mirrored: EasingModifier;\n    createReversedEasing: EasingModifier;\n    createMirroredEasing: EasingModifier;\n    createExpoIn: (power: number) => Easing;\n    createBackIn: (power: number) => Easing;\n    createAnticipateEasing: (power: number) => Easing;\n    linear: Easing;\n    easeIn: Easing;\n    easeOut: Easing;\n    easeInOut: Easing;\n    circIn: Easing;\n    circOut: Easing;\n    circInOut: Easing;\n    backIn: Easing;\n    backOut: Easing;\n    backInOut: Easing;\n    anticipate: Easing;\n    bounceOut: (p: number) => number;\n    bounceIn: (p: number) => number;\n    bounceInOut: (p: number) => number;\n    cubicBezier(mX1: number, mY1: number, mX2: number, mY2: number): (aX: number) => number;\n}\n\nexport const easing = easingImport as EasingModule\n\nexport type TransitionableType<T extends MathType> = T extends number ? number : T // widen number literal types\n\nexport class Transition<T extends MathType = MathType>{\n    constructor(options?:Partial<Transition>) {\n        options && Object.assign(this, options)\n    }\n    public target?: TransitionableType<T>\n    public duration?: number\n    public easing?: Easing\n    public blend?: boolean\n    public elapsed?: number\n}\n\nexport class TransitionConfig {\n    constructor(config?:TransitionConfig) {\n        config && Object.assign(this, config)\n    }\n    /**\n     * A multiplier to influence the speed of the transition\n     */\n    multiplier?: number\n    /**\n     * The duration of the easing function in seconds\n     */\n    duration?: number \n    /**\n     * The easing function \n     */\n    easing?: (alpha:number) => number\n    /**\n     * The relative difference required to \"stage\" a transition.\n     * \n     * A threshold of 0 means any difference will trigger a transition.\n     * \n     * A threshold of 0.1 can be interpreted as a relative difference of 10%. \n     */\n    threshold?: number\n    /**s\n     * The number of seconds the `target` must be maintained\n     * beyond the `threshold` to automatically \"stage\" a transition\n     */\n    delay?: number\n    /**\n     * The number of seconds to wait after a new \"commit\" is allowed\n     */\n    debounce?: number\n    /**\n     * The maximum number of seconds before the `stagedTarget`\n     * is committed\n     */\n    maxWait?: number\n    /**\n     * If true, blend transitions together\n     */\n    blend?: boolean\n}\n\nconst _scratchV2 = new Vector2\nconst _scratchV3 = new Vector3\nconst _scratchQ = new Quaternion\nconst _scratchBox = new Box3\nconst _scratchColor = new Color\nconst _blackColor = new Color(0,0,0)\n\nexport class Transitionable<T extends MathType = MathType> extends TransitionConfig {\n\n    constructor(\n        public system:EtherealLayoutSystem<any>, \n        startValue:MathType,\n        config?:TransitionConfig, \n        public parentConfig:TransitionConfig = system.transition)\n    {\n        super(config)\n        this.reset(startValue as TransitionableType<T>)\n        this._previousTarget = this._copy(this._previousTarget, this.target)\n    }\n\n    /** */\n    needsUpdate = false\n\n    private _copy(to?:TransitionableType<T>, from?:TransitionableType<T>) {\n        if (typeof from === 'undefined') return undefined\n        if (typeof from === 'number') return from\n        const result = to ? (to as any).copy(from) : (from as any).clone()\n        if (result && 'isBox3' in result) {\n            const resultBox = result as Box3\n            const resultSize = resultBox.getSize(this._size)\n            if (resultBox.isEmpty() ||\n                !isFinite(resultSize.x) ||\n                !isFinite(resultSize.y) ||\n                !isFinite(resultSize.z)) {\n                resultBox.setFromCenterAndSize(V_000, V_000)\n            }\n        }\n        return result\n    }\n    private _size = new Vector3\n\n    private _isEqual(a?:TransitionableType<T>, b?:TransitionableType<T>) {\n        if (a === undefined || b === undefined) return false\n        if (a === b) return true\n        if (typeof a === 'number') return a === b\n        return (a as any)?.equals(b) || false\n    }\n\n    /**\n     * Reset all states to the specified value, \n     * and remove all ongoing transitions\n     */\n    reset(v?:TransitionableType<T>) {\n        this._start = this._copy(this._start, v)\n        this._current = this._copy(this._current, v)\n        this._target = this._copy(this._target, v)\n        this.queue.length = 0\n    }\n\n    /**\n     * The starting value for currently ongoing transitions\n     */\n    set start(value:TransitionableType<T>) {\n        this._start = this._copy(this._start, value)\n    }\n    get start() {\n        return this._start\n    }\n    private _start! : TransitionableType<T>\n    \n    /**\n     * The current value. \n     */\n    set current(value:TransitionableType<T>) {\n        this._current = this._copy(this._current, value)\n    }\n    get current() {\n        return this._current\n    }\n    private _current!: TransitionableType<T>\n\n    /**\n     * The \"changed\" reference value\n     */\n    set reference(value:TransitionableType<T>|undefined) {\n        this._reference = this._copy(this._reference, value)\n    }\n    get reference() {\n        return this._reference\n    }\n    private _reference? : TransitionableType<T>\n\n    /**\n     * The target value. \n     */\n    set target(value:TransitionableType<T>) {\n        this.enabled = true\n        this._target = this._copy(this._target, value)\n    }\n    get target() {\n        return this._target\n    }\n    private _target!: TransitionableType<T>\n\n    \n    /**\n     * The queue of committed transitions that are still influencing the `current` value\n     * (whose durations have not yet been exceeded)\n     */\n    readonly queue: Required<Transition<T>>[] = []\n\n    /**\n     * If false, this transitionable is inert\n     */\n    enabled = false\n\n    /**\n     * At 0, a new transition has started\n     * Between 0 and 1 represents the transition progress\n     * At 1, no transitions are active\n     */\n    get progress() {\n        if (!this.enabled) return 1\n        \n        if (this.queue.length > 0) {\n            const t = this.queue[this.queue.length-1]\n            if (t.duration === 0) return 0\n            return t.elapsed / t.duration\n        }\n        \n        return 1\n    }\n\n    /** \n     * Force the next update to not commit the target value\n     **/\n    forceWait = false\n\n    /**\n     * Force the next update to commit the target value,\n     * or the specified transition.\n     * If forceCommit is set while forceWait is also set, \n     * forceWait takes precedence. \n     */\n    get forceCommit() {\n        return this._forceCommit\n    }\n    set forceCommit(val: boolean | Transition<T>) {\n        if (this._forceCommit === val) return\n        this._forceCommit = val\n    }\n    private _forceCommit = false as boolean | Transition<T>\n\n    /**\n     * The relative difference between the target and last committed value.\n     */\n    get relativeDifference() {\n        const lastTarget = this.queue[this.queue.length-1]?.target || this.start\n        return typeof this.target !== 'undefined' ? computeRelativeDifference(lastTarget, this.target) : 0\n    }\n\n    /**\n     * The relative difference between the target and reference value\n     */\n    get referenceRelativeDifference() {\n        return typeof this.reference !== 'undefined' && typeof this.target !== 'undefined' ? \n            computeRelativeDifference(this.reference, this.target) : Infinity\n    }\n\n    /**\n     * The transition config after accounting for adapter and system defaults\n     */\n    get resolvedConfig() {\n        const r = this._resolvedConfig\n        const adapterConfig = this.parentConfig\n        const systemConfig = this.system.transition\n        r.multiplier = this.multiplier ?? adapterConfig?.multiplier ?? systemConfig.multiplier\n        r.duration = this.duration ?? adapterConfig?.duration ?? systemConfig.duration\n        r.easing = this.easing ?? adapterConfig?.easing ?? systemConfig.easing\n        r.threshold = this.threshold ?? adapterConfig?.threshold ?? systemConfig.threshold\n        r.delay = this.delay ?? adapterConfig?.delay ?? systemConfig.delay\n        r.debounce = this.debounce ?? adapterConfig?.debounce ?? systemConfig.debounce\n        r.maxWait = this.maxWait ?? adapterConfig?.maxWait ?? systemConfig.maxWait\n        r.blend = this.blend ?? adapterConfig?.blend ?? systemConfig.blend\n        return r\n    }\n    private _resolvedConfig = new TransitionConfig as Required<TransitionConfig>\n\n\n    delayTime = 0\n    debounceTime = 0\n\n    // waitTime = 0\n\n    private _previousStatus: 'unchanged'|'changed'|'settling'|'committing' = 'unchanged'\n    get previousStatus() {\n        return this._previousStatus\n    }\n\n    /**\n     * Describes the status of the target value\n     * \n     * \"unchanged\" - the target value is unchanged relative to the last committed value\n     * \"changed\" - the target value has changed relative to the `reference` value or last committed value\n     * \"settling\" - the target value has changed, pending stabalization/timeout, or reversion to \"unchanged\" state\n     * \"committing\" - the target value will be accepted as a new transition targets\n     */\n    get status() {\n        if (this.needsUpdate) {\n            this._previousStatus = this._status\n            this._status = this._computeStatus()\n        }\n        return this._status\n    }\n    private _status : 'unchanged'|'changed'|'settling'|'committing' = 'unchanged'\n    private _computeStatus() : 'unchanged'|'changed'|'settling'|'committing' {\n\n        if (this.forceCommit) return 'committing'\n\n        const config = this.resolvedConfig\n        const threshold = config.threshold\n        const delta = this.system.deltaTime * config.multiplier\n        const delay = this.delayTime + delta\n        const debounce = this.debounceTime + delta\n        // const wait = this.waitTime + delta\n        const relDiff = this.relativeDifference\n        const changed = relDiff > threshold\n\n        if (!changed) return 'unchanged'\n\n        if (!this.forceWait && ((delay >= config.delay && debounce >= config.debounce) || delay >= config.maxWait)) {\n            return 'committing'\n        }\n\n        const refRelDiff = this.referenceRelativeDifference\n        const stable = refRelDiff < threshold\n\n        if (!stable) {\n            return 'changed'\n        }\n\n        return 'settling'\n    }\n\n    /**\n     * \n     */\n    private _updateTransitionable() {\n        const deltaTime  = this.system.deltaTime\n        const config = this.resolvedConfig\n        const queue = this.queue\n        const status = this.status\n        const delta = deltaTime * config.multiplier\n\n        // Finite Impulse Response Interruptable Transitions\n\n        while (queue.length && queue[0].elapsed >= queue[0].duration) {\n            this.start = queue.shift()!.target\n        }\n        \n        this.current = this.start\n        const current = this._current\n        let previousTarget = this.start\n        \n        for (let i=0; i < queue.length; i++) {\n            const transition = queue[i]\n            this._addTransitionToCurrent(current, previousTarget, transition, delta)\n            previousTarget = transition.target\n            if (!transition.blend) break\n        }\n\n        // Hysteresis-Aware Target Change Trigger\n\n        this.debounceTime += delta\n\n        switch (status) {\n            case 'settling': break\n            case 'changed': \n                this.delayTime += delta\n                this.reference = this.target\n                break\n            case 'unchanged': \n                this.reference = undefined\n                this.delayTime = 0\n                // if relative difference is greater than 0\n                // (and less then the change threshold),\n                // instantly update the last committed value to the \n                // current target\n                // if (this.relativeDifference > 0) {\n                //     if (this.queue.length > 0) {\n                //         const t = this.queue[this.queue.length-1]\n                //         t.target = this._copy(t.target, this.target)\n                //     } else {\n                //         this.start = this._copy(this.start, this.target)\n                //     }\n                // }\n                break\n            case 'committing': \n                this.delayTime = 0\n                this.debounceTime = 0\n                const transition = typeof this.forceCommit === 'object' ? \n                    this.forceCommit : new Transition<T>()\n                transition.target = transition.target ?? this._copy(undefined, this.target)\n                transition.duration = transition.duration ?? config.duration\n                transition.easing = transition.easing ?? config.easing\n                transition.blend = transition.blend ?? config.blend\n                transition.elapsed = transition.elapsed ?? 0\n                queue.push(transition as Required<Transition<T>>)\n                this.forceCommit = false\n                break\n        }\n        this.forceWait = false\n    }\n\n    private _addTransitionToCurrent(current:TransitionableType<T>, start:TransitionableType<T>, transition:Required<Transition<T>>, delta:number) {\n        const alpha = transition.duration > 0 ? transition.easing( Math.min(transition.elapsed / transition.duration, 1) ) : 1\n        const target = transition.target\n        transition.elapsed += delta\n\n        if (typeof target === 'number') {\n            this._current = current as number + MathUtils.lerp(target - (start as number), 0, 1-alpha) as any\n            return\n        } \n        \n        if ('isVector3' in target) {\n            const c = current as THREE.Vector3\n            const s = start as THREE.Vector3\n            const e = target as THREE.Vector3\n            const amount = _scratchV3.copy(e).sub(s).lerp(V_000, 1-alpha)\n            this._current = c.add(amount) as any\n            return\n        } \n        \n        if ('isVector2' in target) {\n            const c = current as THREE.Vector2\n            const s = start as THREE.Vector2\n            const e = target as THREE.Vector2\n            const amount = _scratchV2.copy(e).sub(s).lerp(V_00, 1-alpha)\n            this._current = c.add(amount) as any\n            return\n        } \n        \n        if ('isQuaternion' in target) {\n            const c = current as THREE.Quaternion\n            const s = start as THREE.Quaternion\n            const e = target as THREE.Quaternion\n            const amount = _scratchQ.copy(s).invert().multiply(e).slerp(Q_IDENTITY, 1-alpha)\n            this._current = c.multiply(amount).normalize() as any\n            return\n        } \n        \n        if ('isColor' in target) {\n            const c = current as THREE.Color\n            const s = start as THREE.Color\n            const e = target as THREE.Color\n            const amount = _scratchColor.copy(e).sub(s).lerp(_blackColor, 1-alpha)\n            this._current = c.add(amount) as any\n            return\n        } \n        \n        if ('isBox3' in target) {\n            const c = current as THREE.Box3\n            const s = start as THREE.Box3\n            const e = target as THREE.Box3\n            const minAmount = _scratchBox.min.copy(e.min).sub(s.min).lerp(V_000, 1-alpha)\n            const maxAmount = _scratchBox.max.copy(e.max).sub(s.max).lerp(V_000, 1-alpha)\n            c.min.add(minAmount)\n            c.max.add(maxAmount)\n            // if (c.isEmpty()) {\n            //     const min = c.min\n            //     const max = c.max\n            //     if (min.x > max.x) this._swap(min,max,'x')\n            //     if (min.y > max.y) this._swap(min,max,'y')\n            //     if (min.z > max.z) this._swap(min,max,'z')\n            // }\n            this._current = c as any\n            return\n        }\n    }\n\n    private _swap(a:Vector3, b:Vector3, key:'x'|'y'|'z') {\n        const aValue = a[key]\n        const bValue = b[key]\n        a[key] = bValue\n        b[key] = aValue\n    }\n\n    /**\n     * \n     */\n    update(force=false) {\n\n        if (!this.needsUpdate && !force) return\n\n        if (!this._isEqual(this._previousTarget, this.target)) {\n            this._target = this._target\n            this.enabled = true\n        }\n\n        this._previousTarget = this._copy(this._previousTarget, this.target)\n\n        if (!this.enabled) return\n\n        const syncGroup = this.syncGroup as Set<Transitionable>\n        if (!this.forceCommit && syncGroup) {\n            for (const t of syncGroup) {\n                if (t.enabled && t.status === 'committing') {\n                    for (const to of syncGroup) { \n                        if (to.needsUpdate && to.forceCommit === false) to.forceCommit = true \n                    }\n                    break\n                }\n            }\n        }\n\n        this._updateTransitionable()\n        this.needsUpdate = false\n    }\n    private _previousTarget! : TransitionableType<T>\n\n    set syncGroup(group:Set<any>|undefined) {\n        if (this._syncGroup) this._syncGroup.delete(this)\n        this._syncGroup = group\n        group?.add(this)\n    }\n    get syncGroup() {\n        return this._syncGroup\n    }\n    private _syncGroup?:Set<any>\n}","import { EtherealLayoutSystem, Node3D } from './EtherealLayoutSystem'\nimport { SpatialLayout } from './SpatialLayout'\nimport { BoundsMeasureType, BoundsMeasureSubType } from './SpatialObjective'\nimport { Transitionable, TransitionConfig } from './Transitionable'\nimport { Quaternion, Box3, Vector3, V_000, V_111, Q_IDENTITY } from './math-utils'\nimport { SpatialMetrics, NodeState } from './SpatialMetrics'\n\n/**\n * This class enables *spatially adaptive layout* for a single node in a scenegraph.\n * \n * This integrates several core capabilties:\n * \n *  - spatial metrics/query engine: performant reactive computation of various spatial metrics,\n *      enabling the straightforward specification of layout constraints and objectives\n * \n *  - spatial layout/optimization engine: a swarm metahueristics engine, enabling layout to be optimized \n *      based on configurable spatial/visual layout constraints/objectives\n * \n *  - spatial transition engine: a Finite Impulse Response transition engine w/ configurable hysteresis,\n *      enabling layout transitions that can be smoothly combined with various easings, \n *      and gauranteed to settle within their individual transition windows \n */\nexport class SpatialAdapter<N extends Node3D = Node3D> {\n\n    constructor(\n        /**\n         * The EtherealSystem instance\n         */\n        public system:EtherealLayoutSystem<N>,\n        /**\n         * The wrapped third-party scenegraph nodes\n         */\n        public node:N\n    ) {\n        this.metrics = this.system.getMetrics(this.node)\n        const raw = this.metrics.raw\n\n        this._orientation = new Transitionable(this.system, raw.localOrientation, undefined, this.transition)\n        this._bounds = new Transitionable(this.system, raw.spatialBounds, undefined, this.transition)\n        this._opacity = new Transitionable(this.system, raw.opacity, undefined, this.transition)\n        \n        this._outerOrigin = new Transitionable(this.system, raw.outerOrigin, undefined, this.transition)\n        this._outerOrientation = new Transitionable(this.system, raw.outerOrientation, undefined, this.transition)\n        this._outerBounds = new Transitionable(this.system, raw.outerBounds, undefined, this.transition)\n        this._outerVisualBounds = new Transitionable(this.system, raw.outerVisualBounds, undefined, this.transition)\n        \n        this._outerOrigin.debounce = 0\n        this._outerOrigin.delay = 0\n        this._outerOrientation.debounce = 0\n        this._outerOrientation.delay = 0\n        this._outerBounds.debounce = 0\n        this._outerBounds.delay = 0\n        this._outerVisualBounds.debounce = 0\n        this._outerVisualBounds.delay = 0\n\n        this._orientation.syncGroup = \n        this._bounds.syncGroup = \n        this._opacity.syncGroup =\n            new Set\n    }\n\n    measureBoundsCache = new Map<string, number>()\n\n    measureBounds(measure:string|number, type:BoundsMeasureType, subType:BoundsMeasureSubType) {\n        const system = this.system\n        const scope = system.mathScope\n        const math = system.math\n        const unit = (type === 'spatial' || \n                    subType === 'front' || \n                    subType === 'back' || \n                    subType === 'centerz' || \n                    subType === 'sizez') ? scope.meter : scope.pixel\n        const unitString = unit === scope.meter ? 'm' : 'px'\n\n        if (typeof measure === 'number') measure = '' + measure + unitString\n        const cacheKey = type + '-' + subType + ' = ' + measure\n        if (this.measureBoundsCache?.has(cacheKey)) return this.measureBoundsCache.get(cacheKey)!\n\n        if (!system.mathCompiledExpressions.has(measure)) {\n            const node = math.parse(measure.replace('%', 'percent'))\n            const code = node.compile()\n            system.mathCompiledExpressions.set(measure, code)\n        }\n        const code = system.mathCompiledExpressions.get(measure)!\n        \n        const viewState = system.viewMetrics.target\n        const state = this.metrics.target\n        let referenceBounds : Box3\n        let referenceCenter: Vector3\n        switch (type) {\n            case 'spatial': \n                referenceBounds = state.outerBounds\n                referenceCenter = state.outerCenter\n                break\n            case 'visual': \n                referenceBounds = state.outerVisualBounds\n                referenceCenter = state.outerVisualCenter\n                break\n            case 'view': \n                referenceBounds = viewState.visualBounds\n                referenceCenter = viewState.visualCenter\n                break\n            default: \n                throw new Error(`Unknown measure type \"${type}.${subType}\"`)\n        }\n\n        if (measure.includes('%')) {\n            const outerSize = type === 'spatial' ? state.outerSize : \n                (state.outerVisualSize ?? viewState.visualSize)\n            let percent = 0 as number|math.Unit\n            switch (subType) {\n                case 'left': case 'centerx': case 'right': case 'sizex':\n                    percent = math.unit(outerSize.x / 100, unitString)\n                    break\n                case 'bottom': case 'centery': case 'top': case 'sizey':\n                    percent = math.unit(outerSize.y / 100, unitString)\n                    break\n                case 'back': case 'centerz': case 'front': case 'sizez':\n                    percent = math.unit(outerSize.z / 100, 'm')\n                    break\n                case 'sizediagonal': \n                    percent = type === 'spatial' ? \n                        math.unit(outerSize.length() / 100, 'm') : \n                        math.unit(Math.sqrt(outerSize.x ** 2 + outerSize.y ** 2) / 100, 'px')\n                    break\n                default:\n                    throw new Error(`Invalid measure subtype \"${type}.${subType}\" for percentage units`)\n            }\n            scope.percent = percent\n        }\n\n        let value:number\n        switch (subType) {\n            case 'left': value = referenceBounds.min.x; break;\n            case 'centerx': value = referenceCenter.x; break;\n            case 'right': value = referenceBounds.max.x; break;\n            case 'bottom': value = referenceBounds.min.y; break;\n            case 'centery': value = referenceCenter.y; break;\n            case 'top': value = referenceBounds.max.y; break;\n            case 'front': value = referenceBounds.max.z; break;\n            case 'centerz': value = referenceCenter.z; break;\n            case 'back': value = referenceBounds.min.z; break;\n            case 'centerdistance':\n            default: value = 0\n        }\n        \n        let result = code.evaluate(scope)\n        if (typeof result === 'object') result = math.number(result, unit) \n        value += result\n\n        scope.percent = undefined\n        this.measureBoundsCache?.set(cacheKey, value)\n\n        return value\n    }\n\n    /**\n     * \n     */\n    readonly metrics : SpatialMetrics<N>\n    \n    /**\n     * Transition overrides for this node\n     */\n    readonly transition = new TransitionConfig\n\n    /**\n     * The reference node. If a layout is assigned, it's reference frame takes precedence.\n     * \n     * If `undefined`, reference is the current parent.\n     * \n     * if `null`, this node is considered as flagged to be removed.\n     */\n    referenceNode = undefined as N|null|undefined\n\n    /**\n     * \n     */\n    get outerOrigin() {\n        return this._outerOrigin\n    }\n    private _outerOrigin : Transitionable<Vector3>\n\n    /**\n     * \n     */\n    get outerOrientation() {\n        return this._outerOrientation\n    }\n    private _outerOrientation : Transitionable<Quaternion>\n\n    /**\n     * \n     */\n    get outerBounds() {\n        return this._outerBounds\n    }\n    private _outerBounds : Transitionable<Box3>\n    \n    /**\n     * \n     */\n    get outerVisualBounds() {\n        return this._outerVisualBounds\n    }\n    private _outerVisualBounds : Transitionable<Box3>\n    \n\n    /**\n     * The closest ancestor adapter\n     */\n    get parentAdapter() { return this._parentAdapter }\n    private _parentAdapter:SpatialAdapter<N>|null = null\n    private _computeParentAdapter() {\n        let nodeMetrics : SpatialMetrics<N>|null = this.metrics\n        while (nodeMetrics = nodeMetrics.parentMetrics) {\n            const adapter = this.system.nodeAdapters.get(nodeMetrics.node)\n            if (adapter) return adapter\n        }\n        return null\n    }\n\n    /**\n     * Transitionable orientation                                                                          \n     */\n    get orientation() {\n        return this._orientation\n    } \n    private _orientation : Transitionable<Quaternion>\n    \n    /**\n     * Transitionable spatial bounds\n     */\n    get bounds() {\n        return this._bounds\n    } \n    private _bounds : Transitionable<Box3>\n\n    /**\n     * Transitionable opacity\n     */\n    get opacity() {\n        return this._opacity\n    } \n    private _opacity : Transitionable<number>\n\n    /**\n     * List of presentable layout variants. If non-empty, the target \n     * orientation, bounds, and opacity will be automatically updated.\n     */\n    layouts = new Array<SpatialLayout>()\n\n    /**\n     * Time spent since feasible layout solution was found\n     */\n    layoutFeasibleTime = 0\n\n    /**\n     * Time spent since last feasible layout solution was found\n     */\n    layoutInfeasibleTime = 0\n\n    get previousLayout() {\n        return this._prevLayout\n    }\n    private _prevLayout = null as SpatialLayout|null\n\n    set activeLayout(val:SpatialLayout|null) {\n        this._prevLayout = this._activeLayout\n        this._activeLayout = val\n    }\n    get activeLayout() {\n        return this._activeLayout\n    }\n    private _activeLayout = null as SpatialLayout|null\n\n    /**\n     * At 0, a new transition has started\n     * Between 0 and 1 represents the transition progress\n     * At 1, no transitions are active\n     */\n    get progress() {\n        return this._progress\n    }\n    private _progress = 1\n\n    private _computeProgress() {\n        return Math.min(\n            this.orientation.progress, \n            this.bounds.progress, \n            this.opacity.progress\n        )\n    }\n\n    /**\n     * Add a layout with an associated behavior.\n     */\n    createLayout() : SpatialLayout {\n        const layout = new SpatialLayout(this)\n        this.layouts.push(layout)\n        return layout\n    }\n\n    get hasValidContext() {\n        return this._hasValidContext\n    }\n    private _hasValidContext = false\n\n    onUpdate? : () => void\n\n    onPostUpdate? : () => void\n\n    private _prevNodeOrientation = new Quaternion\n    private _prevNodeBounds = new Box3\n\n    _computeHasValidContext() {\n        const pAdapter = this.parentAdapter\n        if (!pAdapter) return true\n        if (!pAdapter.hasValidContext) return false\n        if (pAdapter.layouts.length === 0) return true\n        if (pAdapter.activeLayout?.hasValidSolution) return true\n        return false\n    }\n\n    _update() {\n        this._parentAdapter = this._computeParentAdapter()\n        this._hasValidContext = this._computeHasValidContext()\n\n        // allow outer bounds to be animated whenever the\n        // reference frame or spatial frame changes\n        const metrics = this.metrics\n        if (metrics.referenceMetrics) {\n            this.outerOrigin.target.copy(metrics.referenceMetrics.target.worldCenter)\n            this.outerOrientation.target.copy(metrics.referenceMetrics.target.worldOrientation)\n            this.outerBounds.target.copy(metrics.referenceMetrics.innerBounds)\n            this.outerBounds.target.applyMatrix4(metrics.target.spatialFromReference)\n            this.outerVisualBounds.target.copy(metrics.referenceMetrics.target.visualBounds)\n        }\n        this.outerOrigin.update()\n        this.outerOrientation.update()\n        this.outerBounds.update()\n        this.outerVisualBounds.update()\n\n        if (this.onUpdate) {       \n            // let nodeState = metrics.raw\n            // const previousNodeParent = nodeState.parent\n            // const previousNodeOrientation = this._prevNodeOrientation.copy(nodeState.localOrientation)\n            // const previousNodeBounds = this._prevNodeBounds.copy(nodeState.spatialBounds)\n            this.onUpdate()\n            metrics.invalidateIntrinsicBounds()\n            metrics.invalidateInnerBounds()\n            metrics.invalidateStates()\n            const rawState = metrics.raw // recompute\n            if (!this.system.optimizer.update(this)) { // no layouts?\n                const targetOrientation = this.orientation.target // metrics.target.localOrientation\n                const orientation = rawState.localOrientation\n                if (targetOrientation.angleTo(orientation) > this.system.epsillonRadians) {\n                    this.orientation.target = orientation\n                }\n                const targetBounds = this.bounds.target // metrics.target.spatialBounds\n                const bounds = rawState.spatialBounds\n                if (targetBounds.min.distanceTo(bounds.min) > this.system.epsillonMeters ||\n                    targetBounds.max.distanceTo(bounds.max) > this.system.epsillonMeters) {\n                    this.bounds.target = bounds\n                }\n            }\n        } else {\n            metrics.invalidateIntrinsicBounds()\n            metrics.invalidateInnerBounds()\n            metrics.invalidateStates()\n            this.system.optimizer.update(this)\n        }\n\n        this.opacity.update()\n        this.orientation.update()\n        this.bounds.update()\n        this._progress = this._computeProgress()\n\n        metrics.invalidateStates()\n        this.system.bindings.apply(metrics, metrics.current)\n        metrics.invalidateStates()\n        this.onPostUpdate?.()\n    }\n\n}","// import {tracked, cached} from './tracking'\nimport { MathUtils, Vector2, Vector3, Matrix4, Box3, Box2 } from './math-utils'\nimport { MemoizationCache } from './MemoizationCache'\n\nexport class LayoutFrustum {\n\n    private _cache = new MemoizationCache()\n\n    isLayoutFrustum = true\n\n    get leftDegrees() {\n        return this._leftDegrees\n    }\n    set leftDegrees(val:number) {\n        if (val !== this._leftDegrees) {\n            this._leftDegrees = val\n            this._cache.invalidateAll()\n        }\n    }\n    private _leftDegrees = -20\n\n    get rightDegrees() {\n        return this._rightDegrees\n    }\n    set rightDegrees(val:number) {\n        if (val !== this._rightDegrees) {\n            this._rightDegrees = val\n            this._cache.invalidateAll()\n        }\n    }\n    private _rightDegrees = 20\n\n    get bottomDegrees() {\n        return this._bottomDegrees\n    }\n    set bottomDegrees(val:number) {\n        if (val !== this._bottomDegrees) {\n            this._bottomDegrees = val\n            this._cache.invalidateAll()\n        }\n    }\n    private _bottomDegrees = -20\n\n    get topDegrees() {\n        return this._topDegrees\n    }\n    set topDegrees(val:number) {\n        if (val !== this._topDegrees) {\n            this._topDegrees = val\n            this._cache.invalidateAll()\n        }\n    }\n    private _topDegrees = 20\n\n    get nearMeters() {\n        return this._nearMeters\n    }\n    set nearMeters(val:number) {\n        if (val !== this._nearMeters) {\n            this._nearMeters = val\n            this._cache.invalidateAll()\n        }\n    }\n    private _nearMeters = 0.5\n\n    get farMeters() {\n        return this._farMeters\n    }\n    set farMeters(val:number) {\n        if (val !== this._farMeters) {\n            this._farMeters = val\n            this._cache.invalidateAll()\n        }\n    }\n    private _farMeters = 1000\n\n\n    // get leftMeters() {\n    //     return this.nearMeters * Math.abs ( Math.tan (this.leftDegrees * MathUtils.DEG2RAD) )\n    // }\n\n    // /**\n    //  * The \n    //  */\n    // get rightMeters() {\n    //     return this.nearMeters * Math.abs ( Math.tan (this.rightDegrees * MathUtils.DEG2RAD) )\n    // }\n\n    // get bottomMeters() {\n    //     return this.nearMeters * Math.abs ( Math.tan (this.bottomDegrees * MathUtils.DEG2RAD) )\n    // }\n\n    // get topMeters() {\n    //     return this.nearMeters * Math.abs ( Math.tan (this.topDegrees * MathUtils.DEG2RAD) )\n    // }\n\n    get sizeDegrees() {\n        this._size.set( \n            this.rightDegrees - this.leftDegrees, \n            this.topDegrees - this.bottomDegrees\n        )\n        return this._size\n    }\n    private _size = new Vector2\n\n    /**\n     * The diagonal size\n     */\n    get diagonalDegrees() {\n        const size = this.sizeDegrees\n        // pythagoras on sphere\n        return Math.acos( \n            Math.cos( size.x * MathUtils.DEG2RAD ) * \n            Math.cos( size.y * MathUtils.DEG2RAD )\n        ) * MathUtils.RAD2DEG\n    }\n\n\n    /**\n     * The center position \n     */\n    get centerDegrees() {\n        const size = this.sizeDegrees\n        return this._center.set( \n            this.leftDegrees + ( size.x / 2 ), \n            this.bottomDegrees + ( size.y / 2 )\n        )\n    }\n    private _center = new Vector2\n    \n    /**\n     * Angular distance to the frustum center\n     * (origin is the forward viewing direction). \n     * If greater than 90, the frustum is positioned\n     * behind the viewer\n     */\n    get angleToCenter() {\n        // pythagoras on sphere\n        const position = this.centerDegrees\n        return Math.acos( \n            Math.cos( position.x * MathUtils.DEG2RAD ) * \n            Math.cos( position.y * MathUtils.DEG2RAD )\n        ) * MathUtils.RAD2DEG\n    }\n\n    get angleToTopLeft() {\n        return Math.acos( \n            Math.cos( this.leftDegrees * MathUtils.DEG2RAD ) * \n            Math.cos( this.topDegrees * MathUtils.DEG2RAD )\n        ) * MathUtils.RAD2DEG\n    }\n\n    get angleToTopRight() {\n        return Math.acos( \n            Math.cos( this.rightDegrees * MathUtils.DEG2RAD ) * \n            Math.cos( this.topDegrees * MathUtils.DEG2RAD )\n        ) * MathUtils.RAD2DEG\n    }\n\n    get angleToBottomLeft() {\n        return Math.acos( \n            Math.cos( this.leftDegrees * MathUtils.DEG2RAD ) * \n            Math.cos( this.bottomDegrees * MathUtils.DEG2RAD )\n        ) * MathUtils.RAD2DEG\n    }\n\n    get angleToBottomRight() {\n        return Math.acos( \n            Math.cos( this.rightDegrees * MathUtils.DEG2RAD ) * \n            Math.cos( this.bottomDegrees * MathUtils.DEG2RAD )\n        ) * MathUtils.RAD2DEG\n    }\n\n    get angleToClosestPoint() {\n        const clampedX = Math.min(Math.max(0, this.leftDegrees), this.rightDegrees)\n        const clampedY = Math.min(Math.max(0, this.bottomDegrees), this.topDegrees)\n        return Math.acos( \n            Math.cos( clampedX * MathUtils.DEG2RAD ) * \n            Math.cos( clampedY * MathUtils.DEG2RAD )\n        ) * MathUtils.RAD2DEG\n    }\n    \n    get angleToFarthestPoint() {\n        return Math.max(\n            this.angleToTopLeft, \n            this.angleToTopRight,\n            this.angleToBottomLeft,\n            this.angleToBottomRight\n        )\n    }\n\n    /**\n     * Linear depth (meters)\n     */\n    get depth() {\n        return this.farMeters - this.nearMeters \n    }\n\n    /**\n     * Linear distance (meters) to the frustum center \n     * (origin is the viewer position).\n     */\n    get distance() {\n        return this.nearMeters + (this.depth / 2)\n    }\n\n\n\n    get aspectRatio() {\n        const near = this.nearMeters\n        const left = near * Math.tan(this.leftDegrees * MathUtils.DEG2RAD)\n        const right = near * Math.tan(this.rightDegrees * MathUtils.DEG2RAD)\n        const top = near * Math.tan(this.topDegrees * MathUtils.DEG2RAD)\n        const bottom = near * Math.tan(this.bottomDegrees * MathUtils.DEG2RAD)\n        return (top - bottom) / (right - left)\n    }\n\n    private _v1 = new Vector3\n    private _inverseProjection = new Matrix4\n    private _forwardDirection = new Vector3(0,0,-1)\n    private _fullNDC = new Box3(new Vector3(-1,-1,-1), new Vector3(1,1,1))\n    \n    setFromPerspectiveProjectionMatrix(projectionMatrix: Matrix4, ndcBounds:Box3=this._fullNDC) {\n        const inverseProjection = this._inverseProjection.copy(projectionMatrix).invert()\n        const v = this._v1\n        const forward = this._forwardDirection\n        const leftDegrees   = Math.sign(ndcBounds.min.x) * v.set(ndcBounds.min.x,0,-1).applyMatrix4(inverseProjection).angleTo(forward) * MathUtils.RAD2DEG\n        const rightDegrees  = Math.sign(ndcBounds.max.x) * v.set(ndcBounds.max.x,0,-1).applyMatrix4(inverseProjection).angleTo(forward) * MathUtils.RAD2DEG\n        const topDegrees    = Math.sign(ndcBounds.max.y) * v.set(0,ndcBounds.max.y,-1).applyMatrix4(inverseProjection).angleTo(forward) * MathUtils.RAD2DEG\n        const bottomDegrees = Math.sign(ndcBounds.min.y) * v.set(0,ndcBounds.min.y,-1).applyMatrix4(inverseProjection).angleTo(forward) * MathUtils.RAD2DEG\n        const nearMeters = -v.set(0,0,ndcBounds.min.z).applyMatrix4(inverseProjection).z\n        const farMeters = -v.set(0,0,ndcBounds.max.z).applyMatrix4(inverseProjection).z\n        this.leftDegrees = leftDegrees\n        this.rightDegrees = rightDegrees\n        this.topDegrees = topDegrees\n        this.bottomDegrees = bottomDegrees\n        this.nearMeters = nearMeters\n        this.farMeters = farMeters\n        return this\n    }\n\n    get perspectiveProjectionMatrix() {\n        return this._cachedPerspectiveProjectionMatrix()\n    }\n    private _cachedPerspectiveProjectionMatrix = this._cache.memoize(() => {\n        const near = this.nearMeters\n        const far = this.farMeters\n        const left = near * Math.tan(this.leftDegrees * MathUtils.DEG2RAD)\n        const right = near * Math.tan(this.rightDegrees * MathUtils.DEG2RAD)\n        const top = near * Math.tan(this.topDegrees * MathUtils.DEG2RAD)\n        const bottom = near * Math.tan(this.bottomDegrees * MathUtils.DEG2RAD)\n        return this._perspective.makePerspective(\n            left, right,\n            top, bottom,\n            near, far\n        )\n    })\n    private _perspective = new Matrix4\n\n    overlapPercent(f:LayoutFrustum) {\n        this._boxA.min.x = this.leftDegrees\n        this._boxA.max.x = this.rightDegrees\n        this._boxA.min.y = this.bottomDegrees\n        this._boxA.max.y = this.topDegrees\n        this._boxB.min.x = f.leftDegrees\n        this._boxB.max.x = f.rightDegrees\n        this._boxB.min.y = f.bottomDegrees\n        this._boxB.max.y = f.topDegrees\n        const size = this._boxA.intersect(this._boxB).getSize(this._overlapSize)\n        return size.length() / this.sizeDegrees.length()\n    }\n    private _boxA = new Box2\n    private _boxB = new Box2\n    private _overlapSize = new Vector2\n}","export var DEFAULT_CONFIG = {\n  // minimum relative difference between two compared values,\n  // used by all comparison functions\n  epsilon: 1e-12,\n  // type of default matrix output. Choose 'matrix' (default) or 'array'\n  matrix: 'Matrix',\n  // type of default number output. Choose 'number' (default) 'BigNumber', or 'Fraction\n  number: 'number',\n  // number of significant digits in BigNumbers\n  precision: 64,\n  // predictable output type of functions. When true, output type depends only\n  // on the input types. When false (default), output type can vary depending\n  // on input values. For example `math.sqrt(-4)` returns `complex('2i')` when\n  // predictable is false, and returns `NaN` when true.\n  predictable: false,\n  // random seed for seeded pseudo random number generation\n  // null = randomly seed\n  randomSeed: null\n};","// type checks for all known types\n//\n// note that:\n//\n// - check by duck-typing on a property like `isUnit`, instead of checking instanceof.\n//   instanceof cannot be used because that would not allow to pass data from\n//   one instance of math.js to another since each has it's own instance of Unit.\n// - check the `isUnit` property via the constructor, so there will be no\n//   matches for \"fake\" instances like plain objects with a property `isUnit`.\n//   That is important for security reasons.\n// - It must not be possible to override the type checks used internally,\n//   for security reasons, so these functions are not exposed in the expression\n//   parser.\nexport function isNumber(x) {\n  return typeof x === 'number';\n}\nexport function isBigNumber(x) {\n  return x && x.constructor.prototype.isBigNumber === true || false;\n}\nexport function isComplex(x) {\n  return x && typeof x === 'object' && Object.getPrototypeOf(x).isComplex === true || false;\n}\nexport function isFraction(x) {\n  return x && typeof x === 'object' && Object.getPrototypeOf(x).isFraction === true || false;\n}\nexport function isUnit(x) {\n  return x && x.constructor.prototype.isUnit === true || false;\n}\nexport function isString(x) {\n  return typeof x === 'string';\n}\nexport var isArray = Array.isArray;\nexport function isMatrix(x) {\n  return x && x.constructor.prototype.isMatrix === true || false;\n}\n/**\n * Test whether a value is a collection: an Array or Matrix\n * @param {*} x\n * @returns {boolean} isCollection\n */\n\nexport function isCollection(x) {\n  return Array.isArray(x) || isMatrix(x);\n}\nexport function isDenseMatrix(x) {\n  return x && x.isDenseMatrix && x.constructor.prototype.isMatrix === true || false;\n}\nexport function isSparseMatrix(x) {\n  return x && x.isSparseMatrix && x.constructor.prototype.isMatrix === true || false;\n}\nexport function isRange(x) {\n  return x && x.constructor.prototype.isRange === true || false;\n}\nexport function isIndex(x) {\n  return x && x.constructor.prototype.isIndex === true || false;\n}\nexport function isBoolean(x) {\n  return typeof x === 'boolean';\n}\nexport function isResultSet(x) {\n  return x && x.constructor.prototype.isResultSet === true || false;\n}\nexport function isHelp(x) {\n  return x && x.constructor.prototype.isHelp === true || false;\n}\nexport function isFunction(x) {\n  return typeof x === 'function';\n}\nexport function isDate(x) {\n  return x instanceof Date;\n}\nexport function isRegExp(x) {\n  return x instanceof RegExp;\n}\nexport function isObject(x) {\n  return !!(x && typeof x === 'object' && x.constructor === Object && !isComplex(x) && !isFraction(x));\n}\nexport function isNull(x) {\n  return x === null;\n}\nexport function isUndefined(x) {\n  return x === undefined;\n}\nexport function isAccessorNode(x) {\n  return x && x.isAccessorNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isArrayNode(x) {\n  return x && x.isArrayNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isAssignmentNode(x) {\n  return x && x.isAssignmentNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isBlockNode(x) {\n  return x && x.isBlockNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isConditionalNode(x) {\n  return x && x.isConditionalNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isConstantNode(x) {\n  return x && x.isConstantNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isFunctionAssignmentNode(x) {\n  return x && x.isFunctionAssignmentNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isFunctionNode(x) {\n  return x && x.isFunctionNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isIndexNode(x) {\n  return x && x.isIndexNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isNode(x) {\n  return x && x.isNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isObjectNode(x) {\n  return x && x.isObjectNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isOperatorNode(x) {\n  return x && x.isOperatorNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isParenthesisNode(x) {\n  return x && x.isParenthesisNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isRangeNode(x) {\n  return x && x.isRangeNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isSymbolNode(x) {\n  return x && x.isSymbolNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isChain(x) {\n  return x && x.constructor.prototype.isChain === true || false;\n}\nexport function typeOf(x) {\n  var t = typeof x;\n\n  if (t === 'object') {\n    // JavaScript types\n    if (x === null) return 'null';\n    if (Array.isArray(x)) return 'Array';\n    if (x instanceof Date) return 'Date';\n    if (x instanceof RegExp) return 'RegExp'; // math.js types\n\n    if (isBigNumber(x)) return 'BigNumber';\n    if (isComplex(x)) return 'Complex';\n    if (isFraction(x)) return 'Fraction';\n    if (isMatrix(x)) return 'Matrix';\n    if (isUnit(x)) return 'Unit';\n    if (isIndex(x)) return 'Index';\n    if (isRange(x)) return 'Range';\n    if (isResultSet(x)) return 'ResultSet';\n    if (isNode(x)) return x.type;\n    if (isChain(x)) return 'Chain';\n    if (isHelp(x)) return 'Help';\n    return 'Object';\n  }\n\n  if (t === 'function') return 'Function';\n  return t; // can be 'string', 'number', 'boolean', ...\n}","import { isBigNumber } from './is.js';\n/**\n * Clone an object\n *\n *     clone(x)\n *\n * Can clone any primitive type, array, and object.\n * If x has a function clone, this function will be invoked to clone the object.\n *\n * @param {*} x\n * @return {*} clone\n */\n\nexport function clone(x) {\n  var type = typeof x; // immutable primitive types\n\n  if (type === 'number' || type === 'string' || type === 'boolean' || x === null || x === undefined) {\n    return x;\n  } // use clone function of the object when available\n\n\n  if (typeof x.clone === 'function') {\n    return x.clone();\n  } // array\n\n\n  if (Array.isArray(x)) {\n    return x.map(function (value) {\n      return clone(value);\n    });\n  }\n\n  if (x instanceof Date) return new Date(x.valueOf());\n  if (isBigNumber(x)) return x; // bignumbers are immutable\n\n  if (x instanceof RegExp) throw new TypeError('Cannot clone ' + x); // TODO: clone a RegExp\n  // object\n\n  return mapObject(x, clone);\n}\n/**\n * Apply map to all properties of an object\n * @param {Object} object\n * @param {function} callback\n * @return {Object} Returns a copy of the object with mapped properties\n */\n\nexport function mapObject(object, callback) {\n  var clone = {};\n\n  for (var key in object) {\n    if (hasOwnProperty(object, key)) {\n      clone[key] = callback(object[key]);\n    }\n  }\n\n  return clone;\n}\n/**\n * Extend object a with the properties of object b\n * @param {Object} a\n * @param {Object} b\n * @return {Object} a\n */\n\nexport function extend(a, b) {\n  for (var prop in b) {\n    if (hasOwnProperty(b, prop)) {\n      a[prop] = b[prop];\n    }\n  }\n\n  return a;\n}\n/**\n * Deep extend an object a with the properties of object b\n * @param {Object} a\n * @param {Object} b\n * @returns {Object}\n */\n\nexport function deepExtend(a, b) {\n  // TODO: add support for Arrays to deepExtend\n  if (Array.isArray(b)) {\n    throw new TypeError('Arrays are not supported by deepExtend');\n  }\n\n  for (var prop in b) {\n    // We check against prop not being in Object.prototype or Function.prototype\n    // to prevent polluting for example Object.__proto__.\n    if (hasOwnProperty(b, prop) && !(prop in Object.prototype) && !(prop in Function.prototype)) {\n      if (b[prop] && b[prop].constructor === Object) {\n        if (a[prop] === undefined) {\n          a[prop] = {};\n        }\n\n        if (a[prop] && a[prop].constructor === Object) {\n          deepExtend(a[prop], b[prop]);\n        } else {\n          a[prop] = b[prop];\n        }\n      } else if (Array.isArray(b[prop])) {\n        throw new TypeError('Arrays are not supported by deepExtend');\n      } else {\n        a[prop] = b[prop];\n      }\n    }\n  }\n\n  return a;\n}\n/**\n * Deep test equality of all fields in two pairs of arrays or objects.\n * Compares values and functions strictly (ie. 2 is not the same as '2').\n * @param {Array | Object} a\n * @param {Array | Object} b\n * @returns {boolean}\n */\n\nexport function deepStrictEqual(a, b) {\n  var prop, i, len;\n\n  if (Array.isArray(a)) {\n    if (!Array.isArray(b)) {\n      return false;\n    }\n\n    if (a.length !== b.length) {\n      return false;\n    }\n\n    for (i = 0, len = a.length; i < len; i++) {\n      if (!deepStrictEqual(a[i], b[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  } else if (typeof a === 'function') {\n    return a === b;\n  } else if (a instanceof Object) {\n    if (Array.isArray(b) || !(b instanceof Object)) {\n      return false;\n    }\n\n    for (prop in a) {\n      // noinspection JSUnfilteredForInLoop\n      if (!(prop in b) || !deepStrictEqual(a[prop], b[prop])) {\n        return false;\n      }\n    }\n\n    for (prop in b) {\n      // noinspection JSUnfilteredForInLoop\n      if (!(prop in a) || !deepStrictEqual(a[prop], b[prop])) {\n        return false;\n      }\n    }\n\n    return true;\n  } else {\n    return a === b;\n  }\n}\n/**\n * Recursively flatten a nested object.\n * @param {Object} nestedObject\n * @return {Object} Returns the flattened object\n */\n\nexport function deepFlatten(nestedObject) {\n  var flattenedObject = {};\n\n  _deepFlatten(nestedObject, flattenedObject);\n\n  return flattenedObject;\n} // helper function used by deepFlatten\n\nfunction _deepFlatten(nestedObject, flattenedObject) {\n  for (var prop in nestedObject) {\n    if (hasOwnProperty(nestedObject, prop)) {\n      var value = nestedObject[prop];\n\n      if (typeof value === 'object' && value !== null) {\n        _deepFlatten(value, flattenedObject);\n      } else {\n        flattenedObject[prop] = value;\n      }\n    }\n  }\n}\n/**\n * Test whether the current JavaScript engine supports Object.defineProperty\n * @returns {boolean} returns true if supported\n */\n\n\nexport function canDefineProperty() {\n  // test needed for broken IE8 implementation\n  try {\n    if (Object.defineProperty) {\n      Object.defineProperty({}, 'x', {\n        get: function get() {}\n      });\n      return true;\n    }\n  } catch (e) {}\n\n  return false;\n}\n/**\n * Attach a lazy loading property to a constant.\n * The given function `fn` is called once when the property is first requested.\n *\n * @param {Object} object         Object where to add the property\n * @param {string} prop           Property name\n * @param {Function} valueResolver Function returning the property value. Called\n *                                without arguments.\n */\n\nexport function lazy(object, prop, valueResolver) {\n  var _uninitialized = true;\n\n  var _value;\n\n  Object.defineProperty(object, prop, {\n    get: function get() {\n      if (_uninitialized) {\n        _value = valueResolver();\n        _uninitialized = false;\n      }\n\n      return _value;\n    },\n    set: function set(value) {\n      _value = value;\n      _uninitialized = false;\n    },\n    configurable: true,\n    enumerable: true\n  });\n}\n/**\n * Traverse a path into an object.\n * When a namespace is missing, it will be created\n * @param {Object} object\n * @param {string | string[]} path   A dot separated string like 'name.space'\n * @return {Object} Returns the object at the end of the path\n */\n\nexport function traverse(object, path) {\n  if (path && typeof path === 'string') {\n    return traverse(object, path.split('.'));\n  }\n\n  var obj = object;\n\n  if (path) {\n    for (var i = 0; i < path.length; i++) {\n      var key = path[i];\n\n      if (!(key in obj)) {\n        obj[key] = {};\n      }\n\n      obj = obj[key];\n    }\n  }\n\n  return obj;\n}\n/**\n * A safe hasOwnProperty\n * @param {Object} object\n * @param {string} property\n */\n\nexport function hasOwnProperty(object, property) {\n  return object && Object.hasOwnProperty.call(object, property);\n}\n/**\n * Test whether an object is a factory. a factory has fields:\n *\n * - factory: function (type: Object, config: Object, load: function, typed: function [, math: Object])   (required)\n * - name: string (optional)\n * - path: string    A dot separated path (optional)\n * - math: boolean   If true (false by default), the math namespace is passed\n *                   as fifth argument of the factory function\n *\n * @param {*} object\n * @returns {boolean}\n */\n\nexport function isLegacyFactory(object) {\n  return object && typeof object.factory === 'function';\n}\n/**\n * Get a nested property from an object\n * @param {Object} object\n * @param {string | string[]} path\n * @returns {Object}\n */\n\nexport function get(object, path) {\n  if (typeof path === 'string') {\n    if (isPath(path)) {\n      return get(object, path.split('.'));\n    } else {\n      return object[path];\n    }\n  }\n\n  var child = object;\n\n  for (var i = 0; i < path.length; i++) {\n    var key = path[i];\n    child = child ? child[key] : undefined;\n  }\n\n  return child;\n}\n/**\n * Set a nested property in an object\n * Mutates the object itself\n * If the path doesn't exist, it will be created\n * @param {Object} object\n * @param {string | string[]} path\n * @param {*} value\n * @returns {Object}\n */\n\nexport function set(object, path, value) {\n  if (typeof path === 'string') {\n    if (isPath(path)) {\n      return set(object, path.split('.'), value);\n    } else {\n      object[path] = value;\n      return object;\n    }\n  }\n\n  var child = object;\n\n  for (var i = 0; i < path.length - 1; i++) {\n    var key = path[i];\n\n    if (child[key] === undefined) {\n      child[key] = {};\n    }\n\n    child = child[key];\n  }\n\n  if (path.length > 0) {\n    var lastKey = path[path.length - 1];\n    child[lastKey] = value;\n  }\n\n  return object;\n}\n/**\n * Create an object composed of the picked object properties\n * @param {Object} object\n * @param {string[]} properties\n * @param {function} [transform] Optional value to transform a value when picking it\n * @return {Object}\n */\n\nexport function pick(object, properties, transform) {\n  var copy = {};\n\n  for (var i = 0; i < properties.length; i++) {\n    var key = properties[i];\n    var value = get(object, key);\n\n    if (value !== undefined) {\n      set(copy, key, transform ? transform(value, key) : value);\n    }\n  }\n\n  return copy;\n}\n/**\n * Shallow version of pick, creating an object composed of the picked object properties\n * but not for nested properties\n * @param {Object} object\n * @param {string[]} properties\n * @return {Object}\n */\n\nexport function pickShallow(object, properties) {\n  var copy = {};\n\n  for (var i = 0; i < properties.length; i++) {\n    var key = properties[i];\n    var value = object[key];\n\n    if (value !== undefined) {\n      copy[key] = value;\n    }\n  }\n\n  return copy;\n}\nexport function values(object) {\n  return Object.keys(object).map(key => object[key]);\n} // helper function to test whether a string contains a path like 'user.name'\n\nfunction isPath(str) {\n  return str.indexOf('.') !== -1;\n}","import { clone, mapObject, deepExtend } from '../../utils/object.js';\nimport { DEFAULT_CONFIG } from '../config.js';\nexport var MATRIX_OPTIONS = ['Matrix', 'Array']; // valid values for option matrix\n\nexport var NUMBER_OPTIONS = ['number', 'BigNumber', 'Fraction']; // valid values for option number\n\nexport function configFactory(config, emit) {\n  /**\n   * Set configuration options for math.js, and get current options.\n   * Will emit a 'config' event, with arguments (curr, prev, changes).\n   *\n   * This function is only available on a mathjs instance created using `create`.\n   *\n   * Syntax:\n   *\n   *     math.config(config: Object): Object\n   *\n   * Examples:\n   *\n   *\n   *     import { create, all } from 'mathjs'\n   *\n   *     // create a mathjs instance\n   *     const math = create(all)\n   *\n   *     math.config().number                // outputs 'number'\n   *     math.evaluate('0.4')                // outputs number 0.4\n   *     math.config({number: 'Fraction'})\n   *     math.evaluate('0.4')                // outputs Fraction 2/5\n   *\n   * @param {Object} [options] Available options:\n   *                            {number} epsilon\n   *                              Minimum relative difference between two\n   *                              compared values, used by all comparison functions.\n   *                            {string} matrix\n   *                              A string 'Matrix' (default) or 'Array'.\n   *                            {string} number\n   *                              A string 'number' (default), 'BigNumber', or 'Fraction'\n   *                            {number} precision\n   *                              The number of significant digits for BigNumbers.\n   *                              Not applicable for Numbers.\n   *                            {string} parenthesis\n   *                              How to display parentheses in LaTeX and string\n   *                              output.\n   *                            {string} randomSeed\n   *                              Random seed for seeded pseudo random number generator.\n   *                              Set to null to randomly seed.\n   * @return {Object} Returns the current configuration\n   */\n  function _config(options) {\n    if (options) {\n      var prev = mapObject(config, clone); // validate some of the options\n\n      validateOption(options, 'matrix', MATRIX_OPTIONS);\n      validateOption(options, 'number', NUMBER_OPTIONS); // merge options\n\n      deepExtend(config, options);\n      var curr = mapObject(config, clone);\n      var changes = mapObject(options, clone); // emit 'config' event\n\n      emit('config', curr, prev, changes);\n      return curr;\n    } else {\n      return mapObject(config, clone);\n    }\n  } // attach the valid options to the function so they can be extended\n\n\n  _config.MATRIX_OPTIONS = MATRIX_OPTIONS;\n  _config.NUMBER_OPTIONS = NUMBER_OPTIONS; // attach the config properties as readonly properties to the config function\n\n  Object.keys(DEFAULT_CONFIG).forEach(key => {\n    Object.defineProperty(_config, key, {\n      get: () => config[key],\n      enumerable: true,\n      configurable: true\n    });\n  });\n  return _config;\n}\n/**\n * Test whether an Array contains a specific item.\n * @param {Array.<string>} array\n * @param {string} item\n * @return {boolean}\n */\n\nfunction contains(array, item) {\n  return array.indexOf(item) !== -1;\n}\n/**\n * Validate an option\n * @param {Object} options         Object with options\n * @param {string} name            Name of the option to validate\n * @param {Array.<string>} values  Array with valid values for this option\n */\n\n\nfunction validateOption(options, name, values) {\n  if (options[name] !== undefined && !contains(values, options[name])) {\n    // unknown value\n    console.warn('Warning: Unknown value \"' + options[name] + '\" for configuration option \"' + name + '\". ' + 'Available options: ' + values.map(value => JSON.stringify(value)).join(', ') + '.');\n  }\n}","/**\n * typed-function\n *\n * Type checking for JavaScript functions\n *\n * https://github.com/josdejong/typed-function\n */\n'use strict';\n\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    // OldNode. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like OldNode.\n    module.exports = factory();\n  } else {\n    // Browser globals (root is window)\n    root.typed = factory();\n  }\n}(this, function () {\n\n  function ok () {\n    return true;\n  }\n\n  function notOk () {\n    return false;\n  }\n\n  function undef () {\n    return undefined;\n  }\n\n  /**\n   * @typedef {{\n   *   params: Param[],\n   *   fn: function\n   * }} Signature\n   *\n   * @typedef {{\n   *   types: Type[],\n   *   restParam: boolean\n   * }} Param\n   *\n   * @typedef {{\n   *   name: string,\n   *   typeIndex: number,\n   *   test: function,\n   *   conversion?: ConversionDef,\n   *   conversionIndex: number,\n   * }} Type\n   *\n   * @typedef {{\n   *   from: string,\n   *   to: string,\n   *   convert: function (*) : *\n   * }} ConversionDef\n   *\n   * @typedef {{\n   *   name: string,\n   *   test: function(*) : boolean\n   * }} TypeDef\n   */\n\n  // create a new instance of typed-function\n  function create () {\n    // data type tests\n    var _types = [\n      { name: 'number',    test: function (x) { return typeof x === 'number' } },\n      { name: 'string',    test: function (x) { return typeof x === 'string' } },\n      { name: 'boolean',   test: function (x) { return typeof x === 'boolean' } },\n      { name: 'Function',  test: function (x) { return typeof x === 'function'} },\n      { name: 'Array',     test: Array.isArray },\n      { name: 'Date',      test: function (x) { return x instanceof Date } },\n      { name: 'RegExp',    test: function (x) { return x instanceof RegExp } },\n      { name: 'Object',    test: function (x) {\n        return typeof x === 'object' && x !== null && x.constructor === Object\n      }},\n      { name: 'null',      test: function (x) { return x === null } },\n      { name: 'undefined', test: function (x) { return x === undefined } }\n    ];\n\n    var anyType = {\n      name: 'any',\n      test: ok\n    }\n\n    // types which need to be ignored\n    var _ignore = [];\n\n    // type conversions\n    var _conversions = [];\n\n    // This is a temporary object, will be replaced with a typed function at the end\n    var typed = {\n      types: _types,\n      conversions: _conversions,\n      ignore: _ignore\n    };\n\n    /**\n     * Find the test function for a type\n     * @param {String} typeName\n     * @return {TypeDef} Returns the type definition when found,\n     *                    Throws a TypeError otherwise\n     */\n    function findTypeByName (typeName) {\n      var entry = findInArray(typed.types, function (entry) {\n        return entry.name === typeName;\n      });\n\n      if (entry) {\n        return entry;\n      }\n\n      if (typeName === 'any') { // special baked-in case 'any'\n        return anyType;\n      }\n\n      var hint = findInArray(typed.types, function (entry) {\n        return entry.name.toLowerCase() === typeName.toLowerCase();\n      });\n\n      throw new TypeError('Unknown type \"' + typeName + '\"' +\n          (hint ? ('. Did you mean \"' + hint.name + '\"?') : ''));\n    }\n\n    /**\n     * Find the index of a type definition. Handles special case 'any'\n     * @param {TypeDef} type\n     * @return {number}\n     */\n    function findTypeIndex(type) {\n      if (type === anyType) {\n        return 999;\n      }\n\n      return typed.types.indexOf(type);\n    }\n\n    /**\n     * Find a type that matches a value.\n     * @param {*} value\n     * @return {string} Returns the name of the first type for which\n     *                  the type test matches the value.\n     */\n    function findTypeName(value) {\n      var entry = findInArray(typed.types, function (entry) {\n        return entry.test(value);\n      });\n\n      if (entry) {\n        return entry.name;\n      }\n\n      throw new TypeError('Value has unknown type. Value: ' + value);\n    }\n\n    /**\n     * Find a specific signature from a (composed) typed function, for example:\n     *\n     *   typed.find(fn, ['number', 'string'])\n     *   typed.find(fn, 'number, string')\n     *\n     * Function find only only works for exact matches.\n     *\n     * @param {Function} fn                   A typed-function\n     * @param {string | string[]} signature   Signature to be found, can be\n     *                                        an array or a comma separated string.\n     * @return {Function}                     Returns the matching signature, or\n     *                                        throws an error when no signature\n     *                                        is found.\n     */\n    function find (fn, signature) {\n      if (!fn.signatures) {\n        throw new TypeError('Function is no typed-function');\n      }\n\n      // normalize input\n      var arr;\n      if (typeof signature === 'string') {\n        arr = signature.split(',');\n        for (var i = 0; i < arr.length; i++) {\n          arr[i] = arr[i].trim();\n        }\n      }\n      else if (Array.isArray(signature)) {\n        arr = signature;\n      }\n      else {\n        throw new TypeError('String array or a comma separated string expected');\n      }\n\n      var str = arr.join(',');\n\n      // find an exact match\n      var match = fn.signatures[str];\n      if (match) {\n        return match;\n      }\n\n      // TODO: extend find to match non-exact signatures\n\n      throw new TypeError('Signature not found (signature: ' + (fn.name || 'unnamed') + '(' + arr.join(', ') + '))');\n    }\n\n    /**\n     * Convert a given value to another data type.\n     * @param {*} value\n     * @param {string} type\n     */\n    function convert (value, type) {\n      var from = findTypeName(value);\n\n      // check conversion is needed\n      if (type === from) {\n        return value;\n      }\n\n      for (var i = 0; i < typed.conversions.length; i++) {\n        var conversion = typed.conversions[i];\n        if (conversion.from === from && conversion.to === type) {\n          return conversion.convert(value);\n        }\n      }\n\n      throw new Error('Cannot convert from ' + from + ' to ' + type);\n    }\n    \n    /**\n     * Stringify parameters in a normalized way\n     * @param {Param[]} params\n     * @return {string}\n     */\n    function stringifyParams (params) {\n      return params\n          .map(function (param) {\n            var typeNames = param.types.map(getTypeName);\n\n            return (param.restParam ? '...' : '') + typeNames.join('|');\n          })\n          .join(',');\n    }\n\n    /**\n     * Parse a parameter, like \"...number | boolean\"\n     * @param {string} param\n     * @param {ConversionDef[]} conversions\n     * @return {Param} param\n     */\n    function parseParam (param, conversions) {\n      var restParam = param.indexOf('...') === 0;\n      var types = (!restParam)\n          ? param\n          : (param.length > 3)\n              ? param.slice(3)\n              : 'any';\n\n      var typeNames = types.split('|').map(trim)\n          .filter(notEmpty)\n          .filter(notIgnore);\n\n      var matchingConversions = filterConversions(conversions, typeNames);\n\n      var exactTypes = typeNames.map(function (typeName) {\n        var type = findTypeByName(typeName);\n\n        return {\n          name: typeName,\n          typeIndex: findTypeIndex(type),\n          test: type.test,\n          conversion: null,\n          conversionIndex: -1\n        };\n      });\n\n      var convertibleTypes = matchingConversions.map(function (conversion) {\n        var type = findTypeByName(conversion.from);\n\n        return {\n          name: conversion.from,\n          typeIndex: findTypeIndex(type),\n          test: type.test,\n          conversion: conversion,\n          conversionIndex: conversions.indexOf(conversion)\n        };\n      });\n\n      return {\n        types: exactTypes.concat(convertibleTypes),\n        restParam: restParam\n      };\n    }\n\n    /**\n     * Parse a signature with comma separated parameters,\n     * like \"number | boolean, ...string\"\n     * @param {string} signature\n     * @param {function} fn\n     * @param {ConversionDef[]} conversions\n     * @return {Signature | null} signature\n     */\n    function parseSignature (signature, fn, conversions) {\n      var params = [];\n\n      if (signature.trim() !== '') {\n        params = signature\n            .split(',')\n            .map(trim)\n            .map(function (param, index, array) {\n              var parsedParam = parseParam(param, conversions);\n\n              if (parsedParam.restParam && (index !== array.length - 1)) {\n                throw new SyntaxError('Unexpected rest parameter \"' + param + '\": ' +\n                    'only allowed for the last parameter');\n              }\n\n              return parsedParam;\n          });\n      }\n\n      if (params.some(isInvalidParam)) {\n        // invalid signature: at least one parameter has no types\n        // (they may have been filtered)\n        return null;\n      }\n\n      return {\n        params: params,\n        fn: fn\n      };\n    }\n\n    /**\n     * Test whether a set of params contains a restParam\n     * @param {Param[]} params\n     * @return {boolean} Returns true when the last parameter is a restParam\n     */\n    function hasRestParam(params) {\n      var param = last(params)\n      return param ? param.restParam : false;\n    }\n\n    /**\n     * Test whether a parameter contains conversions\n     * @param {Param} param\n     * @return {boolean} Returns true when at least one of the parameters\n     *                   contains a conversion.\n     */\n    function hasConversions(param) {\n      return param.types.some(function (type) {\n        return type.conversion != null;\n      });\n    }\n\n    /**\n     * Create a type test for a single parameter, which can have one or multiple\n     * types.\n     * @param {Param} param\n     * @return {function(x: *) : boolean} Returns a test function\n     */\n    function compileTest(param) {\n      if (!param || param.types.length === 0) {\n        // nothing to do\n        return ok;\n      }\n      else if (param.types.length === 1) {\n        return findTypeByName(param.types[0].name).test;\n      }\n      else if (param.types.length === 2) {\n        var test0 = findTypeByName(param.types[0].name).test;\n        var test1 = findTypeByName(param.types[1].name).test;\n        return function or(x) {\n          return test0(x) || test1(x);\n        }\n      }\n      else { // param.types.length > 2\n        var tests = param.types.map(function (type) {\n          return findTypeByName(type.name).test;\n        })\n        return function or(x) {\n          for (var i = 0; i < tests.length; i++) {\n            if (tests[i](x)) {\n              return true;\n            }\n          }\n          return false;\n        }\n      }\n    }\n\n    /**\n     * Create a test for all parameters of a signature\n     * @param {Param[]} params\n     * @return {function(args: Array<*>) : boolean}\n     */\n    function compileTests(params) {\n      var tests, test0, test1;\n\n      if (hasRestParam(params)) {\n        // variable arguments like '...number'\n        tests = initial(params).map(compileTest);\n        var varIndex = tests.length;\n        var lastTest = compileTest(last(params));\n        var testRestParam = function (args) {\n          for (var i = varIndex; i < args.length; i++) {\n            if (!lastTest(args[i])) {\n              return false;\n            }\n          }\n          return true;\n        }\n\n        return function testArgs(args) {\n          for (var i = 0; i < tests.length; i++) {\n            if (!tests[i](args[i])) {\n              return false;\n            }\n          }\n          return testRestParam(args) && (args.length >= varIndex + 1);\n        };\n      }\n      else {\n        // no variable arguments\n        if (params.length === 0) {\n          return function testArgs(args) {\n            return args.length === 0;\n          };\n        }\n        else if (params.length === 1) {\n          test0 = compileTest(params[0]);\n          return function testArgs(args) {\n            return test0(args[0]) && args.length === 1;\n          };\n        }\n        else if (params.length === 2) {\n          test0 = compileTest(params[0]);\n          test1 = compileTest(params[1]);\n          return function testArgs(args) {\n            return test0(args[0]) && test1(args[1]) && args.length === 2;\n          };\n        }\n        else { // arguments.length > 2\n          tests = params.map(compileTest);\n          return function testArgs(args) {\n            for (var i = 0; i < tests.length; i++) {\n              if (!tests[i](args[i])) {\n                return false;\n              }\n            }\n            return args.length === tests.length;\n          };\n        }\n      }\n    }\n\n    /**\n     * Find the parameter at a specific index of a signature.\n     * Handles rest parameters.\n     * @param {Signature} signature\n     * @param {number} index\n     * @return {Param | null} Returns the matching parameter when found,\n     *                        null otherwise.\n     */\n    function getParamAtIndex(signature, index) {\n      return index < signature.params.length\n          ? signature.params[index]\n          : hasRestParam(signature.params)\n              ? last(signature.params)\n              : null\n    }\n\n    /**\n     * Get all type names of a parameter\n     * @param {Signature} signature\n     * @param {number} index\n     * @param {boolean} excludeConversions\n     * @return {string[]} Returns an array with type names\n     */\n    function getExpectedTypeNames (signature, index, excludeConversions) {\n      var param = getParamAtIndex(signature, index);\n      var types = param\n          ? excludeConversions\n                  ? param.types.filter(isExactType)\n                  : param.types\n          : [];\n\n      return types.map(getTypeName);\n    }\n\n    /**\n     * Returns the name of a type\n     * @param {Type} type\n     * @return {string} Returns the type name\n     */\n    function getTypeName(type) {\n      return type.name;\n    }\n\n    /**\n     * Test whether a type is an exact type or conversion\n     * @param {Type} type\n     * @return {boolean} Returns true when\n     */\n    function isExactType(type) {\n      return type.conversion === null || type.conversion === undefined;\n    }\n\n    /**\n     * Helper function for creating error messages: create an array with\n     * all available types on a specific argument index.\n     * @param {Signature[]} signatures\n     * @param {number} index\n     * @return {string[]} Returns an array with available types\n     */\n    function mergeExpectedParams(signatures, index) {\n      var typeNames = uniq(flatMap(signatures, function (signature) {\n        return getExpectedTypeNames(signature, index, false);\n      }));\n\n      return (typeNames.indexOf('any') !== -1) ? ['any'] : typeNames;\n    }\n\n    /**\n     * Create\n     * @param {string} name             The name of the function\n     * @param {array.<*>} args          The actual arguments passed to the function\n     * @param {Signature[]} signatures  A list with available signatures\n     * @return {TypeError} Returns a type error with additional data\n     *                     attached to it in the property `data`\n     */\n    function createError(name, args, signatures) {\n      var err, expected;\n      var _name = name || 'unnamed';\n\n      // test for wrong type at some index\n      var matchingSignatures = signatures;\n      var index;\n      for (index = 0; index < args.length; index++) {\n        var nextMatchingDefs = matchingSignatures.filter(function (signature) {\n          var test = compileTest(getParamAtIndex(signature, index));\n          return (index < signature.params.length || hasRestParam(signature.params)) &&\n              test(args[index]);\n        });\n\n        if (nextMatchingDefs.length === 0) {\n          // no matching signatures anymore, throw error \"wrong type\"\n          expected = mergeExpectedParams(matchingSignatures, index);\n          if (expected.length > 0) {\n            var actualType = findTypeName(args[index]);\n\n            err = new TypeError('Unexpected type of argument in function ' + _name +\n                ' (expected: ' + expected.join(' or ') +\n                ', actual: ' + actualType + ', index: ' + index + ')');\n            err.data = {\n              category: 'wrongType',\n              fn: _name,\n              index: index,\n              actual: actualType,\n              expected: expected\n            }\n            return err;\n          }\n        }\n        else {\n          matchingSignatures = nextMatchingDefs;\n        }\n      }\n\n      // test for too few arguments\n      var lengths = matchingSignatures.map(function (signature) {\n        return hasRestParam(signature.params) ? Infinity : signature.params.length;\n      });\n      if (args.length < Math.min.apply(null, lengths)) {\n        expected = mergeExpectedParams(matchingSignatures, index);\n        err = new TypeError('Too few arguments in function ' + _name +\n            ' (expected: ' + expected.join(' or ') +\n            ', index: ' + args.length + ')');\n        err.data = {\n          category: 'tooFewArgs',\n          fn: _name,\n          index: args.length,\n          expected: expected\n        }\n        return err;\n      }\n\n      // test for too many arguments\n      var maxLength = Math.max.apply(null, lengths);\n      if (args.length > maxLength) {\n        err = new TypeError('Too many arguments in function ' + _name +\n            ' (expected: ' + maxLength + ', actual: ' + args.length + ')');\n        err.data = {\n          category: 'tooManyArgs',\n          fn: _name,\n          index: args.length,\n          expectedLength: maxLength\n        }\n        return err;\n      }\n\n      err = new TypeError('Arguments of type \"' + args.join(', ') +\n          '\" do not match any of the defined signatures of function ' + _name + '.');\n      err.data = {\n        category: 'mismatch',\n        actual: args.map(findTypeName)\n      }\n      return err;\n    }\n\n    /**\n     * Find the lowest index of all exact types of a parameter (no conversions)\n     * @param {Param} param\n     * @return {number} Returns the index of the lowest type in typed.types\n     */\n    function getLowestTypeIndex (param) {\n      var min = 999;\n\n      for (var i = 0; i < param.types.length; i++) {\n        if (isExactType(param.types[i])) {\n          min = Math.min(min, param.types[i].typeIndex);\n        }\n      }\n\n      return min;\n    }\n\n    /**\n     * Find the lowest index of the conversion of all types of the parameter\n     * having a conversion\n     * @param {Param} param\n     * @return {number} Returns the lowest index of the conversions of this type\n     */\n    function getLowestConversionIndex (param) {\n      var min = 999;\n\n      for (var i = 0; i < param.types.length; i++) {\n        if (!isExactType(param.types[i])) {\n          min = Math.min(min, param.types[i].conversionIndex);\n        }\n      }\n\n      return min;\n    }\n\n    /**\n     * Compare two params\n     * @param {Param} param1\n     * @param {Param} param2\n     * @return {number} returns a negative number when param1 must get a lower\n     *                  index than param2, a positive number when the opposite,\n     *                  or zero when both are equal\n     */\n    function compareParams (param1, param2) {\n      var c;\n\n      // compare having a rest parameter or not\n      c = param1.restParam - param2.restParam;\n      if (c !== 0) {\n        return c;\n      }\n\n      // compare having conversions or not\n      c = hasConversions(param1) - hasConversions(param2);\n      if (c !== 0) {\n        return c;\n      }\n\n      // compare the index of the types\n      c = getLowestTypeIndex(param1) - getLowestTypeIndex(param2);\n      if (c !== 0) {\n        return c;\n      }\n\n      // compare the index of any conversion\n      return getLowestConversionIndex(param1) - getLowestConversionIndex(param2);\n    }\n\n    /**\n     * Compare two signatures\n     * @param {Signature} signature1\n     * @param {Signature} signature2\n     * @return {number} returns a negative number when param1 must get a lower\n     *                  index than param2, a positive number when the opposite,\n     *                  or zero when both are equal\n     */\n    function compareSignatures (signature1, signature2) {\n      var len = Math.min(signature1.params.length, signature2.params.length);\n      var i;\n      var c;\n\n      // compare whether the params have conversions at all or not\n      c = signature1.params.some(hasConversions) - signature2.params.some(hasConversions)\n      if (c !== 0) {\n        return c;\n      }\n\n      // next compare whether the params have conversions one by one\n      for (i = 0; i < len; i++) {\n        c = hasConversions(signature1.params[i]) - hasConversions(signature2.params[i]);\n        if (c !== 0) {\n          return c;\n        }\n      }\n\n      // compare the types of the params one by one\n      for (i = 0; i < len; i++) {\n        c = compareParams(signature1.params[i], signature2.params[i]);\n        if (c !== 0) {\n          return c;\n        }\n      }\n\n      // compare the number of params\n      return signature1.params.length - signature2.params.length;\n    }\n\n    /**\n     * Get params containing all types that can be converted to the defined types.\n     *\n     * @param {ConversionDef[]} conversions\n     * @param {string[]} typeNames\n     * @return {ConversionDef[]} Returns the conversions that are available\n     *                        for every type (if any)\n     */\n    function filterConversions(conversions, typeNames) {\n      var matches = {};\n\n      conversions.forEach(function (conversion) {\n        if (typeNames.indexOf(conversion.from) === -1 &&\n            typeNames.indexOf(conversion.to) !== -1 &&\n            !matches[conversion.from]) {\n          matches[conversion.from] = conversion;\n        }\n      });\n\n      return Object.keys(matches).map(function (from) {\n        return matches[from];\n      });\n    }\n\n    /**\n     * Preprocess arguments before calling the original function:\n     * - if needed convert the parameters\n     * - in case of rest parameters, move the rest parameters into an Array\n     * @param {Param[]} params\n     * @param {function} fn\n     * @return {function} Returns a wrapped function\n     */\n    function compileArgsPreprocessing(params, fn) {\n      var fnConvert = fn;\n\n      // TODO: can we make this wrapper function smarter/simpler?\n\n      if (params.some(hasConversions)) {\n        var restParam = hasRestParam(params);\n        var compiledConversions = params.map(compileArgConversion)\n\n        fnConvert = function convertArgs() {\n          var args = [];\n          var last = restParam ? arguments.length - 1 : arguments.length;\n          for (var i = 0; i < last; i++) {\n            args[i] = compiledConversions[i](arguments[i]);\n          }\n          if (restParam) {\n            args[last] = arguments[last].map(compiledConversions[last]);\n          }\n\n          return fn.apply(this, args);\n        }\n      }\n\n      var fnPreprocess = fnConvert;\n      if (hasRestParam(params)) {\n        var offset = params.length - 1;\n\n        fnPreprocess = function preprocessRestParams () {\n          return fnConvert.apply(this,\n              slice(arguments, 0, offset).concat([slice(arguments, offset)]));\n        }\n      }\n\n      return fnPreprocess;\n    }\n\n    /**\n     * Compile conversion for a parameter to the right type\n     * @param {Param} param\n     * @return {function} Returns the wrapped function that will convert arguments\n     *\n     */\n    function compileArgConversion(param) {\n      var test0, test1, conversion0, conversion1;\n      var tests = [];\n      var conversions = [];\n\n      param.types.forEach(function (type) {\n        if (type.conversion) {\n          tests.push(findTypeByName(type.conversion.from).test);\n          conversions.push(type.conversion.convert);\n        }\n      });\n\n      // create optimized conversion functions depending on the number of conversions\n      switch (conversions.length) {\n        case 0:\n          return function convertArg(arg) {\n            return arg;\n          }\n\n        case 1:\n          test0 = tests[0]\n          conversion0 = conversions[0];\n          return function convertArg(arg) {\n            if (test0(arg)) {\n              return conversion0(arg)\n            }\n            return arg;\n          }\n\n        case 2:\n          test0 = tests[0]\n          test1 = tests[1]\n          conversion0 = conversions[0];\n          conversion1 = conversions[1];\n          return function convertArg(arg) {\n            if (test0(arg)) {\n              return conversion0(arg)\n            }\n            if (test1(arg)) {\n              return conversion1(arg)\n            }\n            return arg;\n          }\n\n        default:\n          return function convertArg(arg) {\n            for (var i = 0; i < conversions.length; i++) {\n              if (tests[i](arg)) {\n                return conversions[i](arg);\n              }\n            }\n            return arg;\n          }\n      }\n    }\n\n    /**\n     * Convert an array with signatures into a map with signatures,\n     * where signatures with union types are split into separate signatures\n     *\n     * Throws an error when there are conflicting types\n     *\n     * @param {Signature[]} signatures\n     * @return {Object.<string, function>}  Returns a map with signatures\n     *                                      as key and the original function\n     *                                      of this signature as value.\n     */\n    function createSignaturesMap(signatures) {\n      var signaturesMap = {};\n      signatures.forEach(function (signature) {\n        if (!signature.params.some(hasConversions)) {\n          splitParams(signature.params, true).forEach(function (params) {\n            signaturesMap[stringifyParams(params)] = signature.fn;\n          });\n        }\n      });\n\n      return signaturesMap;\n    }\n\n    /**\n     * Split params with union types in to separate params.\n     *\n     * For example:\n     *\n     *     splitParams([['Array', 'Object'], ['string', 'RegExp'])\n     *     // returns:\n     *     // [\n     *     //   ['Array', 'string'],\n     *     //   ['Array', 'RegExp'],\n     *     //   ['Object', 'string'],\n     *     //   ['Object', 'RegExp']\n     *     // ]\n     *\n     * @param {Param[]} params\n     * @param {boolean} ignoreConversionTypes\n     * @return {Param[]}\n     */\n    function splitParams(params, ignoreConversionTypes) {\n      function _splitParams(params, index, types) {\n        if (index < params.length) {\n          var param = params[index]\n          var filteredTypes = ignoreConversionTypes\n              ? param.types.filter(isExactType)\n              : param.types;\n          var typeGroups\n\n          if (param.restParam) {\n            // split the types of a rest parameter in two:\n            // one with only exact types, and one with exact types and conversions\n            var exactTypes = filteredTypes.filter(isExactType)\n            typeGroups = exactTypes.length < filteredTypes.length\n                ? [exactTypes, filteredTypes]\n                : [filteredTypes]\n\n          }\n          else {\n            // split all the types of a regular parameter into one type per group\n            typeGroups = filteredTypes.map(function (type) {\n              return [type]\n            })\n          }\n\n          // recurse over the groups with types\n          return flatMap(typeGroups, function (typeGroup) {\n            return _splitParams(params, index + 1, types.concat([typeGroup]));\n          });\n\n        }\n        else {\n          // we've reached the end of the parameters. Now build a new Param\n          var splittedParams = types.map(function (type, typeIndex) {\n            return {\n              types: type,\n              restParam: (typeIndex === params.length - 1) && hasRestParam(params)\n            }\n          });\n\n          return [splittedParams];\n        }\n      }\n\n      return _splitParams(params, 0, []);\n    }\n\n    /**\n     * Test whether two signatures have a conflicting signature\n     * @param {Signature} signature1\n     * @param {Signature} signature2\n     * @return {boolean} Returns true when the signatures conflict, false otherwise.\n     */\n    function hasConflictingParams(signature1, signature2) {\n      var ii = Math.max(signature1.params.length, signature2.params.length);\n\n      for (var i = 0; i < ii; i++) {\n        var typesNames1 = getExpectedTypeNames(signature1, i, true);\n        var typesNames2 = getExpectedTypeNames(signature2, i, true);\n\n        if (!hasOverlap(typesNames1, typesNames2)) {\n          return false;\n        }\n      }\n\n      var len1 = signature1.params.length;\n      var len2 = signature2.params.length;\n      var restParam1 = hasRestParam(signature1.params);\n      var restParam2 = hasRestParam(signature2.params);\n\n      return restParam1\n          ? restParam2 ? (len1 === len2) : (len2 >= len1)\n          : restParam2 ? (len1 >= len2)  : (len1 === len2)\n    }\n\n    /**\n     * Create a typed function\n     * @param {String} name               The name for the typed function\n     * @param {Object.<string, function>} signaturesMap\n     *                                    An object with one or\n     *                                    multiple signatures as key, and the\n     *                                    function corresponding to the\n     *                                    signature as value.\n     * @return {function}  Returns the created typed function.\n     */\n    function createTypedFunction(name, signaturesMap) {\n      if (Object.keys(signaturesMap).length === 0) {\n        throw new SyntaxError('No signatures provided');\n      }\n\n      // parse the signatures, and check for conflicts\n      var parsedSignatures = [];\n      Object.keys(signaturesMap)\n          .map(function (signature) {\n            return parseSignature(signature, signaturesMap[signature], typed.conversions);\n          })\n          .filter(notNull)\n          .forEach(function (parsedSignature) {\n            // check whether this parameter conflicts with already parsed signatures\n            var conflictingSignature = findInArray(parsedSignatures, function (s) {\n              return hasConflictingParams(s, parsedSignature)\n            });\n            if (conflictingSignature) {\n              throw new TypeError('Conflicting signatures \"' +\n                  stringifyParams(conflictingSignature.params) + '\" and \"' +\n                  stringifyParams(parsedSignature.params) + '\".');\n            }\n\n            parsedSignatures.push(parsedSignature);\n          });\n\n      // split and filter the types of the signatures, and then order them\n      var signatures = flatMap(parsedSignatures, function (parsedSignature) {\n        var params = parsedSignature ? splitParams(parsedSignature.params, false) : []\n\n        return params.map(function (params) {\n          return {\n            params: params,\n            fn: parsedSignature.fn\n          };\n        });\n      }).filter(notNull);\n\n      signatures.sort(compareSignatures);\n\n      // we create a highly optimized checks for the first couple of signatures with max 2 arguments\n      var ok0 = signatures[0] && signatures[0].params.length <= 2 && !hasRestParam(signatures[0].params);\n      var ok1 = signatures[1] && signatures[1].params.length <= 2 && !hasRestParam(signatures[1].params);\n      var ok2 = signatures[2] && signatures[2].params.length <= 2 && !hasRestParam(signatures[2].params);\n      var ok3 = signatures[3] && signatures[3].params.length <= 2 && !hasRestParam(signatures[3].params);\n      var ok4 = signatures[4] && signatures[4].params.length <= 2 && !hasRestParam(signatures[4].params);\n      var ok5 = signatures[5] && signatures[5].params.length <= 2 && !hasRestParam(signatures[5].params);\n      var allOk = ok0 && ok1 && ok2 && ok3 && ok4 && ok5;\n\n      // compile the tests\n      var tests = signatures.map(function (signature) {\n        return compileTests(signature.params);\n      });\n\n      var test00 = ok0 ? compileTest(signatures[0].params[0]) : notOk;\n      var test10 = ok1 ? compileTest(signatures[1].params[0]) : notOk;\n      var test20 = ok2 ? compileTest(signatures[2].params[0]) : notOk;\n      var test30 = ok3 ? compileTest(signatures[3].params[0]) : notOk;\n      var test40 = ok4 ? compileTest(signatures[4].params[0]) : notOk;\n      var test50 = ok5 ? compileTest(signatures[5].params[0]) : notOk;\n\n      var test01 = ok0 ? compileTest(signatures[0].params[1]) : notOk;\n      var test11 = ok1 ? compileTest(signatures[1].params[1]) : notOk;\n      var test21 = ok2 ? compileTest(signatures[2].params[1]) : notOk;\n      var test31 = ok3 ? compileTest(signatures[3].params[1]) : notOk;\n      var test41 = ok4 ? compileTest(signatures[4].params[1]) : notOk;\n      var test51 = ok5 ? compileTest(signatures[5].params[1]) : notOk;\n\n      // compile the functions\n      var fns = signatures.map(function(signature) {\n        return compileArgsPreprocessing(signature.params, signature.fn);\n      });\n\n      var fn0 = ok0 ? fns[0] : undef;\n      var fn1 = ok1 ? fns[1] : undef;\n      var fn2 = ok2 ? fns[2] : undef;\n      var fn3 = ok3 ? fns[3] : undef;\n      var fn4 = ok4 ? fns[4] : undef;\n      var fn5 = ok5 ? fns[5] : undef;\n\n      var len0 = ok0 ? signatures[0].params.length : -1;\n      var len1 = ok1 ? signatures[1].params.length : -1;\n      var len2 = ok2 ? signatures[2].params.length : -1;\n      var len3 = ok3 ? signatures[3].params.length : -1;\n      var len4 = ok4 ? signatures[4].params.length : -1;\n      var len5 = ok5 ? signatures[5].params.length : -1;\n\n      // simple and generic, but also slow\n      var iStart = allOk ? 6 : 0;\n      var iEnd = signatures.length;\n      var generic = function generic() {\n        'use strict';\n\n        for (var i = iStart; i < iEnd; i++) {\n          if (tests[i](arguments)) {\n            return fns[i].apply(this, arguments);\n          }\n        }\n\n        throw createError(name, arguments, signatures);\n      }\n\n      // create the typed function\n      // fast, specialized version. Falls back to the slower, generic one if needed\n      var fn = function fn(arg0, arg1) {\n        'use strict';\n\n        if (arguments.length === len0 && test00(arg0) && test01(arg1)) { return fn0.apply(fn, arguments); }\n        if (arguments.length === len1 && test10(arg0) && test11(arg1)) { return fn1.apply(fn, arguments); }\n        if (arguments.length === len2 && test20(arg0) && test21(arg1)) { return fn2.apply(fn, arguments); }\n        if (arguments.length === len3 && test30(arg0) && test31(arg1)) { return fn3.apply(fn, arguments); }\n        if (arguments.length === len4 && test40(arg0) && test41(arg1)) { return fn4.apply(fn, arguments); }\n        if (arguments.length === len5 && test50(arg0) && test51(arg1)) { return fn5.apply(fn, arguments); }\n\n        return generic.apply(fn, arguments);\n      }\n\n      // attach name the typed function\n      try {\n        Object.defineProperty(fn, 'name', {value: name});\n      }\n      catch (err) {\n        // old browsers do not support Object.defineProperty and some don't support setting the name property\n        // the function name is not essential for the functioning, it's mostly useful for debugging,\n        // so it's fine to have unnamed functions.\n      }\n\n      // attach signatures to the function\n      fn.signatures = createSignaturesMap(signatures);\n\n      return fn;\n    }\n\n    /**\n     * Test whether a type should be NOT be ignored\n     * @param {string} typeName\n     * @return {boolean}\n     */\n    function notIgnore(typeName) {\n      return typed.ignore.indexOf(typeName) === -1;\n    }\n\n    /**\n     * trim a string\n     * @param {string} str\n     * @return {string}\n     */\n    function trim(str) {\n      return str.trim();\n    }\n\n    /**\n     * Test whether a string is not empty\n     * @param {string} str\n     * @return {boolean}\n     */\n    function notEmpty(str) {\n      return !!str;\n    }\n\n    /**\n     * test whether a value is not strict equal to null\n     * @param {*} value\n     * @return {boolean}\n     */\n    function notNull(value) {\n      return value !== null;\n    }\n\n    /**\n     * Test whether a parameter has no types defined\n     * @param {Param} param\n     * @return {boolean}\n     */\n    function isInvalidParam (param) {\n      return param.types.length === 0;\n    }\n\n    /**\n     * Return all but the last items of an array\n     * @param {Array} arr\n     * @return {Array}\n     */\n    function initial(arr) {\n      return arr.slice(0, arr.length - 1);\n    }\n\n    /**\n     * return the last item of an array\n     * @param {Array} arr\n     * @return {*}\n     */\n    function last(arr) {\n      return arr[arr.length - 1];\n    }\n\n    /**\n     * Slice an array or function Arguments\n     * @param {Array | Arguments | IArguments} arr\n     * @param {number} start\n     * @param {number} [end]\n     * @return {Array}\n     */\n    function slice(arr, start, end) {\n      return Array.prototype.slice.call(arr, start, end);\n    }\n\n    /**\n     * Test whether an array contains some item\n     * @param {Array} array\n     * @param {*} item\n     * @return {boolean} Returns true if array contains item, false if not.\n     */\n    function contains(array, item) {\n      return array.indexOf(item) !== -1;\n    }\n\n    /**\n     * Test whether two arrays have overlapping items\n     * @param {Array} array1\n     * @param {Array} array2\n     * @return {boolean} Returns true when at least one item exists in both arrays\n     */\n    function hasOverlap(array1, array2) {\n      for (var i = 0; i < array1.length; i++) {\n        if (contains(array2, array1[i])) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n\n    /**\n     * Return the first item from an array for which test(arr[i]) returns true\n     * @param {Array} arr\n     * @param {function} test\n     * @return {* | undefined} Returns the first matching item\n     *                         or undefined when there is no match\n     */\n    function findInArray(arr, test) {\n      for (var i = 0; i < arr.length; i++) {\n        if (test(arr[i])) {\n          return arr[i];\n        }\n      }\n      return undefined;\n    }\n\n    /**\n     * Filter unique items of an array with strings\n     * @param {string[]} arr\n     * @return {string[]}\n     */\n    function uniq(arr) {\n      var entries = {}\n      for (var i = 0; i < arr.length; i++) {\n        entries[arr[i]] = true;\n      }\n      return Object.keys(entries);\n    }\n\n    /**\n     * Flat map the result invoking a callback for every item in an array.\n     * https://gist.github.com/samgiles/762ee337dff48623e729\n     * @param {Array} arr\n     * @param {function} callback\n     * @return {Array}\n     */\n    function flatMap(arr, callback) {\n      return Array.prototype.concat.apply([], arr.map(callback));\n    }\n\n    /**\n     * Retrieve the function name from a set of typed functions,\n     * and check whether the name of all functions match (if given)\n     * @param {function[]} fns\n     */\n    function getName (fns) {\n      var name = '';\n\n      for (var i = 0; i < fns.length; i++) {\n        var fn = fns[i];\n\n        // check whether the names are the same when defined\n        if ((typeof fn.signatures === 'object' || typeof fn.signature === 'string') && fn.name !== '') {\n          if (name === '') {\n            name = fn.name;\n          }\n          else if (name !== fn.name) {\n            var err = new Error('Function names do not match (expected: ' + name + ', actual: ' + fn.name + ')');\n            err.data = {\n              actual: fn.name,\n              expected: name\n            };\n            throw err;\n          }\n        }\n      }\n\n      return name;\n    }\n\n    // extract and merge all signatures of a list with typed functions\n    function extractSignatures(fns) {\n      var err;\n      var signaturesMap = {};\n\n      function validateUnique(_signature, _fn) {\n        if (signaturesMap.hasOwnProperty(_signature) && _fn !== signaturesMap[_signature]) {\n          err = new Error('Signature \"' + _signature + '\" is defined twice');\n          err.data = {signature: _signature};\n          throw err;\n          // else: both signatures point to the same function, that's fine\n        }\n      }\n\n      for (var i = 0; i < fns.length; i++) {\n        var fn = fns[i];\n\n        // test whether this is a typed-function\n        if (typeof fn.signatures === 'object') {\n          // merge the signatures\n          for (var signature in fn.signatures) {\n            if (fn.signatures.hasOwnProperty(signature)) {\n              validateUnique(signature, fn.signatures[signature]);\n              signaturesMap[signature] = fn.signatures[signature];\n            }\n          }\n        }\n        else if (typeof fn.signature === 'string') {\n          validateUnique(fn.signature, fn);\n          signaturesMap[fn.signature] = fn;\n        }\n        else {\n          err = new TypeError('Function is no typed-function (index: ' + i + ')');\n          err.data = {index: i};\n          throw err;\n        }\n      }\n\n      return signaturesMap;\n    }\n\n    typed = createTypedFunction('typed', {\n      'string, Object': createTypedFunction,\n      'Object': function (signaturesMap) {\n        // find existing name\n        var fns = [];\n        for (var signature in signaturesMap) {\n          if (signaturesMap.hasOwnProperty(signature)) {\n            fns.push(signaturesMap[signature]);\n          }\n        }\n        var name = getName(fns);\n        return createTypedFunction(name, signaturesMap);\n      },\n      '...Function': function (fns) {\n        return createTypedFunction(getName(fns), extractSignatures(fns));\n      },\n      'string, ...Function': function (name, fns) {\n        return createTypedFunction(name, extractSignatures(fns));\n      }\n    });\n\n    typed.create = create;\n    typed.types = _types;\n    typed.conversions = _conversions;\n    typed.ignore = _ignore;\n    typed.convert = convert;\n    typed.find = find;\n\n    /**\n     * add a type\n     * @param {{name: string, test: function}} type\n     * @param {boolean} [beforeObjectTest=true]\n     *                          If true, the new test will be inserted before\n     *                          the test with name 'Object' (if any), since\n     *                          tests for Object match Array and classes too.\n     */\n    typed.addType = function (type, beforeObjectTest) {\n      if (!type || typeof type.name !== 'string' || typeof type.test !== 'function') {\n        throw new TypeError('Object with properties {name: string, test: function} expected');\n      }\n\n      if (beforeObjectTest !== false) {\n        for (var i = 0; i < typed.types.length; i++) {\n          if (typed.types[i].name === 'Object') {\n            typed.types.splice(i, 0, type);\n            return\n          }\n        }\n      }\n\n      typed.types.push(type);\n    };\n\n    // add a conversion\n    typed.addConversion = function (conversion) {\n      if (!conversion\n          || typeof conversion.from !== 'string'\n          || typeof conversion.to !== 'string'\n          || typeof conversion.convert !== 'function') {\n        throw new TypeError('Object with properties {from: string, to: string, convert: function} expected');\n      }\n\n      typed.conversions.push(conversion);\n    };\n\n    return typed;\n  }\n\n  return create();\n}));\n","import { isNumber } from './is.js';\n/**\n * @typedef {{sign: '+' | '-' | '', coefficients: number[], exponent: number}} SplitValue\n */\n\n/**\n * Check if a number is integer\n * @param {number | boolean} value\n * @return {boolean} isInteger\n */\n\nexport function isInteger(value) {\n  if (typeof value === 'boolean') {\n    return true;\n  }\n\n  return isFinite(value) ? value === Math.round(value) : false; // Note: we use ==, not ===, as we can have Booleans as well\n}\n/**\n * Calculate the sign of a number\n * @param {number} x\n * @returns {number}\n */\n\nexport var sign = /* #__PURE__ */Math.sign || function (x) {\n  if (x > 0) {\n    return 1;\n  } else if (x < 0) {\n    return -1;\n  } else {\n    return 0;\n  }\n};\n/**\n * Calculate the base-2 logarithm of a number\n * @param {number} x\n * @returns {number}\n */\n\nexport var log2 = /* #__PURE__ */Math.log2 || function log2(x) {\n  return Math.log(x) / Math.LN2;\n};\n/**\n * Calculate the base-10 logarithm of a number\n * @param {number} x\n * @returns {number}\n */\n\nexport var log10 = /* #__PURE__ */Math.log10 || function log10(x) {\n  return Math.log(x) / Math.LN10;\n};\n/**\n * Calculate the natural logarithm of a number + 1\n * @param {number} x\n * @returns {number}\n */\n\nexport var log1p = /* #__PURE__ */Math.log1p || function (x) {\n  return Math.log(x + 1);\n};\n/**\n * Calculate cubic root for a number\n *\n * Code from es6-shim.js:\n *   https://github.com/paulmillr/es6-shim/blob/master/es6-shim.js#L1564-L1577\n *\n * @param {number} x\n * @returns {number} Returns the cubic root of x\n */\n\nexport var cbrt = /* #__PURE__ */Math.cbrt || function cbrt(x) {\n  if (x === 0) {\n    return x;\n  }\n\n  var negate = x < 0;\n  var result;\n\n  if (negate) {\n    x = -x;\n  }\n\n  if (isFinite(x)) {\n    result = Math.exp(Math.log(x) / 3); // from https://en.wikipedia.org/wiki/Cube_root#Numerical_methods\n\n    result = (x / (result * result) + 2 * result) / 3;\n  } else {\n    result = x;\n  }\n\n  return negate ? -result : result;\n};\n/**\n * Calculates exponentiation minus 1\n * @param {number} x\n * @return {number} res\n */\n\nexport var expm1 = /* #__PURE__ */Math.expm1 || function expm1(x) {\n  return x >= 2e-4 || x <= -2e-4 ? Math.exp(x) - 1 : x + x * x / 2 + x * x * x / 6;\n};\n/**\n * Convert a number to a formatted string representation.\n *\n * Syntax:\n *\n *    format(value)\n *    format(value, options)\n *    format(value, precision)\n *    format(value, fn)\n *\n * Where:\n *\n *    {number} value   The value to be formatted\n *    {Object} options An object with formatting options. Available options:\n *                     {string} notation\n *                         Number notation. Choose from:\n *                         'fixed'          Always use regular number notation.\n *                                          For example '123.40' and '14000000'\n *                         'exponential'    Always use exponential notation.\n *                                          For example '1.234e+2' and '1.4e+7'\n *                         'engineering'    Always use engineering notation.\n *                                          For example '123.4e+0' and '14.0e+6'\n *                         'auto' (default) Regular number notation for numbers\n *                                          having an absolute value between\n *                                          `lowerExp` and `upperExp` bounds, and\n *                                          uses exponential notation elsewhere.\n *                                          Lower bound is included, upper bound\n *                                          is excluded.\n *                                          For example '123.4' and '1.4e7'.\n *                     {number} precision   A number between 0 and 16 to round\n *                                          the digits of the number.\n *                                          In case of notations 'exponential',\n *                                          'engineering', and 'auto',\n *                                          `precision` defines the total\n *                                          number of significant digits returned.\n *                                          In case of notation 'fixed',\n *                                          `precision` defines the number of\n *                                          significant digits after the decimal\n *                                          point.\n *                                          `precision` is undefined by default,\n *                                          not rounding any digits.\n *                     {number} lowerExp    Exponent determining the lower boundary\n *                                          for formatting a value with an exponent\n *                                          when `notation='auto`.\n *                                          Default value is `-3`.\n *                     {number} upperExp    Exponent determining the upper boundary\n *                                          for formatting a value with an exponent\n *                                          when `notation='auto`.\n *                                          Default value is `5`.\n *    {Function} fn    A custom formatting function. Can be used to override the\n *                     built-in notations. Function `fn` is called with `value` as\n *                     parameter and must return a string. Is useful for example to\n *                     format all values inside a matrix in a particular way.\n *\n * Examples:\n *\n *    format(6.4)                                        // '6.4'\n *    format(1240000)                                    // '1.24e6'\n *    format(1/3)                                        // '0.3333333333333333'\n *    format(1/3, 3)                                     // '0.333'\n *    format(21385, 2)                                   // '21000'\n *    format(12.071, {notation: 'fixed'})                // '12'\n *    format(2.3,    {notation: 'fixed', precision: 2})  // '2.30'\n *    format(52.8,   {notation: 'exponential'})          // '5.28e+1'\n *    format(12345678, {notation: 'engineering'})        // '12.345678e+6'\n *\n * @param {number} value\n * @param {Object | Function | number} [options]\n * @return {string} str The formatted value\n */\n\nexport function format(value, options) {\n  if (typeof options === 'function') {\n    // handle format(value, fn)\n    return options(value);\n  } // handle special cases\n\n\n  if (value === Infinity) {\n    return 'Infinity';\n  } else if (value === -Infinity) {\n    return '-Infinity';\n  } else if (isNaN(value)) {\n    return 'NaN';\n  } // default values for options\n\n\n  var notation = 'auto';\n  var precision;\n\n  if (options) {\n    // determine notation from options\n    if (options.notation) {\n      notation = options.notation;\n    } // determine precision from options\n\n\n    if (isNumber(options)) {\n      precision = options;\n    } else if (isNumber(options.precision)) {\n      precision = options.precision;\n    }\n  } // handle the various notations\n\n\n  switch (notation) {\n    case 'fixed':\n      return toFixed(value, precision);\n\n    case 'exponential':\n      return toExponential(value, precision);\n\n    case 'engineering':\n      return toEngineering(value, precision);\n\n    case 'auto':\n      // remove trailing zeros after the decimal point\n      return toPrecision(value, precision, options && options).replace(/((\\.\\d*?)(0+))($|e)/, function () {\n        var digits = arguments[2];\n        var e = arguments[4];\n        return digits !== '.' ? digits + e : e;\n      });\n\n    default:\n      throw new Error('Unknown notation \"' + notation + '\". ' + 'Choose \"auto\", \"exponential\", or \"fixed\".');\n  }\n}\n/**\n * Split a number into sign, coefficients, and exponent\n * @param {number | string} value\n * @return {SplitValue}\n *              Returns an object containing sign, coefficients, and exponent\n */\n\nexport function splitNumber(value) {\n  // parse the input value\n  var match = String(value).toLowerCase().match(/^0*?(-?)(\\d+\\.?\\d*)(e([+-]?\\d+))?$/);\n\n  if (!match) {\n    throw new SyntaxError('Invalid number ' + value);\n  }\n\n  var sign = match[1];\n  var digits = match[2];\n  var exponent = parseFloat(match[4] || '0');\n  var dot = digits.indexOf('.');\n  exponent += dot !== -1 ? dot - 1 : digits.length - 1;\n  var coefficients = digits.replace('.', '') // remove the dot (must be removed before removing leading zeros)\n  .replace(/^0*/, function (zeros) {\n    // remove leading zeros, add their count to the exponent\n    exponent -= zeros.length;\n    return '';\n  }).replace(/0*$/, '') // remove trailing zeros\n  .split('').map(function (d) {\n    return parseInt(d);\n  });\n\n  if (coefficients.length === 0) {\n    coefficients.push(0);\n    exponent++;\n  }\n\n  return {\n    sign: sign,\n    coefficients: coefficients,\n    exponent: exponent\n  };\n}\n/**\n * Format a number in engineering notation. Like '1.23e+6', '2.3e+0', '3.500e-3'\n * @param {number | string} value\n * @param {number} [precision]        Optional number of significant figures to return.\n */\n\nexport function toEngineering(value, precision) {\n  if (isNaN(value) || !isFinite(value)) {\n    return String(value);\n  }\n\n  var split = splitNumber(value);\n  var rounded = roundDigits(split, precision);\n  var e = rounded.exponent;\n  var c = rounded.coefficients; // find nearest lower multiple of 3 for exponent\n\n  var newExp = e % 3 === 0 ? e : e < 0 ? e - 3 - e % 3 : e - e % 3;\n\n  if (isNumber(precision)) {\n    // add zeroes to give correct sig figs\n    while (precision > c.length || e - newExp + 1 > c.length) {\n      c.push(0);\n    }\n  } else {\n    // concatenate coefficients with necessary zeros\n    // add zeros if necessary (for example: 1e+8 -> 100e+6)\n    var missingZeros = Math.abs(e - newExp) - (c.length - 1);\n\n    for (var i = 0; i < missingZeros; i++) {\n      c.push(0);\n    }\n  } // find difference in exponents\n\n\n  var expDiff = Math.abs(e - newExp);\n  var decimalIdx = 1; // push decimal index over by expDiff times\n\n  while (expDiff > 0) {\n    decimalIdx++;\n    expDiff--;\n  } // if all coefficient values are zero after the decimal point and precision is unset, don't add a decimal value.\n  // otherwise concat with the rest of the coefficients\n\n\n  var decimals = c.slice(decimalIdx).join('');\n  var decimalVal = isNumber(precision) && decimals.length || decimals.match(/[1-9]/) ? '.' + decimals : '';\n  var str = c.slice(0, decimalIdx).join('') + decimalVal + 'e' + (e >= 0 ? '+' : '') + newExp.toString();\n  return rounded.sign + str;\n}\n/**\n * Format a number with fixed notation.\n * @param {number | string} value\n * @param {number} [precision=undefined]  Optional number of decimals after the\n *                                        decimal point. null by default.\n */\n\nexport function toFixed(value, precision) {\n  if (isNaN(value) || !isFinite(value)) {\n    return String(value);\n  }\n\n  var splitValue = splitNumber(value);\n  var rounded = typeof precision === 'number' ? roundDigits(splitValue, splitValue.exponent + 1 + precision) : splitValue;\n  var c = rounded.coefficients;\n  var p = rounded.exponent + 1; // exponent may have changed\n  // append zeros if needed\n\n  var pp = p + (precision || 0);\n\n  if (c.length < pp) {\n    c = c.concat(zeros(pp - c.length));\n  } // prepend zeros if needed\n\n\n  if (p < 0) {\n    c = zeros(-p + 1).concat(c);\n    p = 1;\n  } // insert a dot if needed\n\n\n  if (p < c.length) {\n    c.splice(p, 0, p === 0 ? '0.' : '.');\n  }\n\n  return rounded.sign + c.join('');\n}\n/**\n * Format a number in exponential notation. Like '1.23e+5', '2.3e+0', '3.500e-3'\n * @param {number | string} value\n * @param {number} [precision]  Number of digits in formatted output.\n *                              If not provided, the maximum available digits\n *                              is used.\n */\n\nexport function toExponential(value, precision) {\n  if (isNaN(value) || !isFinite(value)) {\n    return String(value);\n  } // round if needed, else create a clone\n\n\n  var split = splitNumber(value);\n  var rounded = precision ? roundDigits(split, precision) : split;\n  var c = rounded.coefficients;\n  var e = rounded.exponent; // append zeros if needed\n\n  if (c.length < precision) {\n    c = c.concat(zeros(precision - c.length));\n  } // format as `C.CCCe+EEE` or `C.CCCe-EEE`\n\n\n  var first = c.shift();\n  return rounded.sign + first + (c.length > 0 ? '.' + c.join('') : '') + 'e' + (e >= 0 ? '+' : '') + e;\n}\n/**\n * Format a number with a certain precision\n * @param {number | string} value\n * @param {number} [precision=undefined] Optional number of digits.\n * @param {{lowerExp: number | undefined, upperExp: number | undefined}} [options]\n *                                       By default:\n *                                         lowerExp = -3 (incl)\n *                                         upper = +5 (excl)\n * @return {string}\n */\n\nexport function toPrecision(value, precision, options) {\n  if (isNaN(value) || !isFinite(value)) {\n    return String(value);\n  } // determine lower and upper bound for exponential notation.\n\n\n  var lowerExp = options && options.lowerExp !== undefined ? options.lowerExp : -3;\n  var upperExp = options && options.upperExp !== undefined ? options.upperExp : 5;\n  var split = splitNumber(value);\n  var rounded = precision ? roundDigits(split, precision) : split;\n\n  if (rounded.exponent < lowerExp || rounded.exponent >= upperExp) {\n    // exponential notation\n    return toExponential(value, precision);\n  } else {\n    var c = rounded.coefficients;\n    var e = rounded.exponent; // append trailing zeros\n\n    if (c.length < precision) {\n      c = c.concat(zeros(precision - c.length));\n    } // append trailing zeros\n    // TODO: simplify the next statement\n\n\n    c = c.concat(zeros(e - c.length + 1 + (c.length < precision ? precision - c.length : 0))); // prepend zeros\n\n    c = zeros(-e).concat(c);\n    var dot = e > 0 ? e : 0;\n\n    if (dot < c.length - 1) {\n      c.splice(dot + 1, 0, '.');\n    }\n\n    return rounded.sign + c.join('');\n  }\n}\n/**\n * Round the number of digits of a number *\n * @param {SplitValue} split       A value split with .splitNumber(value)\n * @param {number} precision  A positive integer\n * @return {SplitValue}\n *              Returns an object containing sign, coefficients, and exponent\n *              with rounded digits\n */\n\nexport function roundDigits(split, precision) {\n  // create a clone\n  var rounded = {\n    sign: split.sign,\n    coefficients: split.coefficients,\n    exponent: split.exponent\n  };\n  var c = rounded.coefficients; // prepend zeros if needed\n\n  while (precision <= 0) {\n    c.unshift(0);\n    rounded.exponent++;\n    precision++;\n  }\n\n  if (c.length > precision) {\n    var removed = c.splice(precision, c.length - precision);\n\n    if (removed[0] >= 5) {\n      var i = precision - 1;\n      c[i]++;\n\n      while (c[i] === 10) {\n        c.pop();\n\n        if (i === 0) {\n          c.unshift(0);\n          rounded.exponent++;\n          i++;\n        }\n\n        i--;\n        c[i]++;\n      }\n    }\n  }\n\n  return rounded;\n}\n/**\n * Create an array filled with zeros.\n * @param {number} length\n * @return {Array}\n */\n\nfunction zeros(length) {\n  var arr = [];\n\n  for (var i = 0; i < length; i++) {\n    arr.push(0);\n  }\n\n  return arr;\n}\n/**\n * Count the number of significant digits of a number.\n *\n * For example:\n *   2.34 returns 3\n *   0.0034 returns 2\n *   120.5e+30 returns 4\n *\n * @param {number} value\n * @return {number} digits   Number of significant digits\n */\n\n\nexport function digits(value) {\n  return value.toExponential().replace(/e.*$/, '') // remove exponential notation\n  .replace(/^0\\.?0*|\\./, '') // remove decimal point and leading zeros\n  .length;\n}\n/**\n * Minimum number added to one that makes the result different than one\n */\n\nexport var DBL_EPSILON = Number.EPSILON || 2.2204460492503130808472633361816E-16;\n/**\n * Compares two floating point numbers.\n * @param {number} x          First value to compare\n * @param {number} y          Second value to compare\n * @param {number} [epsilon]  The maximum relative difference between x and y\n *                            If epsilon is undefined or null, the function will\n *                            test whether x and y are exactly equal.\n * @return {boolean} whether the two numbers are nearly equal\n*/\n\nexport function nearlyEqual(x, y, epsilon) {\n  // if epsilon is null or undefined, test whether x and y are exactly equal\n  if (epsilon === null || epsilon === undefined) {\n    return x === y;\n  }\n\n  if (x === y) {\n    return true;\n  } // NaN\n\n\n  if (isNaN(x) || isNaN(y)) {\n    return false;\n  } // at this point x and y should be finite\n\n\n  if (isFinite(x) && isFinite(y)) {\n    // check numbers are very close, needed when comparing numbers near zero\n    var diff = Math.abs(x - y);\n\n    if (diff < DBL_EPSILON) {\n      return true;\n    } else {\n      // use relative error\n      return diff <= Math.max(Math.abs(x), Math.abs(y)) * epsilon;\n    }\n  } // Infinite and Number or negative Infinite and positive Infinite cases\n\n\n  return false;\n}\n/**\n * Calculate the hyperbolic arccos of a number\n * @param {number} x\n * @return {number}\n */\n\nexport var acosh = Math.acosh || function (x) {\n  return Math.log(Math.sqrt(x * x - 1) + x);\n};\nexport var asinh = Math.asinh || function (x) {\n  return Math.log(Math.sqrt(x * x + 1) + x);\n};\n/**\n * Calculate the hyperbolic arctangent of a number\n * @param {number} x\n * @return {number}\n */\n\nexport var atanh = Math.atanh || function (x) {\n  return Math.log((1 + x) / (1 - x)) / 2;\n};\n/**\n * Calculate the hyperbolic cosine of a number\n * @param {number} x\n * @returns {number}\n */\n\nexport var cosh = Math.cosh || function (x) {\n  return (Math.exp(x) + Math.exp(-x)) / 2;\n};\n/**\n * Calculate the hyperbolic sine of a number\n * @param {number} x\n * @returns {number}\n */\n\nexport var sinh = Math.sinh || function (x) {\n  return (Math.exp(x) - Math.exp(-x)) / 2;\n};\n/**\n * Calculate the hyperbolic tangent of a number\n * @param {number} x\n * @returns {number}\n */\n\nexport var tanh = Math.tanh || function (x) {\n  var e = Math.exp(2 * x);\n  return (e - 1) / (e + 1);\n};","/**\n * Convert a BigNumber to a formatted string representation.\n *\n * Syntax:\n *\n *    format(value)\n *    format(value, options)\n *    format(value, precision)\n *    format(value, fn)\n *\n * Where:\n *\n *    {number} value   The value to be formatted\n *    {Object} options An object with formatting options. Available options:\n *                     {string} notation\n *                         Number notation. Choose from:\n *                         'fixed'          Always use regular number notation.\n *                                          For example '123.40' and '14000000'\n *                         'exponential'    Always use exponential notation.\n *                                          For example '1.234e+2' and '1.4e+7'\n *                         'auto' (default) Regular number notation for numbers\n *                                          having an absolute value between\n *                                          `lower` and `upper` bounds, and uses\n *                                          exponential notation elsewhere.\n *                                          Lower bound is included, upper bound\n *                                          is excluded.\n *                                          For example '123.4' and '1.4e7'.\n *                     {number} precision   A number between 0 and 16 to round\n *                                          the digits of the number.\n *                                          In case of notations 'exponential',\n *                                          'engineering', and 'auto',\n *                                          `precision` defines the total\n *                                          number of significant digits returned.\n *                                          In case of notation 'fixed',\n *                                          `precision` defines the number of\n *                                          significant digits after the decimal\n *                                          point.\n *                                          `precision` is undefined by default.\n *                     {number} lowerExp    Exponent determining the lower boundary\n *                                          for formatting a value with an exponent\n *                                          when `notation='auto`.\n *                                          Default value is `-3`.\n *                     {number} upperExp    Exponent determining the upper boundary\n *                                          for formatting a value with an exponent\n *                                          when `notation='auto`.\n *                                          Default value is `5`.\n *    {Function} fn    A custom formatting function. Can be used to override the\n *                     built-in notations. Function `fn` is called with `value` as\n *                     parameter and must return a string. Is useful for example to\n *                     format all values inside a matrix in a particular way.\n *\n * Examples:\n *\n *    format(6.4)                                        // '6.4'\n *    format(1240000)                                    // '1.24e6'\n *    format(1/3)                                        // '0.3333333333333333'\n *    format(1/3, 3)                                     // '0.333'\n *    format(21385, 2)                                   // '21000'\n *    format(12e8, {notation: 'fixed'})                  // returns '1200000000'\n *    format(2.3,    {notation: 'fixed', precision: 4})  // returns '2.3000'\n *    format(52.8,   {notation: 'exponential'})          // returns '5.28e+1'\n *    format(12400,  {notation: 'engineering'})          // returns '12.400e+3'\n *\n * @param {BigNumber} value\n * @param {Object | Function | number} [options]\n * @return {string} str The formatted value\n */\nexport function format(value, options) {\n  if (typeof options === 'function') {\n    // handle format(value, fn)\n    return options(value);\n  } // handle special cases\n\n\n  if (!value.isFinite()) {\n    return value.isNaN() ? 'NaN' : value.gt(0) ? 'Infinity' : '-Infinity';\n  } // default values for options\n\n\n  var notation = 'auto';\n  var precision;\n\n  if (options !== undefined) {\n    // determine notation from options\n    if (options.notation) {\n      notation = options.notation;\n    } // determine precision from options\n\n\n    if (typeof options === 'number') {\n      precision = options;\n    } else if (options.precision) {\n      precision = options.precision;\n    }\n  } // handle the various notations\n\n\n  switch (notation) {\n    case 'fixed':\n      return toFixed(value, precision);\n\n    case 'exponential':\n      return toExponential(value, precision);\n\n    case 'engineering':\n      return toEngineering(value, precision);\n\n    case 'auto':\n      {\n        // determine lower and upper bound for exponential notation.\n        // TODO: implement support for upper and lower to be BigNumbers themselves\n        var lowerExp = options && options.lowerExp !== undefined ? options.lowerExp : -3;\n        var upperExp = options && options.upperExp !== undefined ? options.upperExp : 5; // handle special case zero\n\n        if (value.isZero()) return '0'; // determine whether or not to output exponential notation\n\n        var str;\n        var rounded = value.toSignificantDigits(precision);\n        var exp = rounded.e;\n\n        if (exp >= lowerExp && exp < upperExp) {\n          // normal number notation\n          str = rounded.toFixed();\n        } else {\n          // exponential notation\n          str = toExponential(value, precision);\n        } // remove trailing zeros after the decimal point\n\n\n        return str.replace(/((\\.\\d*?)(0+))($|e)/, function () {\n          var digits = arguments[2];\n          var e = arguments[4];\n          return digits !== '.' ? digits + e : e;\n        });\n      }\n\n    default:\n      throw new Error('Unknown notation \"' + notation + '\". ' + 'Choose \"auto\", \"exponential\", or \"fixed\".');\n  }\n}\n/**\n * Format a BigNumber in engineering notation. Like '1.23e+6', '2.3e+0', '3.500e-3'\n * @param {BigNumber | string} value\n * @param {number} [precision]        Optional number of significant figures to return.\n */\n\nexport function toEngineering(value, precision) {\n  // find nearest lower multiple of 3 for exponent\n  var e = value.e;\n  var newExp = e % 3 === 0 ? e : e < 0 ? e - 3 - e % 3 : e - e % 3; // find difference in exponents, and calculate the value without exponent\n\n  var valueWithoutExp = value.mul(Math.pow(10, -newExp));\n  var valueStr = valueWithoutExp.toPrecision(precision);\n\n  if (valueStr.indexOf('e') !== -1) {\n    valueStr = valueWithoutExp.toString();\n  }\n\n  return valueStr + 'e' + (e >= 0 ? '+' : '') + newExp.toString();\n}\n/**\n * Format a number in exponential notation. Like '1.23e+5', '2.3e+0', '3.500e-3'\n * @param {BigNumber} value\n * @param {number} [precision]  Number of digits in formatted output.\n *                              If not provided, the maximum available digits\n *                              is used.\n * @returns {string} str\n */\n\nexport function toExponential(value, precision) {\n  if (precision !== undefined) {\n    return value.toExponential(precision - 1); // Note the offset of one\n  } else {\n    return value.toExponential();\n  }\n}\n/**\n * Format a number with fixed notation.\n * @param {BigNumber} value\n * @param {number} [precision=undefined] Optional number of decimals after the\n *                                       decimal point. Undefined by default.\n */\n\nexport function toFixed(value, precision) {\n  return value.toFixed(precision);\n}","import { isBigNumber, isString, typeOf } from './is.js';\nimport { format as formatNumber } from './number.js';\nimport { format as formatBigNumber } from './bignumber/formatter.js';\n/**\n * Check if a text ends with a certain string.\n * @param {string} text\n * @param {string} search\n */\n\nexport function endsWith(text, search) {\n  var start = text.length - search.length;\n  var end = text.length;\n  return text.substring(start, end) === search;\n}\n/**\n * Format a value of any type into a string.\n *\n * Usage:\n *     math.format(value)\n *     math.format(value, precision)\n *\n * When value is a function:\n *\n * - When the function has a property `syntax`, it returns this\n *   syntax description.\n * - In other cases, a string `'function'` is returned.\n *\n * When `value` is an Object:\n *\n * - When the object contains a property `format` being a function, this\n *   function is invoked as `value.format(options)` and the result is returned.\n * - When the object has its own `toString` method, this method is invoked\n *   and the result is returned.\n * - In other cases the function will loop over all object properties and\n *   return JSON object notation like '{\"a\": 2, \"b\": 3}'.\n *\n * Example usage:\n *     math.format(2/7)                // '0.2857142857142857'\n *     math.format(math.pi, 3)         // '3.14'\n *     math.format(new Complex(2, 3))  // '2 + 3i'\n *     math.format('hello')            // '\"hello\"'\n *\n * @param {*} value             Value to be stringified\n * @param {Object | number | Function} [options]  Formatting options. See\n *                                                lib/utils/number:format for a\n *                                                description of the available\n *                                                options.\n * @return {string} str\n */\n\nexport function format(value, options) {\n  if (typeof value === 'number') {\n    return formatNumber(value, options);\n  }\n\n  if (isBigNumber(value)) {\n    return formatBigNumber(value, options);\n  } // note: we use unsafe duck-typing here to check for Fractions, this is\n  // ok here since we're only invoking toString or concatenating its values\n\n\n  if (looksLikeFraction(value)) {\n    if (!options || options.fraction !== 'decimal') {\n      // output as ratio, like '1/3'\n      return value.s * value.n + '/' + value.d;\n    } else {\n      // output as decimal, like '0.(3)'\n      return value.toString();\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return formatArray(value, options);\n  }\n\n  if (isString(value)) {\n    return '\"' + value + '\"';\n  }\n\n  if (typeof value === 'function') {\n    return value.syntax ? String(value.syntax) : 'function';\n  }\n\n  if (value && typeof value === 'object') {\n    if (typeof value.format === 'function') {\n      return value.format(options);\n    } else if (value && value.toString(options) !== {}.toString()) {\n      // this object has a non-native toString method, use that one\n      return value.toString(options);\n    } else {\n      var entries = Object.keys(value).map(key => {\n        return '\"' + key + '\": ' + format(value[key], options);\n      });\n      return '{' + entries.join(', ') + '}';\n    }\n  }\n\n  return String(value);\n}\n/**\n * Stringify a value into a string enclosed in double quotes.\n * Unescaped double quotes and backslashes inside the value are escaped.\n * @param {*} value\n * @return {string}\n */\n\nexport function stringify(value) {\n  var text = String(value);\n  var escaped = '';\n  var i = 0;\n\n  while (i < text.length) {\n    var c = text.charAt(i);\n\n    if (c === '\\\\') {\n      escaped += c;\n      i++;\n      c = text.charAt(i);\n\n      if (c === '' || '\"\\\\/bfnrtu'.indexOf(c) === -1) {\n        escaped += '\\\\'; // no valid escape character -> escape it\n      }\n\n      escaped += c;\n    } else if (c === '\"') {\n      escaped += '\\\\\"';\n    } else {\n      escaped += c;\n    }\n\n    i++;\n  }\n\n  return '\"' + escaped + '\"';\n}\n/**\n * Escape special HTML characters\n * @param {*} value\n * @return {string}\n */\n\nexport function escape(value) {\n  var text = String(value);\n  text = text.replace(/&/g, '&amp;').replace(/\"/g, '&quot;').replace(/'/g, '&#39;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n  return text;\n}\n/**\n * Recursively format an n-dimensional matrix\n * Example output: \"[[1, 2], [3, 4]]\"\n * @param {Array} array\n * @param {Object | number | Function} [options]  Formatting options. See\n *                                                lib/utils/number:format for a\n *                                                description of the available\n *                                                options.\n * @returns {string} str\n */\n\nfunction formatArray(array, options) {\n  if (Array.isArray(array)) {\n    var str = '[';\n    var len = array.length;\n\n    for (var i = 0; i < len; i++) {\n      if (i !== 0) {\n        str += ', ';\n      }\n\n      str += formatArray(array[i], options);\n    }\n\n    str += ']';\n    return str;\n  } else {\n    return format(array, options);\n  }\n}\n/**\n * Check whether a value looks like a Fraction (unsafe duck-type check)\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction looksLikeFraction(value) {\n  return value && typeof value === 'object' && typeof value.s === 'number' && typeof value.n === 'number' && typeof value.d === 'number' || false;\n}\n/**\n * Compare two strings\n * @param {string} x\n * @param {string} y\n * @returns {number}\n */\n\n\nexport function compareText(x, y) {\n  // we don't want to convert numbers to string, only accept string input\n  if (!isString(x)) {\n    throw new TypeError('Unexpected type of argument in function compareText ' + '(expected: string or Array or Matrix, actual: ' + typeOf(x) + ', index: 0)');\n  }\n\n  if (!isString(y)) {\n    throw new TypeError('Unexpected type of argument in function compareText ' + '(expected: string or Array or Matrix, actual: ' + typeOf(y) + ', index: 1)');\n  }\n\n  return x === y ? 0 : x > y ? 1 : -1;\n}","/**\n * Create a range error with the message:\n *     'Dimension mismatch (<actual size> != <expected size>)'\n * @param {number | number[]} actual        The actual size\n * @param {number | number[]} expected      The expected size\n * @param {string} [relation='!=']          Optional relation between actual\n *                                          and expected size: '!=', '<', etc.\n * @extends RangeError\n */\nexport function DimensionError(actual, expected, relation) {\n  if (!(this instanceof DimensionError)) {\n    throw new SyntaxError('Constructor must be called with the new operator');\n  }\n\n  this.actual = actual;\n  this.expected = expected;\n  this.relation = relation;\n  this.message = 'Dimension mismatch (' + (Array.isArray(actual) ? '[' + actual.join(', ') + ']' : actual) + ' ' + (this.relation || '!=') + ' ' + (Array.isArray(expected) ? '[' + expected.join(', ') + ']' : expected) + ')';\n  this.stack = new Error().stack;\n}\nDimensionError.prototype = new RangeError();\nDimensionError.prototype.constructor = RangeError;\nDimensionError.prototype.name = 'DimensionError';\nDimensionError.prototype.isDimensionError = true;","/**\n * Create a range error with the message:\n *     'Index out of range (index < min)'\n *     'Index out of range (index < max)'\n *\n * @param {number} index     The actual index\n * @param {number} [min=0]   Minimum index (included)\n * @param {number} [max]     Maximum index (excluded)\n * @extends RangeError\n */\nexport function IndexError(index, min, max) {\n  if (!(this instanceof IndexError)) {\n    throw new SyntaxError('Constructor must be called with the new operator');\n  }\n\n  this.index = index;\n\n  if (arguments.length < 3) {\n    this.min = 0;\n    this.max = min;\n  } else {\n    this.min = min;\n    this.max = max;\n  }\n\n  if (this.min !== undefined && this.index < this.min) {\n    this.message = 'Index out of range (' + this.index + ' < ' + this.min + ')';\n  } else if (this.max !== undefined && this.index >= this.max) {\n    this.message = 'Index out of range (' + this.index + ' > ' + (this.max - 1) + ')';\n  } else {\n    this.message = 'Index out of range (' + this.index + ')';\n  }\n\n  this.stack = new Error().stack;\n}\nIndexError.prototype = new RangeError();\nIndexError.prototype.constructor = RangeError;\nIndexError.prototype.name = 'IndexError';\nIndexError.prototype.isIndexError = true;","import { isInteger } from './number.js';\nimport { isNumber } from './is.js';\nimport { format } from './string.js';\nimport { DimensionError } from '../error/DimensionError.js';\nimport { IndexError } from '../error/IndexError.js';\n/**\n * Calculate the size of a multi dimensional array.\n * This function checks the size of the first entry, it does not validate\n * whether all dimensions match. (use function `validate` for that)\n * @param {Array} x\n * @Return {Number[]} size\n */\n\nexport function arraySize(x) {\n  var s = [];\n\n  while (Array.isArray(x)) {\n    s.push(x.length);\n    x = x[0];\n  }\n\n  return s;\n}\n/**\n * Recursively validate whether each element in a multi dimensional array\n * has a size corresponding to the provided size array.\n * @param {Array} array    Array to be validated\n * @param {number[]} size  Array with the size of each dimension\n * @param {number} dim   Current dimension\n * @throws DimensionError\n * @private\n */\n\nfunction _validate(array, size, dim) {\n  var i;\n  var len = array.length;\n\n  if (len !== size[dim]) {\n    throw new DimensionError(len, size[dim]);\n  }\n\n  if (dim < size.length - 1) {\n    // recursively validate each child array\n    var dimNext = dim + 1;\n\n    for (i = 0; i < len; i++) {\n      var child = array[i];\n\n      if (!Array.isArray(child)) {\n        throw new DimensionError(size.length - 1, size.length, '<');\n      }\n\n      _validate(array[i], size, dimNext);\n    }\n  } else {\n    // last dimension. none of the childs may be an array\n    for (i = 0; i < len; i++) {\n      if (Array.isArray(array[i])) {\n        throw new DimensionError(size.length + 1, size.length, '>');\n      }\n    }\n  }\n}\n/**\n * Validate whether each element in a multi dimensional array has\n * a size corresponding to the provided size array.\n * @param {Array} array    Array to be validated\n * @param {number[]} size  Array with the size of each dimension\n * @throws DimensionError\n */\n\n\nexport function validate(array, size) {\n  var isScalar = size.length === 0;\n\n  if (isScalar) {\n    // scalar\n    if (Array.isArray(array)) {\n      throw new DimensionError(array.length, 0);\n    }\n  } else {\n    // array\n    _validate(array, size, 0);\n  }\n}\n/**\n * Test whether index is an integer number with index >= 0 and index < length\n * when length is provided\n * @param {number} index    Zero-based index\n * @param {number} [length] Length of the array\n */\n\nexport function validateIndex(index, length) {\n  if (!isNumber(index) || !isInteger(index)) {\n    throw new TypeError('Index must be an integer (value: ' + index + ')');\n  }\n\n  if (index < 0 || typeof length === 'number' && index >= length) {\n    throw new IndexError(index, length);\n  }\n}\n/**\n * Resize a multi dimensional array. The resized array is returned.\n * @param {Array} array         Array to be resized\n * @param {Array.<number>} size Array with the size of each dimension\n * @param {*} [defaultValue=0]  Value to be filled in in new entries,\n *                              zero by default. Specify for example `null`,\n *                              to clearly see entries that are not explicitly\n *                              set.\n * @return {Array} array         The resized array\n */\n\nexport function resize(array, size, defaultValue) {\n  // TODO: add support for scalars, having size=[] ?\n  // check the type of the arguments\n  if (!Array.isArray(array) || !Array.isArray(size)) {\n    throw new TypeError('Array expected');\n  }\n\n  if (size.length === 0) {\n    throw new Error('Resizing to scalar is not supported');\n  } // check whether size contains positive integers\n\n\n  size.forEach(function (value) {\n    if (!isNumber(value) || !isInteger(value) || value < 0) {\n      throw new TypeError('Invalid size, must contain positive integers ' + '(size: ' + format(size) + ')');\n    }\n  }); // recursively resize the array\n\n  var _defaultValue = defaultValue !== undefined ? defaultValue : 0;\n\n  _resize(array, size, 0, _defaultValue);\n\n  return array;\n}\n/**\n * Recursively resize a multi dimensional array\n * @param {Array} array         Array to be resized\n * @param {number[]} size       Array with the size of each dimension\n * @param {number} dim          Current dimension\n * @param {*} [defaultValue]    Value to be filled in in new entries,\n *                              undefined by default.\n * @private\n */\n\nfunction _resize(array, size, dim, defaultValue) {\n  var i;\n  var elem;\n  var oldLen = array.length;\n  var newLen = size[dim];\n  var minLen = Math.min(oldLen, newLen); // apply new length\n\n  array.length = newLen;\n\n  if (dim < size.length - 1) {\n    // non-last dimension\n    var dimNext = dim + 1; // resize existing child arrays\n\n    for (i = 0; i < minLen; i++) {\n      // resize child array\n      elem = array[i];\n\n      if (!Array.isArray(elem)) {\n        elem = [elem]; // add a dimension\n\n        array[i] = elem;\n      }\n\n      _resize(elem, size, dimNext, defaultValue);\n    } // create new child arrays\n\n\n    for (i = minLen; i < newLen; i++) {\n      // get child array\n      elem = [];\n      array[i] = elem; // resize new child array\n\n      _resize(elem, size, dimNext, defaultValue);\n    }\n  } else {\n    // last dimension\n    // remove dimensions of existing values\n    for (i = 0; i < minLen; i++) {\n      while (Array.isArray(array[i])) {\n        array[i] = array[i][0];\n      }\n    } // fill new elements with the default value\n\n\n    for (i = minLen; i < newLen; i++) {\n      array[i] = defaultValue;\n    }\n  }\n}\n/**\n * Re-shape a multi dimensional array to fit the specified dimensions\n * @param {Array} array           Array to be reshaped\n * @param {Array.<number>} sizes  List of sizes for each dimension\n * @returns {Array}               Array whose data has been formatted to fit the\n *                                specified dimensions\n *\n * @throws {DimensionError}       If the product of the new dimension sizes does\n *                                not equal that of the old ones\n */\n\n\nexport function reshape(array, sizes) {\n  var flatArray = flatten(array);\n  var newArray;\n\n  function product(arr) {\n    return arr.reduce((prev, curr) => prev * curr);\n  }\n\n  if (!Array.isArray(array) || !Array.isArray(sizes)) {\n    throw new TypeError('Array expected');\n  }\n\n  if (sizes.length === 0) {\n    throw new DimensionError(0, product(arraySize(array)), '!=');\n  }\n\n  var totalSize = 1;\n\n  for (var sizeIndex = 0; sizeIndex < sizes.length; sizeIndex++) {\n    totalSize *= sizes[sizeIndex];\n  }\n\n  if (flatArray.length !== totalSize) {\n    throw new DimensionError(product(sizes), product(arraySize(array)), '!=');\n  }\n\n  try {\n    newArray = _reshape(flatArray, sizes);\n  } catch (e) {\n    if (e instanceof DimensionError) {\n      throw new DimensionError(product(sizes), product(arraySize(array)), '!=');\n    }\n\n    throw e;\n  }\n\n  return newArray;\n}\n/**\n * Iteratively re-shape a multi dimensional array to fit the specified dimensions\n * @param {Array} array           Array to be reshaped\n * @param {Array.<number>} sizes  List of sizes for each dimension\n * @returns {Array}               Array whose data has been formatted to fit the\n *                                specified dimensions\n */\n\nfunction _reshape(array, sizes) {\n  // testing if there are enough elements for the requested shape\n  var tmpArray = array;\n  var tmpArray2; // for each dimensions starting by the last one and ignoring the first one\n\n  for (var sizeIndex = sizes.length - 1; sizeIndex > 0; sizeIndex--) {\n    var size = sizes[sizeIndex];\n    tmpArray2 = []; // aggregate the elements of the current tmpArray in elements of the requested size\n\n    var length = tmpArray.length / size;\n\n    for (var i = 0; i < length; i++) {\n      tmpArray2.push(tmpArray.slice(i * size, (i + 1) * size));\n    } // set it as the new tmpArray for the next loop turn or for return\n\n\n    tmpArray = tmpArray2;\n  }\n\n  return tmpArray;\n}\n/**\n * Squeeze a multi dimensional array\n * @param {Array} array\n * @param {Array} [size]\n * @returns {Array} returns the array itself\n */\n\n\nexport function squeeze(array, size) {\n  var s = size || arraySize(array); // squeeze outer dimensions\n\n  while (Array.isArray(array) && array.length === 1) {\n    array = array[0];\n    s.shift();\n  } // find the first dimension to be squeezed\n\n\n  var dims = s.length;\n\n  while (s[dims - 1] === 1) {\n    dims--;\n  } // squeeze inner dimensions\n\n\n  if (dims < s.length) {\n    array = _squeeze(array, dims, 0);\n    s.length = dims;\n  }\n\n  return array;\n}\n/**\n * Recursively squeeze a multi dimensional array\n * @param {Array} array\n * @param {number} dims Required number of dimensions\n * @param {number} dim  Current dimension\n * @returns {Array | *} Returns the squeezed array\n * @private\n */\n\nfunction _squeeze(array, dims, dim) {\n  var i, ii;\n\n  if (dim < dims) {\n    var next = dim + 1;\n\n    for (i = 0, ii = array.length; i < ii; i++) {\n      array[i] = _squeeze(array[i], dims, next);\n    }\n  } else {\n    while (Array.isArray(array)) {\n      array = array[0];\n    }\n  }\n\n  return array;\n}\n/**\n * Unsqueeze a multi dimensional array: add dimensions when missing\n *\n * Paramter `size` will be mutated to match the new, unqueezed matrix size.\n *\n * @param {Array} array\n * @param {number} dims       Desired number of dimensions of the array\n * @param {number} [outer]    Number of outer dimensions to be added\n * @param {Array} [size] Current size of array.\n * @returns {Array} returns the array itself\n * @private\n */\n\n\nexport function unsqueeze(array, dims, outer, size) {\n  var s = size || arraySize(array); // unsqueeze outer dimensions\n\n  if (outer) {\n    for (var i = 0; i < outer; i++) {\n      array = [array];\n      s.unshift(1);\n    }\n  } // unsqueeze inner dimensions\n\n\n  array = _unsqueeze(array, dims, 0);\n\n  while (s.length < dims) {\n    s.push(1);\n  }\n\n  return array;\n}\n/**\n * Recursively unsqueeze a multi dimensional array\n * @param {Array} array\n * @param {number} dims Required number of dimensions\n * @param {number} dim  Current dimension\n * @returns {Array | *} Returns the squeezed array\n * @private\n */\n\nfunction _unsqueeze(array, dims, dim) {\n  var i, ii;\n\n  if (Array.isArray(array)) {\n    var next = dim + 1;\n\n    for (i = 0, ii = array.length; i < ii; i++) {\n      array[i] = _unsqueeze(array[i], dims, next);\n    }\n  } else {\n    for (var d = dim; d < dims; d++) {\n      array = [array];\n    }\n  }\n\n  return array;\n}\n/**\n * Flatten a multi dimensional array, put all elements in a one dimensional\n * array\n * @param {Array} array   A multi dimensional array\n * @return {Array}        The flattened array (1 dimensional)\n */\n\n\nexport function flatten(array) {\n  if (!Array.isArray(array)) {\n    // if not an array, return as is\n    return array;\n  }\n\n  var flat = [];\n  array.forEach(function callback(value) {\n    if (Array.isArray(value)) {\n      value.forEach(callback); // traverse through sub-arrays recursively\n    } else {\n      flat.push(value);\n    }\n  });\n  return flat;\n}\n/**\n * A safe map\n * @param {Array} array\n * @param {function} callback\n */\n\nexport function map(array, callback) {\n  return Array.prototype.map.call(array, callback);\n}\n/**\n * A safe forEach\n * @param {Array} array\n * @param {function} callback\n */\n\nexport function forEach(array, callback) {\n  Array.prototype.forEach.call(array, callback);\n}\n/**\n * A safe filter\n * @param {Array} array\n * @param {function} callback\n */\n\nexport function filter(array, callback) {\n  if (arraySize(array).length !== 1) {\n    throw new Error('Only one dimensional matrices supported');\n  }\n\n  return Array.prototype.filter.call(array, callback);\n}\n/**\n * Filter values in a callback given a regular expression\n * @param {Array} array\n * @param {RegExp} regexp\n * @return {Array} Returns the filtered array\n * @private\n */\n\nexport function filterRegExp(array, regexp) {\n  if (arraySize(array).length !== 1) {\n    throw new Error('Only one dimensional matrices supported');\n  }\n\n  return Array.prototype.filter.call(array, entry => regexp.test(entry));\n}\n/**\n * A safe join\n * @param {Array} array\n * @param {string} separator\n */\n\nexport function join(array, separator) {\n  return Array.prototype.join.call(array, separator);\n}\n/**\n * Assign a numeric identifier to every element of a sorted array\n * @param {Array} a  An array\n * @return {Array} An array of objects containing the original value and its identifier\n */\n\nexport function identify(a) {\n  if (!Array.isArray(a)) {\n    throw new TypeError('Array input expected');\n  }\n\n  if (a.length === 0) {\n    return a;\n  }\n\n  var b = [];\n  var count = 0;\n  b[0] = {\n    value: a[0],\n    identifier: 0\n  };\n\n  for (var i = 1; i < a.length; i++) {\n    if (a[i] === a[i - 1]) {\n      count++;\n    } else {\n      count = 0;\n    }\n\n    b.push({\n      value: a[i],\n      identifier: count\n    });\n  }\n\n  return b;\n}\n/**\n * Remove the numeric identifier from the elements\n * @param {array} a  An array\n * @return {array} An array of values without identifiers\n */\n\nexport function generalize(a) {\n  if (!Array.isArray(a)) {\n    throw new TypeError('Array input expected');\n  }\n\n  if (a.length === 0) {\n    return a;\n  }\n\n  var b = [];\n\n  for (var i = 0; i < a.length; i++) {\n    b.push(a[i].value);\n  }\n\n  return b;\n}\n/**\n * Check the datatype of a given object\n * This is a low level implementation that should only be used by\n * parent Matrix classes such as SparseMatrix or DenseMatrix\n * This method does not validate Array Matrix shape\n * @param {Array} array\n * @param {function} typeOf   Callback function to use to determine the type of a value\n * @return string\n */\n\nexport function getArrayDataType(array, typeOf) {\n  var type; // to hold type info\n\n  var length = 0; // to hold length value to ensure it has consistent sizes\n\n  for (var i = 0; i < array.length; i++) {\n    var item = array[i];\n    var isArray = Array.isArray(item); // Saving the target matrix row size\n\n    if (i === 0 && isArray) {\n      length = item.length;\n    } // If the current item is an array but the length does not equal the targetVectorSize\n\n\n    if (isArray && item.length !== length) {\n      return undefined;\n    }\n\n    var itemType = isArray ? getArrayDataType(item, typeOf) // recurse into a nested array\n    : typeOf(item);\n\n    if (type === undefined) {\n      type = itemType; // first item\n    } else if (type !== itemType) {\n      return 'mixed';\n    } else {// we're good, everything has the same type so far\n    }\n  }\n\n  return type;\n}\n/**\n * Return the last item from an array\n * @param array\n * @returns {*}\n */\n\nexport function last(array) {\n  return array[array.length - 1];\n}\n/**\n * Get all but the last element of array.\n */\n\nexport function initial(array) {\n  return array.slice(0, array.length - 1);\n}\n/**\n * Test whether an array or string contains an item\n * @param {Array | string} array\n * @param {*} item\n * @return {boolean}\n */\n\nexport function contains(array, item) {\n  return array.indexOf(item) !== -1;\n}","import { contains } from './array.js';\nimport { pickShallow } from './object.js';\n/**\n * Create a factory function, which can be used to inject dependencies.\n *\n * The created functions are memoized, a consecutive call of the factory\n * with the exact same inputs will return the same function instance.\n * The memoized cache is exposed on `factory.cache` and can be cleared\n * if needed.\n *\n * Example:\n *\n *     const name = 'log'\n *     const dependencies = ['config', 'typed', 'divideScalar', 'Complex']\n *\n *     export const createLog = factory(name, dependencies, ({ typed, config, divideScalar, Complex }) => {\n *       // ... create the function log here and return it\n *     }\n *\n * @param {string} name           Name of the function to be created\n * @param {string[]} dependencies The names of all required dependencies\n * @param {function} create       Callback function called with an object with all dependencies\n * @param {Object} [meta]         Optional object with meta information that will be attached\n *                                to the created factory function as property `meta`.\n * @returns {function}\n */\n\nexport function factory(name, dependencies, create, meta) {\n  function assertAndCreate(scope) {\n    // we only pass the requested dependencies to the factory function\n    // to prevent functions to rely on dependencies that are not explicitly\n    // requested.\n    var deps = pickShallow(scope, dependencies.map(stripOptionalNotation));\n    assertDependencies(name, dependencies, scope);\n    return create(deps);\n  }\n\n  assertAndCreate.isFactory = true;\n  assertAndCreate.fn = name;\n  assertAndCreate.dependencies = dependencies.slice().sort();\n\n  if (meta) {\n    assertAndCreate.meta = meta;\n  }\n\n  return assertAndCreate;\n}\n/**\n * Sort all factories such that when loading in order, the dependencies are resolved.\n *\n * @param {Array} factories\n * @returns {Array} Returns a new array with the sorted factories.\n */\n\nexport function sortFactories(factories) {\n  var factoriesByName = {};\n  factories.forEach(factory => {\n    factoriesByName[factory.fn] = factory;\n  });\n\n  function containsDependency(factory, dependency) {\n    // TODO: detect circular references\n    if (isFactory(factory)) {\n      if (contains(factory.dependencies, dependency.fn || dependency.name)) {\n        return true;\n      }\n\n      if (factory.dependencies.some(d => containsDependency(factoriesByName[d], dependency))) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  var sorted = [];\n\n  function addFactory(factory) {\n    var index = 0;\n\n    while (index < sorted.length && !containsDependency(sorted[index], factory)) {\n      index++;\n    }\n\n    sorted.splice(index, 0, factory);\n  } // sort regular factory functions\n\n\n  factories.filter(isFactory).forEach(addFactory); // sort legacy factory functions AFTER the regular factory functions\n\n  factories.filter(factory => !isFactory(factory)).forEach(addFactory);\n  return sorted;\n} // TODO: comment or cleanup if unused in the end\n\nexport function create(factories) {\n  var scope = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  sortFactories(factories).forEach(factory => factory(scope));\n  return scope;\n}\n/**\n * Test whether an object is a factory. This is the case when it has\n * properties name, dependencies, and a function create.\n * @param {*} obj\n * @returns {boolean}\n */\n\nexport function isFactory(obj) {\n  return typeof obj === 'function' && typeof obj.fn === 'string' && Array.isArray(obj.dependencies);\n}\n/**\n * Assert that all dependencies of a list with dependencies are available in the provided scope.\n *\n * Will throw an exception when there are dependencies missing.\n *\n * @param {string} name   Name for the function to be created. Used to generate a useful error message\n * @param {string[]} dependencies\n * @param {Object} scope\n */\n\nexport function assertDependencies(name, dependencies, scope) {\n  var allDefined = dependencies.filter(dependency => !isOptionalDependency(dependency)) // filter optionals\n  .every(dependency => scope[dependency] !== undefined);\n\n  if (!allDefined) {\n    var missingDependencies = dependencies.filter(dependency => scope[dependency] === undefined); // TODO: create a custom error class for this, a MathjsError or something like that\n\n    throw new Error(\"Cannot create function \\\"\".concat(name, \"\\\", \") + \"some dependencies are missing: \".concat(missingDependencies.map(d => \"\\\"\".concat(d, \"\\\"\")).join(', '), \".\"));\n  }\n}\nexport function isOptionalDependency(dependency) {\n  return dependency && dependency[0] === '?';\n}\nexport function stripOptionalNotation(dependency) {\n  return dependency && dependency[0] === '?' ? dependency.slice(1) : dependency;\n}","/**\n * Create a typed-function which checks the types of the arguments and\n * can match them against multiple provided signatures. The typed-function\n * automatically converts inputs in order to find a matching signature.\n * Typed functions throw informative errors in case of wrong input arguments.\n *\n * See the library [typed-function](https://github.com/josdejong/typed-function)\n * for detailed documentation.\n *\n * Syntax:\n *\n *     math.typed(name, signatures) : function\n *     math.typed(signatures) : function\n *\n * Examples:\n *\n *     // create a typed function with multiple types per argument (type union)\n *     const fn2 = typed({\n *       'number | boolean': function (b) {\n *         return 'b is a number or boolean'\n *       },\n *       'string, number | boolean': function (a, b) {\n *         return 'a is a string, b is a number or boolean'\n *       }\n *     })\n *\n *     // create a typed function with an any type argument\n *     const log = typed({\n *       'string, any': function (event, data) {\n *         console.log('event: ' + event + ', data: ' + JSON.stringify(data))\n *       }\n *     })\n *\n * @param {string} [name]                          Optional name for the typed-function\n * @param {Object<string, function>} signatures   Object with one or multiple function signatures\n * @returns {function} The created typed-function.\n */\nimport { isAccessorNode, isArray, isArrayNode, isAssignmentNode, isBigNumber, isBlockNode, isBoolean, isChain, isComplex, isConditionalNode, isConstantNode, isDate, isDenseMatrix, isFraction, isFunction, isFunctionAssignmentNode, isFunctionNode, isHelp, isIndex, isIndexNode, isMatrix, isNode, isNull, isNumber, isObject, isObjectNode, isOperatorNode, isParenthesisNode, isRange, isRangeNode, isRegExp, isResultSet, isSparseMatrix, isString, isSymbolNode, isUndefined, isUnit } from '../../utils/is.js';\nimport typedFunction from 'typed-function';\nimport { digits } from '../../utils/number.js';\nimport { factory } from '../../utils/factory.js'; // returns a new instance of typed-function\n\nvar _createTyped2 = function _createTyped() {\n  // initially, return the original instance of typed-function\n  // consecutively, return a new instance from typed.create.\n  _createTyped2 = typedFunction.create;\n  return typedFunction;\n};\n\nvar dependencies = ['?BigNumber', '?Complex', '?DenseMatrix', '?Fraction'];\n/**\n * Factory function for creating a new typed instance\n * @param {Object} dependencies   Object with data types like Complex and BigNumber\n * @returns {Function}\n */\n\nexport var createTyped = /* #__PURE__ */factory('typed', dependencies, function createTyped(_ref) {\n  var {\n    BigNumber,\n    Complex,\n    DenseMatrix,\n    Fraction\n  } = _ref;\n\n  // TODO: typed-function must be able to silently ignore signatures with unknown data types\n  // get a new instance of typed-function\n  var typed = _createTyped2(); // define all types. The order of the types determines in which order function\n  // arguments are type-checked (so for performance it's important to put the\n  // most used types first).\n\n\n  typed.types = [{\n    name: 'number',\n    test: isNumber\n  }, {\n    name: 'Complex',\n    test: isComplex\n  }, {\n    name: 'BigNumber',\n    test: isBigNumber\n  }, {\n    name: 'Fraction',\n    test: isFraction\n  }, {\n    name: 'Unit',\n    test: isUnit\n  }, {\n    name: 'string',\n    test: isString\n  }, {\n    name: 'Chain',\n    test: isChain\n  }, {\n    name: 'Array',\n    test: isArray\n  }, {\n    name: 'Matrix',\n    test: isMatrix\n  }, {\n    name: 'DenseMatrix',\n    test: isDenseMatrix\n  }, {\n    name: 'SparseMatrix',\n    test: isSparseMatrix\n  }, {\n    name: 'Range',\n    test: isRange\n  }, {\n    name: 'Index',\n    test: isIndex\n  }, {\n    name: 'boolean',\n    test: isBoolean\n  }, {\n    name: 'ResultSet',\n    test: isResultSet\n  }, {\n    name: 'Help',\n    test: isHelp\n  }, {\n    name: 'function',\n    test: isFunction\n  }, {\n    name: 'Date',\n    test: isDate\n  }, {\n    name: 'RegExp',\n    test: isRegExp\n  }, {\n    name: 'null',\n    test: isNull\n  }, {\n    name: 'undefined',\n    test: isUndefined\n  }, {\n    name: 'AccessorNode',\n    test: isAccessorNode\n  }, {\n    name: 'ArrayNode',\n    test: isArrayNode\n  }, {\n    name: 'AssignmentNode',\n    test: isAssignmentNode\n  }, {\n    name: 'BlockNode',\n    test: isBlockNode\n  }, {\n    name: 'ConditionalNode',\n    test: isConditionalNode\n  }, {\n    name: 'ConstantNode',\n    test: isConstantNode\n  }, {\n    name: 'FunctionNode',\n    test: isFunctionNode\n  }, {\n    name: 'FunctionAssignmentNode',\n    test: isFunctionAssignmentNode\n  }, {\n    name: 'IndexNode',\n    test: isIndexNode\n  }, {\n    name: 'Node',\n    test: isNode\n  }, {\n    name: 'ObjectNode',\n    test: isObjectNode\n  }, {\n    name: 'OperatorNode',\n    test: isOperatorNode\n  }, {\n    name: 'ParenthesisNode',\n    test: isParenthesisNode\n  }, {\n    name: 'RangeNode',\n    test: isRangeNode\n  }, {\n    name: 'SymbolNode',\n    test: isSymbolNode\n  }, {\n    name: 'Object',\n    test: isObject\n  } // order 'Object' last, it matches on other classes too\n  ];\n  typed.conversions = [{\n    from: 'number',\n    to: 'BigNumber',\n    convert: function convert(x) {\n      if (!BigNumber) {\n        throwNoBignumber(x);\n      } // note: conversion from number to BigNumber can fail if x has >15 digits\n\n\n      if (digits(x) > 15) {\n        throw new TypeError('Cannot implicitly convert a number with >15 significant digits to BigNumber ' + '(value: ' + x + '). ' + 'Use function bignumber(x) to convert to BigNumber.');\n      }\n\n      return new BigNumber(x);\n    }\n  }, {\n    from: 'number',\n    to: 'Complex',\n    convert: function convert(x) {\n      if (!Complex) {\n        throwNoComplex(x);\n      }\n\n      return new Complex(x, 0);\n    }\n  }, {\n    from: 'number',\n    to: 'string',\n    convert: function convert(x) {\n      return x + '';\n    }\n  }, {\n    from: 'BigNumber',\n    to: 'Complex',\n    convert: function convert(x) {\n      if (!Complex) {\n        throwNoComplex(x);\n      }\n\n      return new Complex(x.toNumber(), 0);\n    }\n  }, {\n    from: 'Fraction',\n    to: 'BigNumber',\n    convert: function convert(x) {\n      throw new TypeError('Cannot implicitly convert a Fraction to BigNumber or vice versa. ' + 'Use function bignumber(x) to convert to BigNumber or fraction(x) to convert to Fraction.');\n    }\n  }, {\n    from: 'Fraction',\n    to: 'Complex',\n    convert: function convert(x) {\n      if (!Complex) {\n        throwNoComplex(x);\n      }\n\n      return new Complex(x.valueOf(), 0);\n    }\n  }, {\n    from: 'number',\n    to: 'Fraction',\n    convert: function convert(x) {\n      if (!Fraction) {\n        throwNoFraction(x);\n      }\n\n      var f = new Fraction(x);\n\n      if (f.valueOf() !== x) {\n        throw new TypeError('Cannot implicitly convert a number to a Fraction when there will be a loss of precision ' + '(value: ' + x + '). ' + 'Use function fraction(x) to convert to Fraction.');\n      }\n\n      return f;\n    }\n  }, {\n    // FIXME: add conversion from Fraction to number, for example for `sqrt(fraction(1,3))`\n    //  from: 'Fraction',\n    //  to: 'number',\n    //  convert: function (x) {\n    //    return x.valueOf()\n    //  }\n    // }, {\n    from: 'string',\n    to: 'number',\n    convert: function convert(x) {\n      var n = Number(x);\n\n      if (isNaN(n)) {\n        throw new Error('Cannot convert \"' + x + '\" to a number');\n      }\n\n      return n;\n    }\n  }, {\n    from: 'string',\n    to: 'BigNumber',\n    convert: function convert(x) {\n      if (!BigNumber) {\n        throwNoBignumber(x);\n      }\n\n      try {\n        return new BigNumber(x);\n      } catch (err) {\n        throw new Error('Cannot convert \"' + x + '\" to BigNumber');\n      }\n    }\n  }, {\n    from: 'string',\n    to: 'Fraction',\n    convert: function convert(x) {\n      if (!Fraction) {\n        throwNoFraction(x);\n      }\n\n      try {\n        return new Fraction(x);\n      } catch (err) {\n        throw new Error('Cannot convert \"' + x + '\" to Fraction');\n      }\n    }\n  }, {\n    from: 'string',\n    to: 'Complex',\n    convert: function convert(x) {\n      if (!Complex) {\n        throwNoComplex(x);\n      }\n\n      try {\n        return new Complex(x);\n      } catch (err) {\n        throw new Error('Cannot convert \"' + x + '\" to Complex');\n      }\n    }\n  }, {\n    from: 'boolean',\n    to: 'number',\n    convert: function convert(x) {\n      return +x;\n    }\n  }, {\n    from: 'boolean',\n    to: 'BigNumber',\n    convert: function convert(x) {\n      if (!BigNumber) {\n        throwNoBignumber(x);\n      }\n\n      return new BigNumber(+x);\n    }\n  }, {\n    from: 'boolean',\n    to: 'Fraction',\n    convert: function convert(x) {\n      if (!Fraction) {\n        throwNoFraction(x);\n      }\n\n      return new Fraction(+x);\n    }\n  }, {\n    from: 'boolean',\n    to: 'string',\n    convert: function convert(x) {\n      return String(x);\n    }\n  }, {\n    from: 'Array',\n    to: 'Matrix',\n    convert: function convert(array) {\n      if (!DenseMatrix) {\n        throwNoMatrix();\n      }\n\n      return new DenseMatrix(array);\n    }\n  }, {\n    from: 'Matrix',\n    to: 'Array',\n    convert: function convert(matrix) {\n      return matrix.valueOf();\n    }\n  }];\n  return typed;\n});\n\nfunction throwNoBignumber(x) {\n  throw new Error(\"Cannot convert value \".concat(x, \" into a BigNumber: no class 'BigNumber' provided\"));\n}\n\nfunction throwNoComplex(x) {\n  throw new Error(\"Cannot convert value \".concat(x, \" into a Complex number: no class 'Complex' provided\"));\n}\n\nfunction throwNoMatrix() {\n  throw new Error('Cannot convert array into a Matrix: no class \\'DenseMatrix\\' provided');\n}\n\nfunction throwNoFraction(x) {\n  throw new Error(\"Cannot convert value \".concat(x, \" into a Fraction, no class 'Fraction' provided.\"));\n}","import { factory } from '../../utils/factory.js';\nvar name = 'ResultSet';\nvar dependencies = [];\nexport var createResultSet = /* #__PURE__ */factory(name, dependencies, () => {\n  /**\n   * A ResultSet contains a list or results\n   * @class ResultSet\n   * @param {Array} entries\n   * @constructor ResultSet\n   */\n  function ResultSet(entries) {\n    if (!(this instanceof ResultSet)) {\n      throw new SyntaxError('Constructor must be called with the new operator');\n    }\n\n    this.entries = entries || [];\n  }\n  /**\n   * Attach type information\n   */\n\n\n  ResultSet.prototype.type = 'ResultSet';\n  ResultSet.prototype.isResultSet = true;\n  /**\n   * Returns the array with results hold by this ResultSet\n   * @memberof ResultSet\n   * @returns {Array} entries\n   */\n\n  ResultSet.prototype.valueOf = function () {\n    return this.entries;\n  };\n  /**\n   * Returns the stringified results of the ResultSet\n   * @memberof ResultSet\n   * @returns {string} string\n   */\n\n\n  ResultSet.prototype.toString = function () {\n    return '[' + this.entries.join(', ') + ']';\n  };\n  /**\n   * Get a JSON representation of the ResultSet\n   * @memberof ResultSet\n   * @returns {Object} Returns a JSON object structured as:\n   *                   `{\"mathjs\": \"ResultSet\", \"entries\": [...]}`\n   */\n\n\n  ResultSet.prototype.toJSON = function () {\n    return {\n      mathjs: 'ResultSet',\n      entries: this.entries\n    };\n  };\n  /**\n   * Instantiate a ResultSet from a JSON object\n   * @memberof ResultSet\n   * @param {Object} json  A JSON object structured as:\n   *                       `{\"mathjs\": \"ResultSet\", \"entries\": [...]}`\n   * @return {ResultSet}\n   */\n\n\n  ResultSet.fromJSON = function (json) {\n    return new ResultSet(json.entries);\n  };\n\n  return ResultSet;\n}, {\n  isClass: true\n});","/*\r\n *  decimal.js v10.2.1\r\n *  An arbitrary-precision Decimal type for JavaScript.\r\n *  https://github.com/MikeMcl/decimal.js\r\n *  Copyright (c) 2020 Michael Mclaughlin <M8ch88l@gmail.com>\r\n *  MIT Licence\r\n */\r\n\r\n\r\n// -----------------------------------  EDITABLE DEFAULTS  ------------------------------------ //\r\n\r\n\r\n  // The maximum exponent magnitude.\r\n  // The limit on the value of `toExpNeg`, `toExpPos`, `minE` and `maxE`.\r\nvar EXP_LIMIT = 9e15,                      // 0 to 9e15\r\n\r\n  // The limit on the value of `precision`, and on the value of the first argument to\r\n  // `toDecimalPlaces`, `toExponential`, `toFixed`, `toPrecision` and `toSignificantDigits`.\r\n  MAX_DIGITS = 1e9,                        // 0 to 1e9\r\n\r\n  // Base conversion alphabet.\r\n  NUMERALS = '0123456789abcdef',\r\n\r\n  // The natural logarithm of 10 (1025 digits).\r\n  LN10 = '2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058',\r\n\r\n  // Pi (1025 digits).\r\n  PI = '3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789',\r\n\r\n\r\n  // The initial configuration properties of the Decimal constructor.\r\n  DEFAULTS = {\r\n\r\n    // These values must be integers within the stated ranges (inclusive).\r\n    // Most of these values can be changed at run-time using the `Decimal.config` method.\r\n\r\n    // The maximum number of significant digits of the result of a calculation or base conversion.\r\n    // E.g. `Decimal.config({ precision: 20 });`\r\n    precision: 20,                         // 1 to MAX_DIGITS\r\n\r\n    // The rounding mode used when rounding to `precision`.\r\n    //\r\n    // ROUND_UP         0 Away from zero.\r\n    // ROUND_DOWN       1 Towards zero.\r\n    // ROUND_CEIL       2 Towards +Infinity.\r\n    // ROUND_FLOOR      3 Towards -Infinity.\r\n    // ROUND_HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n    // ROUND_HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n    // ROUND_HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n    // ROUND_HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n    // ROUND_HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n    //\r\n    // E.g.\r\n    // `Decimal.rounding = 4;`\r\n    // `Decimal.rounding = Decimal.ROUND_HALF_UP;`\r\n    rounding: 4,                           // 0 to 8\r\n\r\n    // The modulo mode used when calculating the modulus: a mod n.\r\n    // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n    // The remainder (r) is calculated as: r = a - n * q.\r\n    //\r\n    // UP         0 The remainder is positive if the dividend is negative, else is negative.\r\n    // DOWN       1 The remainder has the same sign as the dividend (JavaScript %).\r\n    // FLOOR      3 The remainder has the same sign as the divisor (Python %).\r\n    // HALF_EVEN  6 The IEEE 754 remainder function.\r\n    // EUCLID     9 Euclidian division. q = sign(n) * floor(a / abs(n)). Always positive.\r\n    //\r\n    // Truncated division (1), floored division (3), the IEEE 754 remainder (6), and Euclidian\r\n    // division (9) are commonly used for the modulus operation. The other rounding modes can also\r\n    // be used, but they may not give useful results.\r\n    modulo: 1,                             // 0 to 9\r\n\r\n    // The exponent value at and beneath which `toString` returns exponential notation.\r\n    // JavaScript numbers: -7\r\n    toExpNeg: -7,                          // 0 to -EXP_LIMIT\r\n\r\n    // The exponent value at and above which `toString` returns exponential notation.\r\n    // JavaScript numbers: 21\r\n    toExpPos:  21,                         // 0 to EXP_LIMIT\r\n\r\n    // The minimum exponent value, beneath which underflow to zero occurs.\r\n    // JavaScript numbers: -324  (5e-324)\r\n    minE: -EXP_LIMIT,                      // -1 to -EXP_LIMIT\r\n\r\n    // The maximum exponent value, above which overflow to Infinity occurs.\r\n    // JavaScript numbers: 308  (1.7976931348623157e+308)\r\n    maxE: EXP_LIMIT,                       // 1 to EXP_LIMIT\r\n\r\n    // Whether to use cryptographically-secure random number generation, if available.\r\n    crypto: false                          // true/false\r\n  },\r\n\r\n\r\n// ----------------------------------- END OF EDITABLE DEFAULTS ------------------------------- //\r\n\r\n\r\n  inexact, quadrant,\r\n  external = true,\r\n\r\n  decimalError = '[DecimalError] ',\r\n  invalidArgument = decimalError + 'Invalid argument: ',\r\n  precisionLimitExceeded = decimalError + 'Precision limit exceeded',\r\n  cryptoUnavailable = decimalError + 'crypto unavailable',\r\n\r\n  mathfloor = Math.floor,\r\n  mathpow = Math.pow,\r\n\r\n  isBinary = /^0b([01]+(\\.[01]*)?|\\.[01]+)(p[+-]?\\d+)?$/i,\r\n  isHex = /^0x([0-9a-f]+(\\.[0-9a-f]*)?|\\.[0-9a-f]+)(p[+-]?\\d+)?$/i,\r\n  isOctal = /^0o([0-7]+(\\.[0-7]*)?|\\.[0-7]+)(p[+-]?\\d+)?$/i,\r\n  isDecimal = /^(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i,\r\n\r\n  BASE = 1e7,\r\n  LOG_BASE = 7,\r\n  MAX_SAFE_INTEGER = 9007199254740991,\r\n\r\n  LN10_PRECISION = LN10.length - 1,\r\n  PI_PRECISION = PI.length - 1,\r\n\r\n  // Decimal.prototype object\r\n  P = { name: '[object Decimal]' };\r\n\r\n\r\n// Decimal prototype methods\r\n\r\n\r\n/*\r\n *  absoluteValue             abs\r\n *  ceil\r\n *  comparedTo                cmp\r\n *  cosine                    cos\r\n *  cubeRoot                  cbrt\r\n *  decimalPlaces             dp\r\n *  dividedBy                 div\r\n *  dividedToIntegerBy        divToInt\r\n *  equals                    eq\r\n *  floor\r\n *  greaterThan               gt\r\n *  greaterThanOrEqualTo      gte\r\n *  hyperbolicCosine          cosh\r\n *  hyperbolicSine            sinh\r\n *  hyperbolicTangent         tanh\r\n *  inverseCosine             acos\r\n *  inverseHyperbolicCosine   acosh\r\n *  inverseHyperbolicSine     asinh\r\n *  inverseHyperbolicTangent  atanh\r\n *  inverseSine               asin\r\n *  inverseTangent            atan\r\n *  isFinite\r\n *  isInteger                 isInt\r\n *  isNaN\r\n *  isNegative                isNeg\r\n *  isPositive                isPos\r\n *  isZero\r\n *  lessThan                  lt\r\n *  lessThanOrEqualTo         lte\r\n *  logarithm                 log\r\n *  [maximum]                 [max]\r\n *  [minimum]                 [min]\r\n *  minus                     sub\r\n *  modulo                    mod\r\n *  naturalExponential        exp\r\n *  naturalLogarithm          ln\r\n *  negated                   neg\r\n *  plus                      add\r\n *  precision                 sd\r\n *  round\r\n *  sine                      sin\r\n *  squareRoot                sqrt\r\n *  tangent                   tan\r\n *  times                     mul\r\n *  toBinary\r\n *  toDecimalPlaces           toDP\r\n *  toExponential\r\n *  toFixed\r\n *  toFraction\r\n *  toHexadecimal             toHex\r\n *  toNearest\r\n *  toNumber\r\n *  toOctal\r\n *  toPower                   pow\r\n *  toPrecision\r\n *  toSignificantDigits       toSD\r\n *  toString\r\n *  truncated                 trunc\r\n *  valueOf                   toJSON\r\n */\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the absolute value of this Decimal.\r\n *\r\n */\r\nP.absoluteValue = P.abs = function () {\r\n  var x = new this.constructor(this);\r\n  if (x.s < 0) x.s = 1;\r\n  return finalise(x);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal rounded to a whole number in the\r\n * direction of positive Infinity.\r\n *\r\n */\r\nP.ceil = function () {\r\n  return finalise(new this.constructor(this), this.e + 1, 2);\r\n};\r\n\r\n\r\n/*\r\n * Return\r\n *   1    if the value of this Decimal is greater than the value of `y`,\r\n *  -1    if the value of this Decimal is less than the value of `y`,\r\n *   0    if they have the same value,\r\n *   NaN  if the value of either Decimal is NaN.\r\n *\r\n */\r\nP.comparedTo = P.cmp = function (y) {\r\n  var i, j, xdL, ydL,\r\n    x = this,\r\n    xd = x.d,\r\n    yd = (y = new x.constructor(y)).d,\r\n    xs = x.s,\r\n    ys = y.s;\r\n\r\n  // Either NaN or ±Infinity?\r\n  if (!xd || !yd) {\r\n    return !xs || !ys ? NaN : xs !== ys ? xs : xd === yd ? 0 : !xd ^ xs < 0 ? 1 : -1;\r\n  }\r\n\r\n  // Either zero?\r\n  if (!xd[0] || !yd[0]) return xd[0] ? xs : yd[0] ? -ys : 0;\r\n\r\n  // Signs differ?\r\n  if (xs !== ys) return xs;\r\n\r\n  // Compare exponents.\r\n  if (x.e !== y.e) return x.e > y.e ^ xs < 0 ? 1 : -1;\r\n\r\n  xdL = xd.length;\r\n  ydL = yd.length;\r\n\r\n  // Compare digit by digit.\r\n  for (i = 0, j = xdL < ydL ? xdL : ydL; i < j; ++i) {\r\n    if (xd[i] !== yd[i]) return xd[i] > yd[i] ^ xs < 0 ? 1 : -1;\r\n  }\r\n\r\n  // Compare lengths.\r\n  return xdL === ydL ? 0 : xdL > ydL ^ xs < 0 ? 1 : -1;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the cosine of the value in radians of this Decimal.\r\n *\r\n * Domain: [-Infinity, Infinity]\r\n * Range: [-1, 1]\r\n *\r\n * cos(0)         = 1\r\n * cos(-0)        = 1\r\n * cos(Infinity)  = NaN\r\n * cos(-Infinity) = NaN\r\n * cos(NaN)       = NaN\r\n *\r\n */\r\nP.cosine = P.cos = function () {\r\n  var pr, rm,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (!x.d) return new Ctor(NaN);\r\n\r\n  // cos(0) = cos(-0) = 1\r\n  if (!x.d[0]) return new Ctor(1);\r\n\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n  Ctor.precision = pr + Math.max(x.e, x.sd()) + LOG_BASE;\r\n  Ctor.rounding = 1;\r\n\r\n  x = cosine(Ctor, toLessThanHalfPi(Ctor, x));\r\n\r\n  Ctor.precision = pr;\r\n  Ctor.rounding = rm;\r\n\r\n  return finalise(quadrant == 2 || quadrant == 3 ? x.neg() : x, pr, rm, true);\r\n};\r\n\r\n\r\n/*\r\n *\r\n * Return a new Decimal whose value is the cube root of the value of this Decimal, rounded to\r\n * `precision` significant digits using rounding mode `rounding`.\r\n *\r\n *  cbrt(0)  =  0\r\n *  cbrt(-0) = -0\r\n *  cbrt(1)  =  1\r\n *  cbrt(-1) = -1\r\n *  cbrt(N)  =  N\r\n *  cbrt(-I) = -I\r\n *  cbrt(I)  =  I\r\n *\r\n * Math.cbrt(x) = (x < 0 ? -Math.pow(-x, 1/3) : Math.pow(x, 1/3))\r\n *\r\n */\r\nP.cubeRoot = P.cbrt = function () {\r\n  var e, m, n, r, rep, s, sd, t, t3, t3plusx,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (!x.isFinite() || x.isZero()) return new Ctor(x);\r\n  external = false;\r\n\r\n  // Initial estimate.\r\n  s = x.s * mathpow(x.s * x, 1 / 3);\r\n\r\n   // Math.cbrt underflow/overflow?\r\n   // Pass x to Math.pow as integer, then adjust the exponent of the result.\r\n  if (!s || Math.abs(s) == 1 / 0) {\r\n    n = digitsToString(x.d);\r\n    e = x.e;\r\n\r\n    // Adjust n exponent so it is a multiple of 3 away from x exponent.\r\n    if (s = (e - n.length + 1) % 3) n += (s == 1 || s == -2 ? '0' : '00');\r\n    s = mathpow(n, 1 / 3);\r\n\r\n    // Rarely, e may be one less than the result exponent value.\r\n    e = mathfloor((e + 1) / 3) - (e % 3 == (e < 0 ? -1 : 2));\r\n\r\n    if (s == 1 / 0) {\r\n      n = '5e' + e;\r\n    } else {\r\n      n = s.toExponential();\r\n      n = n.slice(0, n.indexOf('e') + 1) + e;\r\n    }\r\n\r\n    r = new Ctor(n);\r\n    r.s = x.s;\r\n  } else {\r\n    r = new Ctor(s.toString());\r\n  }\r\n\r\n  sd = (e = Ctor.precision) + 3;\r\n\r\n  // Halley's method.\r\n  // TODO? Compare Newton's method.\r\n  for (;;) {\r\n    t = r;\r\n    t3 = t.times(t).times(t);\r\n    t3plusx = t3.plus(x);\r\n    r = divide(t3plusx.plus(x).times(t), t3plusx.plus(t3), sd + 2, 1);\r\n\r\n    // TODO? Replace with for-loop and checkRoundingDigits.\r\n    if (digitsToString(t.d).slice(0, sd) === (n = digitsToString(r.d)).slice(0, sd)) {\r\n      n = n.slice(sd - 3, sd + 1);\r\n\r\n      // The 4th rounding digit may be in error by -1 so if the 4 rounding digits are 9999 or 4999\r\n      // , i.e. approaching a rounding boundary, continue the iteration.\r\n      if (n == '9999' || !rep && n == '4999') {\r\n\r\n        // On the first iteration only, check to see if rounding up gives the exact result as the\r\n        // nines may infinitely repeat.\r\n        if (!rep) {\r\n          finalise(t, e + 1, 0);\r\n\r\n          if (t.times(t).times(t).eq(x)) {\r\n            r = t;\r\n            break;\r\n          }\r\n        }\r\n\r\n        sd += 4;\r\n        rep = 1;\r\n      } else {\r\n\r\n        // If the rounding digits are null, 0{0,4} or 50{0,3}, check for an exact result.\r\n        // If not, then there are further digits and m will be truthy.\r\n        if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n          // Truncate to the first rounding digit.\r\n          finalise(r, e + 1, 1);\r\n          m = !r.times(r).times(r).eq(x);\r\n        }\r\n\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  external = true;\r\n\r\n  return finalise(r, e, Ctor.rounding, m);\r\n};\r\n\r\n\r\n/*\r\n * Return the number of decimal places of the value of this Decimal.\r\n *\r\n */\r\nP.decimalPlaces = P.dp = function () {\r\n  var w,\r\n    d = this.d,\r\n    n = NaN;\r\n\r\n  if (d) {\r\n    w = d.length - 1;\r\n    n = (w - mathfloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n    // Subtract the number of trailing zeros of the last word.\r\n    w = d[w];\r\n    if (w) for (; w % 10 == 0; w /= 10) n--;\r\n    if (n < 0) n = 0;\r\n  }\r\n\r\n  return n;\r\n};\r\n\r\n\r\n/*\r\n *  n / 0 = I\r\n *  n / N = N\r\n *  n / I = 0\r\n *  0 / n = 0\r\n *  0 / 0 = N\r\n *  0 / N = N\r\n *  0 / I = 0\r\n *  N / n = N\r\n *  N / 0 = N\r\n *  N / N = N\r\n *  N / I = N\r\n *  I / n = I\r\n *  I / 0 = I\r\n *  I / N = N\r\n *  I / I = N\r\n *\r\n * Return a new Decimal whose value is the value of this Decimal divided by `y`, rounded to\r\n * `precision` significant digits using rounding mode `rounding`.\r\n *\r\n */\r\nP.dividedBy = P.div = function (y) {\r\n  return divide(this, new this.constructor(y));\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the integer part of dividing the value of this Decimal\r\n * by the value of `y`, rounded to `precision` significant digits using rounding mode `rounding`.\r\n *\r\n */\r\nP.dividedToIntegerBy = P.divToInt = function (y) {\r\n  var x = this,\r\n    Ctor = x.constructor;\r\n  return finalise(divide(x, new Ctor(y), 0, 1, 1), Ctor.precision, Ctor.rounding);\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is equal to the value of `y`, otherwise return false.\r\n *\r\n */\r\nP.equals = P.eq = function (y) {\r\n  return this.cmp(y) === 0;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal rounded to a whole number in the\r\n * direction of negative Infinity.\r\n *\r\n */\r\nP.floor = function () {\r\n  return finalise(new this.constructor(this), this.e + 1, 3);\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is greater than the value of `y`, otherwise return\r\n * false.\r\n *\r\n */\r\nP.greaterThan = P.gt = function (y) {\r\n  return this.cmp(y) > 0;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is greater than or equal to the value of `y`,\r\n * otherwise return false.\r\n *\r\n */\r\nP.greaterThanOrEqualTo = P.gte = function (y) {\r\n  var k = this.cmp(y);\r\n  return k == 1 || k === 0;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the hyperbolic cosine of the value in radians of this\r\n * Decimal.\r\n *\r\n * Domain: [-Infinity, Infinity]\r\n * Range: [1, Infinity]\r\n *\r\n * cosh(x) = 1 + x^2/2! + x^4/4! + x^6/6! + ...\r\n *\r\n * cosh(0)         = 1\r\n * cosh(-0)        = 1\r\n * cosh(Infinity)  = Infinity\r\n * cosh(-Infinity) = Infinity\r\n * cosh(NaN)       = NaN\r\n *\r\n *  x        time taken (ms)   result\r\n * 1000      9                 9.8503555700852349694e+433\r\n * 10000     25                4.4034091128314607936e+4342\r\n * 100000    171               1.4033316802130615897e+43429\r\n * 1000000   3817              1.5166076984010437725e+434294\r\n * 10000000  abandoned after 2 minute wait\r\n *\r\n * TODO? Compare performance of cosh(x) = 0.5 * (exp(x) + exp(-x))\r\n *\r\n */\r\nP.hyperbolicCosine = P.cosh = function () {\r\n  var k, n, pr, rm, len,\r\n    x = this,\r\n    Ctor = x.constructor,\r\n    one = new Ctor(1);\r\n\r\n  if (!x.isFinite()) return new Ctor(x.s ? 1 / 0 : NaN);\r\n  if (x.isZero()) return one;\r\n\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n  Ctor.precision = pr + Math.max(x.e, x.sd()) + 4;\r\n  Ctor.rounding = 1;\r\n  len = x.d.length;\r\n\r\n  // Argument reduction: cos(4x) = 1 - 8cos^2(x) + 8cos^4(x) + 1\r\n  // i.e. cos(x) = 1 - cos^2(x/4)(8 - 8cos^2(x/4))\r\n\r\n  // Estimate the optimum number of times to use the argument reduction.\r\n  // TODO? Estimation reused from cosine() and may not be optimal here.\r\n  if (len < 32) {\r\n    k = Math.ceil(len / 3);\r\n    n = (1 / tinyPow(4, k)).toString();\r\n  } else {\r\n    k = 16;\r\n    n = '2.3283064365386962890625e-10';\r\n  }\r\n\r\n  x = taylorSeries(Ctor, 1, x.times(n), new Ctor(1), true);\r\n\r\n  // Reverse argument reduction\r\n  var cosh2_x,\r\n    i = k,\r\n    d8 = new Ctor(8);\r\n  for (; i--;) {\r\n    cosh2_x = x.times(x);\r\n    x = one.minus(cosh2_x.times(d8.minus(cosh2_x.times(d8))));\r\n  }\r\n\r\n  return finalise(x, Ctor.precision = pr, Ctor.rounding = rm, true);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the hyperbolic sine of the value in radians of this\r\n * Decimal.\r\n *\r\n * Domain: [-Infinity, Infinity]\r\n * Range: [-Infinity, Infinity]\r\n *\r\n * sinh(x) = x + x^3/3! + x^5/5! + x^7/7! + ...\r\n *\r\n * sinh(0)         = 0\r\n * sinh(-0)        = -0\r\n * sinh(Infinity)  = Infinity\r\n * sinh(-Infinity) = -Infinity\r\n * sinh(NaN)       = NaN\r\n *\r\n * x        time taken (ms)\r\n * 10       2 ms\r\n * 100      5 ms\r\n * 1000     14 ms\r\n * 10000    82 ms\r\n * 100000   886 ms            1.4033316802130615897e+43429\r\n * 200000   2613 ms\r\n * 300000   5407 ms\r\n * 400000   8824 ms\r\n * 500000   13026 ms          8.7080643612718084129e+217146\r\n * 1000000  48543 ms\r\n *\r\n * TODO? Compare performance of sinh(x) = 0.5 * (exp(x) - exp(-x))\r\n *\r\n */\r\nP.hyperbolicSine = P.sinh = function () {\r\n  var k, pr, rm, len,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (!x.isFinite() || x.isZero()) return new Ctor(x);\r\n\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n  Ctor.precision = pr + Math.max(x.e, x.sd()) + 4;\r\n  Ctor.rounding = 1;\r\n  len = x.d.length;\r\n\r\n  if (len < 3) {\r\n    x = taylorSeries(Ctor, 2, x, x, true);\r\n  } else {\r\n\r\n    // Alternative argument reduction: sinh(3x) = sinh(x)(3 + 4sinh^2(x))\r\n    // i.e. sinh(x) = sinh(x/3)(3 + 4sinh^2(x/3))\r\n    // 3 multiplications and 1 addition\r\n\r\n    // Argument reduction: sinh(5x) = sinh(x)(5 + sinh^2(x)(20 + 16sinh^2(x)))\r\n    // i.e. sinh(x) = sinh(x/5)(5 + sinh^2(x/5)(20 + 16sinh^2(x/5)))\r\n    // 4 multiplications and 2 additions\r\n\r\n    // Estimate the optimum number of times to use the argument reduction.\r\n    k = 1.4 * Math.sqrt(len);\r\n    k = k > 16 ? 16 : k | 0;\r\n\r\n    x = x.times(1 / tinyPow(5, k));\r\n    x = taylorSeries(Ctor, 2, x, x, true);\r\n\r\n    // Reverse argument reduction\r\n    var sinh2_x,\r\n      d5 = new Ctor(5),\r\n      d16 = new Ctor(16),\r\n      d20 = new Ctor(20);\r\n    for (; k--;) {\r\n      sinh2_x = x.times(x);\r\n      x = x.times(d5.plus(sinh2_x.times(d16.times(sinh2_x).plus(d20))));\r\n    }\r\n  }\r\n\r\n  Ctor.precision = pr;\r\n  Ctor.rounding = rm;\r\n\r\n  return finalise(x, pr, rm, true);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the hyperbolic tangent of the value in radians of this\r\n * Decimal.\r\n *\r\n * Domain: [-Infinity, Infinity]\r\n * Range: [-1, 1]\r\n *\r\n * tanh(x) = sinh(x) / cosh(x)\r\n *\r\n * tanh(0)         = 0\r\n * tanh(-0)        = -0\r\n * tanh(Infinity)  = 1\r\n * tanh(-Infinity) = -1\r\n * tanh(NaN)       = NaN\r\n *\r\n */\r\nP.hyperbolicTangent = P.tanh = function () {\r\n  var pr, rm,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (!x.isFinite()) return new Ctor(x.s);\r\n  if (x.isZero()) return new Ctor(x);\r\n\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n  Ctor.precision = pr + 7;\r\n  Ctor.rounding = 1;\r\n\r\n  return divide(x.sinh(), x.cosh(), Ctor.precision = pr, Ctor.rounding = rm);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the arccosine (inverse cosine) in radians of the value of\r\n * this Decimal.\r\n *\r\n * Domain: [-1, 1]\r\n * Range: [0, pi]\r\n *\r\n * acos(x) = pi/2 - asin(x)\r\n *\r\n * acos(0)       = pi/2\r\n * acos(-0)      = pi/2\r\n * acos(1)       = 0\r\n * acos(-1)      = pi\r\n * acos(1/2)     = pi/3\r\n * acos(-1/2)    = 2*pi/3\r\n * acos(|x| > 1) = NaN\r\n * acos(NaN)     = NaN\r\n *\r\n */\r\nP.inverseCosine = P.acos = function () {\r\n  var halfPi,\r\n    x = this,\r\n    Ctor = x.constructor,\r\n    k = x.abs().cmp(1),\r\n    pr = Ctor.precision,\r\n    rm = Ctor.rounding;\r\n\r\n  if (k !== -1) {\r\n    return k === 0\r\n      // |x| is 1\r\n      ? x.isNeg() ? getPi(Ctor, pr, rm) : new Ctor(0)\r\n      // |x| > 1 or x is NaN\r\n      : new Ctor(NaN);\r\n  }\r\n\r\n  if (x.isZero()) return getPi(Ctor, pr + 4, rm).times(0.5);\r\n\r\n  // TODO? Special case acos(0.5) = pi/3 and acos(-0.5) = 2*pi/3\r\n\r\n  Ctor.precision = pr + 6;\r\n  Ctor.rounding = 1;\r\n\r\n  x = x.asin();\r\n  halfPi = getPi(Ctor, pr + 4, rm).times(0.5);\r\n\r\n  Ctor.precision = pr;\r\n  Ctor.rounding = rm;\r\n\r\n  return halfPi.minus(x);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the inverse of the hyperbolic cosine in radians of the\r\n * value of this Decimal.\r\n *\r\n * Domain: [1, Infinity]\r\n * Range: [0, Infinity]\r\n *\r\n * acosh(x) = ln(x + sqrt(x^2 - 1))\r\n *\r\n * acosh(x < 1)     = NaN\r\n * acosh(NaN)       = NaN\r\n * acosh(Infinity)  = Infinity\r\n * acosh(-Infinity) = NaN\r\n * acosh(0)         = NaN\r\n * acosh(-0)        = NaN\r\n * acosh(1)         = 0\r\n * acosh(-1)        = NaN\r\n *\r\n */\r\nP.inverseHyperbolicCosine = P.acosh = function () {\r\n  var pr, rm,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (x.lte(1)) return new Ctor(x.eq(1) ? 0 : NaN);\r\n  if (!x.isFinite()) return new Ctor(x);\r\n\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n  Ctor.precision = pr + Math.max(Math.abs(x.e), x.sd()) + 4;\r\n  Ctor.rounding = 1;\r\n  external = false;\r\n\r\n  x = x.times(x).minus(1).sqrt().plus(x);\r\n\r\n  external = true;\r\n  Ctor.precision = pr;\r\n  Ctor.rounding = rm;\r\n\r\n  return x.ln();\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the inverse of the hyperbolic sine in radians of the value\r\n * of this Decimal.\r\n *\r\n * Domain: [-Infinity, Infinity]\r\n * Range: [-Infinity, Infinity]\r\n *\r\n * asinh(x) = ln(x + sqrt(x^2 + 1))\r\n *\r\n * asinh(NaN)       = NaN\r\n * asinh(Infinity)  = Infinity\r\n * asinh(-Infinity) = -Infinity\r\n * asinh(0)         = 0\r\n * asinh(-0)        = -0\r\n *\r\n */\r\nP.inverseHyperbolicSine = P.asinh = function () {\r\n  var pr, rm,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (!x.isFinite() || x.isZero()) return new Ctor(x);\r\n\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n  Ctor.precision = pr + 2 * Math.max(Math.abs(x.e), x.sd()) + 6;\r\n  Ctor.rounding = 1;\r\n  external = false;\r\n\r\n  x = x.times(x).plus(1).sqrt().plus(x);\r\n\r\n  external = true;\r\n  Ctor.precision = pr;\r\n  Ctor.rounding = rm;\r\n\r\n  return x.ln();\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the inverse of the hyperbolic tangent in radians of the\r\n * value of this Decimal.\r\n *\r\n * Domain: [-1, 1]\r\n * Range: [-Infinity, Infinity]\r\n *\r\n * atanh(x) = 0.5 * ln((1 + x) / (1 - x))\r\n *\r\n * atanh(|x| > 1)   = NaN\r\n * atanh(NaN)       = NaN\r\n * atanh(Infinity)  = NaN\r\n * atanh(-Infinity) = NaN\r\n * atanh(0)         = 0\r\n * atanh(-0)        = -0\r\n * atanh(1)         = Infinity\r\n * atanh(-1)        = -Infinity\r\n *\r\n */\r\nP.inverseHyperbolicTangent = P.atanh = function () {\r\n  var pr, rm, wpr, xsd,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (!x.isFinite()) return new Ctor(NaN);\r\n  if (x.e >= 0) return new Ctor(x.abs().eq(1) ? x.s / 0 : x.isZero() ? x : NaN);\r\n\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n  xsd = x.sd();\r\n\r\n  if (Math.max(xsd, pr) < 2 * -x.e - 1) return finalise(new Ctor(x), pr, rm, true);\r\n\r\n  Ctor.precision = wpr = xsd - x.e;\r\n\r\n  x = divide(x.plus(1), new Ctor(1).minus(x), wpr + pr, 1);\r\n\r\n  Ctor.precision = pr + 4;\r\n  Ctor.rounding = 1;\r\n\r\n  x = x.ln();\r\n\r\n  Ctor.precision = pr;\r\n  Ctor.rounding = rm;\r\n\r\n  return x.times(0.5);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the arcsine (inverse sine) in radians of the value of this\r\n * Decimal.\r\n *\r\n * Domain: [-Infinity, Infinity]\r\n * Range: [-pi/2, pi/2]\r\n *\r\n * asin(x) = 2*atan(x/(1 + sqrt(1 - x^2)))\r\n *\r\n * asin(0)       = 0\r\n * asin(-0)      = -0\r\n * asin(1/2)     = pi/6\r\n * asin(-1/2)    = -pi/6\r\n * asin(1)       = pi/2\r\n * asin(-1)      = -pi/2\r\n * asin(|x| > 1) = NaN\r\n * asin(NaN)     = NaN\r\n *\r\n * TODO? Compare performance of Taylor series.\r\n *\r\n */\r\nP.inverseSine = P.asin = function () {\r\n  var halfPi, k,\r\n    pr, rm,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (x.isZero()) return new Ctor(x);\r\n\r\n  k = x.abs().cmp(1);\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n\r\n  if (k !== -1) {\r\n\r\n    // |x| is 1\r\n    if (k === 0) {\r\n      halfPi = getPi(Ctor, pr + 4, rm).times(0.5);\r\n      halfPi.s = x.s;\r\n      return halfPi;\r\n    }\r\n\r\n    // |x| > 1 or x is NaN\r\n    return new Ctor(NaN);\r\n  }\r\n\r\n  // TODO? Special case asin(1/2) = pi/6 and asin(-1/2) = -pi/6\r\n\r\n  Ctor.precision = pr + 6;\r\n  Ctor.rounding = 1;\r\n\r\n  x = x.div(new Ctor(1).minus(x.times(x)).sqrt().plus(1)).atan();\r\n\r\n  Ctor.precision = pr;\r\n  Ctor.rounding = rm;\r\n\r\n  return x.times(2);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the arctangent (inverse tangent) in radians of the value\r\n * of this Decimal.\r\n *\r\n * Domain: [-Infinity, Infinity]\r\n * Range: [-pi/2, pi/2]\r\n *\r\n * atan(x) = x - x^3/3 + x^5/5 - x^7/7 + ...\r\n *\r\n * atan(0)         = 0\r\n * atan(-0)        = -0\r\n * atan(1)         = pi/4\r\n * atan(-1)        = -pi/4\r\n * atan(Infinity)  = pi/2\r\n * atan(-Infinity) = -pi/2\r\n * atan(NaN)       = NaN\r\n *\r\n */\r\nP.inverseTangent = P.atan = function () {\r\n  var i, j, k, n, px, t, r, wpr, x2,\r\n    x = this,\r\n    Ctor = x.constructor,\r\n    pr = Ctor.precision,\r\n    rm = Ctor.rounding;\r\n\r\n  if (!x.isFinite()) {\r\n    if (!x.s) return new Ctor(NaN);\r\n    if (pr + 4 <= PI_PRECISION) {\r\n      r = getPi(Ctor, pr + 4, rm).times(0.5);\r\n      r.s = x.s;\r\n      return r;\r\n    }\r\n  } else if (x.isZero()) {\r\n    return new Ctor(x);\r\n  } else if (x.abs().eq(1) && pr + 4 <= PI_PRECISION) {\r\n    r = getPi(Ctor, pr + 4, rm).times(0.25);\r\n    r.s = x.s;\r\n    return r;\r\n  }\r\n\r\n  Ctor.precision = wpr = pr + 10;\r\n  Ctor.rounding = 1;\r\n\r\n  // TODO? if (x >= 1 && pr <= PI_PRECISION) atan(x) = halfPi * x.s - atan(1 / x);\r\n\r\n  // Argument reduction\r\n  // Ensure |x| < 0.42\r\n  // atan(x) = 2 * atan(x / (1 + sqrt(1 + x^2)))\r\n\r\n  k = Math.min(28, wpr / LOG_BASE + 2 | 0);\r\n\r\n  for (i = k; i; --i) x = x.div(x.times(x).plus(1).sqrt().plus(1));\r\n\r\n  external = false;\r\n\r\n  j = Math.ceil(wpr / LOG_BASE);\r\n  n = 1;\r\n  x2 = x.times(x);\r\n  r = new Ctor(x);\r\n  px = x;\r\n\r\n  // atan(x) = x - x^3/3 + x^5/5 - x^7/7 + ...\r\n  for (; i !== -1;) {\r\n    px = px.times(x2);\r\n    t = r.minus(px.div(n += 2));\r\n\r\n    px = px.times(x2);\r\n    r = t.plus(px.div(n += 2));\r\n\r\n    if (r.d[j] !== void 0) for (i = j; r.d[i] === t.d[i] && i--;);\r\n  }\r\n\r\n  if (k) r = r.times(2 << (k - 1));\r\n\r\n  external = true;\r\n\r\n  return finalise(r, Ctor.precision = pr, Ctor.rounding = rm, true);\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is a finite number, otherwise return false.\r\n *\r\n */\r\nP.isFinite = function () {\r\n  return !!this.d;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is an integer, otherwise return false.\r\n *\r\n */\r\nP.isInteger = P.isInt = function () {\r\n  return !!this.d && mathfloor(this.e / LOG_BASE) > this.d.length - 2;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is NaN, otherwise return false.\r\n *\r\n */\r\nP.isNaN = function () {\r\n  return !this.s;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is negative, otherwise return false.\r\n *\r\n */\r\nP.isNegative = P.isNeg = function () {\r\n  return this.s < 0;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is positive, otherwise return false.\r\n *\r\n */\r\nP.isPositive = P.isPos = function () {\r\n  return this.s > 0;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is 0 or -0, otherwise return false.\r\n *\r\n */\r\nP.isZero = function () {\r\n  return !!this.d && this.d[0] === 0;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is less than `y`, otherwise return false.\r\n *\r\n */\r\nP.lessThan = P.lt = function (y) {\r\n  return this.cmp(y) < 0;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is less than or equal to `y`, otherwise return false.\r\n *\r\n */\r\nP.lessThanOrEqualTo = P.lte = function (y) {\r\n  return this.cmp(y) < 1;\r\n};\r\n\r\n\r\n/*\r\n * Return the logarithm of the value of this Decimal to the specified base, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * If no base is specified, return log[10](arg).\r\n *\r\n * log[base](arg) = ln(arg) / ln(base)\r\n *\r\n * The result will always be correctly rounded if the base of the log is 10, and 'almost always'\r\n * otherwise:\r\n *\r\n * Depending on the rounding mode, the result may be incorrectly rounded if the first fifteen\r\n * rounding digits are [49]99999999999999 or [50]00000000000000. In that case, the maximum error\r\n * between the result and the correctly rounded result will be one ulp (unit in the last place).\r\n *\r\n * log[-b](a)       = NaN\r\n * log[0](a)        = NaN\r\n * log[1](a)        = NaN\r\n * log[NaN](a)      = NaN\r\n * log[Infinity](a) = NaN\r\n * log[b](0)        = -Infinity\r\n * log[b](-0)       = -Infinity\r\n * log[b](-a)       = NaN\r\n * log[b](1)        = 0\r\n * log[b](Infinity) = Infinity\r\n * log[b](NaN)      = NaN\r\n *\r\n * [base] {number|string|Decimal} The base of the logarithm.\r\n *\r\n */\r\nP.logarithm = P.log = function (base) {\r\n  var isBase10, d, denominator, k, inf, num, sd, r,\r\n    arg = this,\r\n    Ctor = arg.constructor,\r\n    pr = Ctor.precision,\r\n    rm = Ctor.rounding,\r\n    guard = 5;\r\n\r\n  // Default base is 10.\r\n  if (base == null) {\r\n    base = new Ctor(10);\r\n    isBase10 = true;\r\n  } else {\r\n    base = new Ctor(base);\r\n    d = base.d;\r\n\r\n    // Return NaN if base is negative, or non-finite, or is 0 or 1.\r\n    if (base.s < 0 || !d || !d[0] || base.eq(1)) return new Ctor(NaN);\r\n\r\n    isBase10 = base.eq(10);\r\n  }\r\n\r\n  d = arg.d;\r\n\r\n  // Is arg negative, non-finite, 0 or 1?\r\n  if (arg.s < 0 || !d || !d[0] || arg.eq(1)) {\r\n    return new Ctor(d && !d[0] ? -1 / 0 : arg.s != 1 ? NaN : d ? 0 : 1 / 0);\r\n  }\r\n\r\n  // The result will have a non-terminating decimal expansion if base is 10 and arg is not an\r\n  // integer power of 10.\r\n  if (isBase10) {\r\n    if (d.length > 1) {\r\n      inf = true;\r\n    } else {\r\n      for (k = d[0]; k % 10 === 0;) k /= 10;\r\n      inf = k !== 1;\r\n    }\r\n  }\r\n\r\n  external = false;\r\n  sd = pr + guard;\r\n  num = naturalLogarithm(arg, sd);\r\n  denominator = isBase10 ? getLn10(Ctor, sd + 10) : naturalLogarithm(base, sd);\r\n\r\n  // The result will have 5 rounding digits.\r\n  r = divide(num, denominator, sd, 1);\r\n\r\n  // If at a rounding boundary, i.e. the result's rounding digits are [49]9999 or [50]0000,\r\n  // calculate 10 further digits.\r\n  //\r\n  // If the result is known to have an infinite decimal expansion, repeat this until it is clear\r\n  // that the result is above or below the boundary. Otherwise, if after calculating the 10\r\n  // further digits, the last 14 are nines, round up and assume the result is exact.\r\n  // Also assume the result is exact if the last 14 are zero.\r\n  //\r\n  // Example of a result that will be incorrectly rounded:\r\n  // log[1048576](4503599627370502) = 2.60000000000000009610279511444746...\r\n  // The above result correctly rounded using ROUND_CEIL to 1 decimal place should be 2.7, but it\r\n  // will be given as 2.6 as there are 15 zeros immediately after the requested decimal place, so\r\n  // the exact result would be assumed to be 2.6, which rounded using ROUND_CEIL to 1 decimal\r\n  // place is still 2.6.\r\n  if (checkRoundingDigits(r.d, k = pr, rm)) {\r\n\r\n    do {\r\n      sd += 10;\r\n      num = naturalLogarithm(arg, sd);\r\n      denominator = isBase10 ? getLn10(Ctor, sd + 10) : naturalLogarithm(base, sd);\r\n      r = divide(num, denominator, sd, 1);\r\n\r\n      if (!inf) {\r\n\r\n        // Check for 14 nines from the 2nd rounding digit, as the first may be 4.\r\n        if (+digitsToString(r.d).slice(k + 1, k + 15) + 1 == 1e14) {\r\n          r = finalise(r, pr + 1, 0);\r\n        }\r\n\r\n        break;\r\n      }\r\n    } while (checkRoundingDigits(r.d, k += 10, rm));\r\n  }\r\n\r\n  external = true;\r\n\r\n  return finalise(r, pr, rm);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the maximum of the arguments and the value of this Decimal.\r\n *\r\n * arguments {number|string|Decimal}\r\n *\r\nP.max = function () {\r\n  Array.prototype.push.call(arguments, this);\r\n  return maxOrMin(this.constructor, arguments, 'lt');\r\n};\r\n */\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the minimum of the arguments and the value of this Decimal.\r\n *\r\n * arguments {number|string|Decimal}\r\n *\r\nP.min = function () {\r\n  Array.prototype.push.call(arguments, this);\r\n  return maxOrMin(this.constructor, arguments, 'gt');\r\n};\r\n */\r\n\r\n\r\n/*\r\n *  n - 0 = n\r\n *  n - N = N\r\n *  n - I = -I\r\n *  0 - n = -n\r\n *  0 - 0 = 0\r\n *  0 - N = N\r\n *  0 - I = -I\r\n *  N - n = N\r\n *  N - 0 = N\r\n *  N - N = N\r\n *  N - I = N\r\n *  I - n = I\r\n *  I - 0 = I\r\n *  I - N = N\r\n *  I - I = N\r\n *\r\n * Return a new Decimal whose value is the value of this Decimal minus `y`, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n */\r\nP.minus = P.sub = function (y) {\r\n  var d, e, i, j, k, len, pr, rm, xd, xe, xLTy, yd,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  y = new Ctor(y);\r\n\r\n  // If either is not finite...\r\n  if (!x.d || !y.d) {\r\n\r\n    // Return NaN if either is NaN.\r\n    if (!x.s || !y.s) y = new Ctor(NaN);\r\n\r\n    // Return y negated if x is finite and y is ±Infinity.\r\n    else if (x.d) y.s = -y.s;\r\n\r\n    // Return x if y is finite and x is ±Infinity.\r\n    // Return x if both are ±Infinity with different signs.\r\n    // Return NaN if both are ±Infinity with the same sign.\r\n    else y = new Ctor(y.d || x.s !== y.s ? x : NaN);\r\n\r\n    return y;\r\n  }\r\n\r\n  // If signs differ...\r\n  if (x.s != y.s) {\r\n    y.s = -y.s;\r\n    return x.plus(y);\r\n  }\r\n\r\n  xd = x.d;\r\n  yd = y.d;\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n\r\n  // If either is zero...\r\n  if (!xd[0] || !yd[0]) {\r\n\r\n    // Return y negated if x is zero and y is non-zero.\r\n    if (yd[0]) y.s = -y.s;\r\n\r\n    // Return x if y is zero and x is non-zero.\r\n    else if (xd[0]) y = new Ctor(x);\r\n\r\n    // Return zero if both are zero.\r\n    // From IEEE 754 (2008) 6.3: 0 - 0 = -0 - -0 = -0 when rounding to -Infinity.\r\n    else return new Ctor(rm === 3 ? -0 : 0);\r\n\r\n    return external ? finalise(y, pr, rm) : y;\r\n  }\r\n\r\n  // x and y are finite, non-zero numbers with the same sign.\r\n\r\n  // Calculate base 1e7 exponents.\r\n  e = mathfloor(y.e / LOG_BASE);\r\n  xe = mathfloor(x.e / LOG_BASE);\r\n\r\n  xd = xd.slice();\r\n  k = xe - e;\r\n\r\n  // If base 1e7 exponents differ...\r\n  if (k) {\r\n    xLTy = k < 0;\r\n\r\n    if (xLTy) {\r\n      d = xd;\r\n      k = -k;\r\n      len = yd.length;\r\n    } else {\r\n      d = yd;\r\n      e = xe;\r\n      len = xd.length;\r\n    }\r\n\r\n    // Numbers with massively different exponents would result in a very high number of\r\n    // zeros needing to be prepended, but this can be avoided while still ensuring correct\r\n    // rounding by limiting the number of zeros to `Math.ceil(pr / LOG_BASE) + 2`.\r\n    i = Math.max(Math.ceil(pr / LOG_BASE), len) + 2;\r\n\r\n    if (k > i) {\r\n      k = i;\r\n      d.length = 1;\r\n    }\r\n\r\n    // Prepend zeros to equalise exponents.\r\n    d.reverse();\r\n    for (i = k; i--;) d.push(0);\r\n    d.reverse();\r\n\r\n  // Base 1e7 exponents equal.\r\n  } else {\r\n\r\n    // Check digits to determine which is the bigger number.\r\n\r\n    i = xd.length;\r\n    len = yd.length;\r\n    xLTy = i < len;\r\n    if (xLTy) len = i;\r\n\r\n    for (i = 0; i < len; i++) {\r\n      if (xd[i] != yd[i]) {\r\n        xLTy = xd[i] < yd[i];\r\n        break;\r\n      }\r\n    }\r\n\r\n    k = 0;\r\n  }\r\n\r\n  if (xLTy) {\r\n    d = xd;\r\n    xd = yd;\r\n    yd = d;\r\n    y.s = -y.s;\r\n  }\r\n\r\n  len = xd.length;\r\n\r\n  // Append zeros to `xd` if shorter.\r\n  // Don't add zeros to `yd` if shorter as subtraction only needs to start at `yd` length.\r\n  for (i = yd.length - len; i > 0; --i) xd[len++] = 0;\r\n\r\n  // Subtract yd from xd.\r\n  for (i = yd.length; i > k;) {\r\n\r\n    if (xd[--i] < yd[i]) {\r\n      for (j = i; j && xd[--j] === 0;) xd[j] = BASE - 1;\r\n      --xd[j];\r\n      xd[i] += BASE;\r\n    }\r\n\r\n    xd[i] -= yd[i];\r\n  }\r\n\r\n  // Remove trailing zeros.\r\n  for (; xd[--len] === 0;) xd.pop();\r\n\r\n  // Remove leading zeros and adjust exponent accordingly.\r\n  for (; xd[0] === 0; xd.shift()) --e;\r\n\r\n  // Zero?\r\n  if (!xd[0]) return new Ctor(rm === 3 ? -0 : 0);\r\n\r\n  y.d = xd;\r\n  y.e = getBase10Exponent(xd, e);\r\n\r\n  return external ? finalise(y, pr, rm) : y;\r\n};\r\n\r\n\r\n/*\r\n *   n % 0 =  N\r\n *   n % N =  N\r\n *   n % I =  n\r\n *   0 % n =  0\r\n *  -0 % n = -0\r\n *   0 % 0 =  N\r\n *   0 % N =  N\r\n *   0 % I =  0\r\n *   N % n =  N\r\n *   N % 0 =  N\r\n *   N % N =  N\r\n *   N % I =  N\r\n *   I % n =  N\r\n *   I % 0 =  N\r\n *   I % N =  N\r\n *   I % I =  N\r\n *\r\n * Return a new Decimal whose value is the value of this Decimal modulo `y`, rounded to\r\n * `precision` significant digits using rounding mode `rounding`.\r\n *\r\n * The result depends on the modulo mode.\r\n *\r\n */\r\nP.modulo = P.mod = function (y) {\r\n  var q,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  y = new Ctor(y);\r\n\r\n  // Return NaN if x is ±Infinity or NaN, or y is NaN or ±0.\r\n  if (!x.d || !y.s || y.d && !y.d[0]) return new Ctor(NaN);\r\n\r\n  // Return x if y is ±Infinity or x is ±0.\r\n  if (!y.d || x.d && !x.d[0]) {\r\n    return finalise(new Ctor(x), Ctor.precision, Ctor.rounding);\r\n  }\r\n\r\n  // Prevent rounding of intermediate calculations.\r\n  external = false;\r\n\r\n  if (Ctor.modulo == 9) {\r\n\r\n    // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n    // result = x - q * y    where  0 <= result < abs(y)\r\n    q = divide(x, y.abs(), 0, 3, 1);\r\n    q.s *= y.s;\r\n  } else {\r\n    q = divide(x, y, 0, Ctor.modulo, 1);\r\n  }\r\n\r\n  q = q.times(y);\r\n\r\n  external = true;\r\n\r\n  return x.minus(q);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the natural exponential of the value of this Decimal,\r\n * i.e. the base e raised to the power the value of this Decimal, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n */\r\nP.naturalExponential = P.exp = function () {\r\n  return naturalExponential(this);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the natural logarithm of the value of this Decimal,\r\n * rounded to `precision` significant digits using rounding mode `rounding`.\r\n *\r\n */\r\nP.naturalLogarithm = P.ln = function () {\r\n  return naturalLogarithm(this);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal negated, i.e. as if multiplied by\r\n * -1.\r\n *\r\n */\r\nP.negated = P.neg = function () {\r\n  var x = new this.constructor(this);\r\n  x.s = -x.s;\r\n  return finalise(x);\r\n};\r\n\r\n\r\n/*\r\n *  n + 0 = n\r\n *  n + N = N\r\n *  n + I = I\r\n *  0 + n = n\r\n *  0 + 0 = 0\r\n *  0 + N = N\r\n *  0 + I = I\r\n *  N + n = N\r\n *  N + 0 = N\r\n *  N + N = N\r\n *  N + I = N\r\n *  I + n = I\r\n *  I + 0 = I\r\n *  I + N = N\r\n *  I + I = I\r\n *\r\n * Return a new Decimal whose value is the value of this Decimal plus `y`, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n */\r\nP.plus = P.add = function (y) {\r\n  var carry, d, e, i, k, len, pr, rm, xd, yd,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  y = new Ctor(y);\r\n\r\n  // If either is not finite...\r\n  if (!x.d || !y.d) {\r\n\r\n    // Return NaN if either is NaN.\r\n    if (!x.s || !y.s) y = new Ctor(NaN);\r\n\r\n    // Return x if y is finite and x is ±Infinity.\r\n    // Return x if both are ±Infinity with the same sign.\r\n    // Return NaN if both are ±Infinity with different signs.\r\n    // Return y if x is finite and y is ±Infinity.\r\n    else if (!x.d) y = new Ctor(y.d || x.s === y.s ? x : NaN);\r\n\r\n    return y;\r\n  }\r\n\r\n   // If signs differ...\r\n  if (x.s != y.s) {\r\n    y.s = -y.s;\r\n    return x.minus(y);\r\n  }\r\n\r\n  xd = x.d;\r\n  yd = y.d;\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n\r\n  // If either is zero...\r\n  if (!xd[0] || !yd[0]) {\r\n\r\n    // Return x if y is zero.\r\n    // Return y if y is non-zero.\r\n    if (!yd[0]) y = new Ctor(x);\r\n\r\n    return external ? finalise(y, pr, rm) : y;\r\n  }\r\n\r\n  // x and y are finite, non-zero numbers with the same sign.\r\n\r\n  // Calculate base 1e7 exponents.\r\n  k = mathfloor(x.e / LOG_BASE);\r\n  e = mathfloor(y.e / LOG_BASE);\r\n\r\n  xd = xd.slice();\r\n  i = k - e;\r\n\r\n  // If base 1e7 exponents differ...\r\n  if (i) {\r\n\r\n    if (i < 0) {\r\n      d = xd;\r\n      i = -i;\r\n      len = yd.length;\r\n    } else {\r\n      d = yd;\r\n      e = k;\r\n      len = xd.length;\r\n    }\r\n\r\n    // Limit number of zeros prepended to max(ceil(pr / LOG_BASE), len) + 1.\r\n    k = Math.ceil(pr / LOG_BASE);\r\n    len = k > len ? k + 1 : len + 1;\r\n\r\n    if (i > len) {\r\n      i = len;\r\n      d.length = 1;\r\n    }\r\n\r\n    // Prepend zeros to equalise exponents. Note: Faster to use reverse then do unshifts.\r\n    d.reverse();\r\n    for (; i--;) d.push(0);\r\n    d.reverse();\r\n  }\r\n\r\n  len = xd.length;\r\n  i = yd.length;\r\n\r\n  // If yd is longer than xd, swap xd and yd so xd points to the longer array.\r\n  if (len - i < 0) {\r\n    i = len;\r\n    d = yd;\r\n    yd = xd;\r\n    xd = d;\r\n  }\r\n\r\n  // Only start adding at yd.length - 1 as the further digits of xd can be left as they are.\r\n  for (carry = 0; i;) {\r\n    carry = (xd[--i] = xd[i] + yd[i] + carry) / BASE | 0;\r\n    xd[i] %= BASE;\r\n  }\r\n\r\n  if (carry) {\r\n    xd.unshift(carry);\r\n    ++e;\r\n  }\r\n\r\n  // Remove trailing zeros.\r\n  // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n  for (len = xd.length; xd[--len] == 0;) xd.pop();\r\n\r\n  y.d = xd;\r\n  y.e = getBase10Exponent(xd, e);\r\n\r\n  return external ? finalise(y, pr, rm) : y;\r\n};\r\n\r\n\r\n/*\r\n * Return the number of significant digits of the value of this Decimal.\r\n *\r\n * [z] {boolean|number} Whether to count integer-part trailing zeros: true, false, 1 or 0.\r\n *\r\n */\r\nP.precision = P.sd = function (z) {\r\n  var k,\r\n    x = this;\r\n\r\n  if (z !== void 0 && z !== !!z && z !== 1 && z !== 0) throw Error(invalidArgument + z);\r\n\r\n  if (x.d) {\r\n    k = getPrecision(x.d);\r\n    if (z && x.e + 1 > k) k = x.e + 1;\r\n  } else {\r\n    k = NaN;\r\n  }\r\n\r\n  return k;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal rounded to a whole number using\r\n * rounding mode `rounding`.\r\n *\r\n */\r\nP.round = function () {\r\n  var x = this,\r\n    Ctor = x.constructor;\r\n\r\n  return finalise(new Ctor(x), x.e + 1, Ctor.rounding);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the sine of the value in radians of this Decimal.\r\n *\r\n * Domain: [-Infinity, Infinity]\r\n * Range: [-1, 1]\r\n *\r\n * sin(x) = x - x^3/3! + x^5/5! - ...\r\n *\r\n * sin(0)         = 0\r\n * sin(-0)        = -0\r\n * sin(Infinity)  = NaN\r\n * sin(-Infinity) = NaN\r\n * sin(NaN)       = NaN\r\n *\r\n */\r\nP.sine = P.sin = function () {\r\n  var pr, rm,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (!x.isFinite()) return new Ctor(NaN);\r\n  if (x.isZero()) return new Ctor(x);\r\n\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n  Ctor.precision = pr + Math.max(x.e, x.sd()) + LOG_BASE;\r\n  Ctor.rounding = 1;\r\n\r\n  x = sine(Ctor, toLessThanHalfPi(Ctor, x));\r\n\r\n  Ctor.precision = pr;\r\n  Ctor.rounding = rm;\r\n\r\n  return finalise(quadrant > 2 ? x.neg() : x, pr, rm, true);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the square root of this Decimal, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n *  sqrt(-n) =  N\r\n *  sqrt(N)  =  N\r\n *  sqrt(-I) =  N\r\n *  sqrt(I)  =  I\r\n *  sqrt(0)  =  0\r\n *  sqrt(-0) = -0\r\n *\r\n */\r\nP.squareRoot = P.sqrt = function () {\r\n  var m, n, sd, r, rep, t,\r\n    x = this,\r\n    d = x.d,\r\n    e = x.e,\r\n    s = x.s,\r\n    Ctor = x.constructor;\r\n\r\n  // Negative/NaN/Infinity/zero?\r\n  if (s !== 1 || !d || !d[0]) {\r\n    return new Ctor(!s || s < 0 && (!d || d[0]) ? NaN : d ? x : 1 / 0);\r\n  }\r\n\r\n  external = false;\r\n\r\n  // Initial estimate.\r\n  s = Math.sqrt(+x);\r\n\r\n  // Math.sqrt underflow/overflow?\r\n  // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n  if (s == 0 || s == 1 / 0) {\r\n    n = digitsToString(d);\r\n\r\n    if ((n.length + e) % 2 == 0) n += '0';\r\n    s = Math.sqrt(n);\r\n    e = mathfloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n    if (s == 1 / 0) {\r\n      n = '5e' + e;\r\n    } else {\r\n      n = s.toExponential();\r\n      n = n.slice(0, n.indexOf('e') + 1) + e;\r\n    }\r\n\r\n    r = new Ctor(n);\r\n  } else {\r\n    r = new Ctor(s.toString());\r\n  }\r\n\r\n  sd = (e = Ctor.precision) + 3;\r\n\r\n  // Newton-Raphson iteration.\r\n  for (;;) {\r\n    t = r;\r\n    r = t.plus(divide(x, t, sd + 2, 1)).times(0.5);\r\n\r\n    // TODO? Replace with for-loop and checkRoundingDigits.\r\n    if (digitsToString(t.d).slice(0, sd) === (n = digitsToString(r.d)).slice(0, sd)) {\r\n      n = n.slice(sd - 3, sd + 1);\r\n\r\n      // The 4th rounding digit may be in error by -1 so if the 4 rounding digits are 9999 or\r\n      // 4999, i.e. approaching a rounding boundary, continue the iteration.\r\n      if (n == '9999' || !rep && n == '4999') {\r\n\r\n        // On the first iteration only, check to see if rounding up gives the exact result as the\r\n        // nines may infinitely repeat.\r\n        if (!rep) {\r\n          finalise(t, e + 1, 0);\r\n\r\n          if (t.times(t).eq(x)) {\r\n            r = t;\r\n            break;\r\n          }\r\n        }\r\n\r\n        sd += 4;\r\n        rep = 1;\r\n      } else {\r\n\r\n        // If the rounding digits are null, 0{0,4} or 50{0,3}, check for an exact result.\r\n        // If not, then there are further digits and m will be truthy.\r\n        if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n          // Truncate to the first rounding digit.\r\n          finalise(r, e + 1, 1);\r\n          m = !r.times(r).eq(x);\r\n        }\r\n\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  external = true;\r\n\r\n  return finalise(r, e, Ctor.rounding, m);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the tangent of the value in radians of this Decimal.\r\n *\r\n * Domain: [-Infinity, Infinity]\r\n * Range: [-Infinity, Infinity]\r\n *\r\n * tan(0)         = 0\r\n * tan(-0)        = -0\r\n * tan(Infinity)  = NaN\r\n * tan(-Infinity) = NaN\r\n * tan(NaN)       = NaN\r\n *\r\n */\r\nP.tangent = P.tan = function () {\r\n  var pr, rm,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (!x.isFinite()) return new Ctor(NaN);\r\n  if (x.isZero()) return new Ctor(x);\r\n\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n  Ctor.precision = pr + 10;\r\n  Ctor.rounding = 1;\r\n\r\n  x = x.sin();\r\n  x.s = 1;\r\n  x = divide(x, new Ctor(1).minus(x.times(x)).sqrt(), pr + 10, 0);\r\n\r\n  Ctor.precision = pr;\r\n  Ctor.rounding = rm;\r\n\r\n  return finalise(quadrant == 2 || quadrant == 4 ? x.neg() : x, pr, rm, true);\r\n};\r\n\r\n\r\n/*\r\n *  n * 0 = 0\r\n *  n * N = N\r\n *  n * I = I\r\n *  0 * n = 0\r\n *  0 * 0 = 0\r\n *  0 * N = N\r\n *  0 * I = N\r\n *  N * n = N\r\n *  N * 0 = N\r\n *  N * N = N\r\n *  N * I = N\r\n *  I * n = I\r\n *  I * 0 = N\r\n *  I * N = N\r\n *  I * I = I\r\n *\r\n * Return a new Decimal whose value is this Decimal times `y`, rounded to `precision` significant\r\n * digits using rounding mode `rounding`.\r\n *\r\n */\r\nP.times = P.mul = function (y) {\r\n  var carry, e, i, k, r, rL, t, xdL, ydL,\r\n    x = this,\r\n    Ctor = x.constructor,\r\n    xd = x.d,\r\n    yd = (y = new Ctor(y)).d;\r\n\r\n  y.s *= x.s;\r\n\r\n   // If either is NaN, ±Infinity or ±0...\r\n  if (!xd || !xd[0] || !yd || !yd[0]) {\r\n\r\n    return new Ctor(!y.s || xd && !xd[0] && !yd || yd && !yd[0] && !xd\r\n\r\n      // Return NaN if either is NaN.\r\n      // Return NaN if x is ±0 and y is ±Infinity, or y is ±0 and x is ±Infinity.\r\n      ? NaN\r\n\r\n      // Return ±Infinity if either is ±Infinity.\r\n      // Return ±0 if either is ±0.\r\n      : !xd || !yd ? y.s / 0 : y.s * 0);\r\n  }\r\n\r\n  e = mathfloor(x.e / LOG_BASE) + mathfloor(y.e / LOG_BASE);\r\n  xdL = xd.length;\r\n  ydL = yd.length;\r\n\r\n  // Ensure xd points to the longer array.\r\n  if (xdL < ydL) {\r\n    r = xd;\r\n    xd = yd;\r\n    yd = r;\r\n    rL = xdL;\r\n    xdL = ydL;\r\n    ydL = rL;\r\n  }\r\n\r\n  // Initialise the result array with zeros.\r\n  r = [];\r\n  rL = xdL + ydL;\r\n  for (i = rL; i--;) r.push(0);\r\n\r\n  // Multiply!\r\n  for (i = ydL; --i >= 0;) {\r\n    carry = 0;\r\n    for (k = xdL + i; k > i;) {\r\n      t = r[k] + yd[i] * xd[k - i - 1] + carry;\r\n      r[k--] = t % BASE | 0;\r\n      carry = t / BASE | 0;\r\n    }\r\n\r\n    r[k] = (r[k] + carry) % BASE | 0;\r\n  }\r\n\r\n  // Remove trailing zeros.\r\n  for (; !r[--rL];) r.pop();\r\n\r\n  if (carry) ++e;\r\n  else r.shift();\r\n\r\n  y.d = r;\r\n  y.e = getBase10Exponent(r, e);\r\n\r\n  return external ? finalise(y, Ctor.precision, Ctor.rounding) : y;\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Decimal in base 2, round to `sd` significant\r\n * digits using rounding mode `rm`.\r\n *\r\n * If the optional `sd` argument is present then return binary exponential notation.\r\n *\r\n * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n *\r\n */\r\nP.toBinary = function (sd, rm) {\r\n  return toStringBinary(this, 2, sd, rm);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal rounded to a maximum of `dp`\r\n * decimal places using rounding mode `rm` or `rounding` if `rm` is omitted.\r\n *\r\n * If `dp` is omitted, return a new Decimal whose value is the value of this Decimal.\r\n *\r\n * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n *\r\n */\r\nP.toDecimalPlaces = P.toDP = function (dp, rm) {\r\n  var x = this,\r\n    Ctor = x.constructor;\r\n\r\n  x = new Ctor(x);\r\n  if (dp === void 0) return x;\r\n\r\n  checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n  if (rm === void 0) rm = Ctor.rounding;\r\n  else checkInt32(rm, 0, 8);\r\n\r\n  return finalise(x, dp + x.e + 1, rm);\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Decimal in exponential notation rounded to\r\n * `dp` fixed decimal places using rounding mode `rounding`.\r\n *\r\n * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n *\r\n */\r\nP.toExponential = function (dp, rm) {\r\n  var str,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (dp === void 0) {\r\n    str = finiteToString(x, true);\r\n  } else {\r\n    checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n    if (rm === void 0) rm = Ctor.rounding;\r\n    else checkInt32(rm, 0, 8);\r\n\r\n    x = finalise(new Ctor(x), dp + 1, rm);\r\n    str = finiteToString(x, true, dp + 1);\r\n  }\r\n\r\n  return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Decimal in normal (fixed-point) notation to\r\n * `dp` fixed decimal places and rounded using rounding mode `rm` or `rounding` if `rm` is\r\n * omitted.\r\n *\r\n * As with JavaScript numbers, (-0).toFixed(0) is '0', but e.g. (-0.00001).toFixed(0) is '-0'.\r\n *\r\n * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n *\r\n * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\r\n * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\r\n * (-0).toFixed(3) is '0.000'.\r\n * (-0.5).toFixed(0) is '-0'.\r\n *\r\n */\r\nP.toFixed = function (dp, rm) {\r\n  var str, y,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (dp === void 0) {\r\n    str = finiteToString(x);\r\n  } else {\r\n    checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n    if (rm === void 0) rm = Ctor.rounding;\r\n    else checkInt32(rm, 0, 8);\r\n\r\n    y = finalise(new Ctor(x), dp + x.e + 1, rm);\r\n    str = finiteToString(y, false, dp + y.e + 1);\r\n  }\r\n\r\n  // To determine whether to add the minus sign look at the value before it was rounded,\r\n  // i.e. look at `x` rather than `y`.\r\n  return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n};\r\n\r\n\r\n/*\r\n * Return an array representing the value of this Decimal as a simple fraction with an integer\r\n * numerator and an integer denominator.\r\n *\r\n * The denominator will be a positive non-zero value less than or equal to the specified maximum\r\n * denominator. If a maximum denominator is not specified, the denominator will be the lowest\r\n * value necessary to represent the number exactly.\r\n *\r\n * [maxD] {number|string|Decimal} Maximum denominator. Integer >= 1 and < Infinity.\r\n *\r\n */\r\nP.toFraction = function (maxD) {\r\n  var d, d0, d1, d2, e, k, n, n0, n1, pr, q, r,\r\n    x = this,\r\n    xd = x.d,\r\n    Ctor = x.constructor;\r\n\r\n  if (!xd) return new Ctor(x);\r\n\r\n  n1 = d0 = new Ctor(1);\r\n  d1 = n0 = new Ctor(0);\r\n\r\n  d = new Ctor(d1);\r\n  e = d.e = getPrecision(xd) - x.e - 1;\r\n  k = e % LOG_BASE;\r\n  d.d[0] = mathpow(10, k < 0 ? LOG_BASE + k : k);\r\n\r\n  if (maxD == null) {\r\n\r\n    // d is 10**e, the minimum max-denominator needed.\r\n    maxD = e > 0 ? d : n1;\r\n  } else {\r\n    n = new Ctor(maxD);\r\n    if (!n.isInt() || n.lt(n1)) throw Error(invalidArgument + n);\r\n    maxD = n.gt(d) ? (e > 0 ? d : n1) : n;\r\n  }\r\n\r\n  external = false;\r\n  n = new Ctor(digitsToString(xd));\r\n  pr = Ctor.precision;\r\n  Ctor.precision = e = xd.length * LOG_BASE * 2;\r\n\r\n  for (;;)  {\r\n    q = divide(n, d, 0, 1, 1);\r\n    d2 = d0.plus(q.times(d1));\r\n    if (d2.cmp(maxD) == 1) break;\r\n    d0 = d1;\r\n    d1 = d2;\r\n    d2 = n1;\r\n    n1 = n0.plus(q.times(d2));\r\n    n0 = d2;\r\n    d2 = d;\r\n    d = n.minus(q.times(d2));\r\n    n = d2;\r\n  }\r\n\r\n  d2 = divide(maxD.minus(d0), d1, 0, 1, 1);\r\n  n0 = n0.plus(d2.times(n1));\r\n  d0 = d0.plus(d2.times(d1));\r\n  n0.s = n1.s = x.s;\r\n\r\n  // Determine which fraction is closer to x, n0/d0 or n1/d1?\r\n  r = divide(n1, d1, e, 1).minus(x).abs().cmp(divide(n0, d0, e, 1).minus(x).abs()) < 1\r\n      ? [n1, d1] : [n0, d0];\r\n\r\n  Ctor.precision = pr;\r\n  external = true;\r\n\r\n  return r;\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Decimal in base 16, round to `sd` significant\r\n * digits using rounding mode `rm`.\r\n *\r\n * If the optional `sd` argument is present then return binary exponential notation.\r\n *\r\n * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n *\r\n */\r\nP.toHexadecimal = P.toHex = function (sd, rm) {\r\n  return toStringBinary(this, 16, sd, rm);\r\n};\r\n\r\n\r\n/*\r\n * Returns a new Decimal whose value is the nearest multiple of `y` in the direction of rounding\r\n * mode `rm`, or `Decimal.rounding` if `rm` is omitted, to the value of this Decimal.\r\n *\r\n * The return value will always have the same sign as this Decimal, unless either this Decimal\r\n * or `y` is NaN, in which case the return value will be also be NaN.\r\n *\r\n * The return value is not affected by the value of `precision`.\r\n *\r\n * y {number|string|Decimal} The magnitude to round to a multiple of.\r\n * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n *\r\n * 'toNearest() rounding mode not an integer: {rm}'\r\n * 'toNearest() rounding mode out of range: {rm}'\r\n *\r\n */\r\nP.toNearest = function (y, rm) {\r\n  var x = this,\r\n    Ctor = x.constructor;\r\n\r\n  x = new Ctor(x);\r\n\r\n  if (y == null) {\r\n\r\n    // If x is not finite, return x.\r\n    if (!x.d) return x;\r\n\r\n    y = new Ctor(1);\r\n    rm = Ctor.rounding;\r\n  } else {\r\n    y = new Ctor(y);\r\n    if (rm === void 0) {\r\n      rm = Ctor.rounding;\r\n    } else {\r\n      checkInt32(rm, 0, 8);\r\n    }\r\n\r\n    // If x is not finite, return x if y is not NaN, else NaN.\r\n    if (!x.d) return y.s ? x : y;\r\n\r\n    // If y is not finite, return Infinity with the sign of x if y is Infinity, else NaN.\r\n    if (!y.d) {\r\n      if (y.s) y.s = x.s;\r\n      return y;\r\n    }\r\n  }\r\n\r\n  // If y is not zero, calculate the nearest multiple of y to x.\r\n  if (y.d[0]) {\r\n    external = false;\r\n    x = divide(x, y, 0, rm, 1).times(y);\r\n    external = true;\r\n    finalise(x);\r\n\r\n  // If y is zero, return zero with the sign of x.\r\n  } else {\r\n    y.s = x.s;\r\n    x = y;\r\n  }\r\n\r\n  return x;\r\n};\r\n\r\n\r\n/*\r\n * Return the value of this Decimal converted to a number primitive.\r\n * Zero keeps its sign.\r\n *\r\n */\r\nP.toNumber = function () {\r\n  return +this;\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Decimal in base 8, round to `sd` significant\r\n * digits using rounding mode `rm`.\r\n *\r\n * If the optional `sd` argument is present then return binary exponential notation.\r\n *\r\n * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n *\r\n */\r\nP.toOctal = function (sd, rm) {\r\n  return toStringBinary(this, 8, sd, rm);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal raised to the power `y`, rounded\r\n * to `precision` significant digits using rounding mode `rounding`.\r\n *\r\n * ECMAScript compliant.\r\n *\r\n *   pow(x, NaN)                           = NaN\r\n *   pow(x, ±0)                            = 1\r\n\r\n *   pow(NaN, non-zero)                    = NaN\r\n *   pow(abs(x) > 1, +Infinity)            = +Infinity\r\n *   pow(abs(x) > 1, -Infinity)            = +0\r\n *   pow(abs(x) == 1, ±Infinity)           = NaN\r\n *   pow(abs(x) < 1, +Infinity)            = +0\r\n *   pow(abs(x) < 1, -Infinity)            = +Infinity\r\n *   pow(+Infinity, y > 0)                 = +Infinity\r\n *   pow(+Infinity, y < 0)                 = +0\r\n *   pow(-Infinity, odd integer > 0)       = -Infinity\r\n *   pow(-Infinity, even integer > 0)      = +Infinity\r\n *   pow(-Infinity, odd integer < 0)       = -0\r\n *   pow(-Infinity, even integer < 0)      = +0\r\n *   pow(+0, y > 0)                        = +0\r\n *   pow(+0, y < 0)                        = +Infinity\r\n *   pow(-0, odd integer > 0)              = -0\r\n *   pow(-0, even integer > 0)             = +0\r\n *   pow(-0, odd integer < 0)              = -Infinity\r\n *   pow(-0, even integer < 0)             = +Infinity\r\n *   pow(finite x < 0, finite non-integer) = NaN\r\n *\r\n * For non-integer or very large exponents pow(x, y) is calculated using\r\n *\r\n *   x^y = exp(y*ln(x))\r\n *\r\n * Assuming the first 15 rounding digits are each equally likely to be any digit 0-9, the\r\n * probability of an incorrectly rounded result\r\n * P([49]9{14} | [50]0{14}) = 2 * 0.2 * 10^-14 = 4e-15 = 1/2.5e+14\r\n * i.e. 1 in 250,000,000,000,000\r\n *\r\n * If a result is incorrectly rounded the maximum error will be 1 ulp (unit in last place).\r\n *\r\n * y {number|string|Decimal} The power to which to raise this Decimal.\r\n *\r\n */\r\nP.toPower = P.pow = function (y) {\r\n  var e, k, pr, r, rm, s,\r\n    x = this,\r\n    Ctor = x.constructor,\r\n    yn = +(y = new Ctor(y));\r\n\r\n  // Either ±Infinity, NaN or ±0?\r\n  if (!x.d || !y.d || !x.d[0] || !y.d[0]) return new Ctor(mathpow(+x, yn));\r\n\r\n  x = new Ctor(x);\r\n\r\n  if (x.eq(1)) return x;\r\n\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n\r\n  if (y.eq(1)) return finalise(x, pr, rm);\r\n\r\n  // y exponent\r\n  e = mathfloor(y.e / LOG_BASE);\r\n\r\n  // If y is a small integer use the 'exponentiation by squaring' algorithm.\r\n  if (e >= y.d.length - 1 && (k = yn < 0 ? -yn : yn) <= MAX_SAFE_INTEGER) {\r\n    r = intPow(Ctor, x, k, pr);\r\n    return y.s < 0 ? new Ctor(1).div(r) : finalise(r, pr, rm);\r\n  }\r\n\r\n  s = x.s;\r\n\r\n  // if x is negative\r\n  if (s < 0) {\r\n\r\n    // if y is not an integer\r\n    if (e < y.d.length - 1) return new Ctor(NaN);\r\n\r\n    // Result is positive if x is negative and the last digit of integer y is even.\r\n    if ((y.d[e] & 1) == 0) s = 1;\r\n\r\n    // if x.eq(-1)\r\n    if (x.e == 0 && x.d[0] == 1 && x.d.length == 1) {\r\n      x.s = s;\r\n      return x;\r\n    }\r\n  }\r\n\r\n  // Estimate result exponent.\r\n  // x^y = 10^e,  where e = y * log10(x)\r\n  // log10(x) = log10(x_significand) + x_exponent\r\n  // log10(x_significand) = ln(x_significand) / ln(10)\r\n  k = mathpow(+x, yn);\r\n  e = k == 0 || !isFinite(k)\r\n    ? mathfloor(yn * (Math.log('0.' + digitsToString(x.d)) / Math.LN10 + x.e + 1))\r\n    : new Ctor(k + '').e;\r\n\r\n  // Exponent estimate may be incorrect e.g. x: 0.999999999999999999, y: 2.29, e: 0, r.e: -1.\r\n\r\n  // Overflow/underflow?\r\n  if (e > Ctor.maxE + 1 || e < Ctor.minE - 1) return new Ctor(e > 0 ? s / 0 : 0);\r\n\r\n  external = false;\r\n  Ctor.rounding = x.s = 1;\r\n\r\n  // Estimate the extra guard digits needed to ensure five correct rounding digits from\r\n  // naturalLogarithm(x). Example of failure without these extra digits (precision: 10):\r\n  // new Decimal(2.32456).pow('2087987436534566.46411')\r\n  // should be 1.162377823e+764914905173815, but is 1.162355823e+764914905173815\r\n  k = Math.min(12, (e + '').length);\r\n\r\n  // r = x^y = exp(y*ln(x))\r\n  r = naturalExponential(y.times(naturalLogarithm(x, pr + k)), pr);\r\n\r\n  // r may be Infinity, e.g. (0.9999999999999999).pow(-1e+40)\r\n  if (r.d) {\r\n\r\n    // Truncate to the required precision plus five rounding digits.\r\n    r = finalise(r, pr + 5, 1);\r\n\r\n    // If the rounding digits are [49]9999 or [50]0000 increase the precision by 10 and recalculate\r\n    // the result.\r\n    if (checkRoundingDigits(r.d, pr, rm)) {\r\n      e = pr + 10;\r\n\r\n      // Truncate to the increased precision plus five rounding digits.\r\n      r = finalise(naturalExponential(y.times(naturalLogarithm(x, e + k)), e), e + 5, 1);\r\n\r\n      // Check for 14 nines from the 2nd rounding digit (the first rounding digit may be 4 or 9).\r\n      if (+digitsToString(r.d).slice(pr + 1, pr + 15) + 1 == 1e14) {\r\n        r = finalise(r, pr + 1, 0);\r\n      }\r\n    }\r\n  }\r\n\r\n  r.s = s;\r\n  external = true;\r\n  Ctor.rounding = rm;\r\n\r\n  return finalise(r, pr, rm);\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Decimal rounded to `sd` significant digits\r\n * using rounding mode `rounding`.\r\n *\r\n * Return exponential notation if `sd` is less than the number of digits necessary to represent\r\n * the integer part of the value in normal notation.\r\n *\r\n * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n *\r\n */\r\nP.toPrecision = function (sd, rm) {\r\n  var str,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (sd === void 0) {\r\n    str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\r\n  } else {\r\n    checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n    if (rm === void 0) rm = Ctor.rounding;\r\n    else checkInt32(rm, 0, 8);\r\n\r\n    x = finalise(new Ctor(x), sd, rm);\r\n    str = finiteToString(x, sd <= x.e || x.e <= Ctor.toExpNeg, sd);\r\n  }\r\n\r\n  return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal rounded to a maximum of `sd`\r\n * significant digits using rounding mode `rm`, or to `precision` and `rounding` respectively if\r\n * omitted.\r\n *\r\n * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n *\r\n * 'toSD() digits out of range: {sd}'\r\n * 'toSD() digits not an integer: {sd}'\r\n * 'toSD() rounding mode not an integer: {rm}'\r\n * 'toSD() rounding mode out of range: {rm}'\r\n *\r\n */\r\nP.toSignificantDigits = P.toSD = function (sd, rm) {\r\n  var x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (sd === void 0) {\r\n    sd = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n  } else {\r\n    checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n    if (rm === void 0) rm = Ctor.rounding;\r\n    else checkInt32(rm, 0, 8);\r\n  }\r\n\r\n  return finalise(new Ctor(x), sd, rm);\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Decimal.\r\n *\r\n * Return exponential notation if this Decimal has a positive exponent equal to or greater than\r\n * `toExpPos`, or a negative exponent equal to or less than `toExpNeg`.\r\n *\r\n */\r\nP.toString = function () {\r\n  var x = this,\r\n    Ctor = x.constructor,\r\n    str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\r\n\r\n  return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal truncated to a whole number.\r\n *\r\n */\r\nP.truncated = P.trunc = function () {\r\n  return finalise(new this.constructor(this), this.e + 1, 1);\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Decimal.\r\n * Unlike `toString`, negative zero will include the minus sign.\r\n *\r\n */\r\nP.valueOf = P.toJSON = function () {\r\n  var x = this,\r\n    Ctor = x.constructor,\r\n    str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\r\n\r\n  return x.isNeg() ? '-' + str : str;\r\n};\r\n\r\n\r\n/*\r\n// Add aliases to match BigDecimal method names.\r\n// P.add = P.plus;\r\nP.subtract = P.minus;\r\nP.multiply = P.times;\r\nP.divide = P.div;\r\nP.remainder = P.mod;\r\nP.compareTo = P.cmp;\r\nP.negate = P.neg;\r\n */\r\n\r\n\r\n// Helper functions for Decimal.prototype (P) and/or Decimal methods, and their callers.\r\n\r\n\r\n/*\r\n *  digitsToString           P.cubeRoot, P.logarithm, P.squareRoot, P.toFraction, P.toPower,\r\n *                           finiteToString, naturalExponential, naturalLogarithm\r\n *  checkInt32               P.toDecimalPlaces, P.toExponential, P.toFixed, P.toNearest,\r\n *                           P.toPrecision, P.toSignificantDigits, toStringBinary, random\r\n *  checkRoundingDigits      P.logarithm, P.toPower, naturalExponential, naturalLogarithm\r\n *  convertBase              toStringBinary, parseOther\r\n *  cos                      P.cos\r\n *  divide                   P.atanh, P.cubeRoot, P.dividedBy, P.dividedToIntegerBy,\r\n *                           P.logarithm, P.modulo, P.squareRoot, P.tan, P.tanh, P.toFraction,\r\n *                           P.toNearest, toStringBinary, naturalExponential, naturalLogarithm,\r\n *                           taylorSeries, atan2, parseOther\r\n *  finalise                 P.absoluteValue, P.atan, P.atanh, P.ceil, P.cos, P.cosh,\r\n *                           P.cubeRoot, P.dividedToIntegerBy, P.floor, P.logarithm, P.minus,\r\n *                           P.modulo, P.negated, P.plus, P.round, P.sin, P.sinh, P.squareRoot,\r\n *                           P.tan, P.times, P.toDecimalPlaces, P.toExponential, P.toFixed,\r\n *                           P.toNearest, P.toPower, P.toPrecision, P.toSignificantDigits,\r\n *                           P.truncated, divide, getLn10, getPi, naturalExponential,\r\n *                           naturalLogarithm, ceil, floor, round, trunc\r\n *  finiteToString           P.toExponential, P.toFixed, P.toPrecision, P.toString, P.valueOf,\r\n *                           toStringBinary\r\n *  getBase10Exponent        P.minus, P.plus, P.times, parseOther\r\n *  getLn10                  P.logarithm, naturalLogarithm\r\n *  getPi                    P.acos, P.asin, P.atan, toLessThanHalfPi, atan2\r\n *  getPrecision             P.precision, P.toFraction\r\n *  getZeroString            digitsToString, finiteToString\r\n *  intPow                   P.toPower, parseOther\r\n *  isOdd                    toLessThanHalfPi\r\n *  maxOrMin                 max, min\r\n *  naturalExponential       P.naturalExponential, P.toPower\r\n *  naturalLogarithm         P.acosh, P.asinh, P.atanh, P.logarithm, P.naturalLogarithm,\r\n *                           P.toPower, naturalExponential\r\n *  nonFiniteToString        finiteToString, toStringBinary\r\n *  parseDecimal             Decimal\r\n *  parseOther               Decimal\r\n *  sin                      P.sin\r\n *  taylorSeries             P.cosh, P.sinh, cos, sin\r\n *  toLessThanHalfPi         P.cos, P.sin\r\n *  toStringBinary           P.toBinary, P.toHexadecimal, P.toOctal\r\n *  truncate                 intPow\r\n *\r\n *  Throws:                  P.logarithm, P.precision, P.toFraction, checkInt32, getLn10, getPi,\r\n *                           naturalLogarithm, config, parseOther, random, Decimal\r\n */\r\n\r\n\r\nfunction digitsToString(d) {\r\n  var i, k, ws,\r\n    indexOfLastWord = d.length - 1,\r\n    str = '',\r\n    w = d[0];\r\n\r\n  if (indexOfLastWord > 0) {\r\n    str += w;\r\n    for (i = 1; i < indexOfLastWord; i++) {\r\n      ws = d[i] + '';\r\n      k = LOG_BASE - ws.length;\r\n      if (k) str += getZeroString(k);\r\n      str += ws;\r\n    }\r\n\r\n    w = d[i];\r\n    ws = w + '';\r\n    k = LOG_BASE - ws.length;\r\n    if (k) str += getZeroString(k);\r\n  } else if (w === 0) {\r\n    return '0';\r\n  }\r\n\r\n  // Remove trailing zeros of last w.\r\n  for (; w % 10 === 0;) w /= 10;\r\n\r\n  return str + w;\r\n}\r\n\r\n\r\nfunction checkInt32(i, min, max) {\r\n  if (i !== ~~i || i < min || i > max) {\r\n    throw Error(invalidArgument + i);\r\n  }\r\n}\r\n\r\n\r\n/*\r\n * Check 5 rounding digits if `repeating` is null, 4 otherwise.\r\n * `repeating == null` if caller is `log` or `pow`,\r\n * `repeating != null` if caller is `naturalLogarithm` or `naturalExponential`.\r\n */\r\nfunction checkRoundingDigits(d, i, rm, repeating) {\r\n  var di, k, r, rd;\r\n\r\n  // Get the length of the first word of the array d.\r\n  for (k = d[0]; k >= 10; k /= 10) --i;\r\n\r\n  // Is the rounding digit in the first word of d?\r\n  if (--i < 0) {\r\n    i += LOG_BASE;\r\n    di = 0;\r\n  } else {\r\n    di = Math.ceil((i + 1) / LOG_BASE);\r\n    i %= LOG_BASE;\r\n  }\r\n\r\n  // i is the index (0 - 6) of the rounding digit.\r\n  // E.g. if within the word 3487563 the first rounding digit is 5,\r\n  // then i = 4, k = 1000, rd = 3487563 % 1000 = 563\r\n  k = mathpow(10, LOG_BASE - i);\r\n  rd = d[di] % k | 0;\r\n\r\n  if (repeating == null) {\r\n    if (i < 3) {\r\n      if (i == 0) rd = rd / 100 | 0;\r\n      else if (i == 1) rd = rd / 10 | 0;\r\n      r = rm < 4 && rd == 99999 || rm > 3 && rd == 49999 || rd == 50000 || rd == 0;\r\n    } else {\r\n      r = (rm < 4 && rd + 1 == k || rm > 3 && rd + 1 == k / 2) &&\r\n        (d[di + 1] / k / 100 | 0) == mathpow(10, i - 2) - 1 ||\r\n          (rd == k / 2 || rd == 0) && (d[di + 1] / k / 100 | 0) == 0;\r\n    }\r\n  } else {\r\n    if (i < 4) {\r\n      if (i == 0) rd = rd / 1000 | 0;\r\n      else if (i == 1) rd = rd / 100 | 0;\r\n      else if (i == 2) rd = rd / 10 | 0;\r\n      r = (repeating || rm < 4) && rd == 9999 || !repeating && rm > 3 && rd == 4999;\r\n    } else {\r\n      r = ((repeating || rm < 4) && rd + 1 == k ||\r\n      (!repeating && rm > 3) && rd + 1 == k / 2) &&\r\n        (d[di + 1] / k / 1000 | 0) == mathpow(10, i - 3) - 1;\r\n    }\r\n  }\r\n\r\n  return r;\r\n}\r\n\r\n\r\n// Convert string of `baseIn` to an array of numbers of `baseOut`.\r\n// Eg. convertBase('255', 10, 16) returns [15, 15].\r\n// Eg. convertBase('ff', 16, 10) returns [2, 5, 5].\r\nfunction convertBase(str, baseIn, baseOut) {\r\n  var j,\r\n    arr = [0],\r\n    arrL,\r\n    i = 0,\r\n    strL = str.length;\r\n\r\n  for (; i < strL;) {\r\n    for (arrL = arr.length; arrL--;) arr[arrL] *= baseIn;\r\n    arr[0] += NUMERALS.indexOf(str.charAt(i++));\r\n    for (j = 0; j < arr.length; j++) {\r\n      if (arr[j] > baseOut - 1) {\r\n        if (arr[j + 1] === void 0) arr[j + 1] = 0;\r\n        arr[j + 1] += arr[j] / baseOut | 0;\r\n        arr[j] %= baseOut;\r\n      }\r\n    }\r\n  }\r\n\r\n  return arr.reverse();\r\n}\r\n\r\n\r\n/*\r\n * cos(x) = 1 - x^2/2! + x^4/4! - ...\r\n * |x| < pi/2\r\n *\r\n */\r\nfunction cosine(Ctor, x) {\r\n  var k, y,\r\n    len = x.d.length;\r\n\r\n  // Argument reduction: cos(4x) = 8*(cos^4(x) - cos^2(x)) + 1\r\n  // i.e. cos(x) = 8*(cos^4(x/4) - cos^2(x/4)) + 1\r\n\r\n  // Estimate the optimum number of times to use the argument reduction.\r\n  if (len < 32) {\r\n    k = Math.ceil(len / 3);\r\n    y = (1 / tinyPow(4, k)).toString();\r\n  } else {\r\n    k = 16;\r\n    y = '2.3283064365386962890625e-10';\r\n  }\r\n\r\n  Ctor.precision += k;\r\n\r\n  x = taylorSeries(Ctor, 1, x.times(y), new Ctor(1));\r\n\r\n  // Reverse argument reduction\r\n  for (var i = k; i--;) {\r\n    var cos2x = x.times(x);\r\n    x = cos2x.times(cos2x).minus(cos2x).times(8).plus(1);\r\n  }\r\n\r\n  Ctor.precision -= k;\r\n\r\n  return x;\r\n}\r\n\r\n\r\n/*\r\n * Perform division in the specified base.\r\n */\r\nvar divide = (function () {\r\n\r\n  // Assumes non-zero x and k, and hence non-zero result.\r\n  function multiplyInteger(x, k, base) {\r\n    var temp,\r\n      carry = 0,\r\n      i = x.length;\r\n\r\n    for (x = x.slice(); i--;) {\r\n      temp = x[i] * k + carry;\r\n      x[i] = temp % base | 0;\r\n      carry = temp / base | 0;\r\n    }\r\n\r\n    if (carry) x.unshift(carry);\r\n\r\n    return x;\r\n  }\r\n\r\n  function compare(a, b, aL, bL) {\r\n    var i, r;\r\n\r\n    if (aL != bL) {\r\n      r = aL > bL ? 1 : -1;\r\n    } else {\r\n      for (i = r = 0; i < aL; i++) {\r\n        if (a[i] != b[i]) {\r\n          r = a[i] > b[i] ? 1 : -1;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return r;\r\n  }\r\n\r\n  function subtract(a, b, aL, base) {\r\n    var i = 0;\r\n\r\n    // Subtract b from a.\r\n    for (; aL--;) {\r\n      a[aL] -= i;\r\n      i = a[aL] < b[aL] ? 1 : 0;\r\n      a[aL] = i * base + a[aL] - b[aL];\r\n    }\r\n\r\n    // Remove leading zeros.\r\n    for (; !a[0] && a.length > 1;) a.shift();\r\n  }\r\n\r\n  return function (x, y, pr, rm, dp, base) {\r\n    var cmp, e, i, k, logBase, more, prod, prodL, q, qd, rem, remL, rem0, sd, t, xi, xL, yd0,\r\n      yL, yz,\r\n      Ctor = x.constructor,\r\n      sign = x.s == y.s ? 1 : -1,\r\n      xd = x.d,\r\n      yd = y.d;\r\n\r\n    // Either NaN, Infinity or 0?\r\n    if (!xd || !xd[0] || !yd || !yd[0]) {\r\n\r\n      return new Ctor(// Return NaN if either NaN, or both Infinity or 0.\r\n        !x.s || !y.s || (xd ? yd && xd[0] == yd[0] : !yd) ? NaN :\r\n\r\n        // Return ±0 if x is 0 or y is ±Infinity, or return ±Infinity as y is 0.\r\n        xd && xd[0] == 0 || !yd ? sign * 0 : sign / 0);\r\n    }\r\n\r\n    if (base) {\r\n      logBase = 1;\r\n      e = x.e - y.e;\r\n    } else {\r\n      base = BASE;\r\n      logBase = LOG_BASE;\r\n      e = mathfloor(x.e / logBase) - mathfloor(y.e / logBase);\r\n    }\r\n\r\n    yL = yd.length;\r\n    xL = xd.length;\r\n    q = new Ctor(sign);\r\n    qd = q.d = [];\r\n\r\n    // Result exponent may be one less than e.\r\n    // The digit array of a Decimal from toStringBinary may have trailing zeros.\r\n    for (i = 0; yd[i] == (xd[i] || 0); i++);\r\n\r\n    if (yd[i] > (xd[i] || 0)) e--;\r\n\r\n    if (pr == null) {\r\n      sd = pr = Ctor.precision;\r\n      rm = Ctor.rounding;\r\n    } else if (dp) {\r\n      sd = pr + (x.e - y.e) + 1;\r\n    } else {\r\n      sd = pr;\r\n    }\r\n\r\n    if (sd < 0) {\r\n      qd.push(1);\r\n      more = true;\r\n    } else {\r\n\r\n      // Convert precision in number of base 10 digits to base 1e7 digits.\r\n      sd = sd / logBase + 2 | 0;\r\n      i = 0;\r\n\r\n      // divisor < 1e7\r\n      if (yL == 1) {\r\n        k = 0;\r\n        yd = yd[0];\r\n        sd++;\r\n\r\n        // k is the carry.\r\n        for (; (i < xL || k) && sd--; i++) {\r\n          t = k * base + (xd[i] || 0);\r\n          qd[i] = t / yd | 0;\r\n          k = t % yd | 0;\r\n        }\r\n\r\n        more = k || i < xL;\r\n\r\n      // divisor >= 1e7\r\n      } else {\r\n\r\n        // Normalise xd and yd so highest order digit of yd is >= base/2\r\n        k = base / (yd[0] + 1) | 0;\r\n\r\n        if (k > 1) {\r\n          yd = multiplyInteger(yd, k, base);\r\n          xd = multiplyInteger(xd, k, base);\r\n          yL = yd.length;\r\n          xL = xd.length;\r\n        }\r\n\r\n        xi = yL;\r\n        rem = xd.slice(0, yL);\r\n        remL = rem.length;\r\n\r\n        // Add zeros to make remainder as long as divisor.\r\n        for (; remL < yL;) rem[remL++] = 0;\r\n\r\n        yz = yd.slice();\r\n        yz.unshift(0);\r\n        yd0 = yd[0];\r\n\r\n        if (yd[1] >= base / 2) ++yd0;\r\n\r\n        do {\r\n          k = 0;\r\n\r\n          // Compare divisor and remainder.\r\n          cmp = compare(yd, rem, yL, remL);\r\n\r\n          // If divisor < remainder.\r\n          if (cmp < 0) {\r\n\r\n            // Calculate trial digit, k.\r\n            rem0 = rem[0];\r\n            if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n            // k will be how many times the divisor goes into the current remainder.\r\n            k = rem0 / yd0 | 0;\r\n\r\n            //  Algorithm:\r\n            //  1. product = divisor * trial digit (k)\r\n            //  2. if product > remainder: product -= divisor, k--\r\n            //  3. remainder -= product\r\n            //  4. if product was < remainder at 2:\r\n            //    5. compare new remainder and divisor\r\n            //    6. If remainder > divisor: remainder -= divisor, k++\r\n\r\n            if (k > 1) {\r\n              if (k >= base) k = base - 1;\r\n\r\n              // product = divisor * trial digit.\r\n              prod = multiplyInteger(yd, k, base);\r\n              prodL = prod.length;\r\n              remL = rem.length;\r\n\r\n              // Compare product and remainder.\r\n              cmp = compare(prod, rem, prodL, remL);\r\n\r\n              // product > remainder.\r\n              if (cmp == 1) {\r\n                k--;\r\n\r\n                // Subtract divisor from product.\r\n                subtract(prod, yL < prodL ? yz : yd, prodL, base);\r\n              }\r\n            } else {\r\n\r\n              // cmp is -1.\r\n              // If k is 0, there is no need to compare yd and rem again below, so change cmp to 1\r\n              // to avoid it. If k is 1 there is a need to compare yd and rem again below.\r\n              if (k == 0) cmp = k = 1;\r\n              prod = yd.slice();\r\n            }\r\n\r\n            prodL = prod.length;\r\n            if (prodL < remL) prod.unshift(0);\r\n\r\n            // Subtract product from remainder.\r\n            subtract(rem, prod, remL, base);\r\n\r\n            // If product was < previous remainder.\r\n            if (cmp == -1) {\r\n              remL = rem.length;\r\n\r\n              // Compare divisor and new remainder.\r\n              cmp = compare(yd, rem, yL, remL);\r\n\r\n              // If divisor < new remainder, subtract divisor from remainder.\r\n              if (cmp < 1) {\r\n                k++;\r\n\r\n                // Subtract divisor from remainder.\r\n                subtract(rem, yL < remL ? yz : yd, remL, base);\r\n              }\r\n            }\r\n\r\n            remL = rem.length;\r\n          } else if (cmp === 0) {\r\n            k++;\r\n            rem = [0];\r\n          }    // if cmp === 1, k will be 0\r\n\r\n          // Add the next digit, k, to the result array.\r\n          qd[i++] = k;\r\n\r\n          // Update the remainder.\r\n          if (cmp && rem[0]) {\r\n            rem[remL++] = xd[xi] || 0;\r\n          } else {\r\n            rem = [xd[xi]];\r\n            remL = 1;\r\n          }\r\n\r\n        } while ((xi++ < xL || rem[0] !== void 0) && sd--);\r\n\r\n        more = rem[0] !== void 0;\r\n      }\r\n\r\n      // Leading zero?\r\n      if (!qd[0]) qd.shift();\r\n    }\r\n\r\n    // logBase is 1 when divide is being used for base conversion.\r\n    if (logBase == 1) {\r\n      q.e = e;\r\n      inexact = more;\r\n    } else {\r\n\r\n      // To calculate q.e, first get the number of digits of qd[0].\r\n      for (i = 1, k = qd[0]; k >= 10; k /= 10) i++;\r\n      q.e = i + e * logBase - 1;\r\n\r\n      finalise(q, dp ? pr + q.e + 1 : pr, rm, more);\r\n    }\r\n\r\n    return q;\r\n  };\r\n})();\r\n\r\n\r\n/*\r\n * Round `x` to `sd` significant digits using rounding mode `rm`.\r\n * Check for over/under-flow.\r\n */\r\n function finalise(x, sd, rm, isTruncated) {\r\n  var digits, i, j, k, rd, roundUp, w, xd, xdi,\r\n    Ctor = x.constructor;\r\n\r\n  // Don't round if sd is null or undefined.\r\n  out: if (sd != null) {\r\n    xd = x.d;\r\n\r\n    // Infinity/NaN.\r\n    if (!xd) return x;\r\n\r\n    // rd: the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n    // w: the word of xd containing rd, a base 1e7 number.\r\n    // xdi: the index of w within xd.\r\n    // digits: the number of digits of w.\r\n    // i: what would be the index of rd within w if all the numbers were 7 digits long (i.e. if\r\n    // they had leading zeros)\r\n    // j: if > 0, the actual index of rd within w (if < 0, rd is a leading zero).\r\n\r\n    // Get the length of the first word of the digits array xd.\r\n    for (digits = 1, k = xd[0]; k >= 10; k /= 10) digits++;\r\n    i = sd - digits;\r\n\r\n    // Is the rounding digit in the first word of xd?\r\n    if (i < 0) {\r\n      i += LOG_BASE;\r\n      j = sd;\r\n      w = xd[xdi = 0];\r\n\r\n      // Get the rounding digit at index j of w.\r\n      rd = w / mathpow(10, digits - j - 1) % 10 | 0;\r\n    } else {\r\n      xdi = Math.ceil((i + 1) / LOG_BASE);\r\n      k = xd.length;\r\n      if (xdi >= k) {\r\n        if (isTruncated) {\r\n\r\n          // Needed by `naturalExponential`, `naturalLogarithm` and `squareRoot`.\r\n          for (; k++ <= xdi;) xd.push(0);\r\n          w = rd = 0;\r\n          digits = 1;\r\n          i %= LOG_BASE;\r\n          j = i - LOG_BASE + 1;\r\n        } else {\r\n          break out;\r\n        }\r\n      } else {\r\n        w = k = xd[xdi];\r\n\r\n        // Get the number of digits of w.\r\n        for (digits = 1; k >= 10; k /= 10) digits++;\r\n\r\n        // Get the index of rd within w.\r\n        i %= LOG_BASE;\r\n\r\n        // Get the index of rd within w, adjusted for leading zeros.\r\n        // The number of leading zeros of w is given by LOG_BASE - digits.\r\n        j = i - LOG_BASE + digits;\r\n\r\n        // Get the rounding digit at index j of w.\r\n        rd = j < 0 ? 0 : w / mathpow(10, digits - j - 1) % 10 | 0;\r\n      }\r\n    }\r\n\r\n    // Are there any non-zero digits after the rounding digit?\r\n    isTruncated = isTruncated || sd < 0 ||\r\n      xd[xdi + 1] !== void 0 || (j < 0 ? w : w % mathpow(10, digits - j - 1));\r\n\r\n    // The expression `w % mathpow(10, digits - j - 1)` returns all the digits of w to the right\r\n    // of the digit at (left-to-right) index j, e.g. if w is 908714 and j is 2, the expression\r\n    // will give 714.\r\n\r\n    roundUp = rm < 4\r\n      ? (rd || isTruncated) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n      : rd > 5 || rd == 5 && (rm == 4 || isTruncated || rm == 6 &&\r\n\r\n        // Check whether the digit to the left of the rounding digit is odd.\r\n        ((i > 0 ? j > 0 ? w / mathpow(10, digits - j) : 0 : xd[xdi - 1]) % 10) & 1 ||\r\n          rm == (x.s < 0 ? 8 : 7));\r\n\r\n    if (sd < 1 || !xd[0]) {\r\n      xd.length = 0;\r\n      if (roundUp) {\r\n\r\n        // Convert sd to decimal places.\r\n        sd -= x.e + 1;\r\n\r\n        // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n        xd[0] = mathpow(10, (LOG_BASE - sd % LOG_BASE) % LOG_BASE);\r\n        x.e = -sd || 0;\r\n      } else {\r\n\r\n        // Zero.\r\n        xd[0] = x.e = 0;\r\n      }\r\n\r\n      return x;\r\n    }\r\n\r\n    // Remove excess digits.\r\n    if (i == 0) {\r\n      xd.length = xdi;\r\n      k = 1;\r\n      xdi--;\r\n    } else {\r\n      xd.length = xdi + 1;\r\n      k = mathpow(10, LOG_BASE - i);\r\n\r\n      // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n      // j > 0 means i > number of leading zeros of w.\r\n      xd[xdi] = j > 0 ? (w / mathpow(10, digits - j) % mathpow(10, j) | 0) * k : 0;\r\n    }\r\n\r\n    if (roundUp) {\r\n      for (;;) {\r\n\r\n        // Is the digit to be rounded up in the first word of xd?\r\n        if (xdi == 0) {\r\n\r\n          // i will be the length of xd[0] before k is added.\r\n          for (i = 1, j = xd[0]; j >= 10; j /= 10) i++;\r\n          j = xd[0] += k;\r\n          for (k = 1; j >= 10; j /= 10) k++;\r\n\r\n          // if i != k the length has increased.\r\n          if (i != k) {\r\n            x.e++;\r\n            if (xd[0] == BASE) xd[0] = 1;\r\n          }\r\n\r\n          break;\r\n        } else {\r\n          xd[xdi] += k;\r\n          if (xd[xdi] != BASE) break;\r\n          xd[xdi--] = 0;\r\n          k = 1;\r\n        }\r\n      }\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (i = xd.length; xd[--i] === 0;) xd.pop();\r\n  }\r\n\r\n  if (external) {\r\n\r\n    // Overflow?\r\n    if (x.e > Ctor.maxE) {\r\n\r\n      // Infinity.\r\n      x.d = null;\r\n      x.e = NaN;\r\n\r\n    // Underflow?\r\n    } else if (x.e < Ctor.minE) {\r\n\r\n      // Zero.\r\n      x.e = 0;\r\n      x.d = [0];\r\n      // Ctor.underflow = true;\r\n    } // else Ctor.underflow = false;\r\n  }\r\n\r\n  return x;\r\n}\r\n\r\n\r\nfunction finiteToString(x, isExp, sd) {\r\n  if (!x.isFinite()) return nonFiniteToString(x);\r\n  var k,\r\n    e = x.e,\r\n    str = digitsToString(x.d),\r\n    len = str.length;\r\n\r\n  if (isExp) {\r\n    if (sd && (k = sd - len) > 0) {\r\n      str = str.charAt(0) + '.' + str.slice(1) + getZeroString(k);\r\n    } else if (len > 1) {\r\n      str = str.charAt(0) + '.' + str.slice(1);\r\n    }\r\n\r\n    str = str + (x.e < 0 ? 'e' : 'e+') + x.e;\r\n  } else if (e < 0) {\r\n    str = '0.' + getZeroString(-e - 1) + str;\r\n    if (sd && (k = sd - len) > 0) str += getZeroString(k);\r\n  } else if (e >= len) {\r\n    str += getZeroString(e + 1 - len);\r\n    if (sd && (k = sd - e - 1) > 0) str = str + '.' + getZeroString(k);\r\n  } else {\r\n    if ((k = e + 1) < len) str = str.slice(0, k) + '.' + str.slice(k);\r\n    if (sd && (k = sd - len) > 0) {\r\n      if (e + 1 === len) str += '.';\r\n      str += getZeroString(k);\r\n    }\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\n\r\n// Calculate the base 10 exponent from the base 1e7 exponent.\r\nfunction getBase10Exponent(digits, e) {\r\n  var w = digits[0];\r\n\r\n  // Add the number of digits of the first word of the digits array.\r\n  for ( e *= LOG_BASE; w >= 10; w /= 10) e++;\r\n  return e;\r\n}\r\n\r\n\r\nfunction getLn10(Ctor, sd, pr) {\r\n  if (sd > LN10_PRECISION) {\r\n\r\n    // Reset global state in case the exception is caught.\r\n    external = true;\r\n    if (pr) Ctor.precision = pr;\r\n    throw Error(precisionLimitExceeded);\r\n  }\r\n  return finalise(new Ctor(LN10), sd, 1, true);\r\n}\r\n\r\n\r\nfunction getPi(Ctor, sd, rm) {\r\n  if (sd > PI_PRECISION) throw Error(precisionLimitExceeded);\r\n  return finalise(new Ctor(PI), sd, rm, true);\r\n}\r\n\r\n\r\nfunction getPrecision(digits) {\r\n  var w = digits.length - 1,\r\n    len = w * LOG_BASE + 1;\r\n\r\n  w = digits[w];\r\n\r\n  // If non-zero...\r\n  if (w) {\r\n\r\n    // Subtract the number of trailing zeros of the last word.\r\n    for (; w % 10 == 0; w /= 10) len--;\r\n\r\n    // Add the number of digits of the first word.\r\n    for (w = digits[0]; w >= 10; w /= 10) len++;\r\n  }\r\n\r\n  return len;\r\n}\r\n\r\n\r\nfunction getZeroString(k) {\r\n  var zs = '';\r\n  for (; k--;) zs += '0';\r\n  return zs;\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of Decimal `x` to the power `n`, where `n` is an\r\n * integer of type number.\r\n *\r\n * Implements 'exponentiation by squaring'. Called by `pow` and `parseOther`.\r\n *\r\n */\r\nfunction intPow(Ctor, x, n, pr) {\r\n  var isTruncated,\r\n    r = new Ctor(1),\r\n\r\n    // Max n of 9007199254740991 takes 53 loop iterations.\r\n    // Maximum digits array length; leaves [28, 34] guard digits.\r\n    k = Math.ceil(pr / LOG_BASE + 4);\r\n\r\n  external = false;\r\n\r\n  for (;;) {\r\n    if (n % 2) {\r\n      r = r.times(x);\r\n      if (truncate(r.d, k)) isTruncated = true;\r\n    }\r\n\r\n    n = mathfloor(n / 2);\r\n    if (n === 0) {\r\n\r\n      // To ensure correct rounding when r.d is truncated, increment the last word if it is zero.\r\n      n = r.d.length - 1;\r\n      if (isTruncated && r.d[n] === 0) ++r.d[n];\r\n      break;\r\n    }\r\n\r\n    x = x.times(x);\r\n    truncate(x.d, k);\r\n  }\r\n\r\n  external = true;\r\n\r\n  return r;\r\n}\r\n\r\n\r\nfunction isOdd(n) {\r\n  return n.d[n.d.length - 1] & 1;\r\n}\r\n\r\n\r\n/*\r\n * Handle `max` and `min`. `ltgt` is 'lt' or 'gt'.\r\n */\r\nfunction maxOrMin(Ctor, args, ltgt) {\r\n  var y,\r\n    x = new Ctor(args[0]),\r\n    i = 0;\r\n\r\n  for (; ++i < args.length;) {\r\n    y = new Ctor(args[i]);\r\n    if (!y.s) {\r\n      x = y;\r\n      break;\r\n    } else if (x[ltgt](y)) {\r\n      x = y;\r\n    }\r\n  }\r\n\r\n  return x;\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the natural exponential of `x` rounded to `sd` significant\r\n * digits.\r\n *\r\n * Taylor/Maclaurin series.\r\n *\r\n * exp(x) = x^0/0! + x^1/1! + x^2/2! + x^3/3! + ...\r\n *\r\n * Argument reduction:\r\n *   Repeat x = x / 32, k += 5, until |x| < 0.1\r\n *   exp(x) = exp(x / 2^k)^(2^k)\r\n *\r\n * Previously, the argument was initially reduced by\r\n * exp(x) = exp(r) * 10^k  where r = x - k * ln10, k = floor(x / ln10)\r\n * to first put r in the range [0, ln10], before dividing by 32 until |x| < 0.1, but this was\r\n * found to be slower than just dividing repeatedly by 32 as above.\r\n *\r\n * Max integer argument: exp('20723265836946413') = 6.3e+9000000000000000\r\n * Min integer argument: exp('-20723265836946411') = 1.2e-9000000000000000\r\n * (Math object integer min/max: Math.exp(709) = 8.2e+307, Math.exp(-745) = 5e-324)\r\n *\r\n *  exp(Infinity)  = Infinity\r\n *  exp(-Infinity) = 0\r\n *  exp(NaN)       = NaN\r\n *  exp(±0)        = 1\r\n *\r\n *  exp(x) is non-terminating for any finite, non-zero x.\r\n *\r\n *  The result will always be correctly rounded.\r\n *\r\n */\r\nfunction naturalExponential(x, sd) {\r\n  var denominator, guard, j, pow, sum, t, wpr,\r\n    rep = 0,\r\n    i = 0,\r\n    k = 0,\r\n    Ctor = x.constructor,\r\n    rm = Ctor.rounding,\r\n    pr = Ctor.precision;\r\n\r\n  // 0/NaN/Infinity?\r\n  if (!x.d || !x.d[0] || x.e > 17) {\r\n\r\n    return new Ctor(x.d\r\n      ? !x.d[0] ? 1 : x.s < 0 ? 0 : 1 / 0\r\n      : x.s ? x.s < 0 ? 0 : x : 0 / 0);\r\n  }\r\n\r\n  if (sd == null) {\r\n    external = false;\r\n    wpr = pr;\r\n  } else {\r\n    wpr = sd;\r\n  }\r\n\r\n  t = new Ctor(0.03125);\r\n\r\n  // while abs(x) >= 0.1\r\n  while (x.e > -2) {\r\n\r\n    // x = x / 2^5\r\n    x = x.times(t);\r\n    k += 5;\r\n  }\r\n\r\n  // Use 2 * log10(2^k) + 5 (empirically derived) to estimate the increase in precision\r\n  // necessary to ensure the first 4 rounding digits are correct.\r\n  guard = Math.log(mathpow(2, k)) / Math.LN10 * 2 + 5 | 0;\r\n  wpr += guard;\r\n  denominator = pow = sum = new Ctor(1);\r\n  Ctor.precision = wpr;\r\n\r\n  for (;;) {\r\n    pow = finalise(pow.times(x), wpr, 1);\r\n    denominator = denominator.times(++i);\r\n    t = sum.plus(divide(pow, denominator, wpr, 1));\r\n\r\n    if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {\r\n      j = k;\r\n      while (j--) sum = finalise(sum.times(sum), wpr, 1);\r\n\r\n      // Check to see if the first 4 rounding digits are [49]999.\r\n      // If so, repeat the summation with a higher precision, otherwise\r\n      // e.g. with precision: 18, rounding: 1\r\n      // exp(18.404272462595034083567793919843761) = 98372560.1229999999 (should be 98372560.123)\r\n      // `wpr - guard` is the index of first rounding digit.\r\n      if (sd == null) {\r\n\r\n        if (rep < 3 && checkRoundingDigits(sum.d, wpr - guard, rm, rep)) {\r\n          Ctor.precision = wpr += 10;\r\n          denominator = pow = t = new Ctor(1);\r\n          i = 0;\r\n          rep++;\r\n        } else {\r\n          return finalise(sum, Ctor.precision = pr, rm, external = true);\r\n        }\r\n      } else {\r\n        Ctor.precision = pr;\r\n        return sum;\r\n      }\r\n    }\r\n\r\n    sum = t;\r\n  }\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the natural logarithm of `x` rounded to `sd` significant\r\n * digits.\r\n *\r\n *  ln(-n)        = NaN\r\n *  ln(0)         = -Infinity\r\n *  ln(-0)        = -Infinity\r\n *  ln(1)         = 0\r\n *  ln(Infinity)  = Infinity\r\n *  ln(-Infinity) = NaN\r\n *  ln(NaN)       = NaN\r\n *\r\n *  ln(n) (n != 1) is non-terminating.\r\n *\r\n */\r\nfunction naturalLogarithm(y, sd) {\r\n  var c, c0, denominator, e, numerator, rep, sum, t, wpr, x1, x2,\r\n    n = 1,\r\n    guard = 10,\r\n    x = y,\r\n    xd = x.d,\r\n    Ctor = x.constructor,\r\n    rm = Ctor.rounding,\r\n    pr = Ctor.precision;\r\n\r\n  // Is x negative or Infinity, NaN, 0 or 1?\r\n  if (x.s < 0 || !xd || !xd[0] || !x.e && xd[0] == 1 && xd.length == 1) {\r\n    return new Ctor(xd && !xd[0] ? -1 / 0 : x.s != 1 ? NaN : xd ? 0 : x);\r\n  }\r\n\r\n  if (sd == null) {\r\n    external = false;\r\n    wpr = pr;\r\n  } else {\r\n    wpr = sd;\r\n  }\r\n\r\n  Ctor.precision = wpr += guard;\r\n  c = digitsToString(xd);\r\n  c0 = c.charAt(0);\r\n\r\n  if (Math.abs(e = x.e) < 1.5e15) {\r\n\r\n    // Argument reduction.\r\n    // The series converges faster the closer the argument is to 1, so using\r\n    // ln(a^b) = b * ln(a),   ln(a) = ln(a^b) / b\r\n    // multiply the argument by itself until the leading digits of the significand are 7, 8, 9,\r\n    // 10, 11, 12 or 13, recording the number of multiplications so the sum of the series can\r\n    // later be divided by this number, then separate out the power of 10 using\r\n    // ln(a*10^b) = ln(a) + b*ln(10).\r\n\r\n    // max n is 21 (gives 0.9, 1.0 or 1.1) (9e15 / 21 = 4.2e14).\r\n    //while (c0 < 9 && c0 != 1 || c0 == 1 && c.charAt(1) > 1) {\r\n    // max n is 6 (gives 0.7 - 1.3)\r\n    while (c0 < 7 && c0 != 1 || c0 == 1 && c.charAt(1) > 3) {\r\n      x = x.times(y);\r\n      c = digitsToString(x.d);\r\n      c0 = c.charAt(0);\r\n      n++;\r\n    }\r\n\r\n    e = x.e;\r\n\r\n    if (c0 > 1) {\r\n      x = new Ctor('0.' + c);\r\n      e++;\r\n    } else {\r\n      x = new Ctor(c0 + '.' + c.slice(1));\r\n    }\r\n  } else {\r\n\r\n    // The argument reduction method above may result in overflow if the argument y is a massive\r\n    // number with exponent >= 1500000000000000 (9e15 / 6 = 1.5e15), so instead recall this\r\n    // function using ln(x*10^e) = ln(x) + e*ln(10).\r\n    t = getLn10(Ctor, wpr + 2, pr).times(e + '');\r\n    x = naturalLogarithm(new Ctor(c0 + '.' + c.slice(1)), wpr - guard).plus(t);\r\n    Ctor.precision = pr;\r\n\r\n    return sd == null ? finalise(x, pr, rm, external = true) : x;\r\n  }\r\n\r\n  // x1 is x reduced to a value near 1.\r\n  x1 = x;\r\n\r\n  // Taylor series.\r\n  // ln(y) = ln((1 + x)/(1 - x)) = 2(x + x^3/3 + x^5/5 + x^7/7 + ...)\r\n  // where x = (y - 1)/(y + 1)    (|x| < 1)\r\n  sum = numerator = x = divide(x.minus(1), x.plus(1), wpr, 1);\r\n  x2 = finalise(x.times(x), wpr, 1);\r\n  denominator = 3;\r\n\r\n  for (;;) {\r\n    numerator = finalise(numerator.times(x2), wpr, 1);\r\n    t = sum.plus(divide(numerator, new Ctor(denominator), wpr, 1));\r\n\r\n    if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {\r\n      sum = sum.times(2);\r\n\r\n      // Reverse the argument reduction. Check that e is not 0 because, besides preventing an\r\n      // unnecessary calculation, -0 + 0 = +0 and to ensure correct rounding -0 needs to stay -0.\r\n      if (e !== 0) sum = sum.plus(getLn10(Ctor, wpr + 2, pr).times(e + ''));\r\n      sum = divide(sum, new Ctor(n), wpr, 1);\r\n\r\n      // Is rm > 3 and the first 4 rounding digits 4999, or rm < 4 (or the summation has\r\n      // been repeated previously) and the first 4 rounding digits 9999?\r\n      // If so, restart the summation with a higher precision, otherwise\r\n      // e.g. with precision: 12, rounding: 1\r\n      // ln(135520028.6126091714265381533) = 18.7246299999 when it should be 18.72463.\r\n      // `wpr - guard` is the index of first rounding digit.\r\n      if (sd == null) {\r\n        if (checkRoundingDigits(sum.d, wpr - guard, rm, rep)) {\r\n          Ctor.precision = wpr += guard;\r\n          t = numerator = x = divide(x1.minus(1), x1.plus(1), wpr, 1);\r\n          x2 = finalise(x.times(x), wpr, 1);\r\n          denominator = rep = 1;\r\n        } else {\r\n          return finalise(sum, Ctor.precision = pr, rm, external = true);\r\n        }\r\n      } else {\r\n        Ctor.precision = pr;\r\n        return sum;\r\n      }\r\n    }\r\n\r\n    sum = t;\r\n    denominator += 2;\r\n  }\r\n}\r\n\r\n\r\n// ±Infinity, NaN.\r\nfunction nonFiniteToString(x) {\r\n  // Unsigned.\r\n  return String(x.s * x.s / 0);\r\n}\r\n\r\n\r\n/*\r\n * Parse the value of a new Decimal `x` from string `str`.\r\n */\r\nfunction parseDecimal(x, str) {\r\n  var e, i, len;\r\n\r\n  // Decimal point?\r\n  if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n  // Exponential form?\r\n  if ((i = str.search(/e/i)) > 0) {\r\n\r\n    // Determine exponent.\r\n    if (e < 0) e = i;\r\n    e += +str.slice(i + 1);\r\n    str = str.substring(0, i);\r\n  } else if (e < 0) {\r\n\r\n    // Integer.\r\n    e = str.length;\r\n  }\r\n\r\n  // Determine leading zeros.\r\n  for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n  // Determine trailing zeros.\r\n  for (len = str.length; str.charCodeAt(len - 1) === 48; --len);\r\n  str = str.slice(i, len);\r\n\r\n  if (str) {\r\n    len -= i;\r\n    x.e = e = e - i - 1;\r\n    x.d = [];\r\n\r\n    // Transform base\r\n\r\n    // e is the base 10 exponent.\r\n    // i is where to slice str to get the first word of the digits array.\r\n    i = (e + 1) % LOG_BASE;\r\n    if (e < 0) i += LOG_BASE;\r\n\r\n    if (i < len) {\r\n      if (i) x.d.push(+str.slice(0, i));\r\n      for (len -= LOG_BASE; i < len;) x.d.push(+str.slice(i, i += LOG_BASE));\r\n      str = str.slice(i);\r\n      i = LOG_BASE - str.length;\r\n    } else {\r\n      i -= len;\r\n    }\r\n\r\n    for (; i--;) str += '0';\r\n    x.d.push(+str);\r\n\r\n    if (external) {\r\n\r\n      // Overflow?\r\n      if (x.e > x.constructor.maxE) {\r\n\r\n        // Infinity.\r\n        x.d = null;\r\n        x.e = NaN;\r\n\r\n      // Underflow?\r\n      } else if (x.e < x.constructor.minE) {\r\n\r\n        // Zero.\r\n        x.e = 0;\r\n        x.d = [0];\r\n        // x.constructor.underflow = true;\r\n      } // else x.constructor.underflow = false;\r\n    }\r\n  } else {\r\n\r\n    // Zero.\r\n    x.e = 0;\r\n    x.d = [0];\r\n  }\r\n\r\n  return x;\r\n}\r\n\r\n\r\n/*\r\n * Parse the value of a new Decimal `x` from a string `str`, which is not a decimal value.\r\n */\r\nfunction parseOther(x, str) {\r\n  var base, Ctor, divisor, i, isFloat, len, p, xd, xe;\r\n\r\n  if (str === 'Infinity' || str === 'NaN') {\r\n    if (!+str) x.s = NaN;\r\n    x.e = NaN;\r\n    x.d = null;\r\n    return x;\r\n  }\r\n\r\n  if (isHex.test(str))  {\r\n    base = 16;\r\n    str = str.toLowerCase();\r\n  } else if (isBinary.test(str))  {\r\n    base = 2;\r\n  } else if (isOctal.test(str))  {\r\n    base = 8;\r\n  } else {\r\n    throw Error(invalidArgument + str);\r\n  }\r\n\r\n  // Is there a binary exponent part?\r\n  i = str.search(/p/i);\r\n\r\n  if (i > 0) {\r\n    p = +str.slice(i + 1);\r\n    str = str.substring(2, i);\r\n  } else {\r\n    str = str.slice(2);\r\n  }\r\n\r\n  // Convert `str` as an integer then divide the result by `base` raised to a power such that the\r\n  // fraction part will be restored.\r\n  i = str.indexOf('.');\r\n  isFloat = i >= 0;\r\n  Ctor = x.constructor;\r\n\r\n  if (isFloat) {\r\n    str = str.replace('.', '');\r\n    len = str.length;\r\n    i = len - i;\r\n\r\n    // log[10](16) = 1.2041... , log[10](88) = 1.9444....\r\n    divisor = intPow(Ctor, new Ctor(base), i, i * 2);\r\n  }\r\n\r\n  xd = convertBase(str, base, BASE);\r\n  xe = xd.length - 1;\r\n\r\n  // Remove trailing zeros.\r\n  for (i = xe; xd[i] === 0; --i) xd.pop();\r\n  if (i < 0) return new Ctor(x.s * 0);\r\n  x.e = getBase10Exponent(xd, xe);\r\n  x.d = xd;\r\n  external = false;\r\n\r\n  // At what precision to perform the division to ensure exact conversion?\r\n  // maxDecimalIntegerPartDigitCount = ceil(log[10](b) * otherBaseIntegerPartDigitCount)\r\n  // log[10](2) = 0.30103, log[10](8) = 0.90309, log[10](16) = 1.20412\r\n  // E.g. ceil(1.2 * 3) = 4, so up to 4 decimal digits are needed to represent 3 hex int digits.\r\n  // maxDecimalFractionPartDigitCount = {Hex:4|Oct:3|Bin:1} * otherBaseFractionPartDigitCount\r\n  // Therefore using 4 * the number of digits of str will always be enough.\r\n  if (isFloat) x = divide(x, divisor, len * 4);\r\n\r\n  // Multiply by the binary exponent part if present.\r\n  if (p) x = x.times(Math.abs(p) < 54 ? mathpow(2, p) : Decimal.pow(2, p));\r\n  external = true;\r\n\r\n  return x;\r\n}\r\n\r\n\r\n/*\r\n * sin(x) = x - x^3/3! + x^5/5! - ...\r\n * |x| < pi/2\r\n *\r\n */\r\nfunction sine(Ctor, x) {\r\n  var k,\r\n    len = x.d.length;\r\n\r\n  if (len < 3) return taylorSeries(Ctor, 2, x, x);\r\n\r\n  // Argument reduction: sin(5x) = 16*sin^5(x) - 20*sin^3(x) + 5*sin(x)\r\n  // i.e. sin(x) = 16*sin^5(x/5) - 20*sin^3(x/5) + 5*sin(x/5)\r\n  // and  sin(x) = sin(x/5)(5 + sin^2(x/5)(16sin^2(x/5) - 20))\r\n\r\n  // Estimate the optimum number of times to use the argument reduction.\r\n  k = 1.4 * Math.sqrt(len);\r\n  k = k > 16 ? 16 : k | 0;\r\n\r\n  x = x.times(1 / tinyPow(5, k));\r\n  x = taylorSeries(Ctor, 2, x, x);\r\n\r\n  // Reverse argument reduction\r\n  var sin2_x,\r\n    d5 = new Ctor(5),\r\n    d16 = new Ctor(16),\r\n    d20 = new Ctor(20);\r\n  for (; k--;) {\r\n    sin2_x = x.times(x);\r\n    x = x.times(d5.plus(sin2_x.times(d16.times(sin2_x).minus(d20))));\r\n  }\r\n\r\n  return x;\r\n}\r\n\r\n\r\n// Calculate Taylor series for `cos`, `cosh`, `sin` and `sinh`.\r\nfunction taylorSeries(Ctor, n, x, y, isHyperbolic) {\r\n  var j, t, u, x2,\r\n    i = 1,\r\n    pr = Ctor.precision,\r\n    k = Math.ceil(pr / LOG_BASE);\r\n\r\n  external = false;\r\n  x2 = x.times(x);\r\n  u = new Ctor(y);\r\n\r\n  for (;;) {\r\n    t = divide(u.times(x2), new Ctor(n++ * n++), pr, 1);\r\n    u = isHyperbolic ? y.plus(t) : y.minus(t);\r\n    y = divide(t.times(x2), new Ctor(n++ * n++), pr, 1);\r\n    t = u.plus(y);\r\n\r\n    if (t.d[k] !== void 0) {\r\n      for (j = k; t.d[j] === u.d[j] && j--;);\r\n      if (j == -1) break;\r\n    }\r\n\r\n    j = u;\r\n    u = y;\r\n    y = t;\r\n    t = j;\r\n    i++;\r\n  }\r\n\r\n  external = true;\r\n  t.d.length = k + 1;\r\n\r\n  return t;\r\n}\r\n\r\n\r\n// Exponent e must be positive and non-zero.\r\nfunction tinyPow(b, e) {\r\n  var n = b;\r\n  while (--e) n *= b;\r\n  return n;\r\n}\r\n\r\n\r\n// Return the absolute value of `x` reduced to less than or equal to half pi.\r\nfunction toLessThanHalfPi(Ctor, x) {\r\n  var t,\r\n    isNeg = x.s < 0,\r\n    pi = getPi(Ctor, Ctor.precision, 1),\r\n    halfPi = pi.times(0.5);\r\n\r\n  x = x.abs();\r\n\r\n  if (x.lte(halfPi)) {\r\n    quadrant = isNeg ? 4 : 1;\r\n    return x;\r\n  }\r\n\r\n  t = x.divToInt(pi);\r\n\r\n  if (t.isZero()) {\r\n    quadrant = isNeg ? 3 : 2;\r\n  } else {\r\n    x = x.minus(t.times(pi));\r\n\r\n    // 0 <= x < pi\r\n    if (x.lte(halfPi)) {\r\n      quadrant = isOdd(t) ? (isNeg ? 2 : 3) : (isNeg ? 4 : 1);\r\n      return x;\r\n    }\r\n\r\n    quadrant = isOdd(t) ? (isNeg ? 1 : 4) : (isNeg ? 3 : 2);\r\n  }\r\n\r\n  return x.minus(pi).abs();\r\n}\r\n\r\n\r\n/*\r\n * Return the value of Decimal `x` as a string in base `baseOut`.\r\n *\r\n * If the optional `sd` argument is present include a binary exponent suffix.\r\n */\r\nfunction toStringBinary(x, baseOut, sd, rm) {\r\n  var base, e, i, k, len, roundUp, str, xd, y,\r\n    Ctor = x.constructor,\r\n    isExp = sd !== void 0;\r\n\r\n  if (isExp) {\r\n    checkInt32(sd, 1, MAX_DIGITS);\r\n    if (rm === void 0) rm = Ctor.rounding;\r\n    else checkInt32(rm, 0, 8);\r\n  } else {\r\n    sd = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n  }\r\n\r\n  if (!x.isFinite()) {\r\n    str = nonFiniteToString(x);\r\n  } else {\r\n    str = finiteToString(x);\r\n    i = str.indexOf('.');\r\n\r\n    // Use exponential notation according to `toExpPos` and `toExpNeg`? No, but if required:\r\n    // maxBinaryExponent = floor((decimalExponent + 1) * log[2](10))\r\n    // minBinaryExponent = floor(decimalExponent * log[2](10))\r\n    // log[2](10) = 3.321928094887362347870319429489390175864\r\n\r\n    if (isExp) {\r\n      base = 2;\r\n      if (baseOut == 16) {\r\n        sd = sd * 4 - 3;\r\n      } else if (baseOut == 8) {\r\n        sd = sd * 3 - 2;\r\n      }\r\n    } else {\r\n      base = baseOut;\r\n    }\r\n\r\n    // Convert the number as an integer then divide the result by its base raised to a power such\r\n    // that the fraction part will be restored.\r\n\r\n    // Non-integer.\r\n    if (i >= 0) {\r\n      str = str.replace('.', '');\r\n      y = new Ctor(1);\r\n      y.e = str.length - i;\r\n      y.d = convertBase(finiteToString(y), 10, base);\r\n      y.e = y.d.length;\r\n    }\r\n\r\n    xd = convertBase(str, 10, base);\r\n    e = len = xd.length;\r\n\r\n    // Remove trailing zeros.\r\n    for (; xd[--len] == 0;) xd.pop();\r\n\r\n    if (!xd[0]) {\r\n      str = isExp ? '0p+0' : '0';\r\n    } else {\r\n      if (i < 0) {\r\n        e--;\r\n      } else {\r\n        x = new Ctor(x);\r\n        x.d = xd;\r\n        x.e = e;\r\n        x = divide(x, y, sd, rm, 0, base);\r\n        xd = x.d;\r\n        e = x.e;\r\n        roundUp = inexact;\r\n      }\r\n\r\n      // The rounding digit, i.e. the digit after the digit that may be rounded up.\r\n      i = xd[sd];\r\n      k = base / 2;\r\n      roundUp = roundUp || xd[sd + 1] !== void 0;\r\n\r\n      roundUp = rm < 4\r\n        ? (i !== void 0 || roundUp) && (rm === 0 || rm === (x.s < 0 ? 3 : 2))\r\n        : i > k || i === k && (rm === 4 || roundUp || rm === 6 && xd[sd - 1] & 1 ||\r\n          rm === (x.s < 0 ? 8 : 7));\r\n\r\n      xd.length = sd;\r\n\r\n      if (roundUp) {\r\n\r\n        // Rounding up may mean the previous digit has to be rounded up and so on.\r\n        for (; ++xd[--sd] > base - 1;) {\r\n          xd[sd] = 0;\r\n          if (!sd) {\r\n            ++e;\r\n            xd.unshift(1);\r\n          }\r\n        }\r\n      }\r\n\r\n      // Determine trailing zeros.\r\n      for (len = xd.length; !xd[len - 1]; --len);\r\n\r\n      // E.g. [4, 11, 15] becomes 4bf.\r\n      for (i = 0, str = ''; i < len; i++) str += NUMERALS.charAt(xd[i]);\r\n\r\n      // Add binary exponent suffix?\r\n      if (isExp) {\r\n        if (len > 1) {\r\n          if (baseOut == 16 || baseOut == 8) {\r\n            i = baseOut == 16 ? 4 : 3;\r\n            for (--len; len % i; len++) str += '0';\r\n            xd = convertBase(str, base, baseOut);\r\n            for (len = xd.length; !xd[len - 1]; --len);\r\n\r\n            // xd[0] will always be be 1\r\n            for (i = 1, str = '1.'; i < len; i++) str += NUMERALS.charAt(xd[i]);\r\n          } else {\r\n            str = str.charAt(0) + '.' + str.slice(1);\r\n          }\r\n        }\r\n\r\n        str =  str + (e < 0 ? 'p' : 'p+') + e;\r\n      } else if (e < 0) {\r\n        for (; ++e;) str = '0' + str;\r\n        str = '0.' + str;\r\n      } else {\r\n        if (++e > len) for (e -= len; e-- ;) str += '0';\r\n        else if (e < len) str = str.slice(0, e) + '.' + str.slice(e);\r\n      }\r\n    }\r\n\r\n    str = (baseOut == 16 ? '0x' : baseOut == 2 ? '0b' : baseOut == 8 ? '0o' : '') + str;\r\n  }\r\n\r\n  return x.s < 0 ? '-' + str : str;\r\n}\r\n\r\n\r\n// Does not strip trailing zeros.\r\nfunction truncate(arr, len) {\r\n  if (arr.length > len) {\r\n    arr.length = len;\r\n    return true;\r\n  }\r\n}\r\n\r\n\r\n// Decimal methods\r\n\r\n\r\n/*\r\n *  abs\r\n *  acos\r\n *  acosh\r\n *  add\r\n *  asin\r\n *  asinh\r\n *  atan\r\n *  atanh\r\n *  atan2\r\n *  cbrt\r\n *  ceil\r\n *  clone\r\n *  config\r\n *  cos\r\n *  cosh\r\n *  div\r\n *  exp\r\n *  floor\r\n *  hypot\r\n *  ln\r\n *  log\r\n *  log2\r\n *  log10\r\n *  max\r\n *  min\r\n *  mod\r\n *  mul\r\n *  pow\r\n *  random\r\n *  round\r\n *  set\r\n *  sign\r\n *  sin\r\n *  sinh\r\n *  sqrt\r\n *  sub\r\n *  tan\r\n *  tanh\r\n *  trunc\r\n */\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the absolute value of `x`.\r\n *\r\n * x {number|string|Decimal}\r\n *\r\n */\r\nfunction abs(x) {\r\n  return new this(x).abs();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the arccosine in radians of `x`.\r\n *\r\n * x {number|string|Decimal}\r\n *\r\n */\r\nfunction acos(x) {\r\n  return new this(x).acos();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the inverse of the hyperbolic cosine of `x`, rounded to\r\n * `precision` significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal} A value in radians.\r\n *\r\n */\r\nfunction acosh(x) {\r\n  return new this(x).acosh();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the sum of `x` and `y`, rounded to `precision` significant\r\n * digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal}\r\n * y {number|string|Decimal}\r\n *\r\n */\r\nfunction add(x, y) {\r\n  return new this(x).plus(y);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the arcsine in radians of `x`, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal}\r\n *\r\n */\r\nfunction asin(x) {\r\n  return new this(x).asin();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the inverse of the hyperbolic sine of `x`, rounded to\r\n * `precision` significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal} A value in radians.\r\n *\r\n */\r\nfunction asinh(x) {\r\n  return new this(x).asinh();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the arctangent in radians of `x`, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal}\r\n *\r\n */\r\nfunction atan(x) {\r\n  return new this(x).atan();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the inverse of the hyperbolic tangent of `x`, rounded to\r\n * `precision` significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal} A value in radians.\r\n *\r\n */\r\nfunction atanh(x) {\r\n  return new this(x).atanh();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the arctangent in radians of `y/x` in the range -pi to pi\r\n * (inclusive), rounded to `precision` significant digits using rounding mode `rounding`.\r\n *\r\n * Domain: [-Infinity, Infinity]\r\n * Range: [-pi, pi]\r\n *\r\n * y {number|string|Decimal} The y-coordinate.\r\n * x {number|string|Decimal} The x-coordinate.\r\n *\r\n * atan2(±0, -0)               = ±pi\r\n * atan2(±0, +0)               = ±0\r\n * atan2(±0, -x)               = ±pi for x > 0\r\n * atan2(±0, x)                = ±0 for x > 0\r\n * atan2(-y, ±0)               = -pi/2 for y > 0\r\n * atan2(y, ±0)                = pi/2 for y > 0\r\n * atan2(±y, -Infinity)        = ±pi for finite y > 0\r\n * atan2(±y, +Infinity)        = ±0 for finite y > 0\r\n * atan2(±Infinity, x)         = ±pi/2 for finite x\r\n * atan2(±Infinity, -Infinity) = ±3*pi/4\r\n * atan2(±Infinity, +Infinity) = ±pi/4\r\n * atan2(NaN, x) = NaN\r\n * atan2(y, NaN) = NaN\r\n *\r\n */\r\nfunction atan2(y, x) {\r\n  y = new this(y);\r\n  x = new this(x);\r\n  var r,\r\n    pr = this.precision,\r\n    rm = this.rounding,\r\n    wpr = pr + 4;\r\n\r\n  // Either NaN\r\n  if (!y.s || !x.s) {\r\n    r = new this(NaN);\r\n\r\n  // Both ±Infinity\r\n  } else if (!y.d && !x.d) {\r\n    r = getPi(this, wpr, 1).times(x.s > 0 ? 0.25 : 0.75);\r\n    r.s = y.s;\r\n\r\n  // x is ±Infinity or y is ±0\r\n  } else if (!x.d || y.isZero()) {\r\n    r = x.s < 0 ? getPi(this, pr, rm) : new this(0);\r\n    r.s = y.s;\r\n\r\n  // y is ±Infinity or x is ±0\r\n  } else if (!y.d || x.isZero()) {\r\n    r = getPi(this, wpr, 1).times(0.5);\r\n    r.s = y.s;\r\n\r\n  // Both non-zero and finite\r\n  } else if (x.s < 0) {\r\n    this.precision = wpr;\r\n    this.rounding = 1;\r\n    r = this.atan(divide(y, x, wpr, 1));\r\n    x = getPi(this, wpr, 1);\r\n    this.precision = pr;\r\n    this.rounding = rm;\r\n    r = y.s < 0 ? r.minus(x) : r.plus(x);\r\n  } else {\r\n    r = this.atan(divide(y, x, wpr, 1));\r\n  }\r\n\r\n  return r;\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the cube root of `x`, rounded to `precision` significant\r\n * digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal}\r\n *\r\n */\r\nfunction cbrt(x) {\r\n  return new this(x).cbrt();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is `x` rounded to an integer using `ROUND_CEIL`.\r\n *\r\n * x {number|string|Decimal}\r\n *\r\n */\r\nfunction ceil(x) {\r\n  return finalise(x = new this(x), x.e + 1, 2);\r\n}\r\n\r\n\r\n/*\r\n * Configure global settings for a Decimal constructor.\r\n *\r\n * `obj` is an object with one or more of the following properties,\r\n *\r\n *   precision  {number}\r\n *   rounding   {number}\r\n *   toExpNeg   {number}\r\n *   toExpPos   {number}\r\n *   maxE       {number}\r\n *   minE       {number}\r\n *   modulo     {number}\r\n *   crypto     {boolean|number}\r\n *   defaults   {true}\r\n *\r\n * E.g. Decimal.config({ precision: 20, rounding: 4 })\r\n *\r\n */\r\nfunction config(obj) {\r\n  if (!obj || typeof obj !== 'object') throw Error(decimalError + 'Object expected');\r\n  var i, p, v,\r\n    useDefaults = obj.defaults === true,\r\n    ps = [\r\n      'precision', 1, MAX_DIGITS,\r\n      'rounding', 0, 8,\r\n      'toExpNeg', -EXP_LIMIT, 0,\r\n      'toExpPos', 0, EXP_LIMIT,\r\n      'maxE', 0, EXP_LIMIT,\r\n      'minE', -EXP_LIMIT, 0,\r\n      'modulo', 0, 9\r\n    ];\r\n\r\n  for (i = 0; i < ps.length; i += 3) {\r\n    if (p = ps[i], useDefaults) this[p] = DEFAULTS[p];\r\n    if ((v = obj[p]) !== void 0) {\r\n      if (mathfloor(v) === v && v >= ps[i + 1] && v <= ps[i + 2]) this[p] = v;\r\n      else throw Error(invalidArgument + p + ': ' + v);\r\n    }\r\n  }\r\n\r\n  if (p = 'crypto', useDefaults) this[p] = DEFAULTS[p];\r\n  if ((v = obj[p]) !== void 0) {\r\n    if (v === true || v === false || v === 0 || v === 1) {\r\n      if (v) {\r\n        if (typeof crypto != 'undefined' && crypto &&\r\n          (crypto.getRandomValues || crypto.randomBytes)) {\r\n          this[p] = true;\r\n        } else {\r\n          throw Error(cryptoUnavailable);\r\n        }\r\n      } else {\r\n        this[p] = false;\r\n      }\r\n    } else {\r\n      throw Error(invalidArgument + p + ': ' + v);\r\n    }\r\n  }\r\n\r\n  return this;\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the cosine of `x`, rounded to `precision` significant\r\n * digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal} A value in radians.\r\n *\r\n */\r\nfunction cos(x) {\r\n  return new this(x).cos();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the hyperbolic cosine of `x`, rounded to precision\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal} A value in radians.\r\n *\r\n */\r\nfunction cosh(x) {\r\n  return new this(x).cosh();\r\n}\r\n\r\n\r\n/*\r\n * Create and return a Decimal constructor with the same configuration properties as this Decimal\r\n * constructor.\r\n *\r\n */\r\nfunction clone(obj) {\r\n  var i, p, ps;\r\n\r\n  /*\r\n   * The Decimal constructor and exported function.\r\n   * Return a new Decimal instance.\r\n   *\r\n   * v {number|string|Decimal} A numeric value.\r\n   *\r\n   */\r\n  function Decimal(v) {\r\n    var e, i, t,\r\n      x = this;\r\n\r\n    // Decimal called without new.\r\n    if (!(x instanceof Decimal)) return new Decimal(v);\r\n\r\n    // Retain a reference to this Decimal constructor, and shadow Decimal.prototype.constructor\r\n    // which points to Object.\r\n    x.constructor = Decimal;\r\n\r\n    // Duplicate.\r\n    if (v instanceof Decimal) {\r\n      x.s = v.s;\r\n\r\n      if (external) {\r\n        if (!v.d || v.e > Decimal.maxE) {\r\n\r\n          // Infinity.\r\n          x.e = NaN;\r\n          x.d = null;\r\n        } else if (v.e < Decimal.minE) {\r\n\r\n          // Zero.\r\n          x.e = 0;\r\n          x.d = [0];\r\n        } else {\r\n          x.e = v.e;\r\n          x.d = v.d.slice();\r\n        }\r\n      } else {\r\n        x.e = v.e;\r\n        x.d = v.d ? v.d.slice() : v.d;\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    t = typeof v;\r\n\r\n    if (t === 'number') {\r\n      if (v === 0) {\r\n        x.s = 1 / v < 0 ? -1 : 1;\r\n        x.e = 0;\r\n        x.d = [0];\r\n        return;\r\n      }\r\n\r\n      if (v < 0) {\r\n        v = -v;\r\n        x.s = -1;\r\n      } else {\r\n        x.s = 1;\r\n      }\r\n\r\n      // Fast path for small integers.\r\n      if (v === ~~v && v < 1e7) {\r\n        for (e = 0, i = v; i >= 10; i /= 10) e++;\r\n\r\n        if (external) {\r\n          if (e > Decimal.maxE) {\r\n            x.e = NaN;\r\n            x.d = null;\r\n          } else if (e < Decimal.minE) {\r\n            x.e = 0;\r\n            x.d = [0];\r\n          } else {\r\n            x.e = e;\r\n            x.d = [v];\r\n          }\r\n        } else {\r\n          x.e = e;\r\n          x.d = [v];\r\n        }\r\n\r\n        return;\r\n\r\n      // Infinity, NaN.\r\n      } else if (v * 0 !== 0) {\r\n        if (!v) x.s = NaN;\r\n        x.e = NaN;\r\n        x.d = null;\r\n        return;\r\n      }\r\n\r\n      return parseDecimal(x, v.toString());\r\n\r\n    } else if (t !== 'string') {\r\n      throw Error(invalidArgument + v);\r\n    }\r\n\r\n    // Minus sign?\r\n    if ((i = v.charCodeAt(0)) === 45) {\r\n      v = v.slice(1);\r\n      x.s = -1;\r\n    } else {\r\n      // Plus sign?\r\n      if (i === 43) v = v.slice(1);\r\n      x.s = 1;\r\n    }\r\n\r\n    return isDecimal.test(v) ? parseDecimal(x, v) : parseOther(x, v);\r\n  }\r\n\r\n  Decimal.prototype = P;\r\n\r\n  Decimal.ROUND_UP = 0;\r\n  Decimal.ROUND_DOWN = 1;\r\n  Decimal.ROUND_CEIL = 2;\r\n  Decimal.ROUND_FLOOR = 3;\r\n  Decimal.ROUND_HALF_UP = 4;\r\n  Decimal.ROUND_HALF_DOWN = 5;\r\n  Decimal.ROUND_HALF_EVEN = 6;\r\n  Decimal.ROUND_HALF_CEIL = 7;\r\n  Decimal.ROUND_HALF_FLOOR = 8;\r\n  Decimal.EUCLID = 9;\r\n\r\n  Decimal.config = Decimal.set = config;\r\n  Decimal.clone = clone;\r\n  Decimal.isDecimal = isDecimalInstance;\r\n\r\n  Decimal.abs = abs;\r\n  Decimal.acos = acos;\r\n  Decimal.acosh = acosh;        // ES6\r\n  Decimal.add = add;\r\n  Decimal.asin = asin;\r\n  Decimal.asinh = asinh;        // ES6\r\n  Decimal.atan = atan;\r\n  Decimal.atanh = atanh;        // ES6\r\n  Decimal.atan2 = atan2;\r\n  Decimal.cbrt = cbrt;          // ES6\r\n  Decimal.ceil = ceil;\r\n  Decimal.cos = cos;\r\n  Decimal.cosh = cosh;          // ES6\r\n  Decimal.div = div;\r\n  Decimal.exp = exp;\r\n  Decimal.floor = floor;\r\n  Decimal.hypot = hypot;        // ES6\r\n  Decimal.ln = ln;\r\n  Decimal.log = log;\r\n  Decimal.log10 = log10;        // ES6\r\n  Decimal.log2 = log2;          // ES6\r\n  Decimal.max = max;\r\n  Decimal.min = min;\r\n  Decimal.mod = mod;\r\n  Decimal.mul = mul;\r\n  Decimal.pow = pow;\r\n  Decimal.random = random;\r\n  Decimal.round = round;\r\n  Decimal.sign = sign;          // ES6\r\n  Decimal.sin = sin;\r\n  Decimal.sinh = sinh;          // ES6\r\n  Decimal.sqrt = sqrt;\r\n  Decimal.sub = sub;\r\n  Decimal.tan = tan;\r\n  Decimal.tanh = tanh;          // ES6\r\n  Decimal.trunc = trunc;        // ES6\r\n\r\n  if (obj === void 0) obj = {};\r\n  if (obj) {\r\n    if (obj.defaults !== true) {\r\n      ps = ['precision', 'rounding', 'toExpNeg', 'toExpPos', 'maxE', 'minE', 'modulo', 'crypto'];\r\n      for (i = 0; i < ps.length;) if (!obj.hasOwnProperty(p = ps[i++])) obj[p] = this[p];\r\n    }\r\n  }\r\n\r\n  Decimal.config(obj);\r\n\r\n  return Decimal;\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is `x` divided by `y`, rounded to `precision` significant\r\n * digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal}\r\n * y {number|string|Decimal}\r\n *\r\n */\r\nfunction div(x, y) {\r\n  return new this(x).div(y);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the natural exponential of `x`, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal} The power to which to raise the base of the natural log.\r\n *\r\n */\r\nfunction exp(x) {\r\n  return new this(x).exp();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is `x` round to an integer using `ROUND_FLOOR`.\r\n *\r\n * x {number|string|Decimal}\r\n *\r\n */\r\nfunction floor(x) {\r\n  return finalise(x = new this(x), x.e + 1, 3);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the square root of the sum of the squares of the arguments,\r\n * rounded to `precision` significant digits using rounding mode `rounding`.\r\n *\r\n * hypot(a, b, ...) = sqrt(a^2 + b^2 + ...)\r\n *\r\n * arguments {number|string|Decimal}\r\n *\r\n */\r\nfunction hypot() {\r\n  var i, n,\r\n    t = new this(0);\r\n\r\n  external = false;\r\n\r\n  for (i = 0; i < arguments.length;) {\r\n    n = new this(arguments[i++]);\r\n    if (!n.d) {\r\n      if (n.s) {\r\n        external = true;\r\n        return new this(1 / 0);\r\n      }\r\n      t = n;\r\n    } else if (t.d) {\r\n      t = t.plus(n.times(n));\r\n    }\r\n  }\r\n\r\n  external = true;\r\n\r\n  return t.sqrt();\r\n}\r\n\r\n\r\n/*\r\n * Return true if object is a Decimal instance (where Decimal is any Decimal constructor),\r\n * otherwise return false.\r\n *\r\n */\r\nfunction isDecimalInstance(obj) {\r\n  return obj instanceof Decimal || obj && obj.name === '[object Decimal]' || false;\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the natural logarithm of `x`, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal}\r\n *\r\n */\r\nfunction ln(x) {\r\n  return new this(x).ln();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the log of `x` to the base `y`, or to base 10 if no base\r\n * is specified, rounded to `precision` significant digits using rounding mode `rounding`.\r\n *\r\n * log[y](x)\r\n *\r\n * x {number|string|Decimal} The argument of the logarithm.\r\n * y {number|string|Decimal} The base of the logarithm.\r\n *\r\n */\r\nfunction log(x, y) {\r\n  return new this(x).log(y);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the base 2 logarithm of `x`, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal}\r\n *\r\n */\r\nfunction log2(x) {\r\n  return new this(x).log(2);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the base 10 logarithm of `x`, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal}\r\n *\r\n */\r\nfunction log10(x) {\r\n  return new this(x).log(10);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the maximum of the arguments.\r\n *\r\n * arguments {number|string|Decimal}\r\n *\r\n */\r\nfunction max() {\r\n  return maxOrMin(this, arguments, 'lt');\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the minimum of the arguments.\r\n *\r\n * arguments {number|string|Decimal}\r\n *\r\n */\r\nfunction min() {\r\n  return maxOrMin(this, arguments, 'gt');\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is `x` modulo `y`, rounded to `precision` significant digits\r\n * using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal}\r\n * y {number|string|Decimal}\r\n *\r\n */\r\nfunction mod(x, y) {\r\n  return new this(x).mod(y);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is `x` multiplied by `y`, rounded to `precision` significant\r\n * digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal}\r\n * y {number|string|Decimal}\r\n *\r\n */\r\nfunction mul(x, y) {\r\n  return new this(x).mul(y);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is `x` raised to the power `y`, rounded to precision\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal} The base.\r\n * y {number|string|Decimal} The exponent.\r\n *\r\n */\r\nfunction pow(x, y) {\r\n  return new this(x).pow(y);\r\n}\r\n\r\n\r\n/*\r\n * Returns a new Decimal with a random value equal to or greater than 0 and less than 1, and with\r\n * `sd`, or `Decimal.precision` if `sd` is omitted, significant digits (or less if trailing zeros\r\n * are produced).\r\n *\r\n * [sd] {number} Significant digits. Integer, 0 to MAX_DIGITS inclusive.\r\n *\r\n */\r\nfunction random(sd) {\r\n  var d, e, k, n,\r\n    i = 0,\r\n    r = new this(1),\r\n    rd = [];\r\n\r\n  if (sd === void 0) sd = this.precision;\r\n  else checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n  k = Math.ceil(sd / LOG_BASE);\r\n\r\n  if (!this.crypto) {\r\n    for (; i < k;) rd[i++] = Math.random() * 1e7 | 0;\r\n\r\n  // Browsers supporting crypto.getRandomValues.\r\n  } else if (crypto.getRandomValues) {\r\n    d = crypto.getRandomValues(new Uint32Array(k));\r\n\r\n    for (; i < k;) {\r\n      n = d[i];\r\n\r\n      // 0 <= n < 4294967296\r\n      // Probability n >= 4.29e9, is 4967296 / 4294967296 = 0.00116 (1 in 865).\r\n      if (n >= 4.29e9) {\r\n        d[i] = crypto.getRandomValues(new Uint32Array(1))[0];\r\n      } else {\r\n\r\n        // 0 <= n <= 4289999999\r\n        // 0 <= (n % 1e7) <= 9999999\r\n        rd[i++] = n % 1e7;\r\n      }\r\n    }\r\n\r\n  // Node.js supporting crypto.randomBytes.\r\n  } else if (crypto.randomBytes) {\r\n\r\n    // buffer\r\n    d = crypto.randomBytes(k *= 4);\r\n\r\n    for (; i < k;) {\r\n\r\n      // 0 <= n < 2147483648\r\n      n = d[i] + (d[i + 1] << 8) + (d[i + 2] << 16) + ((d[i + 3] & 0x7f) << 24);\r\n\r\n      // Probability n >= 2.14e9, is 7483648 / 2147483648 = 0.0035 (1 in 286).\r\n      if (n >= 2.14e9) {\r\n        crypto.randomBytes(4).copy(d, i);\r\n      } else {\r\n\r\n        // 0 <= n <= 2139999999\r\n        // 0 <= (n % 1e7) <= 9999999\r\n        rd.push(n % 1e7);\r\n        i += 4;\r\n      }\r\n    }\r\n\r\n    i = k / 4;\r\n  } else {\r\n    throw Error(cryptoUnavailable);\r\n  }\r\n\r\n  k = rd[--i];\r\n  sd %= LOG_BASE;\r\n\r\n  // Convert trailing digits to zeros according to sd.\r\n  if (k && sd) {\r\n    n = mathpow(10, LOG_BASE - sd);\r\n    rd[i] = (k / n | 0) * n;\r\n  }\r\n\r\n  // Remove trailing words which are zero.\r\n  for (; rd[i] === 0; i--) rd.pop();\r\n\r\n  // Zero?\r\n  if (i < 0) {\r\n    e = 0;\r\n    rd = [0];\r\n  } else {\r\n    e = -1;\r\n\r\n    // Remove leading words which are zero and adjust exponent accordingly.\r\n    for (; rd[0] === 0; e -= LOG_BASE) rd.shift();\r\n\r\n    // Count the digits of the first word of rd to determine leading zeros.\r\n    for (k = 1, n = rd[0]; n >= 10; n /= 10) k++;\r\n\r\n    // Adjust the exponent for leading zeros of the first word of rd.\r\n    if (k < LOG_BASE) e -= LOG_BASE - k;\r\n  }\r\n\r\n  r.e = e;\r\n  r.d = rd;\r\n\r\n  return r;\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is `x` rounded to an integer using rounding mode `rounding`.\r\n *\r\n * To emulate `Math.round`, set rounding to 7 (ROUND_HALF_CEIL).\r\n *\r\n * x {number|string|Decimal}\r\n *\r\n */\r\nfunction round(x) {\r\n  return finalise(x = new this(x), x.e + 1, this.rounding);\r\n}\r\n\r\n\r\n/*\r\n * Return\r\n *   1    if x > 0,\r\n *  -1    if x < 0,\r\n *   0    if x is 0,\r\n *  -0    if x is -0,\r\n *   NaN  otherwise\r\n *\r\n * x {number|string|Decimal}\r\n *\r\n */\r\nfunction sign(x) {\r\n  x = new this(x);\r\n  return x.d ? (x.d[0] ? x.s : 0 * x.s) : x.s || NaN;\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the sine of `x`, rounded to `precision` significant digits\r\n * using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal} A value in radians.\r\n *\r\n */\r\nfunction sin(x) {\r\n  return new this(x).sin();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the hyperbolic sine of `x`, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal} A value in radians.\r\n *\r\n */\r\nfunction sinh(x) {\r\n  return new this(x).sinh();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the square root of `x`, rounded to `precision` significant\r\n * digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal}\r\n *\r\n */\r\nfunction sqrt(x) {\r\n  return new this(x).sqrt();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is `x` minus `y`, rounded to `precision` significant digits\r\n * using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal}\r\n * y {number|string|Decimal}\r\n *\r\n */\r\nfunction sub(x, y) {\r\n  return new this(x).sub(y);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the tangent of `x`, rounded to `precision` significant\r\n * digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal} A value in radians.\r\n *\r\n */\r\nfunction tan(x) {\r\n  return new this(x).tan();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the hyperbolic tangent of `x`, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal} A value in radians.\r\n *\r\n */\r\nfunction tanh(x) {\r\n  return new this(x).tanh();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is `x` truncated to an integer.\r\n *\r\n * x {number|string|Decimal}\r\n *\r\n */\r\nfunction trunc(x) {\r\n  return finalise(x = new this(x), x.e + 1, 1);\r\n}\r\n\r\n\r\nP[Symbol.for('nodejs.util.inspect.custom')] = P.toString;\r\nP[Symbol.toStringTag] = 'Decimal';\r\n\r\n// Create and configure initial Decimal constructor.\r\nexport var Decimal = clone(DEFAULTS);\r\n\r\n// Create the internal constants from their string values.\r\nLN10 = new Decimal(LN10);\r\nPI = new Decimal(PI);\r\n\r\nexport default Decimal;\r\n","import Decimal from 'decimal.js';\nimport { factory } from '../../utils/factory.js';\nvar name = 'BigNumber';\nvar dependencies = ['?on', 'config'];\nexport var createBigNumberClass = /* #__PURE__ */factory(name, dependencies, (_ref) => {\n  var {\n    on,\n    config\n  } = _ref;\n  var EUCLID = 9; // Use euclidian division for mod calculation\n\n  var BigNumber = Decimal.clone({\n    precision: config.precision,\n    modulo: EUCLID\n  });\n  /**\n   * Attach type information\n   */\n\n  BigNumber.prototype.type = 'BigNumber';\n  BigNumber.prototype.isBigNumber = true;\n  /**\n   * Get a JSON representation of a BigNumber containing\n   * type information\n   * @returns {Object} Returns a JSON object structured as:\n   *                   `{\"mathjs\": \"BigNumber\", \"value\": \"0.2\"}`\n   */\n\n  BigNumber.prototype.toJSON = function () {\n    return {\n      mathjs: 'BigNumber',\n      value: this.toString()\n    };\n  };\n  /**\n   * Instantiate a BigNumber from a JSON object\n   * @param {Object} json  a JSON object structured as:\n   *                       `{\"mathjs\": \"BigNumber\", \"value\": \"0.2\"}`\n   * @return {BigNumber}\n   */\n\n\n  BigNumber.fromJSON = function (json) {\n    return new BigNumber(json.value);\n  };\n\n  if (on) {\n    // listen for changed in the configuration, automatically apply changed precision\n    on('config', function (curr, prev) {\n      if (curr.precision !== prev.precision) {\n        BigNumber.config({\n          precision: curr.precision\n        });\n      }\n    });\n  }\n\n  return BigNumber;\n}, {\n  isClass: true\n});","/**\n * @license Complex.js v2.0.13 12/05/2020\n *\n * Copyright (c) 2020, Robert Eisele (robert@xarg.org)\n * Dual licensed under the MIT or GPL Version 2 licenses.\n **/\n\n/**\n *\n * This class allows the manipulation of complex numbers.\n * You can pass a complex number in different formats. Either as object, double, string or two integer parameters.\n *\n * Object form\n * { re: <real>, im: <imaginary> }\n * { arg: <angle>, abs: <radius> }\n * { phi: <angle>, r: <radius> }\n *\n * Array / Vector form\n * [ real, imaginary ]\n *\n * Double form\n * 99.3 - Single double value\n *\n * String form\n * '23.1337' - Simple real number\n * '15+3i' - a simple complex number\n * '3-i' - a simple complex number\n *\n * Example:\n *\n * var c = new Complex('99.3+8i');\n * c.mul({r: 3, i: 9}).div(4.9).sub(3, 2);\n *\n */\n\n(function(root) {\n\n  'use strict';\n\n  var cosh = function(x) {\n    return (Math.exp(x) + Math.exp(-x)) * 0.5;\n  };\n\n  var sinh = function(x) {\n    return (Math.exp(x) - Math.exp(-x)) * 0.5;\n  };\n\n  /**\n   * Calculates cos(x) - 1 using Taylor series if x is small.\n   *\n   * @param {number} x\n   * @returns {number} cos(x) - 1\n   */\n\n  var cosm1 = function(x) {\n    var limit = Math.PI/4;\n    if (x < -limit || x > limit) {\n      return (Math.cos(x) - 1.0);\n    }\n\n    var xx = x * x;\n    return xx *\n      (-0.5 + xx *\n        (1/24 + xx *\n          (-1/720 + xx *\n            (1/40320 + xx *\n              (-1/3628800 + xx *\n                (1/4790014600 + xx *\n                  (-1/87178291200 + xx *\n                    (1/20922789888000)\n                  )\n                )\n              )\n            )\n          )\n        )\n      )\n  };\n\n  var hypot = function(x, y) {\n\n    var a = Math.abs(x);\n    var b = Math.abs(y);\n\n    if (a < 3000 && b < 3000) {\n      return Math.sqrt(a * a + b * b);\n    }\n\n    if (a < b) {\n      a = b;\n      b = x / y;\n    } else {\n      b = y / x;\n    }\n    return a * Math.sqrt(1 + b * b);\n  };\n\n  var parser_exit = function() {\n    throw SyntaxError('Invalid Param');\n  };\n\n  /**\n   * Calculates log(sqrt(a^2+b^2)) in a way to avoid overflows\n   *\n   * @param {number} a\n   * @param {number} b\n   * @returns {number}\n   */\n  function logHypot(a, b) {\n\n    var _a = Math.abs(a);\n    var _b = Math.abs(b);\n\n    if (a === 0) {\n      return Math.log(_b);\n    }\n\n    if (b === 0) {\n      return Math.log(_a);\n    }\n\n    if (_a < 3000 && _b < 3000) {\n      return Math.log(a * a + b * b) * 0.5;\n    }\n\n    /* I got 4 ideas to compute this property without overflow:\n     *\n     * Testing 1000000 times with random samples for a,b ∈ [1, 1000000000] against a big decimal library to get an error estimate\n     *\n     * 1. Only eliminate the square root: (OVERALL ERROR: 3.9122483030951116e-11)\n\n     Math.log(a * a + b * b) / 2\n\n     *\n     *\n     * 2. Try to use the non-overflowing pythagoras: (OVERALL ERROR: 8.889760039210159e-10)\n\n     var fn = function(a, b) {\n     a = Math.abs(a);\n     b = Math.abs(b);\n     var t = Math.min(a, b);\n     a = Math.max(a, b);\n     t = t / a;\n\n     return Math.log(a) + Math.log(1 + t * t) / 2;\n     };\n\n     * 3. Abuse the identity cos(atan(y/x) = x / sqrt(x^2+y^2): (OVERALL ERROR: 3.4780178737037204e-10)\n\n     Math.log(a / Math.cos(Math.atan2(b, a)))\n\n     * 4. Use 3. and apply log rules: (OVERALL ERROR: 1.2014087502620896e-9)\n\n     Math.log(a) - Math.log(Math.cos(Math.atan2(b, a)))\n\n     */\n\n    return Math.log(a / Math.cos(Math.atan2(b, a)));\n  }\n\n  var parse = function(a, b) {\n\n    var z = {'re': 0, 'im': 0};\n\n    if (a === undefined || a === null) {\n      z['re'] =\n              z['im'] = 0;\n    } else if (b !== undefined) {\n      z['re'] = a;\n      z['im'] = b;\n    } else\n      switch (typeof a) {\n\n        case 'object':\n\n          if ('im' in a && 're' in a) {\n            z['re'] = a['re'];\n            z['im'] = a['im'];\n          } else if ('abs' in a && 'arg' in a) {\n            if (!Number.isFinite(a['abs']) && Number.isFinite(a['arg'])) {\n              return Complex['INFINITY'];\n            }\n            z['re'] = a['abs'] * Math.cos(a['arg']);\n            z['im'] = a['abs'] * Math.sin(a['arg']);\n          } else if ('r' in a && 'phi' in a) {\n            if (!Number.isFinite(a['r']) && Number.isFinite(a['phi'])) {\n              return Complex['INFINITY'];\n            }\n            z['re'] = a['r'] * Math.cos(a['phi']);\n            z['im'] = a['r'] * Math.sin(a['phi']);\n          } else if (a.length === 2) { // Quick array check\n            z['re'] = a[0];\n            z['im'] = a[1];\n          } else {\n            parser_exit();\n          }\n          break;\n\n        case 'string':\n\n          z['im'] = /* void */\n                  z['re'] = 0;\n\n          var tokens = a.match(/\\d+\\.?\\d*e[+-]?\\d+|\\d+\\.?\\d*|\\.\\d+|./g);\n          var plus = 1;\n          var minus = 0;\n\n          if (tokens === null) {\n            parser_exit();\n          }\n\n          for (var i = 0; i < tokens.length; i++) {\n\n            var c = tokens[i];\n\n            if (c === ' ' || c === '\\t' || c === '\\n') {\n              /* void */\n            } else if (c === '+') {\n              plus++;\n            } else if (c === '-') {\n              minus++;\n            } else if (c === 'i' || c === 'I') {\n\n              if (plus + minus === 0) {\n                parser_exit();\n              }\n\n              if (tokens[i + 1] !== ' ' && !isNaN(tokens[i + 1])) {\n                z['im'] += parseFloat((minus % 2 ? '-' : '') + tokens[i + 1]);\n                i++;\n              } else {\n                z['im'] += parseFloat((minus % 2 ? '-' : '') + '1');\n              }\n              plus = minus = 0;\n\n            } else {\n\n              if (plus + minus === 0 || isNaN(c)) {\n                parser_exit();\n              }\n\n              if (tokens[i + 1] === 'i' || tokens[i + 1] === 'I') {\n                z['im'] += parseFloat((minus % 2 ? '-' : '') + c);\n                i++;\n              } else {\n                z['re'] += parseFloat((minus % 2 ? '-' : '') + c);\n              }\n              plus = minus = 0;\n            }\n          }\n\n          // Still something on the stack\n          if (plus + minus > 0) {\n            parser_exit();\n          }\n          break;\n\n        case 'number':\n          z['im'] = 0;\n          z['re'] = a;\n          break;\n\n        default:\n          parser_exit();\n      }\n\n    if (isNaN(z['re']) || isNaN(z['im'])) {\n      // If a calculation is NaN, we treat it as NaN and don't throw\n      //parser_exit();\n    }\n\n    return z;\n  };\n\n  /**\n   * @constructor\n   * @returns {Complex}\n   */\n  function Complex(a, b) {\n\n    if (!(this instanceof Complex)) {\n      return new Complex(a, b);\n    }\n\n    var z = parse(a, b);\n\n    this['re'] = z['re'];\n    this['im'] = z['im'];\n  }\n\n  Complex.prototype = {\n\n    're': 0,\n    'im': 0,\n\n    /**\n     * Calculates the sign of a complex number, which is a normalized complex\n     *\n     * @returns {Complex}\n     */\n    'sign': function() {\n\n      var abs = this['abs']();\n\n      return new Complex(\n              this['re'] / abs,\n              this['im'] / abs);\n    },\n\n    /**\n     * Adds two complex numbers\n     *\n     * @returns {Complex}\n     */\n    'add': function(a, b) {\n\n      var z = new Complex(a, b);\n\n      // Infinity + Infinity = NaN\n      if (this['isInfinite']() && z['isInfinite']()) {\n        return Complex['NAN'];\n      }\n\n      // Infinity + z = Infinity { where z != Infinity }\n      if (this['isInfinite']() || z['isInfinite']()) {\n        return Complex['INFINITY'];\n      }\n\n      return new Complex(\n              this['re'] + z['re'],\n              this['im'] + z['im']);\n    },\n\n    /**\n     * Subtracts two complex numbers\n     *\n     * @returns {Complex}\n     */\n    'sub': function(a, b) {\n\n      var z = new Complex(a, b);\n\n      // Infinity - Infinity = NaN\n      if (this['isInfinite']() && z['isInfinite']()) {\n        return Complex['NAN'];\n      }\n\n      // Infinity - z = Infinity { where z != Infinity }\n      if (this['isInfinite']() || z['isInfinite']()) {\n        return Complex['INFINITY'];\n      }\n\n      return new Complex(\n              this['re'] - z['re'],\n              this['im'] - z['im']);\n    },\n\n    /**\n     * Multiplies two complex numbers\n     *\n     * @returns {Complex}\n     */\n    'mul': function(a, b) {\n\n      var z = new Complex(a, b);\n\n      // Infinity * 0 = NaN\n      if ((this['isInfinite']() && z['isZero']()) || (this['isZero']() && z['isInfinite']())) {\n        return Complex['NAN'];\n      }\n\n      // Infinity * z = Infinity { where z != 0 }\n      if (this['isInfinite']() || z['isInfinite']()) {\n        return Complex['INFINITY'];\n      }\n\n      // Short circuit for real values\n      if (z['im'] === 0 && this['im'] === 0) {\n        return new Complex(this['re'] * z['re'], 0);\n      }\n\n      return new Complex(\n              this['re'] * z['re'] - this['im'] * z['im'],\n              this['re'] * z['im'] + this['im'] * z['re']);\n    },\n\n    /**\n     * Divides two complex numbers\n     *\n     * @returns {Complex}\n     */\n    'div': function(a, b) {\n\n      var z = new Complex(a, b);\n\n      // 0 / 0 = NaN and Infinity / Infinity = NaN\n      if ((this['isZero']() && z['isZero']()) || (this['isInfinite']() && z['isInfinite']())) {\n        return Complex['NAN'];\n      }\n\n      // Infinity / 0 = Infinity\n      if (this['isInfinite']() || z['isZero']()) {\n        return Complex['INFINITY'];\n      }\n\n      // 0 / Infinity = 0\n      if (this['isZero']() || z['isInfinite']()) {\n        return Complex['ZERO'];\n      }\n\n      a = this['re'];\n      b = this['im'];\n\n      var c = z['re'];\n      var d = z['im'];\n      var t, x;\n\n      if (0 === d) {\n        // Divisor is real\n        return new Complex(a / c, b / c);\n      }\n\n      if (Math.abs(c) < Math.abs(d)) {\n\n        x = c / d;\n        t = c * x + d;\n\n        return new Complex(\n                (a * x + b) / t,\n                (b * x - a) / t);\n\n      } else {\n\n        x = d / c;\n        t = d * x + c;\n\n        return new Complex(\n                (a + b * x) / t,\n                (b - a * x) / t);\n      }\n    },\n\n    /**\n     * Calculate the power of two complex numbers\n     *\n     * @returns {Complex}\n     */\n    'pow': function(a, b) {\n\n      var z = new Complex(a, b);\n\n      a = this['re'];\n      b = this['im'];\n\n      if (z['isZero']()) {\n        return Complex['ONE'];\n      }\n\n      // If the exponent is real\n      if (z['im'] === 0) {\n\n        if (b === 0 && a > 0) {\n\n          return new Complex(Math.pow(a, z['re']), 0);\n\n        } else if (a === 0) { // If base is fully imaginary\n\n          switch ((z['re'] % 4 + 4) % 4) {\n            case 0:\n              return new Complex(Math.pow(b, z['re']), 0);\n            case 1:\n              return new Complex(0, Math.pow(b, z['re']));\n            case 2:\n              return new Complex(-Math.pow(b, z['re']), 0);\n            case 3:\n              return new Complex(0, -Math.pow(b, z['re']));\n          }\n        }\n      }\n\n      /* I couldn't find a good formula, so here is a derivation and optimization\n       *\n       * z_1^z_2 = (a + bi)^(c + di)\n       *         = exp((c + di) * log(a + bi)\n       *         = pow(a^2 + b^2, (c + di) / 2) * exp(i(c + di)atan2(b, a))\n       * =>...\n       * Re = (pow(a^2 + b^2, c / 2) * exp(-d * atan2(b, a))) * cos(d * log(a^2 + b^2) / 2 + c * atan2(b, a))\n       * Im = (pow(a^2 + b^2, c / 2) * exp(-d * atan2(b, a))) * sin(d * log(a^2 + b^2) / 2 + c * atan2(b, a))\n       *\n       * =>...\n       * Re = exp(c * log(sqrt(a^2 + b^2)) - d * atan2(b, a)) * cos(d * log(sqrt(a^2 + b^2)) + c * atan2(b, a))\n       * Im = exp(c * log(sqrt(a^2 + b^2)) - d * atan2(b, a)) * sin(d * log(sqrt(a^2 + b^2)) + c * atan2(b, a))\n       *\n       * =>\n       * Re = exp(c * logsq2 - d * arg(z_1)) * cos(d * logsq2 + c * arg(z_1))\n       * Im = exp(c * logsq2 - d * arg(z_1)) * sin(d * logsq2 + c * arg(z_1))\n       *\n       */\n\n      if (a === 0 && b === 0 && z['re'] > 0 && z['im'] >= 0) {\n        return Complex['ZERO'];\n      }\n\n      var arg = Math.atan2(b, a);\n      var loh = logHypot(a, b);\n\n      a = Math.exp(z['re'] * loh - z['im'] * arg);\n      b = z['im'] * loh + z['re'] * arg;\n      return new Complex(\n              a * Math.cos(b),\n              a * Math.sin(b));\n    },\n\n    /**\n     * Calculate the complex square root\n     *\n     * @returns {Complex}\n     */\n    'sqrt': function() {\n\n      var a = this['re'];\n      var b = this['im'];\n      var r = this['abs']();\n\n      var re, im;\n\n      if (a >= 0) {\n\n        if (b === 0) {\n          return new Complex(Math.sqrt(a), 0);\n        }\n\n        re = 0.5 * Math.sqrt(2.0 * (r + a));\n      } else {\n        re = Math.abs(b) / Math.sqrt(2 * (r - a));\n      }\n\n      if (a <= 0) {\n        im = 0.5 * Math.sqrt(2.0 * (r - a));\n      } else {\n        im = Math.abs(b) / Math.sqrt(2 * (r + a));\n      }\n\n      return new Complex(re, b < 0 ? -im : im);\n    },\n\n    /**\n     * Calculate the complex exponent\n     *\n     * @returns {Complex}\n     */\n    'exp': function() {\n\n      var tmp = Math.exp(this['re']);\n\n      if (this['im'] === 0) {\n        //return new Complex(tmp, 0);\n      }\n      return new Complex(\n              tmp * Math.cos(this['im']),\n              tmp * Math.sin(this['im']));\n    },\n\n    /**\n     * Calculate the complex exponent and subtracts one.\n     *\n     * This may be more accurate than `Complex(x).exp().sub(1)` if\n     * `x` is small.\n     *\n     * @returns {Complex}\n     */\n    'expm1': function() {\n\n      /**\n       * exp(a + i*b) - 1\n       = exp(a) * (cos(b) + j*sin(b)) - 1\n       = expm1(a)*cos(b) + cosm1(b) + j*exp(a)*sin(b)\n       */\n\n      var a = this['re'];\n      var b = this['im'];\n\n      return new Complex(\n              Math.expm1(a) * Math.cos(b) + cosm1(b),\n              Math.exp(a) * Math.sin(b));\n    },\n\n    /**\n     * Calculate the natural log\n     *\n     * @returns {Complex}\n     */\n    'log': function() {\n\n      var a = this['re'];\n      var b = this['im'];\n\n      if (b === 0 && a > 0) {\n        //return new Complex(Math.log(a), 0);\n      }\n\n      return new Complex(\n              logHypot(a, b),\n              Math.atan2(b, a));\n    },\n\n    /**\n     * Calculate the magnitude of the complex number\n     *\n     * @returns {number}\n     */\n    'abs': function() {\n\n      return hypot(this['re'], this['im']);\n    },\n\n    /**\n     * Calculate the angle of the complex number\n     *\n     * @returns {number}\n     */\n    'arg': function() {\n\n      return Math.atan2(this['im'], this['re']);\n    },\n\n    /**\n     * Calculate the sine of the complex number\n     *\n     * @returns {Complex}\n     */\n    'sin': function() {\n\n      // sin(c) = (e^b - e^(-b)) / (2i)\n\n      var a = this['re'];\n      var b = this['im'];\n\n      return new Complex(\n              Math.sin(a) * cosh(b),\n              Math.cos(a) * sinh(b));\n    },\n\n    /**\n     * Calculate the cosine\n     *\n     * @returns {Complex}\n     */\n    'cos': function() {\n\n      // cos(z) = (e^b + e^(-b)) / 2\n\n      var a = this['re'];\n      var b = this['im'];\n\n      return new Complex(\n              Math.cos(a) * cosh(b),\n              -Math.sin(a) * sinh(b));\n    },\n\n    /**\n     * Calculate the tangent\n     *\n     * @returns {Complex}\n     */\n    'tan': function() {\n\n      // tan(c) = (e^(ci) - e^(-ci)) / (i(e^(ci) + e^(-ci)))\n\n      var a = 2 * this['re'];\n      var b = 2 * this['im'];\n      var d = Math.cos(a) + cosh(b);\n\n      return new Complex(\n              Math.sin(a) / d,\n              sinh(b) / d);\n    },\n\n    /**\n     * Calculate the cotangent\n     *\n     * @returns {Complex}\n     */\n    'cot': function() {\n\n      // cot(c) = i(e^(ci) + e^(-ci)) / (e^(ci) - e^(-ci))\n\n      var a = 2 * this['re'];\n      var b = 2 * this['im'];\n      var d = Math.cos(a) - cosh(b);\n\n      return new Complex(\n              -Math.sin(a) / d,\n              sinh(b) / d);\n    },\n\n    /**\n     * Calculate the secant\n     *\n     * @returns {Complex}\n     */\n    'sec': function() {\n\n      // sec(c) = 2 / (e^(ci) + e^(-ci))\n\n      var a = this['re'];\n      var b = this['im'];\n      var d = 0.5 * cosh(2 * b) + 0.5 * Math.cos(2 * a);\n\n      return new Complex(\n              Math.cos(a) * cosh(b) / d,\n              Math.sin(a) * sinh(b) / d);\n    },\n\n    /**\n     * Calculate the cosecans\n     *\n     * @returns {Complex}\n     */\n    'csc': function() {\n\n      // csc(c) = 2i / (e^(ci) - e^(-ci))\n\n      var a = this['re'];\n      var b = this['im'];\n      var d = 0.5 * cosh(2 * b) - 0.5 * Math.cos(2 * a);\n\n      return new Complex(\n              Math.sin(a) * cosh(b) / d,\n              -Math.cos(a) * sinh(b) / d);\n    },\n\n    /**\n     * Calculate the complex arcus sinus\n     *\n     * @returns {Complex}\n     */\n    'asin': function() {\n\n      // asin(c) = -i * log(ci + sqrt(1 - c^2))\n\n      var a = this['re'];\n      var b = this['im'];\n\n      var t1 = new Complex(\n              b * b - a * a + 1,\n              -2 * a * b)['sqrt']();\n\n      var t2 = new Complex(\n              t1['re'] - b,\n              t1['im'] + a)['log']();\n\n      return new Complex(t2['im'], -t2['re']);\n    },\n\n    /**\n     * Calculate the complex arcus cosinus\n     *\n     * @returns {Complex}\n     */\n    'acos': function() {\n\n      // acos(c) = i * log(c - i * sqrt(1 - c^2))\n\n      var a = this['re'];\n      var b = this['im'];\n\n      var t1 = new Complex(\n              b * b - a * a + 1,\n              -2 * a * b)['sqrt']();\n\n      var t2 = new Complex(\n              t1['re'] - b,\n              t1['im'] + a)['log']();\n\n      return new Complex(Math.PI / 2 - t2['im'], t2['re']);\n    },\n\n    /**\n     * Calculate the complex arcus tangent\n     *\n     * @returns {Complex}\n     */\n    'atan': function() {\n\n      // atan(c) = i / 2 log((i + x) / (i - x))\n\n      var a = this['re'];\n      var b = this['im'];\n\n      if (a === 0) {\n\n        if (b === 1) {\n          return new Complex(0, Infinity);\n        }\n\n        if (b === -1) {\n          return new Complex(0, -Infinity);\n        }\n      }\n\n      var d = a * a + (1.0 - b) * (1.0 - b);\n\n      var t1 = new Complex(\n              (1 - b * b - a * a) / d,\n              -2 * a / d).log();\n\n      return new Complex(-0.5 * t1['im'], 0.5 * t1['re']);\n    },\n\n    /**\n     * Calculate the complex arcus cotangent\n     *\n     * @returns {Complex}\n     */\n    'acot': function() {\n\n      // acot(c) = i / 2 log((c - i) / (c + i))\n\n      var a = this['re'];\n      var b = this['im'];\n\n      if (b === 0) {\n        return new Complex(Math.atan2(1, a), 0);\n      }\n\n      var d = a * a + b * b;\n      return (d !== 0)\n              ? new Complex(\n                      a / d,\n                      -b / d).atan()\n              : new Complex(\n                      (a !== 0) ? a / 0 : 0,\n                      (b !== 0) ? -b / 0 : 0).atan();\n    },\n\n    /**\n     * Calculate the complex arcus secant\n     *\n     * @returns {Complex}\n     */\n    'asec': function() {\n\n      // asec(c) = -i * log(1 / c + sqrt(1 - i / c^2))\n\n      var a = this['re'];\n      var b = this['im'];\n\n      if (a === 0 && b === 0) {\n        return new Complex(0, Infinity);\n      }\n\n      var d = a * a + b * b;\n      return (d !== 0)\n              ? new Complex(\n                      a / d,\n                      -b / d).acos()\n              : new Complex(\n                      (a !== 0) ? a / 0 : 0,\n                      (b !== 0) ? -b / 0 : 0).acos();\n    },\n\n    /**\n     * Calculate the complex arcus cosecans\n     *\n     * @returns {Complex}\n     */\n    'acsc': function() {\n\n      // acsc(c) = -i * log(i / c + sqrt(1 - 1 / c^2))\n\n      var a = this['re'];\n      var b = this['im'];\n\n      if (a === 0 && b === 0) {\n        return new Complex(Math.PI / 2, Infinity);\n      }\n\n      var d = a * a + b * b;\n      return (d !== 0)\n              ? new Complex(\n                      a / d,\n                      -b / d).asin()\n              : new Complex(\n                      (a !== 0) ? a / 0 : 0,\n                      (b !== 0) ? -b / 0 : 0).asin();\n    },\n\n    /**\n     * Calculate the complex sinh\n     *\n     * @returns {Complex}\n     */\n    'sinh': function() {\n\n      // sinh(c) = (e^c - e^-c) / 2\n\n      var a = this['re'];\n      var b = this['im'];\n\n      return new Complex(\n              sinh(a) * Math.cos(b),\n              cosh(a) * Math.sin(b));\n    },\n\n    /**\n     * Calculate the complex cosh\n     *\n     * @returns {Complex}\n     */\n    'cosh': function() {\n\n      // cosh(c) = (e^c + e^-c) / 2\n\n      var a = this['re'];\n      var b = this['im'];\n\n      return new Complex(\n              cosh(a) * Math.cos(b),\n              sinh(a) * Math.sin(b));\n    },\n\n    /**\n     * Calculate the complex tanh\n     *\n     * @returns {Complex}\n     */\n    'tanh': function() {\n\n      // tanh(c) = (e^c - e^-c) / (e^c + e^-c)\n\n      var a = 2 * this['re'];\n      var b = 2 * this['im'];\n      var d = cosh(a) + Math.cos(b);\n\n      return new Complex(\n              sinh(a) / d,\n              Math.sin(b) / d);\n    },\n\n    /**\n     * Calculate the complex coth\n     *\n     * @returns {Complex}\n     */\n    'coth': function() {\n\n      // coth(c) = (e^c + e^-c) / (e^c - e^-c)\n\n      var a = 2 * this['re'];\n      var b = 2 * this['im'];\n      var d = cosh(a) - Math.cos(b);\n\n      return new Complex(\n              sinh(a) / d,\n              -Math.sin(b) / d);\n    },\n\n    /**\n     * Calculate the complex coth\n     *\n     * @returns {Complex}\n     */\n    'csch': function() {\n\n      // csch(c) = 2 / (e^c - e^-c)\n\n      var a = this['re'];\n      var b = this['im'];\n      var d = Math.cos(2 * b) - cosh(2 * a);\n\n      return new Complex(\n              -2 * sinh(a) * Math.cos(b) / d,\n              2 * cosh(a) * Math.sin(b) / d);\n    },\n\n    /**\n     * Calculate the complex sech\n     *\n     * @returns {Complex}\n     */\n    'sech': function() {\n\n      // sech(c) = 2 / (e^c + e^-c)\n\n      var a = this['re'];\n      var b = this['im'];\n      var d = Math.cos(2 * b) + cosh(2 * a);\n\n      return new Complex(\n              2 * cosh(a) * Math.cos(b) / d,\n              -2 * sinh(a) * Math.sin(b) / d);\n    },\n\n    /**\n     * Calculate the complex asinh\n     *\n     * @returns {Complex}\n     */\n    'asinh': function() {\n\n      // asinh(c) = log(c + sqrt(c^2 + 1))\n\n      var tmp = this['im'];\n      this['im'] = -this['re'];\n      this['re'] = tmp;\n      var res = this['asin']();\n\n      this['re'] = -this['im'];\n      this['im'] = tmp;\n      tmp = res['re'];\n\n      res['re'] = -res['im'];\n      res['im'] = tmp;\n      return res;\n    },\n\n    /**\n     * Calculate the complex acosh\n     *\n     * @returns {Complex}\n     */\n    'acosh': function() {\n\n      // acosh(c) = log(c + sqrt(c^2 - 1))\n\n      var res = this['acos']();\n      if (res['im'] <= 0) {\n        var tmp = res['re'];\n        res['re'] = -res['im'];\n        res['im'] = tmp;\n      } else {\n        var tmp = res['im'];\n        res['im'] = -res['re'];\n        res['re'] = tmp;\n      }\n      return res;\n    },\n\n    /**\n     * Calculate the complex atanh\n     *\n     * @returns {Complex}\n     */\n    'atanh': function() {\n\n      // atanh(c) = log((1+c) / (1-c)) / 2\n\n      var a = this['re'];\n      var b = this['im'];\n\n      var noIM = a > 1 && b === 0;\n      var oneMinus = 1 - a;\n      var onePlus = 1 + a;\n      var d = oneMinus * oneMinus + b * b;\n\n      var x = (d !== 0)\n              ? new Complex(\n                      (onePlus * oneMinus - b * b) / d,\n                      (b * oneMinus + onePlus * b) / d)\n              : new Complex(\n                      (a !== -1) ? (a / 0) : 0,\n                      (b !== 0) ? (b / 0) : 0);\n\n      var temp = x['re'];\n      x['re'] = logHypot(x['re'], x['im']) / 2;\n      x['im'] = Math.atan2(x['im'], temp) / 2;\n      if (noIM) {\n        x['im'] = -x['im'];\n      }\n      return x;\n    },\n\n    /**\n     * Calculate the complex acoth\n     *\n     * @returns {Complex}\n     */\n    'acoth': function() {\n\n      // acoth(c) = log((c+1) / (c-1)) / 2\n\n      var a = this['re'];\n      var b = this['im'];\n\n      if (a === 0 && b === 0) {\n        return new Complex(0, Math.PI / 2);\n      }\n\n      var d = a * a + b * b;\n      return (d !== 0)\n              ? new Complex(\n                      a / d,\n                      -b / d).atanh()\n              : new Complex(\n                      (a !== 0) ? a / 0 : 0,\n                      (b !== 0) ? -b / 0 : 0).atanh();\n    },\n\n    /**\n     * Calculate the complex acsch\n     *\n     * @returns {Complex}\n     */\n    'acsch': function() {\n\n      // acsch(c) = log((1+sqrt(1+c^2))/c)\n\n      var a = this['re'];\n      var b = this['im'];\n\n      if (b === 0) {\n\n        return new Complex(\n                (a !== 0)\n                ? Math.log(a + Math.sqrt(a * a + 1))\n                : Infinity, 0);\n      }\n\n      var d = a * a + b * b;\n      return (d !== 0)\n              ? new Complex(\n                      a / d,\n                      -b / d).asinh()\n              : new Complex(\n                      (a !== 0) ? a / 0 : 0,\n                      (b !== 0) ? -b / 0 : 0).asinh();\n    },\n\n    /**\n     * Calculate the complex asech\n     *\n     * @returns {Complex}\n     */\n    'asech': function() {\n\n      // asech(c) = log((1+sqrt(1-c^2))/c)\n\n      var a = this['re'];\n      var b = this['im'];\n\n      if (this['isZero']()) {\n        return Complex['INFINITY'];\n      }\n\n      var d = a * a + b * b;\n      return (d !== 0)\n              ? new Complex(\n                      a / d,\n                      -b / d).acosh()\n              : new Complex(\n                      (a !== 0) ? a / 0 : 0,\n                      (b !== 0) ? -b / 0 : 0).acosh();\n    },\n\n    /**\n     * Calculate the complex inverse 1/z\n     *\n     * @returns {Complex}\n     */\n    'inverse': function() {\n\n      // 1 / 0 = Infinity and 1 / Infinity = 0\n      if (this['isZero']()) {\n        return Complex['INFINITY'];\n      }\n\n      if (this['isInfinite']()) {\n        return Complex['ZERO'];\n      }\n\n      var a = this['re'];\n      var b = this['im'];\n\n      var d = a * a + b * b;\n\n      return new Complex(a / d, -b / d);\n    },\n\n    /**\n     * Returns the complex conjugate\n     *\n     * @returns {Complex}\n     */\n    'conjugate': function() {\n\n      return new Complex(this['re'], -this['im']);\n    },\n\n    /**\n     * Gets the negated complex number\n     *\n     * @returns {Complex}\n     */\n    'neg': function() {\n\n      return new Complex(-this['re'], -this['im']);\n    },\n\n    /**\n     * Ceils the actual complex number\n     *\n     * @returns {Complex}\n     */\n    'ceil': function(places) {\n\n      places = Math.pow(10, places || 0);\n\n      return new Complex(\n              Math.ceil(this['re'] * places) / places,\n              Math.ceil(this['im'] * places) / places);\n    },\n\n    /**\n     * Floors the actual complex number\n     *\n     * @returns {Complex}\n     */\n    'floor': function(places) {\n\n      places = Math.pow(10, places || 0);\n\n      return new Complex(\n              Math.floor(this['re'] * places) / places,\n              Math.floor(this['im'] * places) / places);\n    },\n\n    /**\n     * Ceils the actual complex number\n     *\n     * @returns {Complex}\n     */\n    'round': function(places) {\n\n      places = Math.pow(10, places || 0);\n\n      return new Complex(\n              Math.round(this['re'] * places) / places,\n              Math.round(this['im'] * places) / places);\n    },\n\n    /**\n     * Compares two complex numbers\n     *\n     * **Note:** new Complex(Infinity).equals(Infinity) === false\n     *\n     * @returns {boolean}\n     */\n    'equals': function(a, b) {\n\n      var z = new Complex(a, b);\n\n      return Math.abs(z['re'] - this['re']) <= Complex['EPSILON'] &&\n              Math.abs(z['im'] - this['im']) <= Complex['EPSILON'];\n    },\n\n    /**\n     * Clones the actual object\n     *\n     * @returns {Complex}\n     */\n    'clone': function() {\n\n      return new Complex(this['re'], this['im']);\n    },\n\n    /**\n     * Gets a string of the actual complex number\n     *\n     * @returns {string}\n     */\n    'toString': function() {\n\n      var a = this['re'];\n      var b = this['im'];\n      var ret = \"\";\n\n      if (this['isNaN']()) {\n        return 'NaN';\n      }\n\n      if (this['isInfinite']()) {\n        return 'Infinity';\n      }\n\n      if (Math.abs(a) < Complex['EPSILON']) {\n        a = 0;\n      }\n\n      if (Math.abs(b) < Complex['EPSILON']) {\n        b = 0;\n      }\n\n      // If is real number\n      if (b === 0) {\n        return ret + a;\n      }\n\n      if (a !== 0) {\n        ret+= a;\n        ret+= \" \";\n        if (b < 0) {\n          b = -b;\n          ret+= \"-\";\n        } else {\n          ret+= \"+\";\n        }\n        ret+= \" \";\n      } else if (b < 0) {\n        b = -b;\n        ret+= \"-\";\n      }\n\n      if (1 !== b) { // b is the absolute imaginary part\n        ret+= b;\n      }\n      return ret + \"i\";\n    },\n\n    /**\n     * Returns the actual number as a vector\n     *\n     * @returns {Array}\n     */\n    'toVector': function() {\n\n      return [this['re'], this['im']];\n    },\n\n    /**\n     * Returns the actual real value of the current object\n     *\n     * @returns {number|null}\n     */\n    'valueOf': function() {\n\n      if (this['im'] === 0) {\n        return this['re'];\n      }\n      return null;\n    },\n\n    /**\n     * Determines whether a complex number is not on the Riemann sphere.\n     *\n     * @returns {boolean}\n     */\n    'isNaN': function() {\n      return isNaN(this['re']) || isNaN(this['im']);\n    },\n\n    /**\n     * Determines whether or not a complex number is at the zero pole of the\n     * Riemann sphere.\n     *\n     * @returns {boolean}\n     */\n    'isZero': function() {\n      return this['im'] === 0 && this['re'] === 0;\n    },\n\n    /**\n     * Determines whether a complex number is not at the infinity pole of the\n     * Riemann sphere.\n     *\n     * @returns {boolean}\n     */\n    'isFinite': function() {\n      return isFinite(this['re']) && isFinite(this['im']);\n    },\n\n    /**\n     * Determines whether or not a complex number is at the infinity pole of the\n     * Riemann sphere.\n     *\n     * @returns {boolean}\n     */\n    'isInfinite': function() {\n      return !(this['isNaN']() || this['isFinite']());\n    }\n  };\n\n  Complex['ZERO'] = new Complex(0, 0);\n  Complex['ONE'] = new Complex(1, 0);\n  Complex['I'] = new Complex(0, 1);\n  Complex['PI'] = new Complex(Math.PI, 0);\n  Complex['E'] = new Complex(Math.E, 0);\n  Complex['INFINITY'] = new Complex(Infinity, Infinity);\n  Complex['NAN'] = new Complex(NaN, NaN);\n  Complex['EPSILON'] = 1e-15;\n\n  if (typeof define === 'function' && define['amd']) {\n    define([], function() {\n      return Complex;\n    });\n  } else if (typeof exports === 'object') {\n    Object.defineProperty(Complex, \"__esModule\", {'value': true});\n    Complex['default'] = Complex;\n    Complex['Complex'] = Complex;\n    module['exports'] = Complex;\n  } else {\n    root['Complex'] = Complex;\n  }\n\n})(this);\n","import Complex from 'complex.js';\nimport { format } from '../../utils/number.js';\nimport { isNumber, isUnit } from '../../utils/is.js';\nimport { factory } from '../../utils/factory.js';\nvar name = 'Complex';\nvar dependencies = [];\nexport var createComplexClass = /* #__PURE__ */factory(name, dependencies, () => {\n  /**\n   * Attach type information\n   */\n  Complex.prototype.type = 'Complex';\n  Complex.prototype.isComplex = true;\n  /**\n   * Get a JSON representation of the complex number\n   * @returns {Object} Returns a JSON object structured as:\n   *                   `{\"mathjs\": \"Complex\", \"re\": 2, \"im\": 3}`\n   */\n\n  Complex.prototype.toJSON = function () {\n    return {\n      mathjs: 'Complex',\n      re: this.re,\n      im: this.im\n    };\n  };\n  /*\n   * Return the value of the complex number in polar notation\n   * The angle phi will be set in the interval of [-pi, pi].\n   * @return {{r: number, phi: number}} Returns and object with properties r and phi.\n   */\n\n\n  Complex.prototype.toPolar = function () {\n    return {\n      r: this.abs(),\n      phi: this.arg()\n    };\n  };\n  /**\n   * Get a string representation of the complex number,\n   * with optional formatting options.\n   * @param {Object | number | Function} [options]  Formatting options. See\n   *                                                lib/utils/number:format for a\n   *                                                description of the available\n   *                                                options.\n   * @return {string} str\n   */\n\n\n  Complex.prototype.format = function (options) {\n    var str = '';\n    var im = this.im;\n    var re = this.re;\n    var strRe = format(this.re, options);\n    var strIm = format(this.im, options); // round either re or im when smaller than the configured precision\n\n    var precision = isNumber(options) ? options : options ? options.precision : null;\n\n    if (precision !== null) {\n      var epsilon = Math.pow(10, -precision);\n\n      if (Math.abs(re / im) < epsilon) {\n        re = 0;\n      }\n\n      if (Math.abs(im / re) < epsilon) {\n        im = 0;\n      }\n    }\n\n    if (im === 0) {\n      // real value\n      str = strRe;\n    } else if (re === 0) {\n      // purely complex value\n      if (im === 1) {\n        str = 'i';\n      } else if (im === -1) {\n        str = '-i';\n      } else {\n        str = strIm + 'i';\n      }\n    } else {\n      // complex value\n      if (im < 0) {\n        if (im === -1) {\n          str = strRe + ' - i';\n        } else {\n          str = strRe + ' - ' + strIm.substring(1) + 'i';\n        }\n      } else {\n        if (im === 1) {\n          str = strRe + ' + i';\n        } else {\n          str = strRe + ' + ' + strIm + 'i';\n        }\n      }\n    }\n\n    return str;\n  };\n  /**\n   * Create a complex number from polar coordinates\n   *\n   * Usage:\n   *\n   *     Complex.fromPolar(r: number, phi: number) : Complex\n   *     Complex.fromPolar({r: number, phi: number}) : Complex\n   *\n   * @param {*} args...\n   * @return {Complex}\n   */\n\n\n  Complex.fromPolar = function (args) {\n    switch (arguments.length) {\n      case 1:\n        {\n          var arg = arguments[0];\n\n          if (typeof arg === 'object') {\n            return Complex(arg);\n          } else {\n            throw new TypeError('Input has to be an object with r and phi keys.');\n          }\n        }\n\n      case 2:\n        {\n          var r = arguments[0];\n          var phi = arguments[1];\n\n          if (isNumber(r)) {\n            if (isUnit(phi) && phi.hasBase('ANGLE')) {\n              // convert unit to a number in radians\n              phi = phi.toNumber('rad');\n            }\n\n            if (isNumber(phi)) {\n              return new Complex({\n                r: r,\n                phi: phi\n              });\n            }\n\n            throw new TypeError('Phi is not a number nor an angle unit.');\n          } else {\n            throw new TypeError('Radius r is not a number.');\n          }\n        }\n\n      default:\n        throw new SyntaxError('Wrong number of arguments in function fromPolar');\n    }\n  };\n\n  Complex.prototype.valueOf = Complex.prototype.toString;\n  /**\n   * Create a Complex number from a JSON object\n   * @param {Object} json  A JSON Object structured as\n   *                       {\"mathjs\": \"Complex\", \"re\": 2, \"im\": 3}\n   *                       All properties are optional, default values\n   *                       for `re` and `im` are 0.\n   * @return {Complex} Returns a new Complex number\n   */\n\n  Complex.fromJSON = function (json) {\n    return new Complex(json);\n  };\n  /**\n   * Compare two complex numbers, `a` and `b`:\n   *\n   * - Returns 1 when the real part of `a` is larger than the real part of `b`\n   * - Returns -1 when the real part of `a` is smaller than the real part of `b`\n   * - Returns 1 when the real parts are equal\n   *   and the imaginary part of `a` is larger than the imaginary part of `b`\n   * - Returns -1 when the real parts are equal\n   *   and the imaginary part of `a` is smaller than the imaginary part of `b`\n   * - Returns 0 when both real and imaginary parts are equal.\n   *\n   * @params {Complex} a\n   * @params {Complex} b\n   * @returns {number} Returns the comparison result: -1, 0, or 1\n   */\n\n\n  Complex.compare = function (a, b) {\n    if (a.re > b.re) {\n      return 1;\n    }\n\n    if (a.re < b.re) {\n      return -1;\n    }\n\n    if (a.im > b.im) {\n      return 1;\n    }\n\n    if (a.im < b.im) {\n      return -1;\n    }\n\n    return 0;\n  };\n\n  return Complex;\n}, {\n  isClass: true\n});","/**\n * @license Fraction.js v4.1.1 23/05/2021\n * https://www.xarg.org/2014/03/rational-numbers-in-javascript/\n *\n * Copyright (c) 2021, Robert Eisele (robert@xarg.org)\n * Dual licensed under the MIT or GPL Version 2 licenses.\n **/\n\n\n/**\n *\n * This class offers the possibility to calculate fractions.\n * You can pass a fraction in different formats. Either as array, as double, as string or as an integer.\n *\n * Array/Object form\n * [ 0 => <nominator>, 1 => <denominator> ]\n * [ n => <nominator>, d => <denominator> ]\n *\n * Integer form\n * - Single integer value\n *\n * Double form\n * - Single double value\n *\n * String form\n * 123.456 - a simple double\n * 123/456 - a string fraction\n * 123.'456' - a double with repeating decimal places\n * 123.(456) - synonym\n * 123.45'6' - a double with repeating last place\n * 123.45(6) - synonym\n *\n * Example:\n *\n * var f = new Fraction(\"9.4'31'\");\n * f.mul([-4, 3]).div(4.9);\n *\n */\n\n(function(root) {\n\n  \"use strict\";\n\n  // Maximum search depth for cyclic rational numbers. 2000 should be more than enough.\n  // Example: 1/7 = 0.(142857) has 6 repeating decimal places.\n  // If MAX_CYCLE_LEN gets reduced, long cycles will not be detected and toString() only gets the first 10 digits\n  var MAX_CYCLE_LEN = 2000;\n\n  // Parsed data to avoid calling \"new\" all the time\n  var P = {\n    \"s\": 1,\n    \"n\": 0,\n    \"d\": 1\n  };\n\n  function createError(name) {\n\n    function errorConstructor() {\n      var temp = Error.apply(this, arguments);\n      temp['name'] = this['name'] = name;\n      this['stack'] = temp['stack'];\n      this['message'] = temp['message'];\n    }\n\n    /**\n     * Error constructor\n     *\n     * @constructor\n     */\n    function IntermediateInheritor() { }\n    IntermediateInheritor.prototype = Error.prototype;\n    errorConstructor.prototype = new IntermediateInheritor();\n\n    return errorConstructor;\n  }\n\n  var DivisionByZero = Fraction['DivisionByZero'] = createError('DivisionByZero');\n  var InvalidParameter = Fraction['InvalidParameter'] = createError('InvalidParameter');\n\n  function assign(n, s) {\n\n    if (isNaN(n = parseInt(n, 10))) {\n      throwInvalidParam();\n    }\n    return n * s;\n  }\n\n  function throwInvalidParam() {\n    throw new InvalidParameter();\n  }\n\n  function factorize(num) {\n\n    var factors = {};\n\n    var n = num;\n    var i = 2;\n    var s = 4;\n\n    while (s <= n) {\n\n      while (n % i === 0) {\n        n /= i;\n        factors[i] = (factors[i] || 0) + 1;\n      }\n      s += 1 + 2 * i++;\n    }\n\n    if (n !== num) {\n      if (n > 1)\n      factors[n] = (factors[n] || 0) + 1;\n    } else {\n      factors[num] = (factors[num] || 0) + 1;\n    }\n    return factors;\n  }\n\n  var parse = function(p1, p2) {\n\n    var n = 0, d = 1, s = 1;\n    var v = 0, w = 0, x = 0, y = 1, z = 1;\n\n    var A = 0, B = 1;\n    var C = 1, D = 1;\n\n    var N = 10000000;\n    var M;\n\n    if (p1 === undefined || p1 === null) {\n      /* void */\n    } else if (p2 !== undefined) {\n      n = p1;\n      d = p2;\n      s = n * d;\n    } else\n      switch (typeof p1) {\n\n        case \"object\":\n          {\n            if (\"d\" in p1 && \"n\" in p1) {\n              n = p1[\"n\"];\n              d = p1[\"d\"];\n              if (\"s\" in p1)\n                n *= p1[\"s\"];\n            } else if (0 in p1) {\n              n = p1[0];\n              if (1 in p1)\n                d = p1[1];\n            } else {\n              throwInvalidParam();\n            }\n            s = n * d;\n            break;\n          }\n        case \"number\":\n          {\n            if (p1 < 0) {\n              s = p1;\n              p1 = -p1;\n            }\n\n            if (p1 % 1 === 0) {\n              n = p1;\n            } else if (p1 > 0) { // check for != 0, scale would become NaN (log(0)), which converges really slow\n\n              if (p1 >= 1) {\n                z = Math.pow(10, Math.floor(1 + Math.log(p1) / Math.LN10));\n                p1 /= z;\n              }\n\n              // Using Farey Sequences\n              // http://www.johndcook.com/blog/2010/10/20/best-rational-approximation/\n\n              while (B <= N && D <= N) {\n                M = (A + C) / (B + D);\n\n                if (p1 === M) {\n                  if (B + D <= N) {\n                    n = A + C;\n                    d = B + D;\n                  } else if (D > B) {\n                    n = C;\n                    d = D;\n                  } else {\n                    n = A;\n                    d = B;\n                  }\n                  break;\n\n                } else {\n\n                  if (p1 > M) {\n                    A += C;\n                    B += D;\n                  } else {\n                    C += A;\n                    D += B;\n                  }\n\n                  if (B > N) {\n                    n = C;\n                    d = D;\n                  } else {\n                    n = A;\n                    d = B;\n                  }\n                }\n              }\n              n *= z;\n            } else if (isNaN(p1) || isNaN(p2)) {\n              d = n = NaN;\n            }\n            break;\n          }\n        case \"string\":\n          {\n            B = p1.match(/\\d+|./g);\n\n            if (B === null)\n              throwInvalidParam();\n\n            if (B[A] === '-') {// Check for minus sign at the beginning\n              s = -1;\n              A++;\n            } else if (B[A] === '+') {// Check for plus sign at the beginning\n              A++;\n            }\n\n            if (B.length === A + 1) { // Check if it's just a simple number \"1234\"\n              w = assign(B[A++], s);\n            } else if (B[A + 1] === '.' || B[A] === '.') { // Check if it's a decimal number\n\n              if (B[A] !== '.') { // Handle 0.5 and .5\n                v = assign(B[A++], s);\n              }\n              A++;\n\n              // Check for decimal places\n              if (A + 1 === B.length || B[A + 1] === '(' && B[A + 3] === ')' || B[A + 1] === \"'\" && B[A + 3] === \"'\") {\n                w = assign(B[A], s);\n                y = Math.pow(10, B[A].length);\n                A++;\n              }\n\n              // Check for repeating places\n              if (B[A] === '(' && B[A + 2] === ')' || B[A] === \"'\" && B[A + 2] === \"'\") {\n                x = assign(B[A + 1], s);\n                z = Math.pow(10, B[A + 1].length) - 1;\n                A += 3;\n              }\n\n            } else if (B[A + 1] === '/' || B[A + 1] === ':') { // Check for a simple fraction \"123/456\" or \"123:456\"\n              w = assign(B[A], s);\n              y = assign(B[A + 2], 1);\n              A += 3;\n            } else if (B[A + 3] === '/' && B[A + 1] === ' ') { // Check for a complex fraction \"123 1/2\"\n              v = assign(B[A], s);\n              w = assign(B[A + 2], s);\n              y = assign(B[A + 4], 1);\n              A += 5;\n            }\n\n            if (B.length <= A) { // Check for more tokens on the stack\n              d = y * z;\n              s = /* void */\n              n = x + d * v + z * w;\n              break;\n            }\n\n            /* Fall through on error */\n          }\n        default:\n          throwInvalidParam();\n      }\n\n    if (d === 0) {\n      throw new DivisionByZero();\n    }\n\n    P[\"s\"] = s < 0 ? -1 : 1;\n    P[\"n\"] = Math.abs(n);\n    P[\"d\"] = Math.abs(d);\n  };\n\n  function modpow(b, e, m) {\n\n    var r = 1;\n    for (; e > 0; b = (b * b) % m, e >>= 1) {\n\n      if (e & 1) {\n        r = (r * b) % m;\n      }\n    }\n    return r;\n  }\n\n\n  function cycleLen(n, d) {\n\n    for (; d % 2 === 0;\n      d /= 2) {\n    }\n\n    for (; d % 5 === 0;\n      d /= 5) {\n    }\n\n    if (d === 1) // Catch non-cyclic numbers\n      return 0;\n\n    // If we would like to compute really large numbers quicker, we could make use of Fermat's little theorem:\n    // 10^(d-1) % d == 1\n    // However, we don't need such large numbers and MAX_CYCLE_LEN should be the capstone,\n    // as we want to translate the numbers to strings.\n\n    var rem = 10 % d;\n    var t = 1;\n\n    for (; rem !== 1; t++) {\n      rem = rem * 10 % d;\n\n      if (t > MAX_CYCLE_LEN)\n        return 0; // Returning 0 here means that we don't print it as a cyclic number. It's likely that the answer is `d-1`\n    }\n    return t;\n  }\n\n\n  function cycleStart(n, d, len) {\n\n    var rem1 = 1;\n    var rem2 = modpow(10, len, d);\n\n    for (var t = 0; t < 300; t++) { // s < ~log10(Number.MAX_VALUE)\n      // Solve 10^s == 10^(s+t) (mod d)\n\n      if (rem1 === rem2)\n        return t;\n\n      rem1 = rem1 * 10 % d;\n      rem2 = rem2 * 10 % d;\n    }\n    return 0;\n  }\n\n  function gcd(a, b) {\n\n    if (!a)\n      return b;\n    if (!b)\n      return a;\n\n    while (1) {\n      a %= b;\n      if (!a)\n        return b;\n      b %= a;\n      if (!b)\n        return a;\n    }\n  };\n\n  /**\n   * Module constructor\n   *\n   * @constructor\n   * @param {number|Fraction=} a\n   * @param {number=} b\n   */\n  function Fraction(a, b) {\n\n    if (!(this instanceof Fraction)) {\n      return new Fraction(a, b);\n    }\n\n    parse(a, b);\n\n    if (Fraction['REDUCE']) {\n      a = gcd(P[\"d\"], P[\"n\"]); // Abuse a\n    } else {\n      a = 1;\n    }\n\n    this[\"s\"] = P[\"s\"];\n    this[\"n\"] = P[\"n\"] / a;\n    this[\"d\"] = P[\"d\"] / a;\n  }\n\n  /**\n   * Boolean global variable to be able to disable automatic reduction of the fraction\n   *\n   */\n  Fraction['REDUCE'] = 1;\n\n  Fraction.prototype = {\n\n    \"s\": 1,\n    \"n\": 0,\n    \"d\": 1,\n\n    /**\n     * Calculates the absolute value\n     *\n     * Ex: new Fraction(-4).abs() => 4\n     **/\n    \"abs\": function() {\n\n      return new Fraction(this[\"n\"], this[\"d\"]);\n    },\n\n    /**\n     * Inverts the sign of the current fraction\n     *\n     * Ex: new Fraction(-4).neg() => 4\n     **/\n    \"neg\": function() {\n\n      return new Fraction(-this[\"s\"] * this[\"n\"], this[\"d\"]);\n    },\n\n    /**\n     * Adds two rational numbers\n     *\n     * Ex: new Fraction({n: 2, d: 3}).add(\"14.9\") => 467 / 30\n     **/\n    \"add\": function(a, b) {\n\n      parse(a, b);\n      return new Fraction(\n        this[\"s\"] * this[\"n\"] * P[\"d\"] + P[\"s\"] * this[\"d\"] * P[\"n\"],\n        this[\"d\"] * P[\"d\"]\n      );\n    },\n\n    /**\n     * Subtracts two rational numbers\n     *\n     * Ex: new Fraction({n: 2, d: 3}).add(\"14.9\") => -427 / 30\n     **/\n    \"sub\": function(a, b) {\n\n      parse(a, b);\n      return new Fraction(\n        this[\"s\"] * this[\"n\"] * P[\"d\"] - P[\"s\"] * this[\"d\"] * P[\"n\"],\n        this[\"d\"] * P[\"d\"]\n      );\n    },\n\n    /**\n     * Multiplies two rational numbers\n     *\n     * Ex: new Fraction(\"-17.(345)\").mul(3) => 5776 / 111\n     **/\n    \"mul\": function(a, b) {\n\n      parse(a, b);\n      return new Fraction(\n        this[\"s\"] * P[\"s\"] * this[\"n\"] * P[\"n\"],\n        this[\"d\"] * P[\"d\"]\n      );\n    },\n\n    /**\n     * Divides two rational numbers\n     *\n     * Ex: new Fraction(\"-17.(345)\").inverse().div(3)\n     **/\n    \"div\": function(a, b) {\n\n      parse(a, b);\n      return new Fraction(\n        this[\"s\"] * P[\"s\"] * this[\"n\"] * P[\"d\"],\n        this[\"d\"] * P[\"n\"]\n      );\n    },\n\n    /**\n     * Clones the actual object\n     *\n     * Ex: new Fraction(\"-17.(345)\").clone()\n     **/\n    \"clone\": function() {\n      return new Fraction(this);\n    },\n\n    /**\n     * Calculates the modulo of two rational numbers - a more precise fmod\n     *\n     * Ex: new Fraction('4.(3)').mod([7, 8]) => (13/3) % (7/8) = (5/6)\n     **/\n    \"mod\": function(a, b) {\n\n      if (isNaN(this['n']) || isNaN(this['d'])) {\n        return new Fraction(NaN);\n      }\n\n      if (a === undefined) {\n        return new Fraction(this[\"s\"] * this[\"n\"] % this[\"d\"], 1);\n      }\n\n      parse(a, b);\n      if (0 === P[\"n\"] && 0 === this[\"d\"]) {\n        Fraction(0, 0); // Throw DivisionByZero\n      }\n\n      /*\n       * First silly attempt, kinda slow\n       *\n       return that[\"sub\"]({\n       \"n\": num[\"n\"] * Math.floor((this.n / this.d) / (num.n / num.d)),\n       \"d\": num[\"d\"],\n       \"s\": this[\"s\"]\n       });*/\n\n      /*\n       * New attempt: a1 / b1 = a2 / b2 * q + r\n       * => b2 * a1 = a2 * b1 * q + b1 * b2 * r\n       * => (b2 * a1 % a2 * b1) / (b1 * b2)\n       */\n      return new Fraction(\n        this[\"s\"] * (P[\"d\"] * this[\"n\"]) % (P[\"n\"] * this[\"d\"]),\n        P[\"d\"] * this[\"d\"]\n      );\n    },\n\n    /**\n     * Calculates the fractional gcd of two rational numbers\n     *\n     * Ex: new Fraction(5,8).gcd(3,7) => 1/56\n     */\n    \"gcd\": function(a, b) {\n\n      parse(a, b);\n\n      // gcd(a / b, c / d) = gcd(a, c) / lcm(b, d)\n\n      return new Fraction(gcd(P[\"n\"], this[\"n\"]) * gcd(P[\"d\"], this[\"d\"]), P[\"d\"] * this[\"d\"]);\n    },\n\n    /**\n     * Calculates the fractional lcm of two rational numbers\n     *\n     * Ex: new Fraction(5,8).lcm(3,7) => 15\n     */\n    \"lcm\": function(a, b) {\n\n      parse(a, b);\n\n      // lcm(a / b, c / d) = lcm(a, c) / gcd(b, d)\n\n      if (P[\"n\"] === 0 && this[\"n\"] === 0) {\n        return new Fraction;\n      }\n      return new Fraction(P[\"n\"] * this[\"n\"], gcd(P[\"n\"], this[\"n\"]) * gcd(P[\"d\"], this[\"d\"]));\n    },\n\n    /**\n     * Calculates the ceil of a rational number\n     *\n     * Ex: new Fraction('4.(3)').ceil() => (5 / 1)\n     **/\n    \"ceil\": function(places) {\n\n      places = Math.pow(10, places || 0);\n\n      if (isNaN(this[\"n\"]) || isNaN(this[\"d\"])) {\n        return new Fraction(NaN);\n      }\n      return new Fraction(Math.ceil(places * this[\"s\"] * this[\"n\"] / this[\"d\"]), places);\n    },\n\n    /**\n     * Calculates the floor of a rational number\n     *\n     * Ex: new Fraction('4.(3)').floor() => (4 / 1)\n     **/\n    \"floor\": function(places) {\n\n      places = Math.pow(10, places || 0);\n\n      if (isNaN(this[\"n\"]) || isNaN(this[\"d\"])) {\n        return new Fraction(NaN);\n      }\n      return new Fraction(Math.floor(places * this[\"s\"] * this[\"n\"] / this[\"d\"]), places);\n    },\n\n    /**\n     * Rounds a rational numbers\n     *\n     * Ex: new Fraction('4.(3)').round() => (4 / 1)\n     **/\n    \"round\": function(places) {\n\n      places = Math.pow(10, places || 0);\n\n      if (isNaN(this[\"n\"]) || isNaN(this[\"d\"])) {\n        return new Fraction(NaN);\n      }\n      return new Fraction(Math.round(places * this[\"s\"] * this[\"n\"] / this[\"d\"]), places);\n    },\n\n    /**\n     * Gets the inverse of the fraction, means numerator and denominator are exchanged\n     *\n     * Ex: new Fraction([-3, 4]).inverse() => -4 / 3\n     **/\n    \"inverse\": function() {\n\n      return new Fraction(this[\"s\"] * this[\"d\"], this[\"n\"]);\n    },\n\n    /**\n     * Calculates the fraction to some rational exponent, if possible\n     *\n     * Ex: new Fraction(-1,2).pow(-3) => -8\n     */\n    \"pow\": function(a, b) {\n\n      parse(a, b);\n\n      // Trivial case when exp is an integer\n\n      if (P['d'] === 1) {\n\n        if (P['s'] < 0) {\n          return new Fraction(Math.pow(this['s'] * this[\"d\"], P['n']), Math.pow(this[\"n\"], P['n']));\n        } else {\n          return new Fraction(Math.pow(this['s'] * this[\"n\"], P['n']), Math.pow(this[\"d\"], P['n']));\n        }\n      }\n\n      // Negative roots become complex\n      //     (-a/b)^(c/d) = x\n      // <=> (-1)^(c/d) * (a/b)^(c/d) = x\n      // <=> (cos(pi) + i*sin(pi))^(c/d) * (a/b)^(c/d) = x         # rotate 1 by 180°\n      // <=> (cos(c*pi/d) + i*sin(c*pi/d)) * (a/b)^(c/d) = x       # DeMoivre's formula in Q ( https://proofwiki.org/wiki/De_Moivre%27s_Formula/Rational_Index )\n      // From which follows that only for c=0 the root is non-complex. c/d is a reduced fraction, so that sin(c/dpi)=0 occurs for d=1, which is handled by our trivial case.\n      if (this['s'] < 0) return null;\n\n      // Now prime factor n and d\n      var N = factorize(this['n']);\n      var D = factorize(this['d']);\n\n      // Exponentiate and take root for n and d individually\n      var n = 1;\n      var d = 1;\n      for (var k in N) {\n        if (k === '1') continue;\n        if (k === '0') {\n          n = 0;\n          break;\n        }\n        N[k]*= P['n'];\n\n        if (N[k] % P['d'] === 0) {\n          N[k]/= P['d'];\n        } else return null;\n        n*= Math.pow(k, N[k]);\n      }\n\n      for (var k in D) {\n        if (k === '1') continue;\n        D[k]*= P['n'];\n\n        if (D[k] % P['d'] === 0) {\n          D[k]/= P['d'];\n        } else return null;\n        d*= Math.pow(k, D[k]);\n      }\n\n      if (P['s'] < 0) {\n        return new Fraction(d, n);\n      }\n      return new Fraction(n, d);\n    },\n\n    /**\n     * Check if two rational numbers are the same\n     *\n     * Ex: new Fraction(19.6).equals([98, 5]);\n     **/\n    \"equals\": function(a, b) {\n\n      parse(a, b);\n      return this[\"s\"] * this[\"n\"] * P[\"d\"] === P[\"s\"] * P[\"n\"] * this[\"d\"]; // Same as compare() === 0\n    },\n\n    /**\n     * Check if two rational numbers are the same\n     *\n     * Ex: new Fraction(19.6).equals([98, 5]);\n     **/\n    \"compare\": function(a, b) {\n\n      parse(a, b);\n      var t = (this[\"s\"] * this[\"n\"] * P[\"d\"] - P[\"s\"] * P[\"n\"] * this[\"d\"]);\n      return (0 < t) - (t < 0);\n    },\n\n    \"simplify\": function(eps) {\n\n      // First naive implementation, needs improvement\n\n      if (isNaN(this['n']) || isNaN(this['d'])) {\n        return this;\n      }\n\n      var cont = this['abs']()['toContinued']();\n\n      eps = eps || 0.001;\n\n      function rec(a) {\n        if (a.length === 1)\n          return new Fraction(a[0]);\n        return rec(a.slice(1))['inverse']()['add'](a[0]);\n      }\n\n      for (var i = 0; i < cont.length; i++) {\n        var tmp = rec(cont.slice(0, i + 1));\n        if (tmp['sub'](this['abs']())['abs']().valueOf() < eps) {\n          return tmp['mul'](this['s']);\n        }\n      }\n      return this;\n    },\n\n    /**\n     * Check if two rational numbers are divisible\n     *\n     * Ex: new Fraction(19.6).divisible(1.5);\n     */\n    \"divisible\": function(a, b) {\n\n      parse(a, b);\n      return !(!(P[\"n\"] * this[\"d\"]) || ((this[\"n\"] * P[\"d\"]) % (P[\"n\"] * this[\"d\"])));\n    },\n\n    /**\n     * Returns a decimal representation of the fraction\n     *\n     * Ex: new Fraction(\"100.'91823'\").valueOf() => 100.91823918239183\n     **/\n    'valueOf': function() {\n\n      return this[\"s\"] * this[\"n\"] / this[\"d\"];\n    },\n\n    /**\n     * Returns a string-fraction representation of a Fraction object\n     *\n     * Ex: new Fraction(\"1.'3'\").toFraction() => \"4 1/3\"\n     **/\n    'toFraction': function(excludeWhole) {\n\n      var whole, str = \"\";\n      var n = this[\"n\"];\n      var d = this[\"d\"];\n      if (this[\"s\"] < 0) {\n        str += '-';\n      }\n\n      if (d === 1) {\n        str += n;\n      } else {\n\n        if (excludeWhole && (whole = Math.floor(n / d)) > 0) {\n          str += whole;\n          str += \" \";\n          n %= d;\n        }\n\n        str += n;\n        str += '/';\n        str += d;\n      }\n      return str;\n    },\n\n    /**\n     * Returns a latex representation of a Fraction object\n     *\n     * Ex: new Fraction(\"1.'3'\").toLatex() => \"\\frac{4}{3}\"\n     **/\n    'toLatex': function(excludeWhole) {\n\n      var whole, str = \"\";\n      var n = this[\"n\"];\n      var d = this[\"d\"];\n      if (this[\"s\"] < 0) {\n        str += '-';\n      }\n\n      if (d === 1) {\n        str += n;\n      } else {\n\n        if (excludeWhole && (whole = Math.floor(n / d)) > 0) {\n          str += whole;\n          n %= d;\n        }\n\n        str += \"\\\\frac{\";\n        str += n;\n        str += '}{';\n        str += d;\n        str += '}';\n      }\n      return str;\n    },\n\n    /**\n     * Returns an array of continued fraction elements\n     *\n     * Ex: new Fraction(\"7/8\").toContinued() => [0,1,7]\n     */\n    'toContinued': function() {\n\n      var t;\n      var a = this['n'];\n      var b = this['d'];\n      var res = [];\n\n      if (isNaN(a) || isNaN(b)) {\n        return res;\n      }\n\n      do {\n        res.push(Math.floor(a / b));\n        t = a % b;\n        a = b;\n        b = t;\n      } while (a !== 1);\n\n      return res;\n    },\n\n    /**\n     * Creates a string representation of a fraction with all digits\n     *\n     * Ex: new Fraction(\"100.'91823'\").toString() => \"100.(91823)\"\n     **/\n    'toString': function(dec) {\n\n      var g;\n      var N = this[\"n\"];\n      var D = this[\"d\"];\n\n      if (isNaN(N) || isNaN(D)) {\n        return \"NaN\";\n      }\n\n      if (!Fraction['REDUCE']) {\n        g = gcd(N, D);\n        N /= g;\n        D /= g;\n      }\n\n      dec = dec || 15; // 15 = decimal places when no repetation\n\n      var cycLen = cycleLen(N, D); // Cycle length\n      var cycOff = cycleStart(N, D, cycLen); // Cycle start\n\n      var str = this['s'] === -1 ? \"-\" : \"\";\n\n      str += N / D | 0;\n\n      N %= D;\n      N *= 10;\n\n      if (N)\n        str += \".\";\n\n      if (cycLen) {\n\n        for (var i = cycOff; i--;) {\n          str += N / D | 0;\n          N %= D;\n          N *= 10;\n        }\n        str += \"(\";\n        for (var i = cycLen; i--;) {\n          str += N / D | 0;\n          N %= D;\n          N *= 10;\n        }\n        str += \")\";\n      } else {\n        for (var i = dec; N && i--;) {\n          str += N / D | 0;\n          N %= D;\n          N *= 10;\n        }\n      }\n      return str;\n    }\n  };\n\n  if (typeof define === \"function\" && define[\"amd\"]) {\n    define([], function() {\n      return Fraction;\n    });\n  } else if (typeof exports === \"object\") {\n    Object.defineProperty(Fraction, \"__esModule\", { 'value': true });\n    Fraction['default'] = Fraction;\n    Fraction['Fraction'] = Fraction;\n    module['exports'] = Fraction;\n  } else {\n    root['Fraction'] = Fraction;\n  }\n\n})(this);\n","import Fraction from 'fraction.js';\nimport { factory } from '../../utils/factory.js';\nvar name = 'Fraction';\nvar dependencies = [];\nexport var createFractionClass = /* #__PURE__ */factory(name, dependencies, () => {\n  /**\n   * Attach type information\n   */\n  Fraction.prototype.type = 'Fraction';\n  Fraction.prototype.isFraction = true;\n  /**\n   * Get a JSON representation of a Fraction containing type information\n   * @returns {Object} Returns a JSON object structured as:\n   *                   `{\"mathjs\": \"Fraction\", \"n\": 3, \"d\": 8}`\n   */\n\n  Fraction.prototype.toJSON = function () {\n    return {\n      mathjs: 'Fraction',\n      n: this.s * this.n,\n      d: this.d\n    };\n  };\n  /**\n   * Instantiate a Fraction from a JSON object\n   * @param {Object} json  a JSON object structured as:\n   *                       `{\"mathjs\": \"Fraction\", \"n\": 3, \"d\": 8}`\n   * @return {BigNumber}\n   */\n\n\n  Fraction.fromJSON = function (json) {\n    return new Fraction(json);\n  };\n\n  return Fraction;\n}, {\n  isClass: true\n});","import { isBigNumber } from '../../utils/is.js';\nimport { format, sign } from '../../utils/number.js';\nimport { factory } from '../../utils/factory.js';\nvar name = 'Range';\nvar dependencies = [];\nexport var createRangeClass = /* #__PURE__ */factory(name, dependencies, () => {\n  /**\n   * Create a range. A range has a start, step, and end, and contains functions\n   * to iterate over the range.\n   *\n   * A range can be constructed as:\n   *\n   *     const range = new Range(start, end)\n   *     const range = new Range(start, end, step)\n   *\n   * To get the result of the range:\n   *     range.forEach(function (x) {\n   *         console.log(x)\n   *     })\n   *     range.map(function (x) {\n   *         return math.sin(x)\n   *     })\n   *     range.toArray()\n   *\n   * Example usage:\n   *\n   *     const c = new Range(2, 6)       // 2:1:5\n   *     c.toArray()                     // [2, 3, 4, 5]\n   *     const d = new Range(2, -3, -1)  // 2:-1:-2\n   *     d.toArray()                     // [2, 1, 0, -1, -2]\n   *\n   * @class Range\n   * @constructor Range\n   * @param {number} start  included lower bound\n   * @param {number} end    excluded upper bound\n   * @param {number} [step] step size, default value is 1\n   */\n  function Range(start, end, step) {\n    if (!(this instanceof Range)) {\n      throw new SyntaxError('Constructor must be called with the new operator');\n    }\n\n    var hasStart = start !== null && start !== undefined;\n    var hasEnd = end !== null && end !== undefined;\n    var hasStep = step !== null && step !== undefined;\n\n    if (hasStart) {\n      if (isBigNumber(start)) {\n        start = start.toNumber();\n      } else if (typeof start !== 'number') {\n        throw new TypeError('Parameter start must be a number');\n      }\n    }\n\n    if (hasEnd) {\n      if (isBigNumber(end)) {\n        end = end.toNumber();\n      } else if (typeof end !== 'number') {\n        throw new TypeError('Parameter end must be a number');\n      }\n    }\n\n    if (hasStep) {\n      if (isBigNumber(step)) {\n        step = step.toNumber();\n      } else if (typeof step !== 'number') {\n        throw new TypeError('Parameter step must be a number');\n      }\n    }\n\n    this.start = hasStart ? parseFloat(start) : 0;\n    this.end = hasEnd ? parseFloat(end) : 0;\n    this.step = hasStep ? parseFloat(step) : 1;\n  }\n  /**\n   * Attach type information\n   */\n\n\n  Range.prototype.type = 'Range';\n  Range.prototype.isRange = true;\n  /**\n   * Parse a string into a range,\n   * The string contains the start, optional step, and end, separated by a colon.\n   * If the string does not contain a valid range, null is returned.\n   * For example str='0:2:11'.\n   * @memberof Range\n   * @param {string} str\n   * @return {Range | null} range\n   */\n\n  Range.parse = function (str) {\n    if (typeof str !== 'string') {\n      return null;\n    }\n\n    var args = str.split(':');\n    var nums = args.map(function (arg) {\n      return parseFloat(arg);\n    });\n    var invalid = nums.some(function (num) {\n      return isNaN(num);\n    });\n\n    if (invalid) {\n      return null;\n    }\n\n    switch (nums.length) {\n      case 2:\n        return new Range(nums[0], nums[1]);\n\n      case 3:\n        return new Range(nums[0], nums[2], nums[1]);\n\n      default:\n        return null;\n    }\n  };\n  /**\n   * Create a clone of the range\n   * @return {Range} clone\n   */\n\n\n  Range.prototype.clone = function () {\n    return new Range(this.start, this.end, this.step);\n  };\n  /**\n   * Retrieve the size of the range.\n   * Returns an array containing one number, the number of elements in the range.\n   * @memberof Range\n   * @returns {number[]} size\n   */\n\n\n  Range.prototype.size = function () {\n    var len = 0;\n    var start = this.start;\n    var step = this.step;\n    var end = this.end;\n    var diff = end - start;\n\n    if (sign(step) === sign(diff)) {\n      len = Math.ceil(diff / step);\n    } else if (diff === 0) {\n      len = 0;\n    }\n\n    if (isNaN(len)) {\n      len = 0;\n    }\n\n    return [len];\n  };\n  /**\n   * Calculate the minimum value in the range\n   * @memberof Range\n   * @return {number | undefined} min\n   */\n\n\n  Range.prototype.min = function () {\n    var size = this.size()[0];\n\n    if (size > 0) {\n      if (this.step > 0) {\n        // positive step\n        return this.start;\n      } else {\n        // negative step\n        return this.start + (size - 1) * this.step;\n      }\n    } else {\n      return undefined;\n    }\n  };\n  /**\n   * Calculate the maximum value in the range\n   * @memberof Range\n   * @return {number | undefined} max\n   */\n\n\n  Range.prototype.max = function () {\n    var size = this.size()[0];\n\n    if (size > 0) {\n      if (this.step > 0) {\n        // positive step\n        return this.start + (size - 1) * this.step;\n      } else {\n        // negative step\n        return this.start;\n      }\n    } else {\n      return undefined;\n    }\n  };\n  /**\n   * Execute a callback function for each value in the range.\n   * @memberof Range\n   * @param {function} callback   The callback method is invoked with three\n   *                              parameters: the value of the element, the index\n   *                              of the element, and the Range being traversed.\n   */\n\n\n  Range.prototype.forEach = function (callback) {\n    var x = this.start;\n    var step = this.step;\n    var end = this.end;\n    var i = 0;\n\n    if (step > 0) {\n      while (x < end) {\n        callback(x, [i], this);\n        x += step;\n        i++;\n      }\n    } else if (step < 0) {\n      while (x > end) {\n        callback(x, [i], this);\n        x += step;\n        i++;\n      }\n    }\n  };\n  /**\n   * Execute a callback function for each value in the Range, and return the\n   * results as an array\n   * @memberof Range\n   * @param {function} callback   The callback method is invoked with three\n   *                              parameters: the value of the element, the index\n   *                              of the element, and the Matrix being traversed.\n   * @returns {Array} array\n   */\n\n\n  Range.prototype.map = function (callback) {\n    var array = [];\n    this.forEach(function (value, index, obj) {\n      array[index[0]] = callback(value, index, obj);\n    });\n    return array;\n  };\n  /**\n   * Create an Array with a copy of the Ranges data\n   * @memberof Range\n   * @returns {Array} array\n   */\n\n\n  Range.prototype.toArray = function () {\n    var array = [];\n    this.forEach(function (value, index) {\n      array[index[0]] = value;\n    });\n    return array;\n  };\n  /**\n   * Get the primitive value of the Range, a one dimensional array\n   * @memberof Range\n   * @returns {Array} array\n   */\n\n\n  Range.prototype.valueOf = function () {\n    // TODO: implement a caching mechanism for range.valueOf()\n    return this.toArray();\n  };\n  /**\n   * Get a string representation of the range, with optional formatting options.\n   * Output is formatted as 'start:step:end', for example '2:6' or '0:0.2:11'\n   * @memberof Range\n   * @param {Object | number | function} [options]  Formatting options. See\n   *                                                lib/utils/number:format for a\n   *                                                description of the available\n   *                                                options.\n   * @returns {string} str\n   */\n\n\n  Range.prototype.format = function (options) {\n    var str = format(this.start, options);\n\n    if (this.step !== 1) {\n      str += ':' + format(this.step, options);\n    }\n\n    str += ':' + format(this.end, options);\n    return str;\n  };\n  /**\n   * Get a string representation of the range.\n   * @memberof Range\n   * @returns {string}\n   */\n\n\n  Range.prototype.toString = function () {\n    return this.format();\n  };\n  /**\n   * Get a JSON representation of the range\n   * @memberof Range\n   * @returns {Object} Returns a JSON object structured as:\n   *                   `{\"mathjs\": \"Range\", \"start\": 2, \"end\": 4, \"step\": 1}`\n   */\n\n\n  Range.prototype.toJSON = function () {\n    return {\n      mathjs: 'Range',\n      start: this.start,\n      end: this.end,\n      step: this.step\n    };\n  };\n  /**\n   * Instantiate a Range from a JSON object\n   * @memberof Range\n   * @param {Object} json A JSON object structured as:\n   *                      `{\"mathjs\": \"Range\", \"start\": 2, \"end\": 4, \"step\": 1}`\n   * @return {Range}\n   */\n\n\n  Range.fromJSON = function (json) {\n    return new Range(json.start, json.end, json.step);\n  };\n\n  return Range;\n}, {\n  isClass: true\n});","import { factory } from '../../utils/factory.js';\nvar name = 'Matrix';\nvar dependencies = [];\nexport var createMatrixClass = /* #__PURE__ */factory(name, dependencies, () => {\n  /**\n   * @constructor Matrix\n   *\n   * A Matrix is a wrapper around an Array. A matrix can hold a multi dimensional\n   * array. A matrix can be constructed as:\n   *\n   *     let matrix = math.matrix(data)\n   *\n   * Matrix contains the functions to resize, get and set values, get the size,\n   * clone the matrix and to convert the matrix to a vector, array, or scalar.\n   * Furthermore, one can iterate over the matrix using map and forEach.\n   * The internal Array of the Matrix can be accessed using the function valueOf.\n   *\n   * Example usage:\n   *\n   *     let matrix = math.matrix([[1, 2], [3, 4]])\n   *     matix.size()              // [2, 2]\n   *     matrix.resize([3, 2], 5)\n   *     matrix.valueOf()          // [[1, 2], [3, 4], [5, 5]]\n   *     matrix.subset([1,2])       // 3 (indexes are zero-based)\n   *\n   */\n  function Matrix() {\n    if (!(this instanceof Matrix)) {\n      throw new SyntaxError('Constructor must be called with the new operator');\n    }\n  }\n  /**\n   * Attach type information\n   */\n\n\n  Matrix.prototype.type = 'Matrix';\n  Matrix.prototype.isMatrix = true;\n  /**\n   * Get the storage format used by the matrix.\n   *\n   * Usage:\n   *     const format = matrix.storage()   // retrieve storage format\n   *\n   * @return {string}           The storage format.\n   */\n\n  Matrix.prototype.storage = function () {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke storage on a Matrix interface');\n  };\n  /**\n   * Get the datatype of the data stored in the matrix.\n   *\n   * Usage:\n   *     const format = matrix.datatype()    // retrieve matrix datatype\n   *\n   * @return {string}           The datatype.\n   */\n\n\n  Matrix.prototype.datatype = function () {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke datatype on a Matrix interface');\n  };\n  /**\n   * Create a new Matrix With the type of the current matrix instance\n   * @param {Array | Object} data\n   * @param {string} [datatype]\n   */\n\n\n  Matrix.prototype.create = function (data, datatype) {\n    throw new Error('Cannot invoke create on a Matrix interface');\n  };\n  /**\n   * Get a subset of the matrix, or replace a subset of the matrix.\n   *\n   * Usage:\n   *     const subset = matrix.subset(index)               // retrieve subset\n   *     const value = matrix.subset(index, replacement)   // replace subset\n   *\n   * @param {Index} index\n   * @param {Array | Matrix | *} [replacement]\n   * @param {*} [defaultValue=0]      Default value, filled in on new entries when\n   *                                  the matrix is resized. If not provided,\n   *                                  new matrix elements will be filled with zeros.\n   */\n\n\n  Matrix.prototype.subset = function (index, replacement, defaultValue) {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke subset on a Matrix interface');\n  };\n  /**\n   * Get a single element from the matrix.\n   * @param {number[]} index   Zero-based index\n   * @return {*} value\n   */\n\n\n  Matrix.prototype.get = function (index) {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke get on a Matrix interface');\n  };\n  /**\n   * Replace a single element in the matrix.\n   * @param {number[]} index   Zero-based index\n   * @param {*} value\n   * @param {*} [defaultValue]        Default value, filled in on new entries when\n   *                                  the matrix is resized. If not provided,\n   *                                  new matrix elements will be left undefined.\n   * @return {Matrix} self\n   */\n\n\n  Matrix.prototype.set = function (index, value, defaultValue) {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke set on a Matrix interface');\n  };\n  /**\n   * Resize the matrix to the given size. Returns a copy of the matrix when\n   * `copy=true`, otherwise return the matrix itself (resize in place).\n   *\n   * @param {number[]} size           The new size the matrix should have.\n   * @param {*} [defaultValue=0]      Default value, filled in on new entries.\n   *                                  If not provided, the matrix elements will\n   *                                  be filled with zeros.\n   * @param {boolean} [copy]          Return a resized copy of the matrix\n   *\n   * @return {Matrix}                 The resized matrix\n   */\n\n\n  Matrix.prototype.resize = function (size, defaultValue) {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke resize on a Matrix interface');\n  };\n  /**\n   * Reshape the matrix to the given size. Returns a copy of the matrix when\n   * `copy=true`, otherwise return the matrix itself (reshape in place).\n   *\n   * @param {number[]} size           The new size the matrix should have.\n   * @param {boolean} [copy]          Return a reshaped copy of the matrix\n   *\n   * @return {Matrix}                 The reshaped matrix\n   */\n\n\n  Matrix.prototype.reshape = function (size, defaultValue) {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke reshape on a Matrix interface');\n  };\n  /**\n   * Create a clone of the matrix\n   * @return {Matrix} clone\n   */\n\n\n  Matrix.prototype.clone = function () {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke clone on a Matrix interface');\n  };\n  /**\n   * Retrieve the size of the matrix.\n   * @returns {number[]} size\n   */\n\n\n  Matrix.prototype.size = function () {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke size on a Matrix interface');\n  };\n  /**\n   * Create a new matrix with the results of the callback function executed on\n   * each entry of the matrix.\n   * @param {Function} callback   The callback function is invoked with three\n   *                              parameters: the value of the element, the index\n   *                              of the element, and the Matrix being traversed.\n   * @param {boolean} [skipZeros] Invoke callback function for non-zero values only.\n   *\n   * @return {Matrix} matrix\n   */\n\n\n  Matrix.prototype.map = function (callback, skipZeros) {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke map on a Matrix interface');\n  };\n  /**\n   * Execute a callback function on each entry of the matrix.\n   * @param {Function} callback   The callback function is invoked with three\n   *                              parameters: the value of the element, the index\n   *                              of the element, and the Matrix being traversed.\n   */\n\n\n  Matrix.prototype.forEach = function (callback) {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke forEach on a Matrix interface');\n  };\n  /**\n   * Create an Array with a copy of the data of the Matrix\n   * @returns {Array} array\n   */\n\n\n  Matrix.prototype.toArray = function () {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke toArray on a Matrix interface');\n  };\n  /**\n   * Get the primitive value of the Matrix: a multidimensional array\n   * @returns {Array} array\n   */\n\n\n  Matrix.prototype.valueOf = function () {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke valueOf on a Matrix interface');\n  };\n  /**\n   * Get a string representation of the matrix, with optional formatting options.\n   * @param {Object | number | Function} [options]  Formatting options. See\n   *                                                lib/utils/number:format for a\n   *                                                description of the available\n   *                                                options.\n   * @returns {string} str\n   */\n\n\n  Matrix.prototype.format = function (options) {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke format on a Matrix interface');\n  };\n  /**\n   * Get a string representation of the matrix\n   * @returns {string} str\n   */\n\n\n  Matrix.prototype.toString = function () {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke toString on a Matrix interface');\n  };\n\n  return Matrix;\n}, {\n  isClass: true\n});","import { isArray, isBigNumber, isCollection, isIndex, isMatrix, isNumber, isString, typeOf } from '../../utils/is.js';\nimport { arraySize, getArrayDataType, reshape, resize, unsqueeze, validate, validateIndex } from '../../utils/array.js';\nimport { format } from '../../utils/string.js';\nimport { isInteger } from '../../utils/number.js';\nimport { clone, deepStrictEqual } from '../../utils/object.js';\nimport { DimensionError } from '../../error/DimensionError.js';\nimport { factory } from '../../utils/factory.js';\nvar name = 'DenseMatrix';\nvar dependencies = ['Matrix'];\nexport var createDenseMatrixClass = /* #__PURE__ */factory(name, dependencies, (_ref) => {\n  var {\n    Matrix\n  } = _ref;\n\n  /**\n   * Dense Matrix implementation. A regular, dense matrix, supporting multi-dimensional matrices. This is the default matrix type.\n   * @class DenseMatrix\n   */\n  function DenseMatrix(data, datatype) {\n    if (!(this instanceof DenseMatrix)) {\n      throw new SyntaxError('Constructor must be called with the new operator');\n    }\n\n    if (datatype && !isString(datatype)) {\n      throw new Error('Invalid datatype: ' + datatype);\n    }\n\n    if (isMatrix(data)) {\n      // check data is a DenseMatrix\n      if (data.type === 'DenseMatrix') {\n        // clone data & size\n        this._data = clone(data._data);\n        this._size = clone(data._size);\n        this._datatype = datatype || data._datatype;\n      } else {\n        // build data from existing matrix\n        this._data = data.toArray();\n        this._size = data.size();\n        this._datatype = datatype || data._datatype;\n      }\n    } else if (data && isArray(data.data) && isArray(data.size)) {\n      // initialize fields from JSON representation\n      this._data = data.data;\n      this._size = data.size; // verify the dimensions of the array\n\n      validate(this._data, this._size);\n      this._datatype = datatype || data.datatype;\n    } else if (isArray(data)) {\n      // replace nested Matrices with Arrays\n      this._data = preprocess(data); // get the dimensions of the array\n\n      this._size = arraySize(this._data); // verify the dimensions of the array, TODO: compute size while processing array\n\n      validate(this._data, this._size); // data type unknown\n\n      this._datatype = datatype;\n    } else if (data) {\n      // unsupported type\n      throw new TypeError('Unsupported type of data (' + typeOf(data) + ')');\n    } else {\n      // nothing provided\n      this._data = [];\n      this._size = [0];\n      this._datatype = datatype;\n    }\n  }\n\n  DenseMatrix.prototype = new Matrix();\n  /**\n   * Create a new DenseMatrix\n   */\n\n  DenseMatrix.prototype.createDenseMatrix = function (data, datatype) {\n    return new DenseMatrix(data, datatype);\n  };\n  /**\n   * Attach type information\n   */\n\n\n  DenseMatrix.prototype.type = 'DenseMatrix';\n  DenseMatrix.prototype.isDenseMatrix = true;\n  /**\n   * Get the matrix type\n   *\n   * Usage:\n   *    const matrixType = matrix.getDataType()  // retrieves the matrix type\n   *\n   * @memberOf DenseMatrix\n   * @return {string}   type information; if multiple types are found from the Matrix, it will return \"mixed\"\n   */\n\n  DenseMatrix.prototype.getDataType = function () {\n    return getArrayDataType(this._data, typeOf);\n  };\n  /**\n   * Get the storage format used by the matrix.\n   *\n   * Usage:\n   *     const format = matrix.storage()  // retrieve storage format\n   *\n   * @memberof DenseMatrix\n   * @return {string}           The storage format.\n   */\n\n\n  DenseMatrix.prototype.storage = function () {\n    return 'dense';\n  };\n  /**\n   * Get the datatype of the data stored in the matrix.\n   *\n   * Usage:\n   *     const format = matrix.datatype()   // retrieve matrix datatype\n   *\n   * @memberof DenseMatrix\n   * @return {string}           The datatype.\n   */\n\n\n  DenseMatrix.prototype.datatype = function () {\n    return this._datatype;\n  };\n  /**\n   * Create a new DenseMatrix\n   * @memberof DenseMatrix\n   * @param {Array} data\n   * @param {string} [datatype]\n   */\n\n\n  DenseMatrix.prototype.create = function (data, datatype) {\n    return new DenseMatrix(data, datatype);\n  };\n  /**\n   * Get a subset of the matrix, or replace a subset of the matrix.\n   *\n   * Usage:\n   *     const subset = matrix.subset(index)               // retrieve subset\n   *     const value = matrix.subset(index, replacement)   // replace subset\n   *\n   * @memberof DenseMatrix\n   * @param {Index} index\n   * @param {Array | Matrix | *} [replacement]\n   * @param {*} [defaultValue=0]      Default value, filled in on new entries when\n   *                                  the matrix is resized. If not provided,\n   *                                  new matrix elements will be filled with zeros.\n   */\n\n\n  DenseMatrix.prototype.subset = function (index, replacement, defaultValue) {\n    switch (arguments.length) {\n      case 1:\n        return _get(this, index);\n      // intentional fall through\n\n      case 2:\n      case 3:\n        return _set(this, index, replacement, defaultValue);\n\n      default:\n        throw new SyntaxError('Wrong number of arguments');\n    }\n  };\n  /**\n   * Get a single element from the matrix.\n   * @memberof DenseMatrix\n   * @param {number[]} index   Zero-based index\n   * @return {*} value\n   */\n\n\n  DenseMatrix.prototype.get = function (index) {\n    if (!isArray(index)) {\n      throw new TypeError('Array expected');\n    }\n\n    if (index.length !== this._size.length) {\n      throw new DimensionError(index.length, this._size.length);\n    } // check index\n\n\n    for (var x = 0; x < index.length; x++) {\n      validateIndex(index[x], this._size[x]);\n    }\n\n    var data = this._data;\n\n    for (var i = 0, ii = index.length; i < ii; i++) {\n      var indexI = index[i];\n      validateIndex(indexI, data.length);\n      data = data[indexI];\n    }\n\n    return data;\n  };\n  /**\n   * Replace a single element in the matrix.\n   * @memberof DenseMatrix\n   * @param {number[]} index   Zero-based index\n   * @param {*} value\n   * @param {*} [defaultValue]        Default value, filled in on new entries when\n   *                                  the matrix is resized. If not provided,\n   *                                  new matrix elements will be left undefined.\n   * @return {DenseMatrix} self\n   */\n\n\n  DenseMatrix.prototype.set = function (index, value, defaultValue) {\n    if (!isArray(index)) {\n      throw new TypeError('Array expected');\n    }\n\n    if (index.length < this._size.length) {\n      throw new DimensionError(index.length, this._size.length, '<');\n    }\n\n    var i, ii, indexI; // enlarge matrix when needed\n\n    var size = index.map(function (i) {\n      return i + 1;\n    });\n\n    _fit(this, size, defaultValue); // traverse over the dimensions\n\n\n    var data = this._data;\n\n    for (i = 0, ii = index.length - 1; i < ii; i++) {\n      indexI = index[i];\n      validateIndex(indexI, data.length);\n      data = data[indexI];\n    } // set new value\n\n\n    indexI = index[index.length - 1];\n    validateIndex(indexI, data.length);\n    data[indexI] = value;\n    return this;\n  };\n  /**\n   * Get a submatrix of this matrix\n   * @memberof DenseMatrix\n   * @param {DenseMatrix} matrix\n   * @param {Index} index   Zero-based index\n   * @private\n   */\n\n\n  function _get(matrix, index) {\n    if (!isIndex(index)) {\n      throw new TypeError('Invalid index');\n    }\n\n    var isScalar = index.isScalar();\n\n    if (isScalar) {\n      // return a scalar\n      return matrix.get(index.min());\n    } else {\n      // validate dimensions\n      var size = index.size();\n\n      if (size.length !== matrix._size.length) {\n        throw new DimensionError(size.length, matrix._size.length);\n      } // validate if any of the ranges in the index is out of range\n\n\n      var min = index.min();\n      var max = index.max();\n\n      for (var i = 0, ii = matrix._size.length; i < ii; i++) {\n        validateIndex(min[i], matrix._size[i]);\n        validateIndex(max[i], matrix._size[i]);\n      } // retrieve submatrix\n      // TODO: more efficient when creating an empty matrix and setting _data and _size manually\n\n\n      return new DenseMatrix(_getSubmatrix(matrix._data, index, size.length, 0), matrix._datatype);\n    }\n  }\n  /**\n   * Recursively get a submatrix of a multi dimensional matrix.\n   * Index is not checked for correct number or length of dimensions.\n   * @memberof DenseMatrix\n   * @param {Array} data\n   * @param {Index} index\n   * @param {number} dims   Total number of dimensions\n   * @param {number} dim    Current dimension\n   * @return {Array} submatrix\n   * @private\n   */\n\n\n  function _getSubmatrix(data, index, dims, dim) {\n    var last = dim === dims - 1;\n    var range = index.dimension(dim);\n\n    if (last) {\n      return range.map(function (i) {\n        validateIndex(i, data.length);\n        return data[i];\n      }).valueOf();\n    } else {\n      return range.map(function (i) {\n        validateIndex(i, data.length);\n        var child = data[i];\n        return _getSubmatrix(child, index, dims, dim + 1);\n      }).valueOf();\n    }\n  }\n  /**\n   * Replace a submatrix in this matrix\n   * Indexes are zero-based.\n   * @memberof DenseMatrix\n   * @param {DenseMatrix} matrix\n   * @param {Index} index\n   * @param {DenseMatrix | Array | *} submatrix\n   * @param {*} defaultValue          Default value, filled in on new entries when\n   *                                  the matrix is resized.\n   * @return {DenseMatrix} matrix\n   * @private\n   */\n\n\n  function _set(matrix, index, submatrix, defaultValue) {\n    if (!index || index.isIndex !== true) {\n      throw new TypeError('Invalid index');\n    } // get index size and check whether the index contains a single value\n\n\n    var iSize = index.size();\n    var isScalar = index.isScalar(); // calculate the size of the submatrix, and convert it into an Array if needed\n\n    var sSize;\n\n    if (isMatrix(submatrix)) {\n      sSize = submatrix.size();\n      submatrix = submatrix.valueOf();\n    } else {\n      sSize = arraySize(submatrix);\n    }\n\n    if (isScalar) {\n      // set a scalar\n      // check whether submatrix is a scalar\n      if (sSize.length !== 0) {\n        throw new TypeError('Scalar expected');\n      }\n\n      matrix.set(index.min(), submatrix, defaultValue);\n    } else {\n      // set a submatrix\n      // validate dimensions\n      if (iSize.length < matrix._size.length) {\n        throw new DimensionError(iSize.length, matrix._size.length, '<');\n      }\n\n      if (sSize.length < iSize.length) {\n        // calculate number of missing outer dimensions\n        var i = 0;\n        var outer = 0;\n\n        while (iSize[i] === 1 && sSize[i] === 1) {\n          i++;\n        }\n\n        while (iSize[i] === 1) {\n          outer++;\n          i++;\n        } // unsqueeze both outer and inner dimensions\n\n\n        submatrix = unsqueeze(submatrix, iSize.length, outer, sSize);\n      } // check whether the size of the submatrix matches the index size\n\n\n      if (!deepStrictEqual(iSize, sSize)) {\n        throw new DimensionError(iSize, sSize, '>');\n      } // enlarge matrix when needed\n\n\n      var size = index.max().map(function (i) {\n        return i + 1;\n      });\n\n      _fit(matrix, size, defaultValue); // insert the sub matrix\n\n\n      var dims = iSize.length;\n      var dim = 0;\n\n      _setSubmatrix(matrix._data, index, submatrix, dims, dim);\n    }\n\n    return matrix;\n  }\n  /**\n   * Replace a submatrix of a multi dimensional matrix.\n   * @memberof DenseMatrix\n   * @param {Array} data\n   * @param {Index} index\n   * @param {Array} submatrix\n   * @param {number} dims   Total number of dimensions\n   * @param {number} dim\n   * @private\n   */\n\n\n  function _setSubmatrix(data, index, submatrix, dims, dim) {\n    var last = dim === dims - 1;\n    var range = index.dimension(dim);\n\n    if (last) {\n      range.forEach(function (dataIndex, subIndex) {\n        validateIndex(dataIndex);\n        data[dataIndex] = submatrix[subIndex[0]];\n      });\n    } else {\n      range.forEach(function (dataIndex, subIndex) {\n        validateIndex(dataIndex);\n\n        _setSubmatrix(data[dataIndex], index, submatrix[subIndex[0]], dims, dim + 1);\n      });\n    }\n  }\n  /**\n   * Resize the matrix to the given size. Returns a copy of the matrix when\n   * `copy=true`, otherwise return the matrix itself (resize in place).\n   *\n   * @memberof DenseMatrix\n   * @param {number[] || Matrix} size The new size the matrix should have.\n   * @param {*} [defaultValue=0]      Default value, filled in on new entries.\n   *                                  If not provided, the matrix elements will\n   *                                  be filled with zeros.\n   * @param {boolean} [copy]          Return a resized copy of the matrix\n   *\n   * @return {Matrix}                 The resized matrix\n   */\n\n\n  DenseMatrix.prototype.resize = function (size, defaultValue, copy) {\n    // validate arguments\n    if (!isCollection(size)) {\n      throw new TypeError('Array or Matrix expected');\n    } // SparseMatrix input is always 2d, flatten this into 1d if it's indeed a vector\n\n\n    var sizeArray = size.valueOf().map(value => {\n      return Array.isArray(value) && value.length === 1 ? value[0] : value;\n    }); // matrix to resize\n\n    var m = copy ? this.clone() : this; // resize matrix\n\n    return _resize(m, sizeArray, defaultValue);\n  };\n\n  function _resize(matrix, size, defaultValue) {\n    // check size\n    if (size.length === 0) {\n      // first value in matrix\n      var v = matrix._data; // go deep\n\n      while (isArray(v)) {\n        v = v[0];\n      }\n\n      return v;\n    } // resize matrix\n\n\n    matrix._size = size.slice(0); // copy the array\n\n    matrix._data = resize(matrix._data, matrix._size, defaultValue); // return matrix\n\n    return matrix;\n  }\n  /**\n   * Reshape the matrix to the given size. Returns a copy of the matrix when\n   * `copy=true`, otherwise return the matrix itself (reshape in place).\n   *\n   * NOTE: This might be better suited to copy by default, instead of modifying\n   *       in place. For now, it operates in place to remain consistent with\n   *       resize().\n   *\n   * @memberof DenseMatrix\n   * @param {number[]} size           The new size the matrix should have.\n   * @param {boolean} [copy]          Return a reshaped copy of the matrix\n   *\n   * @return {Matrix}                 The reshaped matrix\n   */\n\n\n  DenseMatrix.prototype.reshape = function (size, copy) {\n    var m = copy ? this.clone() : this;\n    m._data = reshape(m._data, size);\n    m._size = size.slice(0);\n    return m;\n  };\n  /**\n   * Enlarge the matrix when it is smaller than given size.\n   * If the matrix is larger or equal sized, nothing is done.\n   * @memberof DenseMatrix\n   * @param {DenseMatrix} matrix           The matrix to be resized\n   * @param {number[]} size\n   * @param {*} defaultValue          Default value, filled in on new entries.\n   * @private\n   */\n\n\n  function _fit(matrix, size, defaultValue) {\n    var // copy the array\n    newSize = matrix._size.slice(0);\n\n    var changed = false; // add dimensions when needed\n\n    while (newSize.length < size.length) {\n      newSize.push(0);\n      changed = true;\n    } // enlarge size when needed\n\n\n    for (var i = 0, ii = size.length; i < ii; i++) {\n      if (size[i] > newSize[i]) {\n        newSize[i] = size[i];\n        changed = true;\n      }\n    }\n\n    if (changed) {\n      // resize only when size is changed\n      _resize(matrix, newSize, defaultValue);\n    }\n  }\n  /**\n   * Create a clone of the matrix\n   * @memberof DenseMatrix\n   * @return {DenseMatrix} clone\n   */\n\n\n  DenseMatrix.prototype.clone = function () {\n    var m = new DenseMatrix({\n      data: clone(this._data),\n      size: clone(this._size),\n      datatype: this._datatype\n    });\n    return m;\n  };\n  /**\n   * Retrieve the size of the matrix.\n   * @memberof DenseMatrix\n   * @returns {number[]} size\n   */\n\n\n  DenseMatrix.prototype.size = function () {\n    return this._size.slice(0); // return a clone of _size\n  };\n  /**\n   * Create a new matrix with the results of the callback function executed on\n   * each entry of the matrix.\n   * @memberof DenseMatrix\n   * @param {Function} callback   The callback function is invoked with three\n   *                              parameters: the value of the element, the index\n   *                              of the element, and the Matrix being traversed.\n   *\n   * @return {DenseMatrix} matrix\n   */\n\n\n  DenseMatrix.prototype.map = function (callback) {\n    // matrix instance\n    var me = this;\n\n    var recurse = function recurse(value, index) {\n      if (isArray(value)) {\n        return value.map(function (child, i) {\n          return recurse(child, index.concat(i));\n        });\n      } else {\n        return callback(value, index, me);\n      }\n    }; // determine the new datatype when the original matrix has datatype defined\n    // TODO: should be done in matrix constructor instead\n\n\n    var data = recurse(this._data, []);\n    var datatype = this._datatype !== undefined ? getArrayDataType(data, typeOf) : undefined;\n    return new DenseMatrix(data, datatype);\n  };\n  /**\n   * Execute a callback function on each entry of the matrix.\n   * @memberof DenseMatrix\n   * @param {Function} callback   The callback function is invoked with three\n   *                              parameters: the value of the element, the index\n   *                              of the element, and the Matrix being traversed.\n   */\n\n\n  DenseMatrix.prototype.forEach = function (callback) {\n    // matrix instance\n    var me = this;\n\n    var recurse = function recurse(value, index) {\n      if (isArray(value)) {\n        value.forEach(function (child, i) {\n          recurse(child, index.concat(i));\n        });\n      } else {\n        callback(value, index, me);\n      }\n    };\n\n    recurse(this._data, []);\n  };\n  /**\n   * Create an Array with a copy of the data of the DenseMatrix\n   * @memberof DenseMatrix\n   * @returns {Array} array\n   */\n\n\n  DenseMatrix.prototype.toArray = function () {\n    return clone(this._data);\n  };\n  /**\n   * Get the primitive value of the DenseMatrix: a multidimensional array\n   * @memberof DenseMatrix\n   * @returns {Array} array\n   */\n\n\n  DenseMatrix.prototype.valueOf = function () {\n    return this._data;\n  };\n  /**\n   * Get a string representation of the matrix, with optional formatting options.\n   * @memberof DenseMatrix\n   * @param {Object | number | Function} [options]  Formatting options. See\n   *                                                lib/utils/number:format for a\n   *                                                description of the available\n   *                                                options.\n   * @returns {string} str\n   */\n\n\n  DenseMatrix.prototype.format = function (options) {\n    return format(this._data, options);\n  };\n  /**\n   * Get a string representation of the matrix\n   * @memberof DenseMatrix\n   * @returns {string} str\n   */\n\n\n  DenseMatrix.prototype.toString = function () {\n    return format(this._data);\n  };\n  /**\n   * Get a JSON representation of the matrix\n   * @memberof DenseMatrix\n   * @returns {Object}\n   */\n\n\n  DenseMatrix.prototype.toJSON = function () {\n    return {\n      mathjs: 'DenseMatrix',\n      data: this._data,\n      size: this._size,\n      datatype: this._datatype\n    };\n  };\n  /**\n   * Get the kth Matrix diagonal.\n   *\n   * @memberof DenseMatrix\n   * @param {number | BigNumber} [k=0]     The kth diagonal where the vector will retrieved.\n   *\n   * @returns {Matrix}                     The matrix with the diagonal values.\n   */\n\n\n  DenseMatrix.prototype.diagonal = function (k) {\n    // validate k if any\n    if (k) {\n      // convert BigNumber to a number\n      if (isBigNumber(k)) {\n        k = k.toNumber();\n      } // is must be an integer\n\n\n      if (!isNumber(k) || !isInteger(k)) {\n        throw new TypeError('The parameter k must be an integer number');\n      }\n    } else {\n      // default value\n      k = 0;\n    }\n\n    var kSuper = k > 0 ? k : 0;\n    var kSub = k < 0 ? -k : 0; // rows & columns\n\n    var rows = this._size[0];\n    var columns = this._size[1]; // number diagonal values\n\n    var n = Math.min(rows - kSub, columns - kSuper); // x is a matrix get diagonal from matrix\n\n    var data = []; // loop rows\n\n    for (var i = 0; i < n; i++) {\n      data[i] = this._data[i + kSub][i + kSuper];\n    } // create DenseMatrix\n\n\n    return new DenseMatrix({\n      data: data,\n      size: [n],\n      datatype: this._datatype\n    });\n  };\n  /**\n   * Create a diagonal matrix.\n   *\n   * @memberof DenseMatrix\n   * @param {Array} size                     The matrix size.\n   * @param {number | Matrix | Array } value The values for the diagonal.\n   * @param {number | BigNumber} [k=0]       The kth diagonal where the vector will be filled in.\n   * @param {number} [defaultValue]          The default value for non-diagonal\n   * @param {string} [datatype]              The datatype for the diagonal\n   *\n   * @returns {DenseMatrix}\n   */\n\n\n  DenseMatrix.diagonal = function (size, value, k, defaultValue) {\n    if (!isArray(size)) {\n      throw new TypeError('Array expected, size parameter');\n    }\n\n    if (size.length !== 2) {\n      throw new Error('Only two dimensions matrix are supported');\n    } // map size & validate\n\n\n    size = size.map(function (s) {\n      // check it is a big number\n      if (isBigNumber(s)) {\n        // convert it\n        s = s.toNumber();\n      } // validate arguments\n\n\n      if (!isNumber(s) || !isInteger(s) || s < 1) {\n        throw new Error('Size values must be positive integers');\n      }\n\n      return s;\n    }); // validate k if any\n\n    if (k) {\n      // convert BigNumber to a number\n      if (isBigNumber(k)) {\n        k = k.toNumber();\n      } // is must be an integer\n\n\n      if (!isNumber(k) || !isInteger(k)) {\n        throw new TypeError('The parameter k must be an integer number');\n      }\n    } else {\n      // default value\n      k = 0;\n    }\n\n    var kSuper = k > 0 ? k : 0;\n    var kSub = k < 0 ? -k : 0; // rows and columns\n\n    var rows = size[0];\n    var columns = size[1]; // number of non-zero items\n\n    var n = Math.min(rows - kSub, columns - kSuper); // value extraction function\n\n    var _value; // check value\n\n\n    if (isArray(value)) {\n      // validate array\n      if (value.length !== n) {\n        // number of values in array must be n\n        throw new Error('Invalid value array length');\n      } // define function\n\n\n      _value = function _value(i) {\n        // return value @ i\n        return value[i];\n      };\n    } else if (isMatrix(value)) {\n      // matrix size\n      var ms = value.size(); // validate matrix\n\n      if (ms.length !== 1 || ms[0] !== n) {\n        // number of values in array must be n\n        throw new Error('Invalid matrix length');\n      } // define function\n\n\n      _value = function _value(i) {\n        // return value @ i\n        return value.get([i]);\n      };\n    } else {\n      // define function\n      _value = function _value() {\n        // return value\n        return value;\n      };\n    } // discover default value if needed\n\n\n    if (!defaultValue) {\n      // check first value in array\n      defaultValue = isBigNumber(_value(0)) ? _value(0).mul(0) // trick to create a BigNumber with value zero\n      : 0;\n    } // empty array\n\n\n    var data = []; // check we need to resize array\n\n    if (size.length > 0) {\n      // resize array\n      data = resize(data, size, defaultValue); // fill diagonal\n\n      for (var d = 0; d < n; d++) {\n        data[d + kSub][d + kSuper] = _value(d);\n      }\n    } // create DenseMatrix\n\n\n    return new DenseMatrix({\n      data: data,\n      size: [rows, columns]\n    });\n  };\n  /**\n   * Generate a matrix from a JSON object\n   * @memberof DenseMatrix\n   * @param {Object} json  An object structured like\n   *                       `{\"mathjs\": \"DenseMatrix\", data: [], size: []}`,\n   *                       where mathjs is optional\n   * @returns {DenseMatrix}\n   */\n\n\n  DenseMatrix.fromJSON = function (json) {\n    return new DenseMatrix(json);\n  };\n  /**\n   * Swap rows i and j in Matrix.\n   *\n   * @memberof DenseMatrix\n   * @param {number} i       Matrix row index 1\n   * @param {number} j       Matrix row index 2\n   *\n   * @return {Matrix}        The matrix reference\n   */\n\n\n  DenseMatrix.prototype.swapRows = function (i, j) {\n    // check index\n    if (!isNumber(i) || !isInteger(i) || !isNumber(j) || !isInteger(j)) {\n      throw new Error('Row index must be positive integers');\n    } // check dimensions\n\n\n    if (this._size.length !== 2) {\n      throw new Error('Only two dimensional matrix is supported');\n    } // validate index\n\n\n    validateIndex(i, this._size[0]);\n    validateIndex(j, this._size[0]); // swap rows\n\n    DenseMatrix._swapRows(i, j, this._data); // return current instance\n\n\n    return this;\n  };\n  /**\n   * Swap rows i and j in Dense Matrix data structure.\n   *\n   * @param {number} i       Matrix row index 1\n   * @param {number} j       Matrix row index 2\n   * @param {Array} data     Matrix data\n   */\n\n\n  DenseMatrix._swapRows = function (i, j, data) {\n    // swap values i <-> j\n    var vi = data[i];\n    data[i] = data[j];\n    data[j] = vi;\n  };\n  /**\n   * Preprocess data, which can be an Array or DenseMatrix with nested Arrays and\n   * Matrices. Replaces all nested Matrices with Arrays\n   * @memberof DenseMatrix\n   * @param {Array} data\n   * @return {Array} data\n   */\n\n\n  function preprocess(data) {\n    for (var i = 0, ii = data.length; i < ii; i++) {\n      var elem = data[i];\n\n      if (isArray(elem)) {\n        data[i] = preprocess(elem);\n      } else if (elem && elem.isMatrix === true) {\n        data[i] = preprocess(elem.valueOf());\n      }\n    }\n\n    return data;\n  }\n\n  return DenseMatrix;\n}, {\n  isClass: true\n});","import { isCollection, isMatrix } from './is.js';\nimport { IndexError } from '../error/IndexError.js';\nimport { arraySize } from './array.js';\n/**\n * Test whether an array contains collections\n * @param {Array} array\n * @returns {boolean} Returns true when the array contains one or multiple\n *                    collections (Arrays or Matrices). Returns false otherwise.\n */\n\nexport function containsCollections(array) {\n  for (var i = 0; i < array.length; i++) {\n    if (isCollection(array[i])) {\n      return true;\n    }\n  }\n\n  return false;\n}\n/**\n * Recursively loop over all elements in a given multi dimensional array\n * and invoke the callback on each of the elements.\n * @param {Array | Matrix} array\n * @param {Function} callback     The callback method is invoked with one\n *                                parameter: the current element in the array\n */\n\nexport function deepForEach(array, callback) {\n  if (isMatrix(array)) {\n    array = array.valueOf();\n  }\n\n  for (var i = 0, ii = array.length; i < ii; i++) {\n    var value = array[i];\n\n    if (Array.isArray(value)) {\n      deepForEach(value, callback);\n    } else {\n      callback(value);\n    }\n  }\n}\n/**\n * Execute the callback function element wise for each element in array and any\n * nested array\n * Returns an array with the results\n * @param {Array | Matrix} array\n * @param {Function} callback   The callback is called with two parameters:\n *                              value1 and value2, which contain the current\n *                              element of both arrays.\n * @param {boolean} [skipZeros] Invoke callback function for non-zero values only.\n *\n * @return {Array | Matrix} res\n */\n\nexport function deepMap(array, callback, skipZeros) {\n  if (array && typeof array.map === 'function') {\n    // TODO: replace array.map with a for loop to improve performance\n    return array.map(function (x) {\n      return deepMap(x, callback, skipZeros);\n    });\n  } else {\n    return callback(array);\n  }\n}\n/**\n * Reduce a given matrix or array to a new matrix or\n * array with one less dimension, applying the given\n * callback in the selected dimension.\n * @param {Array | Matrix} mat\n * @param {number} dim\n * @param {Function} callback\n * @return {Array | Matrix} res\n */\n\nexport function reduce(mat, dim, callback) {\n  var size = Array.isArray(mat) ? arraySize(mat) : mat.size();\n\n  if (dim < 0 || dim >= size.length) {\n    // TODO: would be more clear when throwing a DimensionError here\n    throw new IndexError(dim, size.length);\n  }\n\n  if (isMatrix(mat)) {\n    return mat.create(_reduce(mat.valueOf(), dim, callback));\n  } else {\n    return _reduce(mat, dim, callback);\n  }\n}\n/**\n * Recursively reduce a matrix\n * @param {Array} mat\n * @param {number} dim\n * @param {Function} callback\n * @returns {Array} ret\n * @private\n */\n\nfunction _reduce(mat, dim, callback) {\n  var i, ret, val, tran;\n\n  if (dim <= 0) {\n    if (!Array.isArray(mat[0])) {\n      val = mat[0];\n\n      for (i = 1; i < mat.length; i++) {\n        val = callback(val, mat[i]);\n      }\n\n      return val;\n    } else {\n      tran = _switch(mat);\n      ret = [];\n\n      for (i = 0; i < tran.length; i++) {\n        ret[i] = _reduce(tran[i], dim - 1, callback);\n      }\n\n      return ret;\n    }\n  } else {\n    ret = [];\n\n    for (i = 0; i < mat.length; i++) {\n      ret[i] = _reduce(mat[i], dim - 1, callback);\n    }\n\n    return ret;\n  }\n}\n/**\n * Transpose a matrix\n * @param {Array} mat\n * @returns {Array} ret\n * @private\n */\n\n\nfunction _switch(mat) {\n  var I = mat.length;\n  var J = mat[0].length;\n  var i, j;\n  var ret = [];\n\n  for (j = 0; j < J; j++) {\n    var tmp = [];\n\n    for (i = 0; i < I; i++) {\n      tmp.push(mat[i][j]);\n    }\n\n    ret.push(tmp);\n  }\n\n  return ret;\n} // TODO: document function scatter\n\n\nexport function scatter(a, j, w, x, u, mark, cindex, f, inverse, update, value) {\n  // a arrays\n  var avalues = a._values;\n  var aindex = a._index;\n  var aptr = a._ptr; // vars\n\n  var k, k0, k1, i; // check we need to process values (pattern matrix)\n\n  if (x) {\n    // values in j\n    for (k0 = aptr[j], k1 = aptr[j + 1], k = k0; k < k1; k++) {\n      // row\n      i = aindex[k]; // check value exists in current j\n\n      if (w[i] !== mark) {\n        // i is new entry in j\n        w[i] = mark; // add i to pattern of C\n\n        cindex.push(i); // x(i) = A, check we need to call function this time\n\n        if (update) {\n          // copy value to workspace calling callback function\n          x[i] = inverse ? f(avalues[k], value) : f(value, avalues[k]); // function was called on current row\n\n          u[i] = mark;\n        } else {\n          // copy value to workspace\n          x[i] = avalues[k];\n        }\n      } else {\n        // i exists in C already\n        x[i] = inverse ? f(avalues[k], x[i]) : f(x[i], avalues[k]); // function was called on current row\n\n        u[i] = mark;\n      }\n    }\n  } else {\n    // values in j\n    for (k0 = aptr[j], k1 = aptr[j + 1], k = k0; k < k1; k++) {\n      // row\n      i = aindex[k]; // check value exists in current j\n\n      if (w[i] !== mark) {\n        // i is new entry in j\n        w[i] = mark; // add i to pattern of C\n\n        cindex.push(i);\n      } else {\n        // indicate function was called on current row\n        u[i] = mark;\n      }\n    }\n  }\n}","import { isInteger, log2, log10, cbrt, expm1, sign, toFixed, log1p } from '../../utils/number.js';\nvar n1 = 'number';\nvar n2 = 'number, number';\nexport function absNumber(a) {\n  return Math.abs(a);\n}\nabsNumber.signature = n1;\nexport function addNumber(a, b) {\n  return a + b;\n}\naddNumber.signature = n2;\nexport function subtractNumber(a, b) {\n  return a - b;\n}\nsubtractNumber.signature = n2;\nexport function multiplyNumber(a, b) {\n  return a * b;\n}\nmultiplyNumber.signature = n2;\nexport function divideNumber(a, b) {\n  return a / b;\n}\ndivideNumber.signature = n2;\nexport function unaryMinusNumber(x) {\n  return -x;\n}\nunaryMinusNumber.signature = n1;\nexport function unaryPlusNumber(x) {\n  return x;\n}\nunaryPlusNumber.signature = n1;\nexport function cbrtNumber(x) {\n  return cbrt(x);\n}\ncbrtNumber.signature = n1;\nexport function ceilNumber(x) {\n  return Math.ceil(x);\n}\nceilNumber.signature = n1;\nexport function cubeNumber(x) {\n  return x * x * x;\n}\ncubeNumber.signature = n1;\nexport function expNumber(x) {\n  return Math.exp(x);\n}\nexpNumber.signature = n1;\nexport function expm1Number(x) {\n  return expm1(x);\n}\nexpm1Number.signature = n1;\nexport function fixNumber(x) {\n  return x > 0 ? Math.floor(x) : Math.ceil(x);\n}\nfixNumber.signature = n1;\nexport function floorNumber(x) {\n  return Math.floor(x);\n}\nfloorNumber.signature = n1;\n/**\n * Calculate gcd for numbers\n * @param {number} a\n * @param {number} b\n * @returns {number} Returns the greatest common denominator of a and b\n */\n\nexport function gcdNumber(a, b) {\n  if (!isInteger(a) || !isInteger(b)) {\n    throw new Error('Parameters in function gcd must be integer numbers');\n  } // https://en.wikipedia.org/wiki/Euclidean_algorithm\n\n\n  var r;\n\n  while (b !== 0) {\n    r = a % b;\n    a = b;\n    b = r;\n  }\n\n  return a < 0 ? -a : a;\n}\ngcdNumber.signature = n2;\n/**\n * Calculate lcm for two numbers\n * @param {number} a\n * @param {number} b\n * @returns {number} Returns the least common multiple of a and b\n */\n\nexport function lcmNumber(a, b) {\n  if (!isInteger(a) || !isInteger(b)) {\n    throw new Error('Parameters in function lcm must be integer numbers');\n  }\n\n  if (a === 0 || b === 0) {\n    return 0;\n  } // https://en.wikipedia.org/wiki/Euclidean_algorithm\n  // evaluate lcm here inline to reduce overhead\n\n\n  var t;\n  var prod = a * b;\n\n  while (b !== 0) {\n    t = b;\n    b = a % t;\n    a = t;\n  }\n\n  return Math.abs(prod / a);\n}\nlcmNumber.signature = n2;\n/**\n * Calculate the logarithm of a value.\n * @param {number} x\n * @return {number}\n */\n\nexport function logNumber(x) {\n  return Math.log(x);\n}\nlogNumber.signature = n1;\n/**\n * Calculate the 10-base logarithm of a number\n * @param {number} x\n * @return {number}\n */\n\nexport function log10Number(x) {\n  return log10(x);\n}\nlog10Number.signature = n1;\n/**\n * Calculate the 2-base logarithm of a number\n * @param {number} x\n * @return {number}\n */\n\nexport function log2Number(x) {\n  return log2(x);\n}\nlog2Number.signature = n1;\n/**\n * Calculate the natural logarithm of a `number+1`\n * @param {number} x\n * @returns {number}\n */\n\nexport function log1pNumber(x) {\n  return log1p(x);\n}\nlog1pNumber.signature = n1;\n/**\n * Calculate the modulus of two numbers\n * @param {number} x\n * @param {number} y\n * @returns {number} res\n * @private\n */\n\nexport function modNumber(x, y) {\n  if (y > 0) {\n    // We don't use JavaScript's % operator here as this doesn't work\n    // correctly for x < 0 and x === 0\n    // see https://en.wikipedia.org/wiki/Modulo_operation\n    return x - y * Math.floor(x / y);\n  } else if (y === 0) {\n    return x;\n  } else {\n    // y < 0\n    // TODO: implement mod for a negative divisor\n    throw new Error('Cannot calculate mod for a negative divisor');\n  }\n}\nmodNumber.signature = n2;\n/**\n * Calculate the nth root of a, solve x^root == a\n * http://rosettacode.org/wiki/Nth_root#JavaScript\n * @param {number} a\n * @param {number} root\n * @private\n */\n\nexport function nthRootNumber(a, root) {\n  var inv = root < 0;\n\n  if (inv) {\n    root = -root;\n  }\n\n  if (root === 0) {\n    throw new Error('Root must be non-zero');\n  }\n\n  if (a < 0 && Math.abs(root) % 2 !== 1) {\n    throw new Error('Root must be odd when a is negative.');\n  } // edge cases zero and infinity\n\n\n  if (a === 0) {\n    return inv ? Infinity : 0;\n  }\n\n  if (!isFinite(a)) {\n    return inv ? 0 : a;\n  }\n\n  var x = Math.pow(Math.abs(a), 1 / root); // If a < 0, we require that root is an odd integer,\n  // so (-1) ^ (1/root) = -1\n\n  x = a < 0 ? -x : x;\n  return inv ? 1 / x : x; // Very nice algorithm, but fails with nthRoot(-2, 3).\n  // Newton's method has some well-known problems at times:\n  // https://en.wikipedia.org/wiki/Newton%27s_method#Failure_analysis\n\n  /*\n  let x = 1 // Initial guess\n  let xPrev = 1\n  let i = 0\n  const iMax = 10000\n  do {\n    const delta = (a / Math.pow(x, root - 1) - x) / root\n    xPrev = x\n    x = x + delta\n    i++\n  }\n  while (xPrev !== x && i < iMax)\n   if (xPrev !== x) {\n    throw new Error('Function nthRoot failed to converge')\n  }\n   return inv ? 1 / x : x\n  */\n}\nnthRootNumber.signature = n2;\nexport function signNumber(x) {\n  return sign(x);\n}\nsignNumber.signature = n1;\nexport function sqrtNumber(x) {\n  return Math.sqrt(x);\n}\nsqrtNumber.signature = n1;\nexport function squareNumber(x) {\n  return x * x;\n}\nsquareNumber.signature = n1;\n/**\n * Calculate xgcd for two numbers\n * @param {number} a\n * @param {number} b\n * @return {number} result\n * @private\n */\n\nexport function xgcdNumber(a, b) {\n  // source: https://en.wikipedia.org/wiki/Extended_Euclidean_algorithm\n  var t; // used to swap two variables\n\n  var q; // quotient\n\n  var r; // remainder\n\n  var x = 0;\n  var lastx = 1;\n  var y = 1;\n  var lasty = 0;\n\n  if (!isInteger(a) || !isInteger(b)) {\n    throw new Error('Parameters in function xgcd must be integer numbers');\n  }\n\n  while (b) {\n    q = Math.floor(a / b);\n    r = a - q * b;\n    t = x;\n    x = lastx - q * x;\n    lastx = t;\n    t = y;\n    y = lasty - q * y;\n    lasty = t;\n    a = b;\n    b = r;\n  }\n\n  var res;\n\n  if (a < 0) {\n    res = [-a, -lastx, -lasty];\n  } else {\n    res = [a, a ? lastx : 0, lasty];\n  }\n\n  return res;\n}\nxgcdNumber.signature = n2;\n/**\n * Calculates the power of x to y, x^y, for two numbers.\n * @param {number} x\n * @param {number} y\n * @return {number} res\n */\n\nexport function powNumber(x, y) {\n  // x^Infinity === 0 if -1 < x < 1\n  // A real number 0 is returned instead of complex(0)\n  if (x * x < 1 && y === Infinity || x * x > 1 && y === -Infinity) {\n    return 0;\n  }\n\n  return Math.pow(x, y);\n}\npowNumber.signature = n2;\n/**\n * round a number to the given number of decimals, or to zero if decimals is\n * not provided\n * @param {number} value\n * @param {number} decimals       number of decimals, between 0 and 15 (0 by default)\n * @return {number} roundedValue\n */\n\nexport function roundNumber(value) {\n  var decimals = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  return parseFloat(toFixed(value, decimals));\n}\nroundNumber.signature = n2;\n/**\n * Calculate the norm of a number, the absolute value.\n * @param {number} x\n * @return {number}\n */\n\nexport function normNumber(x) {\n  return Math.abs(x);\n}\nnormNumber.signature = n1;","import { deepMap } from '../../utils/collection.js';\nimport { factory } from '../../utils/factory.js';\nvar name = 'isNumeric';\nvar dependencies = ['typed'];\nexport var createIsNumeric = /* #__PURE__ */factory(name, dependencies, (_ref) => {\n  var {\n    typed\n  } = _ref;\n\n  /**\n   * Test whether a value is an numeric value.\n   *\n   * The function is evaluated element-wise in case of Array or Matrix input.\n   *\n   * Syntax:\n   *\n   *     math.isNumeric(x)\n   *\n   * Examples:\n   *\n   *    math.isNumeric(2)                     // returns true\n   *    math.isNumeric('2')                   // returns false\n   *    math.hasNumericValue('2')             // returns true\n   *    math.isNumeric(0)                     // returns true\n   *    math.isNumeric(math.bignumber(500))   // returns true\n   *    math.isNumeric(math.fraction(4))      // returns true\n   *    math.isNumeric(math.complex('2-4i')   // returns false\n   *    math.isNumeric([2.3, 'foo', false])   // returns [true, false, true]\n   *\n   * See also:\n   *\n   *    isZero, isPositive, isNegative, isInteger, hasNumericValue\n   *\n   * @param {*} x       Value to be tested\n   * @return {boolean}  Returns true when `x` is a `number`, `BigNumber`,\n   *                    `Fraction`, or `boolean`. Returns false for other types.\n   *                    Throws an error in case of unknown types.\n   */\n  return typed(name, {\n    'number | BigNumber | Fraction | boolean': function numberBigNumberFractionBoolean() {\n      return true;\n    },\n    'Complex | Unit | string | null | undefined | Node': function ComplexUnitStringNullUndefinedNode() {\n      return false;\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      return deepMap(x, this);\n    }\n  });\n});","/**\n * Compares two BigNumbers.\n * @param {BigNumber} x       First value to compare\n * @param {BigNumber} y       Second value to compare\n * @param {number} [epsilon]  The maximum relative difference between x and y\n *                            If epsilon is undefined or null, the function will\n *                            test whether x and y are exactly equal.\n * @return {boolean} whether the two numbers are nearly equal\n */\nexport function nearlyEqual(x, y, epsilon) {\n  // if epsilon is null or undefined, test whether x and y are exactly equal\n  if (epsilon === null || epsilon === undefined) {\n    return x.eq(y);\n  } // use \"==\" operator, handles infinities\n\n\n  if (x.eq(y)) {\n    return true;\n  } // NaN\n\n\n  if (x.isNaN() || y.isNaN()) {\n    return false;\n  } // at this point x and y should be finite\n\n\n  if (x.isFinite() && y.isFinite()) {\n    // check numbers are very close, needed when comparing numbers near zero\n    var diff = x.minus(y).abs();\n\n    if (diff.isZero()) {\n      return true;\n    } else {\n      // use relative error\n      var max = x.constructor.max(x.abs(), y.abs());\n      return diff.lte(max.times(epsilon));\n    }\n  } // Infinite and Number or negative Infinite and positive Infinite cases\n\n\n  return false;\n}","import { nearlyEqual as bigNearlyEqual } from '../../utils/bignumber/nearlyEqual.js';\nimport { nearlyEqual } from '../../utils/number.js';\nimport { factory } from '../../utils/factory.js';\nimport { complexEquals } from '../../utils/complex.js';\nvar name = 'equalScalar';\nvar dependencies = ['typed', 'config'];\nexport var createEqualScalar = /* #__PURE__ */factory(name, dependencies, (_ref) => {\n  var {\n    typed,\n    config\n  } = _ref;\n\n  /**\n   * Test whether two scalar values are nearly equal.\n   *\n   * @param  {number | BigNumber | Fraction | boolean | Complex | Unit} x   First value to compare\n   * @param  {number | BigNumber | Fraction | boolean | Complex} y          Second value to compare\n   * @return {boolean}                                                  Returns true when the compared values are equal, else returns false\n   * @private\n   */\n  return typed(name, {\n    'boolean, boolean': function booleanBoolean(x, y) {\n      return x === y;\n    },\n    'number, number': function numberNumber(x, y) {\n      return nearlyEqual(x, y, config.epsilon);\n    },\n    'BigNumber, BigNumber': function BigNumberBigNumber(x, y) {\n      return x.eq(y) || bigNearlyEqual(x, y, config.epsilon);\n    },\n    'Fraction, Fraction': function FractionFraction(x, y) {\n      return x.equals(y);\n    },\n    'Complex, Complex': function ComplexComplex(x, y) {\n      return complexEquals(x, y, config.epsilon);\n    },\n    'Unit, Unit': function UnitUnit(x, y) {\n      if (!x.equalBase(y)) {\n        throw new Error('Cannot compare units with different base');\n      }\n\n      return this(x.value, y.value);\n    }\n  });\n});\nexport var createEqualScalarNumber = factory(name, ['typed', 'config'], (_ref2) => {\n  var {\n    typed,\n    config\n  } = _ref2;\n  return typed(name, {\n    'number, number': function numberNumber(x, y) {\n      return nearlyEqual(x, y, config.epsilon);\n    }\n  });\n});","import { nearlyEqual } from './number.js';\n/**\n * Test whether two complex values are equal provided a given epsilon.\n * Does not use or change the global Complex.EPSILON setting\n * @param {Complex} x\n * @param {Complex} y\n * @param {number} epsilon\n * @returns {boolean}\n */\n\nexport function complexEquals(x, y, epsilon) {\n  return nearlyEqual(x.re, y.re, epsilon) && nearlyEqual(x.im, y.im, epsilon);\n}","import { isArray, isBigNumber, isCollection, isIndex, isMatrix, isNumber, isString, typeOf } from '../../utils/is.js';\nimport { isInteger } from '../../utils/number.js';\nimport { format } from '../../utils/string.js';\nimport { clone, deepStrictEqual } from '../../utils/object.js';\nimport { arraySize, getArrayDataType, unsqueeze, validateIndex } from '../../utils/array.js';\nimport { factory } from '../../utils/factory.js';\nimport { DimensionError } from '../../error/DimensionError.js';\nvar name = 'SparseMatrix';\nvar dependencies = ['typed', 'equalScalar', 'Matrix'];\nexport var createSparseMatrixClass = /* #__PURE__ */factory(name, dependencies, (_ref) => {\n  var {\n    typed,\n    equalScalar,\n    Matrix\n  } = _ref;\n\n  /**\n   * Sparse Matrix implementation. This type implements a Compressed Column Storage format\n   * for sparse matrices.\n   * @class SparseMatrix\n   */\n  function SparseMatrix(data, datatype) {\n    if (!(this instanceof SparseMatrix)) {\n      throw new SyntaxError('Constructor must be called with the new operator');\n    }\n\n    if (datatype && !isString(datatype)) {\n      throw new Error('Invalid datatype: ' + datatype);\n    }\n\n    if (isMatrix(data)) {\n      // create from matrix\n      _createFromMatrix(this, data, datatype);\n    } else if (data && isArray(data.index) && isArray(data.ptr) && isArray(data.size)) {\n      // initialize fields\n      this._values = data.values;\n      this._index = data.index;\n      this._ptr = data.ptr;\n      this._size = data.size;\n      this._datatype = datatype || data.datatype;\n    } else if (isArray(data)) {\n      // create from array\n      _createFromArray(this, data, datatype);\n    } else if (data) {\n      // unsupported type\n      throw new TypeError('Unsupported type of data (' + typeOf(data) + ')');\n    } else {\n      // nothing provided\n      this._values = [];\n      this._index = [];\n      this._ptr = [0];\n      this._size = [0, 0];\n      this._datatype = datatype;\n    }\n  }\n\n  function _createFromMatrix(matrix, source, datatype) {\n    // check matrix type\n    if (source.type === 'SparseMatrix') {\n      // clone arrays\n      matrix._values = source._values ? clone(source._values) : undefined;\n      matrix._index = clone(source._index);\n      matrix._ptr = clone(source._ptr);\n      matrix._size = clone(source._size);\n      matrix._datatype = datatype || source._datatype;\n    } else {\n      // build from matrix data\n      _createFromArray(matrix, source.valueOf(), datatype || source._datatype);\n    }\n  }\n\n  function _createFromArray(matrix, data, datatype) {\n    // initialize fields\n    matrix._values = [];\n    matrix._index = [];\n    matrix._ptr = [];\n    matrix._datatype = datatype; // discover rows & columns, do not use math.size() to avoid looping array twice\n\n    var rows = data.length;\n    var columns = 0; // equal signature to use\n\n    var eq = equalScalar; // zero value\n\n    var zero = 0;\n\n    if (isString(datatype)) {\n      // find signature that matches (datatype, datatype)\n      eq = typed.find(equalScalar, [datatype, datatype]) || equalScalar; // convert 0 to the same datatype\n\n      zero = typed.convert(0, datatype);\n    } // check we have rows (empty array)\n\n\n    if (rows > 0) {\n      // column index\n      var j = 0;\n\n      do {\n        // store pointer to values index\n        matrix._ptr.push(matrix._index.length); // loop rows\n\n\n        for (var i = 0; i < rows; i++) {\n          // current row\n          var row = data[i]; // check row is an array\n\n          if (isArray(row)) {\n            // update columns if needed (only on first column)\n            if (j === 0 && columns < row.length) {\n              columns = row.length;\n            } // check row has column\n\n\n            if (j < row.length) {\n              // value\n              var v = row[j]; // check value != 0\n\n              if (!eq(v, zero)) {\n                // store value\n                matrix._values.push(v); // index\n\n\n                matrix._index.push(i);\n              }\n            }\n          } else {\n            // update columns if needed (only on first column)\n            if (j === 0 && columns < 1) {\n              columns = 1;\n            } // check value != 0 (row is a scalar)\n\n\n            if (!eq(row, zero)) {\n              // store value\n              matrix._values.push(row); // index\n\n\n              matrix._index.push(i);\n            }\n          }\n        } // increment index\n\n\n        j++;\n      } while (j < columns);\n    } // store number of values in ptr\n\n\n    matrix._ptr.push(matrix._index.length); // size\n\n\n    matrix._size = [rows, columns];\n  }\n\n  SparseMatrix.prototype = new Matrix();\n  /**\n   * Create a new SparseMatrix\n   */\n\n  SparseMatrix.prototype.createSparseMatrix = function (data, datatype) {\n    return new SparseMatrix(data, datatype);\n  };\n  /**\n   * Attach type information\n   */\n\n\n  SparseMatrix.prototype.type = 'SparseMatrix';\n  SparseMatrix.prototype.isSparseMatrix = true;\n  /**\n   * Get the matrix type\n   *\n   * Usage:\n   *    const matrixType = matrix.getDataType()  // retrieves the matrix type\n   *\n   * @memberOf SparseMatrix\n   * @return {string}   type information; if multiple types are found from the Matrix, it will return \"mixed\"\n   */\n\n  SparseMatrix.prototype.getDataType = function () {\n    return getArrayDataType(this._values, typeOf);\n  };\n  /**\n   * Get the storage format used by the matrix.\n   *\n   * Usage:\n   *     const format = matrix.storage()   // retrieve storage format\n   *\n   * @memberof SparseMatrix\n   * @return {string}           The storage format.\n   */\n\n\n  SparseMatrix.prototype.storage = function () {\n    return 'sparse';\n  };\n  /**\n   * Get the datatype of the data stored in the matrix.\n   *\n   * Usage:\n   *     const format = matrix.datatype()    // retrieve matrix datatype\n   *\n   * @memberof SparseMatrix\n   * @return {string}           The datatype.\n   */\n\n\n  SparseMatrix.prototype.datatype = function () {\n    return this._datatype;\n  };\n  /**\n   * Create a new SparseMatrix\n   * @memberof SparseMatrix\n   * @param {Array} data\n   * @param {string} [datatype]\n   */\n\n\n  SparseMatrix.prototype.create = function (data, datatype) {\n    return new SparseMatrix(data, datatype);\n  };\n  /**\n   * Get the matrix density.\n   *\n   * Usage:\n   *     const density = matrix.density()                   // retrieve matrix density\n   *\n   * @memberof SparseMatrix\n   * @return {number}           The matrix density.\n   */\n\n\n  SparseMatrix.prototype.density = function () {\n    // rows & columns\n    var rows = this._size[0];\n    var columns = this._size[1]; // calculate density\n\n    return rows !== 0 && columns !== 0 ? this._index.length / (rows * columns) : 0;\n  };\n  /**\n   * Get a subset of the matrix, or replace a subset of the matrix.\n   *\n   * Usage:\n   *     const subset = matrix.subset(index)               // retrieve subset\n   *     const value = matrix.subset(index, replacement)   // replace subset\n   *\n   * @memberof SparseMatrix\n   * @param {Index} index\n   * @param {Array | Matrix | *} [replacement]\n   * @param {*} [defaultValue=0]      Default value, filled in on new entries when\n   *                                  the matrix is resized. If not provided,\n   *                                  new matrix elements will be filled with zeros.\n   */\n\n\n  SparseMatrix.prototype.subset = function (index, replacement, defaultValue) {\n    // check it is a pattern matrix\n    if (!this._values) {\n      throw new Error('Cannot invoke subset on a Pattern only matrix');\n    } // check arguments\n\n\n    switch (arguments.length) {\n      case 1:\n        return _getsubset(this, index);\n      // intentional fall through\n\n      case 2:\n      case 3:\n        return _setsubset(this, index, replacement, defaultValue);\n\n      default:\n        throw new SyntaxError('Wrong number of arguments');\n    }\n  };\n\n  function _getsubset(matrix, idx) {\n    // check idx\n    if (!isIndex(idx)) {\n      throw new TypeError('Invalid index');\n    }\n\n    var isScalar = idx.isScalar();\n\n    if (isScalar) {\n      // return a scalar\n      return matrix.get(idx.min());\n    } // validate dimensions\n\n\n    var size = idx.size();\n\n    if (size.length !== matrix._size.length) {\n      throw new DimensionError(size.length, matrix._size.length);\n    } // vars\n\n\n    var i, ii, k, kk; // validate if any of the ranges in the index is out of range\n\n    var min = idx.min();\n    var max = idx.max();\n\n    for (i = 0, ii = matrix._size.length; i < ii; i++) {\n      validateIndex(min[i], matrix._size[i]);\n      validateIndex(max[i], matrix._size[i]);\n    } // matrix arrays\n\n\n    var mvalues = matrix._values;\n    var mindex = matrix._index;\n    var mptr = matrix._ptr; // rows & columns dimensions for result matrix\n\n    var rows = idx.dimension(0);\n    var columns = idx.dimension(1); // workspace & permutation vector\n\n    var w = [];\n    var pv = []; // loop rows in resulting matrix\n\n    rows.forEach(function (i, r) {\n      // update permutation vector\n      pv[i] = r[0]; // mark i in workspace\n\n      w[i] = true;\n    }); // result matrix arrays\n\n    var values = mvalues ? [] : undefined;\n    var index = [];\n    var ptr = []; // loop columns in result matrix\n\n    columns.forEach(function (j) {\n      // update ptr\n      ptr.push(index.length); // loop values in column j\n\n      for (k = mptr[j], kk = mptr[j + 1]; k < kk; k++) {\n        // row\n        i = mindex[k]; // check row is in result matrix\n\n        if (w[i] === true) {\n          // push index\n          index.push(pv[i]); // check we need to process values\n\n          if (values) {\n            values.push(mvalues[k]);\n          }\n        }\n      }\n    }); // update ptr\n\n    ptr.push(index.length); // return matrix\n\n    return new SparseMatrix({\n      values: values,\n      index: index,\n      ptr: ptr,\n      size: size,\n      datatype: matrix._datatype\n    });\n  }\n\n  function _setsubset(matrix, index, submatrix, defaultValue) {\n    // check index\n    if (!index || index.isIndex !== true) {\n      throw new TypeError('Invalid index');\n    } // get index size and check whether the index contains a single value\n\n\n    var iSize = index.size();\n    var isScalar = index.isScalar(); // calculate the size of the submatrix, and convert it into an Array if needed\n\n    var sSize;\n\n    if (isMatrix(submatrix)) {\n      // submatrix size\n      sSize = submatrix.size(); // use array representation\n\n      submatrix = submatrix.toArray();\n    } else {\n      // get submatrix size (array, scalar)\n      sSize = arraySize(submatrix);\n    } // check index is a scalar\n\n\n    if (isScalar) {\n      // verify submatrix is a scalar\n      if (sSize.length !== 0) {\n        throw new TypeError('Scalar expected');\n      } // set value\n\n\n      matrix.set(index.min(), submatrix, defaultValue);\n    } else {\n      // validate dimensions, index size must be one or two dimensions\n      if (iSize.length !== 1 && iSize.length !== 2) {\n        throw new DimensionError(iSize.length, matrix._size.length, '<');\n      } // check submatrix and index have the same dimensions\n\n\n      if (sSize.length < iSize.length) {\n        // calculate number of missing outer dimensions\n        var i = 0;\n        var outer = 0;\n\n        while (iSize[i] === 1 && sSize[i] === 1) {\n          i++;\n        }\n\n        while (iSize[i] === 1) {\n          outer++;\n          i++;\n        } // unsqueeze both outer and inner dimensions\n\n\n        submatrix = unsqueeze(submatrix, iSize.length, outer, sSize);\n      } // check whether the size of the submatrix matches the index size\n\n\n      if (!deepStrictEqual(iSize, sSize)) {\n        throw new DimensionError(iSize, sSize, '>');\n      } // offsets\n\n\n      var x0 = index.min()[0];\n      var y0 = index.min()[1]; // submatrix rows and columns\n\n      var m = sSize[0];\n      var n = sSize[1]; // loop submatrix\n\n      for (var x = 0; x < m; x++) {\n        // loop columns\n        for (var y = 0; y < n; y++) {\n          // value at i, j\n          var v = submatrix[x][y]; // invoke set (zero value will remove entry from matrix)\n\n          matrix.set([x + x0, y + y0], v, defaultValue);\n        }\n      }\n    }\n\n    return matrix;\n  }\n  /**\n   * Get a single element from the matrix.\n   * @memberof SparseMatrix\n   * @param {number[]} index   Zero-based index\n   * @return {*} value\n   */\n\n\n  SparseMatrix.prototype.get = function (index) {\n    if (!isArray(index)) {\n      throw new TypeError('Array expected');\n    }\n\n    if (index.length !== this._size.length) {\n      throw new DimensionError(index.length, this._size.length);\n    } // check it is a pattern matrix\n\n\n    if (!this._values) {\n      throw new Error('Cannot invoke get on a Pattern only matrix');\n    } // row and column\n\n\n    var i = index[0];\n    var j = index[1]; // check i, j are valid\n\n    validateIndex(i, this._size[0]);\n    validateIndex(j, this._size[1]); // find value index\n\n    var k = _getValueIndex(i, this._ptr[j], this._ptr[j + 1], this._index); // check k is prior to next column k and it is in the correct row\n\n\n    if (k < this._ptr[j + 1] && this._index[k] === i) {\n      return this._values[k];\n    }\n\n    return 0;\n  };\n  /**\n   * Replace a single element in the matrix.\n   * @memberof SparseMatrix\n   * @param {number[]} index   Zero-based index\n   * @param {*} v\n   * @param {*} [defaultValue]        Default value, filled in on new entries when\n   *                                  the matrix is resized. If not provided,\n   *                                  new matrix elements will be set to zero.\n   * @return {SparseMatrix} self\n   */\n\n\n  SparseMatrix.prototype.set = function (index, v, defaultValue) {\n    if (!isArray(index)) {\n      throw new TypeError('Array expected');\n    }\n\n    if (index.length !== this._size.length) {\n      throw new DimensionError(index.length, this._size.length);\n    } // check it is a pattern matrix\n\n\n    if (!this._values) {\n      throw new Error('Cannot invoke set on a Pattern only matrix');\n    } // row and column\n\n\n    var i = index[0];\n    var j = index[1]; // rows & columns\n\n    var rows = this._size[0];\n    var columns = this._size[1]; // equal signature to use\n\n    var eq = equalScalar; // zero value\n\n    var zero = 0;\n\n    if (isString(this._datatype)) {\n      // find signature that matches (datatype, datatype)\n      eq = typed.find(equalScalar, [this._datatype, this._datatype]) || equalScalar; // convert 0 to the same datatype\n\n      zero = typed.convert(0, this._datatype);\n    } // check we need to resize matrix\n\n\n    if (i > rows - 1 || j > columns - 1) {\n      // resize matrix\n      _resize(this, Math.max(i + 1, rows), Math.max(j + 1, columns), defaultValue); // update rows & columns\n\n\n      rows = this._size[0];\n      columns = this._size[1];\n    } // check i, j are valid\n\n\n    validateIndex(i, rows);\n    validateIndex(j, columns); // find value index\n\n    var k = _getValueIndex(i, this._ptr[j], this._ptr[j + 1], this._index); // check k is prior to next column k and it is in the correct row\n\n\n    if (k < this._ptr[j + 1] && this._index[k] === i) {\n      // check value != 0\n      if (!eq(v, zero)) {\n        // update value\n        this._values[k] = v;\n      } else {\n        // remove value from matrix\n        _remove(k, j, this._values, this._index, this._ptr);\n      }\n    } else {\n      // insert value @ (i, j)\n      _insert(k, i, j, v, this._values, this._index, this._ptr);\n    }\n\n    return this;\n  };\n\n  function _getValueIndex(i, top, bottom, index) {\n    // check row is on the bottom side\n    if (bottom - top === 0) {\n      return bottom;\n    } // loop rows [top, bottom[\n\n\n    for (var r = top; r < bottom; r++) {\n      // check we found value index\n      if (index[r] === i) {\n        return r;\n      }\n    } // we did not find row\n\n\n    return top;\n  }\n\n  function _remove(k, j, values, index, ptr) {\n    // remove value @ k\n    values.splice(k, 1);\n    index.splice(k, 1); // update pointers\n\n    for (var x = j + 1; x < ptr.length; x++) {\n      ptr[x]--;\n    }\n  }\n\n  function _insert(k, i, j, v, values, index, ptr) {\n    // insert value\n    values.splice(k, 0, v); // update row for k\n\n    index.splice(k, 0, i); // update column pointers\n\n    for (var x = j + 1; x < ptr.length; x++) {\n      ptr[x]++;\n    }\n  }\n  /**\n   * Resize the matrix to the given size. Returns a copy of the matrix when\n   * `copy=true`, otherwise return the matrix itself (resize in place).\n   *\n   * @memberof SparseMatrix\n   * @param {number[] | Matrix} size  The new size the matrix should have.\n   * @param {*} [defaultValue=0]      Default value, filled in on new entries.\n   *                                  If not provided, the matrix elements will\n   *                                  be filled with zeros.\n   * @param {boolean} [copy]          Return a resized copy of the matrix\n   *\n   * @return {Matrix}                 The resized matrix\n   */\n\n\n  SparseMatrix.prototype.resize = function (size, defaultValue, copy) {\n    // validate arguments\n    if (!isCollection(size)) {\n      throw new TypeError('Array or Matrix expected');\n    } // SparseMatrix input is always 2d, flatten this into 1d if it's indeed a vector\n\n\n    var sizeArray = size.valueOf().map(value => {\n      return Array.isArray(value) && value.length === 1 ? value[0] : value;\n    });\n\n    if (sizeArray.length !== 2) {\n      throw new Error('Only two dimensions matrix are supported');\n    } // check sizes\n\n\n    sizeArray.forEach(function (value) {\n      if (!isNumber(value) || !isInteger(value) || value < 0) {\n        throw new TypeError('Invalid size, must contain positive integers ' + '(size: ' + format(sizeArray) + ')');\n      }\n    }); // matrix to resize\n\n    var m = copy ? this.clone() : this; // resize matrix\n\n    return _resize(m, sizeArray[0], sizeArray[1], defaultValue);\n  };\n\n  function _resize(matrix, rows, columns, defaultValue) {\n    // value to insert at the time of growing matrix\n    var value = defaultValue || 0; // equal signature to use\n\n    var eq = equalScalar; // zero value\n\n    var zero = 0;\n\n    if (isString(matrix._datatype)) {\n      // find signature that matches (datatype, datatype)\n      eq = typed.find(equalScalar, [matrix._datatype, matrix._datatype]) || equalScalar; // convert 0 to the same datatype\n\n      zero = typed.convert(0, matrix._datatype); // convert value to the same datatype\n\n      value = typed.convert(value, matrix._datatype);\n    } // should we insert the value?\n\n\n    var ins = !eq(value, zero); // old columns and rows\n\n    var r = matrix._size[0];\n    var c = matrix._size[1];\n    var i, j, k; // check we need to increase columns\n\n    if (columns > c) {\n      // loop new columns\n      for (j = c; j < columns; j++) {\n        // update matrix._ptr for current column\n        matrix._ptr[j] = matrix._values.length; // check we need to insert matrix._values\n\n        if (ins) {\n          // loop rows\n          for (i = 0; i < r; i++) {\n            // add new matrix._values\n            matrix._values.push(value); // update matrix._index\n\n\n            matrix._index.push(i);\n          }\n        }\n      } // store number of matrix._values in matrix._ptr\n\n\n      matrix._ptr[columns] = matrix._values.length;\n    } else if (columns < c) {\n      // truncate matrix._ptr\n      matrix._ptr.splice(columns + 1, c - columns); // truncate matrix._values and matrix._index\n\n\n      matrix._values.splice(matrix._ptr[columns], matrix._values.length);\n\n      matrix._index.splice(matrix._ptr[columns], matrix._index.length);\n    } // update columns\n\n\n    c = columns; // check we need to increase rows\n\n    if (rows > r) {\n      // check we have to insert values\n      if (ins) {\n        // inserts\n        var n = 0; // loop columns\n\n        for (j = 0; j < c; j++) {\n          // update matrix._ptr for current column\n          matrix._ptr[j] = matrix._ptr[j] + n; // where to insert matrix._values\n\n          k = matrix._ptr[j + 1] + n; // pointer\n\n          var p = 0; // loop new rows, initialize pointer\n\n          for (i = r; i < rows; i++, p++) {\n            // add value\n            matrix._values.splice(k + p, 0, value); // update matrix._index\n\n\n            matrix._index.splice(k + p, 0, i); // increment inserts\n\n\n            n++;\n          }\n        } // store number of matrix._values in matrix._ptr\n\n\n        matrix._ptr[c] = matrix._values.length;\n      }\n    } else if (rows < r) {\n      // deletes\n      var d = 0; // loop columns\n\n      for (j = 0; j < c; j++) {\n        // update matrix._ptr for current column\n        matrix._ptr[j] = matrix._ptr[j] - d; // where matrix._values start for next column\n\n        var k0 = matrix._ptr[j];\n        var k1 = matrix._ptr[j + 1] - d; // loop matrix._index\n\n        for (k = k0; k < k1; k++) {\n          // row\n          i = matrix._index[k]; // check we need to delete value and matrix._index\n\n          if (i > rows - 1) {\n            // remove value\n            matrix._values.splice(k, 1); // remove item from matrix._index\n\n\n            matrix._index.splice(k, 1); // increase deletes\n\n\n            d++;\n          }\n        }\n      } // update matrix._ptr for current column\n\n\n      matrix._ptr[j] = matrix._values.length;\n    } // update matrix._size\n\n\n    matrix._size[0] = rows;\n    matrix._size[1] = columns; // return matrix\n\n    return matrix;\n  }\n  /**\n   * Reshape the matrix to the given size. Returns a copy of the matrix when\n   * `copy=true`, otherwise return the matrix itself (reshape in place).\n   *\n   * NOTE: This might be better suited to copy by default, instead of modifying\n   *       in place. For now, it operates in place to remain consistent with\n   *       resize().\n   *\n   * @memberof SparseMatrix\n   * @param {number[]} size           The new size the matrix should have.\n   * @param {boolean} [copy]          Return a reshaped copy of the matrix\n   *\n   * @return {Matrix}                 The reshaped matrix\n   */\n\n\n  SparseMatrix.prototype.reshape = function (size, copy) {\n    // validate arguments\n    if (!isArray(size)) {\n      throw new TypeError('Array expected');\n    }\n\n    if (size.length !== 2) {\n      throw new Error('Sparse matrices can only be reshaped in two dimensions');\n    } // check sizes\n\n\n    size.forEach(function (value) {\n      if (!isNumber(value) || !isInteger(value) || value < 0) {\n        throw new TypeError('Invalid size, must contain positive integers ' + '(size: ' + format(size) + ')');\n      }\n    }); // m * n must not change\n\n    if (this._size[0] * this._size[1] !== size[0] * size[1]) {\n      throw new Error('Reshaping sparse matrix will result in the wrong number of elements');\n    } // matrix to reshape\n\n\n    var m = copy ? this.clone() : this; // return unchanged if the same shape\n\n    if (this._size[0] === size[0] && this._size[1] === size[1]) {\n      return m;\n    } // Convert to COO format (generate a column index)\n\n\n    var colIndex = [];\n\n    for (var i = 0; i < m._ptr.length; i++) {\n      for (var j = 0; j < m._ptr[i + 1] - m._ptr[i]; j++) {\n        colIndex.push(i);\n      }\n    } // Clone the values array\n\n\n    var values = m._values.slice(); // Clone the row index array\n\n\n    var rowIndex = m._index.slice(); // Transform the (row, column) indices\n\n\n    for (var _i = 0; _i < m._index.length; _i++) {\n      var r1 = rowIndex[_i];\n      var c1 = colIndex[_i];\n      var flat = r1 * m._size[1] + c1;\n      colIndex[_i] = flat % size[1];\n      rowIndex[_i] = Math.floor(flat / size[1]);\n    } // Now reshaping is supposed to preserve the row-major order, BUT these sparse matrices are stored\n    // in column-major order, so we have to reorder the value array now. One option is to use a multisort,\n    // sorting several arrays based on some other array.\n    // OR, we could easily just:\n    // 1. Remove all values from the matrix\n\n\n    m._values.length = 0;\n    m._index.length = 0;\n    m._ptr.length = size[1] + 1;\n    m._size = size.slice();\n\n    for (var _i2 = 0; _i2 < m._ptr.length; _i2++) {\n      m._ptr[_i2] = 0;\n    } // 2. Re-insert all elements in the proper order (simplified code from SparseMatrix.prototype.set)\n    // This step is probably the most time-consuming\n\n\n    for (var h = 0; h < values.length; h++) {\n      var _i3 = rowIndex[h];\n      var _j = colIndex[h];\n      var v = values[h];\n\n      var k = _getValueIndex(_i3, m._ptr[_j], m._ptr[_j + 1], m._index);\n\n      _insert(k, _i3, _j, v, m._values, m._index, m._ptr);\n    } // The value indices are inserted out of order, but apparently that's... still OK?\n\n\n    return m;\n  };\n  /**\n   * Create a clone of the matrix\n   * @memberof SparseMatrix\n   * @return {SparseMatrix} clone\n   */\n\n\n  SparseMatrix.prototype.clone = function () {\n    var m = new SparseMatrix({\n      values: this._values ? clone(this._values) : undefined,\n      index: clone(this._index),\n      ptr: clone(this._ptr),\n      size: clone(this._size),\n      datatype: this._datatype\n    });\n    return m;\n  };\n  /**\n   * Retrieve the size of the matrix.\n   * @memberof SparseMatrix\n   * @returns {number[]} size\n   */\n\n\n  SparseMatrix.prototype.size = function () {\n    return this._size.slice(0); // copy the Array\n  };\n  /**\n   * Create a new matrix with the results of the callback function executed on\n   * each entry of the matrix.\n   * @memberof SparseMatrix\n   * @param {Function} callback   The callback function is invoked with three\n   *                              parameters: the value of the element, the index\n   *                              of the element, and the Matrix being traversed.\n   * @param {boolean} [skipZeros] Invoke callback function for non-zero values only.\n   *\n   * @return {SparseMatrix} matrix\n   */\n\n\n  SparseMatrix.prototype.map = function (callback, skipZeros) {\n    // check it is a pattern matrix\n    if (!this._values) {\n      throw new Error('Cannot invoke map on a Pattern only matrix');\n    } // matrix instance\n\n\n    var me = this; // rows and columns\n\n    var rows = this._size[0];\n    var columns = this._size[1]; // invoke callback\n\n    var invoke = function invoke(v, i, j) {\n      // invoke callback\n      return callback(v, [i, j], me);\n    }; // invoke _map\n\n\n    return _map(this, 0, rows - 1, 0, columns - 1, invoke, skipZeros);\n  };\n  /**\n   * Create a new matrix with the results of the callback function executed on the interval\n   * [minRow..maxRow, minColumn..maxColumn].\n   */\n\n\n  function _map(matrix, minRow, maxRow, minColumn, maxColumn, callback, skipZeros) {\n    // result arrays\n    var values = [];\n    var index = [];\n    var ptr = []; // equal signature to use\n\n    var eq = equalScalar; // zero value\n\n    var zero = 0;\n\n    if (isString(matrix._datatype)) {\n      // find signature that matches (datatype, datatype)\n      eq = typed.find(equalScalar, [matrix._datatype, matrix._datatype]) || equalScalar; // convert 0 to the same datatype\n\n      zero = typed.convert(0, matrix._datatype);\n    } // invoke callback\n\n\n    var invoke = function invoke(v, x, y) {\n      // invoke callback\n      v = callback(v, x, y); // check value != 0\n\n      if (!eq(v, zero)) {\n        // store value\n        values.push(v); // index\n\n        index.push(x);\n      }\n    }; // loop columns\n\n\n    for (var j = minColumn; j <= maxColumn; j++) {\n      // store pointer to values index\n      ptr.push(values.length); // k0 <= k < k1 where k0 = _ptr[j] && k1 = _ptr[j+1]\n\n      var k0 = matrix._ptr[j];\n      var k1 = matrix._ptr[j + 1];\n\n      if (skipZeros) {\n        // loop k within [k0, k1[\n        for (var k = k0; k < k1; k++) {\n          // row index\n          var i = matrix._index[k]; // check i is in range\n\n          if (i >= minRow && i <= maxRow) {\n            // value @ k\n            invoke(matrix._values[k], i - minRow, j - minColumn);\n          }\n        }\n      } else {\n        // create a cache holding all defined values\n        var _values = {};\n\n        for (var _k = k0; _k < k1; _k++) {\n          var _i4 = matrix._index[_k];\n          _values[_i4] = matrix._values[_k];\n        } // loop over all rows (indexes can be unordered so we can't use that),\n        // and either read the value or zero\n\n\n        for (var _i5 = minRow; _i5 <= maxRow; _i5++) {\n          var value = _i5 in _values ? _values[_i5] : 0;\n          invoke(value, _i5 - minRow, j - minColumn);\n        }\n      }\n    } // store number of values in ptr\n\n\n    ptr.push(values.length); // return sparse matrix\n\n    return new SparseMatrix({\n      values: values,\n      index: index,\n      ptr: ptr,\n      size: [maxRow - minRow + 1, maxColumn - minColumn + 1]\n    });\n  }\n  /**\n   * Execute a callback function on each entry of the matrix.\n   * @memberof SparseMatrix\n   * @param {Function} callback   The callback function is invoked with three\n   *                              parameters: the value of the element, the index\n   *                              of the element, and the Matrix being traversed.\n   * @param {boolean} [skipZeros] Invoke callback function for non-zero values only.\n   */\n\n\n  SparseMatrix.prototype.forEach = function (callback, skipZeros) {\n    // check it is a pattern matrix\n    if (!this._values) {\n      throw new Error('Cannot invoke forEach on a Pattern only matrix');\n    } // matrix instance\n\n\n    var me = this; // rows and columns\n\n    var rows = this._size[0];\n    var columns = this._size[1]; // loop columns\n\n    for (var j = 0; j < columns; j++) {\n      // k0 <= k < k1 where k0 = _ptr[j] && k1 = _ptr[j+1]\n      var k0 = this._ptr[j];\n      var k1 = this._ptr[j + 1];\n\n      if (skipZeros) {\n        // loop k within [k0, k1[\n        for (var k = k0; k < k1; k++) {\n          // row index\n          var i = this._index[k]; // value @ k\n\n          callback(this._values[k], [i, j], me);\n        }\n      } else {\n        // create a cache holding all defined values\n        var values = {};\n\n        for (var _k2 = k0; _k2 < k1; _k2++) {\n          var _i6 = this._index[_k2];\n          values[_i6] = this._values[_k2];\n        } // loop over all rows (indexes can be unordered so we can't use that),\n        // and either read the value or zero\n\n\n        for (var _i7 = 0; _i7 < rows; _i7++) {\n          var value = _i7 in values ? values[_i7] : 0;\n          callback(value, [_i7, j], me);\n        }\n      }\n    }\n  };\n  /**\n   * Create an Array with a copy of the data of the SparseMatrix\n   * @memberof SparseMatrix\n   * @returns {Array} array\n   */\n\n\n  SparseMatrix.prototype.toArray = function () {\n    return _toArray(this._values, this._index, this._ptr, this._size, true);\n  };\n  /**\n   * Get the primitive value of the SparseMatrix: a two dimensions array\n   * @memberof SparseMatrix\n   * @returns {Array} array\n   */\n\n\n  SparseMatrix.prototype.valueOf = function () {\n    return _toArray(this._values, this._index, this._ptr, this._size, false);\n  };\n\n  function _toArray(values, index, ptr, size, copy) {\n    // rows and columns\n    var rows = size[0];\n    var columns = size[1]; // result\n\n    var a = []; // vars\n\n    var i, j; // initialize array\n\n    for (i = 0; i < rows; i++) {\n      a[i] = [];\n\n      for (j = 0; j < columns; j++) {\n        a[i][j] = 0;\n      }\n    } // loop columns\n\n\n    for (j = 0; j < columns; j++) {\n      // k0 <= k < k1 where k0 = _ptr[j] && k1 = _ptr[j+1]\n      var k0 = ptr[j];\n      var k1 = ptr[j + 1]; // loop k within [k0, k1[\n\n      for (var k = k0; k < k1; k++) {\n        // row index\n        i = index[k]; // set value (use one for pattern matrix)\n\n        a[i][j] = values ? copy ? clone(values[k]) : values[k] : 1;\n      }\n    }\n\n    return a;\n  }\n  /**\n   * Get a string representation of the matrix, with optional formatting options.\n   * @memberof SparseMatrix\n   * @param {Object | number | Function} [options]  Formatting options. See\n   *                                                lib/utils/number:format for a\n   *                                                description of the available\n   *                                                options.\n   * @returns {string} str\n   */\n\n\n  SparseMatrix.prototype.format = function (options) {\n    // rows and columns\n    var rows = this._size[0];\n    var columns = this._size[1]; // density\n\n    var density = this.density(); // rows & columns\n\n    var str = 'Sparse Matrix [' + format(rows, options) + ' x ' + format(columns, options) + '] density: ' + format(density, options) + '\\n'; // loop columns\n\n    for (var j = 0; j < columns; j++) {\n      // k0 <= k < k1 where k0 = _ptr[j] && k1 = _ptr[j+1]\n      var k0 = this._ptr[j];\n      var k1 = this._ptr[j + 1]; // loop k within [k0, k1[\n\n      for (var k = k0; k < k1; k++) {\n        // row index\n        var i = this._index[k]; // append value\n\n        str += '\\n    (' + format(i, options) + ', ' + format(j, options) + ') ==> ' + (this._values ? format(this._values[k], options) : 'X');\n      }\n    }\n\n    return str;\n  };\n  /**\n   * Get a string representation of the matrix\n   * @memberof SparseMatrix\n   * @returns {string} str\n   */\n\n\n  SparseMatrix.prototype.toString = function () {\n    return format(this.toArray());\n  };\n  /**\n   * Get a JSON representation of the matrix\n   * @memberof SparseMatrix\n   * @returns {Object}\n   */\n\n\n  SparseMatrix.prototype.toJSON = function () {\n    return {\n      mathjs: 'SparseMatrix',\n      values: this._values,\n      index: this._index,\n      ptr: this._ptr,\n      size: this._size,\n      datatype: this._datatype\n    };\n  };\n  /**\n   * Get the kth Matrix diagonal.\n   *\n   * @memberof SparseMatrix\n   * @param {number | BigNumber} [k=0]     The kth diagonal where the vector will retrieved.\n   *\n   * @returns {Matrix}                     The matrix vector with the diagonal values.\n   */\n\n\n  SparseMatrix.prototype.diagonal = function (k) {\n    // validate k if any\n    if (k) {\n      // convert BigNumber to a number\n      if (isBigNumber(k)) {\n        k = k.toNumber();\n      } // is must be an integer\n\n\n      if (!isNumber(k) || !isInteger(k)) {\n        throw new TypeError('The parameter k must be an integer number');\n      }\n    } else {\n      // default value\n      k = 0;\n    }\n\n    var kSuper = k > 0 ? k : 0;\n    var kSub = k < 0 ? -k : 0; // rows & columns\n\n    var rows = this._size[0];\n    var columns = this._size[1]; // number diagonal values\n\n    var n = Math.min(rows - kSub, columns - kSuper); // diagonal arrays\n\n    var values = [];\n    var index = [];\n    var ptr = []; // initial ptr value\n\n    ptr[0] = 0; // loop columns\n\n    for (var j = kSuper; j < columns && values.length < n; j++) {\n      // k0 <= k < k1 where k0 = _ptr[j] && k1 = _ptr[j+1]\n      var k0 = this._ptr[j];\n      var k1 = this._ptr[j + 1]; // loop x within [k0, k1[\n\n      for (var x = k0; x < k1; x++) {\n        // row index\n        var i = this._index[x]; // check row\n\n        if (i === j - kSuper + kSub) {\n          // value on this column\n          values.push(this._values[x]); // store row\n\n          index[values.length - 1] = i - kSub; // exit loop\n\n          break;\n        }\n      }\n    } // close ptr\n\n\n    ptr.push(values.length); // return matrix\n\n    return new SparseMatrix({\n      values: values,\n      index: index,\n      ptr: ptr,\n      size: [n, 1]\n    });\n  };\n  /**\n   * Generate a matrix from a JSON object\n   * @memberof SparseMatrix\n   * @param {Object} json  An object structured like\n   *                       `{\"mathjs\": \"SparseMatrix\", \"values\": [], \"index\": [], \"ptr\": [], \"size\": []}`,\n   *                       where mathjs is optional\n   * @returns {SparseMatrix}\n   */\n\n\n  SparseMatrix.fromJSON = function (json) {\n    return new SparseMatrix(json);\n  };\n  /**\n   * Create a diagonal matrix.\n   *\n   * @memberof SparseMatrix\n   * @param {Array} size                       The matrix size.\n   * @param {number | Array | Matrix } value   The values for the diagonal.\n   * @param {number | BigNumber} [k=0]         The kth diagonal where the vector will be filled in.\n   * @param {number} [defaultValue]            The default value for non-diagonal\n   * @param {string} [datatype]                The Matrix datatype, values must be of this datatype.\n   *\n   * @returns {SparseMatrix}\n   */\n\n\n  SparseMatrix.diagonal = function (size, value, k, defaultValue, datatype) {\n    if (!isArray(size)) {\n      throw new TypeError('Array expected, size parameter');\n    }\n\n    if (size.length !== 2) {\n      throw new Error('Only two dimensions matrix are supported');\n    } // map size & validate\n\n\n    size = size.map(function (s) {\n      // check it is a big number\n      if (isBigNumber(s)) {\n        // convert it\n        s = s.toNumber();\n      } // validate arguments\n\n\n      if (!isNumber(s) || !isInteger(s) || s < 1) {\n        throw new Error('Size values must be positive integers');\n      }\n\n      return s;\n    }); // validate k if any\n\n    if (k) {\n      // convert BigNumber to a number\n      if (isBigNumber(k)) {\n        k = k.toNumber();\n      } // is must be an integer\n\n\n      if (!isNumber(k) || !isInteger(k)) {\n        throw new TypeError('The parameter k must be an integer number');\n      }\n    } else {\n      // default value\n      k = 0;\n    } // equal signature to use\n\n\n    var eq = equalScalar; // zero value\n\n    var zero = 0;\n\n    if (isString(datatype)) {\n      // find signature that matches (datatype, datatype)\n      eq = typed.find(equalScalar, [datatype, datatype]) || equalScalar; // convert 0 to the same datatype\n\n      zero = typed.convert(0, datatype);\n    }\n\n    var kSuper = k > 0 ? k : 0;\n    var kSub = k < 0 ? -k : 0; // rows and columns\n\n    var rows = size[0];\n    var columns = size[1]; // number of non-zero items\n\n    var n = Math.min(rows - kSub, columns - kSuper); // value extraction function\n\n    var _value; // check value\n\n\n    if (isArray(value)) {\n      // validate array\n      if (value.length !== n) {\n        // number of values in array must be n\n        throw new Error('Invalid value array length');\n      } // define function\n\n\n      _value = function _value(i) {\n        // return value @ i\n        return value[i];\n      };\n    } else if (isMatrix(value)) {\n      // matrix size\n      var ms = value.size(); // validate matrix\n\n      if (ms.length !== 1 || ms[0] !== n) {\n        // number of values in array must be n\n        throw new Error('Invalid matrix length');\n      } // define function\n\n\n      _value = function _value(i) {\n        // return value @ i\n        return value.get([i]);\n      };\n    } else {\n      // define function\n      _value = function _value() {\n        // return value\n        return value;\n      };\n    } // create arrays\n\n\n    var values = [];\n    var index = [];\n    var ptr = []; // loop items\n\n    for (var j = 0; j < columns; j++) {\n      // number of rows with value\n      ptr.push(values.length); // diagonal index\n\n      var i = j - kSuper; // check we need to set diagonal value\n\n      if (i >= 0 && i < n) {\n        // get value @ i\n        var v = _value(i); // check for zero\n\n\n        if (!eq(v, zero)) {\n          // column\n          index.push(i + kSub); // add value\n\n          values.push(v);\n        }\n      }\n    } // last value should be number of values\n\n\n    ptr.push(values.length); // create SparseMatrix\n\n    return new SparseMatrix({\n      values: values,\n      index: index,\n      ptr: ptr,\n      size: [rows, columns]\n    });\n  };\n  /**\n   * Swap rows i and j in Matrix.\n   *\n   * @memberof SparseMatrix\n   * @param {number} i       Matrix row index 1\n   * @param {number} j       Matrix row index 2\n   *\n   * @return {Matrix}        The matrix reference\n   */\n\n\n  SparseMatrix.prototype.swapRows = function (i, j) {\n    // check index\n    if (!isNumber(i) || !isInteger(i) || !isNumber(j) || !isInteger(j)) {\n      throw new Error('Row index must be positive integers');\n    } // check dimensions\n\n\n    if (this._size.length !== 2) {\n      throw new Error('Only two dimensional matrix is supported');\n    } // validate index\n\n\n    validateIndex(i, this._size[0]);\n    validateIndex(j, this._size[0]); // swap rows\n\n    SparseMatrix._swapRows(i, j, this._size[1], this._values, this._index, this._ptr); // return current instance\n\n\n    return this;\n  };\n  /**\n   * Loop rows with data in column j.\n   *\n   * @param {number} j            Column\n   * @param {Array} values        Matrix values\n   * @param {Array} index         Matrix row indeces\n   * @param {Array} ptr           Matrix column pointers\n   * @param {Function} callback   Callback function invoked for every row in column j\n   */\n\n\n  SparseMatrix._forEachRow = function (j, values, index, ptr, callback) {\n    // indeces for column j\n    var k0 = ptr[j];\n    var k1 = ptr[j + 1]; // loop\n\n    for (var k = k0; k < k1; k++) {\n      // invoke callback\n      callback(index[k], values[k]);\n    }\n  };\n  /**\n   * Swap rows x and y in Sparse Matrix data structures.\n   *\n   * @param {number} x         Matrix row index 1\n   * @param {number} y         Matrix row index 2\n   * @param {number} columns   Number of columns in matrix\n   * @param {Array} values     Matrix values\n   * @param {Array} index      Matrix row indeces\n   * @param {Array} ptr        Matrix column pointers\n   */\n\n\n  SparseMatrix._swapRows = function (x, y, columns, values, index, ptr) {\n    // loop columns\n    for (var j = 0; j < columns; j++) {\n      // k0 <= k < k1 where k0 = _ptr[j] && k1 = _ptr[j+1]\n      var k0 = ptr[j];\n      var k1 = ptr[j + 1]; // find value index @ x\n\n      var kx = _getValueIndex(x, k0, k1, index); // find value index @ x\n\n\n      var ky = _getValueIndex(y, k0, k1, index); // check both rows exist in matrix\n\n\n      if (kx < k1 && ky < k1 && index[kx] === x && index[ky] === y) {\n        // swap values (check for pattern matrix)\n        if (values) {\n          var v = values[kx];\n          values[kx] = values[ky];\n          values[ky] = v;\n        } // next column\n\n\n        continue;\n      } // check x row exist & no y row\n\n\n      if (kx < k1 && index[kx] === x && (ky >= k1 || index[ky] !== y)) {\n        // value @ x (check for pattern matrix)\n        var vx = values ? values[kx] : undefined; // insert value @ y\n\n        index.splice(ky, 0, y);\n\n        if (values) {\n          values.splice(ky, 0, vx);\n        } // remove value @ x (adjust array index if needed)\n\n\n        index.splice(ky <= kx ? kx + 1 : kx, 1);\n\n        if (values) {\n          values.splice(ky <= kx ? kx + 1 : kx, 1);\n        } // next column\n\n\n        continue;\n      } // check y row exist & no x row\n\n\n      if (ky < k1 && index[ky] === y && (kx >= k1 || index[kx] !== x)) {\n        // value @ y (check for pattern matrix)\n        var vy = values ? values[ky] : undefined; // insert value @ x\n\n        index.splice(kx, 0, x);\n\n        if (values) {\n          values.splice(kx, 0, vy);\n        } // remove value @ y (adjust array index if needed)\n\n\n        index.splice(kx <= ky ? ky + 1 : ky, 1);\n\n        if (values) {\n          values.splice(kx <= ky ? ky + 1 : ky, 1);\n        }\n      }\n    }\n  };\n\n  return SparseMatrix;\n}, {\n  isClass: true\n});","import { factory } from '../utils/factory.js';\nimport { deepMap } from '../utils/collection.js';\nvar name = 'number';\nvar dependencies = ['typed'];\nexport var createNumber = /* #__PURE__ */factory(name, dependencies, (_ref) => {\n  var {\n    typed\n  } = _ref;\n\n  /**\n   * Create a number or convert a string, boolean, or unit to a number.\n   * When value is a matrix, all elements will be converted to number.\n   *\n   * Syntax:\n   *\n   *    math.number(value)\n   *    math.number(unit, valuelessUnit)\n   *\n   * Examples:\n   *\n   *    math.number(2)                         // returns number 2\n   *    math.number('7.2')                     // returns number 7.2\n   *    math.number(true)                      // returns number 1\n   *    math.number([true, false, true, true]) // returns [1, 0, 1, 1]\n   *    math.number(math.unit('52cm'), 'm')    // returns 0.52\n   *\n   * See also:\n   *\n   *    bignumber, boolean, complex, index, matrix, string, unit\n   *\n   * @param {string | number | BigNumber | Fraction | boolean | Array | Matrix | Unit | null} [value]  Value to be converted\n   * @param {Unit | string} [valuelessUnit] A valueless unit, used to convert a unit to a number\n   * @return {number | Array | Matrix} The created number\n   */\n  var number = typed('number', {\n    '': function _() {\n      return 0;\n    },\n    number: function number(x) {\n      return x;\n    },\n    string: function string(x) {\n      if (x === 'NaN') return NaN;\n      var num = Number(x);\n\n      if (isNaN(num)) {\n        throw new SyntaxError('String \"' + x + '\" is no valid number');\n      }\n\n      if (['0b', '0o', '0x'].includes(x.substring(0, 2))) {\n        if (num > 2 ** 32 - 1) {\n          throw new SyntaxError(\"String \\\"\".concat(x, \"\\\" is out of range\"));\n        }\n\n        if (num & 0x80000000) {\n          num = -1 * ~(num - 1);\n        }\n      }\n\n      return num;\n    },\n    BigNumber: function BigNumber(x) {\n      return x.toNumber();\n    },\n    Fraction: function Fraction(x) {\n      return x.valueOf();\n    },\n    Unit: function Unit(x) {\n      throw new Error('Second argument with valueless unit expected');\n    },\n    null: function _null(x) {\n      return 0;\n    },\n    'Unit, string | Unit': function UnitStringUnit(unit, valuelessUnit) {\n      return unit.toNumber(valuelessUnit);\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      return deepMap(x, this);\n    }\n  }); // reviver function to parse a JSON object like:\n  //\n  //     {\"mathjs\":\"number\",\"value\":\"2.3\"}\n  //\n  // into a number 2.3\n\n  number.fromJSON = function (json) {\n    return parseFloat(json.value);\n  };\n\n  return number;\n});","import { factory } from '../../../utils/factory.js';\nimport { deepMap } from '../../../utils/collection.js';\nvar name = 'bignumber';\nvar dependencies = ['typed', 'BigNumber'];\nexport var createBignumber = /* #__PURE__ */factory(name, dependencies, (_ref) => {\n  var {\n    typed,\n    BigNumber\n  } = _ref;\n\n  /**\n   * Create a BigNumber, which can store numbers with arbitrary precision.\n   * When a matrix is provided, all elements will be converted to BigNumber.\n   *\n   * Syntax:\n   *\n   *    math.bignumber(x)\n   *\n   * Examples:\n   *\n   *    0.1 + 0.2                                  // returns number 0.30000000000000004\n   *    math.bignumber(0.1) + math.bignumber(0.2)  // returns BigNumber 0.3\n   *\n   *\n   *    7.2e500                                    // returns number Infinity\n   *    math.bignumber('7.2e500')                  // returns BigNumber 7.2e500\n   *\n   * See also:\n   *\n   *    boolean, complex, index, matrix, string, unit\n   *\n   * @param {number | string | Fraction | BigNumber | Array | Matrix | boolean | null} [value]  Value for the big number,\n   *                                                    0 by default.\n   * @returns {BigNumber} The created bignumber\n   */\n  return typed('bignumber', {\n    '': function _() {\n      return new BigNumber(0);\n    },\n    number: function number(x) {\n      // convert to string to prevent errors in case of >15 digits\n      return new BigNumber(x + '');\n    },\n    string: function string(x) {\n      return new BigNumber(x);\n    },\n    BigNumber: function BigNumber(x) {\n      // we assume a BigNumber is immutable\n      return x;\n    },\n    Fraction: function Fraction(x) {\n      return new BigNumber(x.n).div(x.d).times(x.s);\n    },\n    null: function _null(x) {\n      return new BigNumber(0);\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      return deepMap(x, this);\n    }\n  });\n});","import { factory } from '../../../utils/factory.js';\nimport { deepMap } from '../../../utils/collection.js';\nvar name = 'fraction';\nvar dependencies = ['typed', 'Fraction'];\nexport var createFraction = /* #__PURE__ */factory(name, dependencies, (_ref) => {\n  var {\n    typed,\n    Fraction\n  } = _ref;\n\n  /**\n   * Create a fraction convert a value to a fraction.\n   *\n   * Syntax:\n   *     math.fraction(numerator, denominator)\n   *     math.fraction({n: numerator, d: denominator})\n   *     math.fraction(matrix: Array | Matrix)         Turn all matrix entries\n   *                                                   into fractions\n   *\n   * Examples:\n   *\n   *     math.fraction(1, 3)\n   *     math.fraction('2/3')\n   *     math.fraction({n: 2, d: 3})\n   *     math.fraction([0.2, 0.25, 1.25])\n   *\n   * See also:\n   *\n   *    bignumber, number, string, unit\n   *\n   * @param {number | string | Fraction | BigNumber | Array | Matrix} [args]\n   *            Arguments specifying the numerator and denominator of\n   *            the fraction\n   * @return {Fraction | Array | Matrix} Returns a fraction\n   */\n  return typed('fraction', {\n    number: function number(x) {\n      if (!isFinite(x) || isNaN(x)) {\n        throw new Error(x + ' cannot be represented as a fraction');\n      }\n\n      return new Fraction(x);\n    },\n    string: function string(x) {\n      return new Fraction(x);\n    },\n    'number, number': function numberNumber(numerator, denominator) {\n      return new Fraction(numerator, denominator);\n    },\n    null: function _null(x) {\n      return new Fraction(0);\n    },\n    BigNumber: function BigNumber(x) {\n      return new Fraction(x.toString());\n    },\n    Fraction: function Fraction(x) {\n      return x; // fractions are immutable\n    },\n    Object: function Object(x) {\n      return new Fraction(x);\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      return deepMap(x, this);\n    }\n  });\n});","import { factory } from '../../../utils/factory.js';\nvar name = 'matrix';\nvar dependencies = ['typed', 'Matrix', 'DenseMatrix', 'SparseMatrix'];\nexport var createMatrix = /* #__PURE__ */factory(name, dependencies, (_ref) => {\n  var {\n    typed,\n    Matrix,\n    DenseMatrix,\n    SparseMatrix\n  } = _ref;\n\n  /**\n   * Create a Matrix. The function creates a new `math.Matrix` object from\n   * an `Array`. A Matrix has utility functions to manipulate the data in the\n   * matrix, like getting the size and getting or setting values in the matrix.\n   * Supported storage formats are 'dense' and 'sparse'.\n   *\n   * Syntax:\n   *\n   *    math.matrix()                         // creates an empty matrix using default storage format (dense).\n   *    math.matrix(data)                     // creates a matrix with initial data using default storage format (dense).\n   *    math.matrix('dense')                  // creates an empty matrix using the given storage format.\n   *    math.matrix(data, 'dense')            // creates a matrix with initial data using the given storage format.\n   *    math.matrix(data, 'sparse')           // creates a sparse matrix with initial data.\n   *    math.matrix(data, 'sparse', 'number') // creates a sparse matrix with initial data, number data type.\n   *\n   * Examples:\n   *\n   *    let m = math.matrix([[1, 2], [3, 4]])\n   *    m.size()                        // Array [2, 2]\n   *    m.resize([3, 2], 5)\n   *    m.valueOf()                     // Array [[1, 2], [3, 4], [5, 5]]\n   *    m.get([1, 0])                    // number 3\n   *\n   * See also:\n   *\n   *    bignumber, boolean, complex, index, number, string, unit, sparse\n   *\n   * @param {Array | Matrix} [data]    A multi dimensional array\n   * @param {string} [format]          The Matrix storage format\n   *\n   * @return {Matrix} The created matrix\n   */\n  return typed(name, {\n    '': function _() {\n      return _create([]);\n    },\n    string: function string(format) {\n      return _create([], format);\n    },\n    'string, string': function stringString(format, datatype) {\n      return _create([], format, datatype);\n    },\n    Array: function Array(data) {\n      return _create(data);\n    },\n    Matrix: function Matrix(data) {\n      return _create(data, data.storage());\n    },\n    'Array | Matrix, string': _create,\n    'Array | Matrix, string, string': _create\n  });\n  /**\n   * Create a new Matrix with given storage format\n   * @param {Array} data\n   * @param {string} [format]\n   * @param {string} [datatype]\n   * @returns {Matrix} Returns a new Matrix\n   * @private\n   */\n\n  function _create(data, format, datatype) {\n    // get storage format constructor\n    if (format === 'dense' || format === 'default' || format === undefined) {\n      return new DenseMatrix(data, datatype);\n    }\n\n    if (format === 'sparse') {\n      return new SparseMatrix(data, datatype);\n    }\n\n    throw new TypeError('Unknown matrix type ' + JSON.stringify(format) + '.');\n  }\n});","import { factory } from '../../utils/factory.js';\nimport { deepMap } from '../../utils/collection.js';\nimport { unaryMinusNumber } from '../../plain/number/index.js';\nvar name = 'unaryMinus';\nvar dependencies = ['typed'];\nexport var createUnaryMinus = /* #__PURE__ */factory(name, dependencies, (_ref) => {\n  var {\n    typed\n  } = _ref;\n\n  /**\n   * Inverse the sign of a value, apply a unary minus operation.\n   *\n   * For matrices, the function is evaluated element wise. Boolean values and\n   * strings will be converted to a number. For complex numbers, both real and\n   * complex value are inverted.\n   *\n   * Syntax:\n   *\n   *    math.unaryMinus(x)\n   *\n   * Examples:\n   *\n   *    math.unaryMinus(3.5)      // returns -3.5\n   *    math.unaryMinus(-4.2)     // returns 4.2\n   *\n   * See also:\n   *\n   *    add, subtract, unaryPlus\n   *\n   * @param  {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} x Number to be inverted.\n   * @return {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} Returns the value with inverted sign.\n   */\n  return typed(name, {\n    number: unaryMinusNumber,\n    Complex: function Complex(x) {\n      return x.neg();\n    },\n    BigNumber: function BigNumber(x) {\n      return x.neg();\n    },\n    Fraction: function Fraction(x) {\n      return x.neg();\n    },\n    Unit: function Unit(x) {\n      var res = x.clone();\n      res.value = this(x.value);\n      return res;\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      // deep map collection, skip zeros since unaryMinus(0) = 0\n      return deepMap(x, this, true);\n    } // TODO: add support for string\n\n  });\n});","import { factory } from '../../utils/factory.js';\nimport { deepMap } from '../../utils/collection.js';\nimport { absNumber } from '../../plain/number/index.js';\nvar name = 'abs';\nvar dependencies = ['typed'];\nexport var createAbs = /* #__PURE__ */factory(name, dependencies, (_ref) => {\n  var {\n    typed\n  } = _ref;\n\n  /**\n   * Calculate the absolute value of a number. For matrices, the function is\n   * evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.abs(x)\n   *\n   * Examples:\n   *\n   *    math.abs(3.5)                // returns number 3.5\n   *    math.abs(-4.2)               // returns number 4.2\n   *\n   *    math.abs([3, -5, -1, 0, 2])  // returns Array [3, 5, 1, 0, 2]\n   *\n   * See also:\n   *\n   *    sign\n   *\n   * @param  {number | BigNumber | Fraction | Complex | Array | Matrix | Unit} x\n   *            A number or matrix for which to get the absolute value\n   * @return {number | BigNumber | Fraction | Complex | Array | Matrix | Unit}\n   *            Absolute value of `x`\n   */\n  return typed(name, {\n    number: absNumber,\n    Complex: function Complex(x) {\n      return x.abs();\n    },\n    BigNumber: function BigNumber(x) {\n      return x.abs();\n    },\n    Fraction: function Fraction(x) {\n      return x.abs();\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      // deep map collection, skip zeros since abs(0) = 0\n      return deepMap(x, this, true);\n    },\n    Unit: function Unit(x) {\n      return x.abs();\n    }\n  });\n});","import { factory } from '../../utils/factory.js';\nimport { addNumber } from '../../plain/number/index.js';\nvar name = 'addScalar';\nvar dependencies = ['typed'];\nexport var createAddScalar = /* #__PURE__ */factory(name, dependencies, (_ref) => {\n  var {\n    typed\n  } = _ref;\n\n  /**\n   * Add two scalar values, `x + y`.\n   * This function is meant for internal use: it is used by the public function\n   * `add`\n   *\n   * This function does not support collections (Array or Matrix).\n   *\n   * @param  {number | BigNumber | Fraction | Complex | Unit} x   First value to add\n   * @param  {number | BigNumber | Fraction | Complex} y          Second value to add\n   * @return {number | BigNumber | Fraction | Complex | Unit}     Sum of `x` and `y`\n   * @private\n   */\n  return typed(name, {\n    'number, number': addNumber,\n    'Complex, Complex': function ComplexComplex(x, y) {\n      return x.add(y);\n    },\n    'BigNumber, BigNumber': function BigNumberBigNumber(x, y) {\n      return x.plus(y);\n    },\n    'Fraction, Fraction': function FractionFraction(x, y) {\n      return x.add(y);\n    },\n    'Unit, Unit': function UnitUnit(x, y) {\n      if (x.value === null || x.value === undefined) throw new Error('Parameter x contains a unit with undefined value');\n      if (y.value === null || y.value === undefined) throw new Error('Parameter y contains a unit with undefined value');\n      if (!x.equalBase(y)) throw new Error('Units do not match');\n      var res = x.clone();\n      res.value = this(res.value, y.value);\n      res.fixPrefix = false;\n      return res;\n    }\n  });\n});","import { factory } from '../../../utils/factory.js';\nvar name = 'algorithm11';\nvar dependencies = ['typed', 'equalScalar'];\nexport var createAlgorithm11 = /* #__PURE__ */factory(name, dependencies, (_ref) => {\n  var {\n    typed,\n    equalScalar\n  } = _ref;\n\n  /**\n   * Iterates over SparseMatrix S nonzero items and invokes the callback function f(Sij, b).\n   * Callback function invoked NZ times (number of nonzero items in S).\n   *\n   *\n   *          ┌  f(Sij, b)  ; S(i,j) !== 0\n   * C(i,j) = ┤\n   *          └  0          ; otherwise\n   *\n   *\n   * @param {Matrix}   s                 The SparseMatrix instance (S)\n   * @param {Scalar}   b                 The Scalar value\n   * @param {Function} callback          The f(Aij,b) operation to invoke\n   * @param {boolean}  inverse           A true value indicates callback should be invoked f(b,Sij)\n   *\n   * @return {Matrix}                    SparseMatrix (C)\n   *\n   * https://github.com/josdejong/mathjs/pull/346#issuecomment-97626813\n   */\n  return function algorithm11(s, b, callback, inverse) {\n    // sparse matrix arrays\n    var avalues = s._values;\n    var aindex = s._index;\n    var aptr = s._ptr;\n    var asize = s._size;\n    var adt = s._datatype; // sparse matrix cannot be a Pattern matrix\n\n    if (!avalues) {\n      throw new Error('Cannot perform operation on Pattern Sparse Matrix and Scalar value');\n    } // rows & columns\n\n\n    var rows = asize[0];\n    var columns = asize[1]; // datatype\n\n    var dt; // equal signature to use\n\n    var eq = equalScalar; // zero value\n\n    var zero = 0; // callback signature to use\n\n    var cf = callback; // process data types\n\n    if (typeof adt === 'string') {\n      // datatype\n      dt = adt; // find signature that matches (dt, dt)\n\n      eq = typed.find(equalScalar, [dt, dt]); // convert 0 to the same datatype\n\n      zero = typed.convert(0, dt); // convert b to the same datatype\n\n      b = typed.convert(b, dt); // callback\n\n      cf = typed.find(callback, [dt, dt]);\n    } // result arrays\n\n\n    var cvalues = [];\n    var cindex = [];\n    var cptr = []; // loop columns\n\n    for (var j = 0; j < columns; j++) {\n      // initialize ptr\n      cptr[j] = cindex.length; // values in j\n\n      for (var k0 = aptr[j], k1 = aptr[j + 1], k = k0; k < k1; k++) {\n        // row\n        var i = aindex[k]; // invoke callback\n\n        var v = inverse ? cf(b, avalues[k]) : cf(avalues[k], b); // check value is zero\n\n        if (!eq(v, zero)) {\n          // push index & value\n          cindex.push(i);\n          cvalues.push(v);\n        }\n      }\n    } // update ptr\n\n\n    cptr[columns] = cindex.length; // return sparse matrix\n\n    return s.createSparseMatrix({\n      values: cvalues,\n      index: cindex,\n      ptr: cptr,\n      size: [rows, columns],\n      datatype: dt\n    });\n  };\n});","import { factory } from '../../../utils/factory.js';\nimport { clone } from '../../../utils/object.js';\nvar name = 'algorithm14';\nvar dependencies = ['typed'];\nexport var createAlgorithm14 = /* #__PURE__ */factory(name, dependencies, (_ref) => {\n  var {\n    typed\n  } = _ref;\n\n  /**\n   * Iterates over DenseMatrix items and invokes the callback function f(Aij..z, b).\n   * Callback function invoked MxN times.\n   *\n   * C(i,j,...z) = f(Aij..z, b)\n   *\n   * @param {Matrix}   a                 The DenseMatrix instance (A)\n   * @param {Scalar}   b                 The Scalar value\n   * @param {Function} callback          The f(Aij..z,b) operation to invoke\n   * @param {boolean}  inverse           A true value indicates callback should be invoked f(b,Aij..z)\n   *\n   * @return {Matrix}                    DenseMatrix (C)\n   *\n   * https://github.com/josdejong/mathjs/pull/346#issuecomment-97659042\n   */\n  return function algorithm14(a, b, callback, inverse) {\n    // a arrays\n    var adata = a._data;\n    var asize = a._size;\n    var adt = a._datatype; // datatype\n\n    var dt; // callback signature to use\n\n    var cf = callback; // process data types\n\n    if (typeof adt === 'string') {\n      // datatype\n      dt = adt; // convert b to the same datatype\n\n      b = typed.convert(b, dt); // callback\n\n      cf = typed.find(callback, [dt, dt]);\n    } // populate cdata, iterate through dimensions\n\n\n    var cdata = asize.length > 0 ? _iterate(cf, 0, asize, asize[0], adata, b, inverse) : []; // c matrix\n\n    return a.createDenseMatrix({\n      data: cdata,\n      size: clone(asize),\n      datatype: dt\n    });\n  }; // recursive function\n\n  function _iterate(f, level, s, n, av, bv, inverse) {\n    // initialize array for this level\n    var cv = []; // check we reach the last level\n\n    if (level === s.length - 1) {\n      // loop arrays in last level\n      for (var i = 0; i < n; i++) {\n        // invoke callback and store value\n        cv[i] = inverse ? f(bv, av[i]) : f(av[i], bv);\n      }\n    } else {\n      // iterate current level\n      for (var j = 0; j < n; j++) {\n        // iterate next level\n        cv[j] = _iterate(f, level + 1, s, s[level + 1], av[j], bv, inverse);\n      }\n    }\n\n    return cv;\n  }\n});","import Decimal from 'decimal.js';\nimport { factory } from '../../utils/factory.js';\nimport { deepMap } from '../../utils/collection.js';\nimport { nearlyEqual } from '../../utils/number.js';\nimport { nearlyEqual as bigNearlyEqual } from '../../utils/bignumber/nearlyEqual.js';\nimport { ceilNumber } from '../../plain/number/index.js';\nimport { createAlgorithm11 } from '../../type/matrix/utils/algorithm11.js';\nimport { createAlgorithm14 } from '../../type/matrix/utils/algorithm14.js';\nvar name = 'ceil';\nvar dependencies = ['typed', 'config', 'round', 'matrix', 'equalScalar'];\nexport var createCeil = /* #__PURE__ */factory(name, dependencies, (_ref) => {\n  var {\n    typed,\n    config,\n    round,\n    matrix,\n    equalScalar\n  } = _ref;\n  var algorithm11 = createAlgorithm11({\n    typed,\n    equalScalar\n  });\n  var algorithm14 = createAlgorithm14({\n    typed\n  });\n  /**\n   * Round a value towards plus infinity\n   * If `x` is complex, both real and imaginary part are rounded towards plus infinity.\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.ceil(x)\n   *    math.ceil(x, n)\n   *\n   * Examples:\n   *\n   *    math.ceil(3.2)               // returns number 4\n   *    math.ceil(3.8)               // returns number 4\n   *    math.ceil(-4.2)              // returns number -4\n   *    math.ceil(-4.7)              // returns number -4\n   *\n   *    math.ceil(3.212, 2)          // returns number 3.22\n   *    math.ceil(3.288, 2)          // returns number 3.29\n   *    math.ceil(-4.212, 2)         // returns number -4.21\n   *    math.ceil(-4.782, 2)         // returns number -4.78\n   *\n   *    const c = math.complex(3.24, -2.71)\n   *    math.ceil(c)                 // returns Complex 4 - 2i\n   *    math.ceil(c, 1)              // returns Complex 3.3 - 2.7i\n   *\n   *    math.ceil([3.2, 3.8, -4.7])  // returns Array [4, 4, -4]\n   *    math.ceil([3.21, 3.82, -4.71], 1)  // returns Array [3.3, 3.9, -4.7]\n   *\n   * See also:\n   *\n   *    floor, fix, round\n   *\n   * @param  {number | BigNumber | Fraction | Complex | Array | Matrix} x  Number to be rounded\n   * @param  {number | BigNumber | Array} [n=0]                            Number of decimals\n   * @return {number | BigNumber | Fraction | Complex | Array | Matrix} Rounded value\n   */\n\n  return typed('ceil', {\n    number: function number(x) {\n      if (nearlyEqual(x, round(x), config.epsilon)) {\n        return round(x);\n      } else {\n        return ceilNumber(x);\n      }\n    },\n    'number, number': function numberNumber(x, n) {\n      if (nearlyEqual(x, round(x, n), config.epsilon)) {\n        return round(x, n);\n      } else {\n        var [number, exponent] = \"\".concat(x, \"e\").split('e');\n        var result = Math.ceil(Number(\"\".concat(number, \"e\").concat(Number(exponent) + n)));\n        [number, exponent] = \"\".concat(result, \"e\").split('e');\n        return Number(\"\".concat(number, \"e\").concat(Number(exponent) - n));\n      }\n    },\n    Complex: function Complex(x) {\n      return x.ceil();\n    },\n    'Complex, number': function ComplexNumber(x, n) {\n      return x.ceil(n);\n    },\n    BigNumber: function BigNumber(x) {\n      if (bigNearlyEqual(x, round(x), config.epsilon)) {\n        return round(x);\n      } else {\n        return x.ceil();\n      }\n    },\n    'BigNumber, BigNumber': function BigNumberBigNumber(x, n) {\n      if (bigNearlyEqual(x, round(x, n), config.epsilon)) {\n        return round(x, n);\n      } else {\n        return x.toDecimalPlaces(n.toNumber(), Decimal.ROUND_CEIL);\n      }\n    },\n    Fraction: function Fraction(x) {\n      return x.ceil();\n    },\n    'Fraction, number': function FractionNumber(x, n) {\n      return x.ceil(n);\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      // deep map collection, skip zeros since ceil(0) = 0\n      return deepMap(x, this, true);\n    },\n    'Array | Matrix, number': function ArrayMatrixNumber(x, n) {\n      // deep map collection, skip zeros since ceil(0) = 0\n      return deepMap(x, i => this(i, n), true);\n    },\n    'SparseMatrix, number | BigNumber': function SparseMatrixNumberBigNumber(x, y) {\n      return algorithm11(x, y, this, false);\n    },\n    'DenseMatrix, number | BigNumber': function DenseMatrixNumberBigNumber(x, y) {\n      return algorithm14(x, y, this, false);\n    },\n    'number | Complex | BigNumber, Array': function numberComplexBigNumberArray(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, this, true).valueOf();\n    }\n  });\n});","import { factory } from '../../utils/factory.js';\nimport { deepMap } from '../../utils/collection.js';\nimport { createAlgorithm14 } from '../../type/matrix/utils/algorithm14.js';\nvar name = 'fix';\nvar dependencies = ['typed', 'Complex', 'matrix', 'ceil', 'floor'];\nexport var createFix = /* #__PURE__ */factory(name, dependencies, (_ref) => {\n  var {\n    typed,\n    Complex: _Complex,\n    matrix,\n    ceil,\n    floor\n  } = _ref;\n  var algorithm14 = createAlgorithm14({\n    typed\n  });\n  /**\n   * Round a value towards zero.\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.fix(x)\n   *\n   * Examples:\n   *\n   *    math.fix(3.2)                // returns number 3\n   *    math.fix(3.8)                // returns number 3\n   *    math.fix(-4.2)               // returns number -4\n   *    math.fix(-4.7)               // returns number -4\n   *\n   *    math.fix(3.12, 1)                // returns number 3.1\n   *    math.fix(3.18, 1)                // returns number 3.1\n   *    math.fix(-4.12, 1)               // returns number -4.1\n   *    math.fix(-4.17, 1)               // returns number -4.1\n   *\n   *    const c = math.complex(3.22, -2.78)\n   *    math.fix(c)                  // returns Complex 3 - 2i\n   *    math.fix(c, 1)               // returns Complex 3.2 - 2.7i\n   *\n   *    math.fix([3.2, 3.8, -4.7])      // returns Array [3, 3, -4]\n   *    math.fix([3.2, 3.8, -4.7], 1)   // returns Array [3.2, 3.8, -4.7]\n   *\n   * See also:\n   *\n   *    ceil, floor, round\n   *\n   * @param  {number | BigNumber | Fraction | Complex | Array | Matrix} x    Number to be rounded\n   * @param  {number | BigNumber | Array} [n=0]                             Number of decimals\n   * @return {number | BigNumber | Fraction | Complex | Array | Matrix}     Rounded value\n   */\n\n  return typed('fix', {\n    number: function number(x) {\n      return x > 0 ? floor(x) : ceil(x);\n    },\n    'number, number | BigNumber': function numberNumberBigNumber(x, n) {\n      return x > 0 ? floor(x, n) : ceil(x, n);\n    },\n    Complex: function Complex(x) {\n      return new _Complex(x.re > 0 ? Math.floor(x.re) : Math.ceil(x.re), x.im > 0 ? Math.floor(x.im) : Math.ceil(x.im));\n    },\n    'Complex, number | BigNumber': function ComplexNumberBigNumber(x, n) {\n      return new _Complex(x.re > 0 ? floor(x.re, n) : ceil(x.re, n), x.im > 0 ? floor(x.im, n) : ceil(x.im, n));\n    },\n    BigNumber: function BigNumber(x) {\n      return x.isNegative() ? ceil(x) : floor(x);\n    },\n    'BigNumber, number | BigNumber': function BigNumberNumberBigNumber(x, n) {\n      return x.isNegative() ? ceil(x, n) : floor(x, n);\n    },\n    Fraction: function Fraction(x) {\n      return x.s < 0 ? x.ceil() : x.floor();\n    },\n    'Fraction, number | BigNumber': function FractionNumberBigNumber(x, n) {\n      return x.s < 0 ? x.ceil(n) : x.floor(n);\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      // deep map collection, skip zeros since fix(0) = 0\n      return deepMap(x, this, true);\n    },\n    'Array | Matrix, number | BigNumber': function ArrayMatrixNumberBigNumber(x, n) {\n      // deep map collection, skip zeros since fix(0) = 0\n      return deepMap(x, i => this(i, n), true);\n    },\n    'number | Complex | BigNumber, Array': function numberComplexBigNumberArray(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, this, true).valueOf();\n    }\n  });\n});","import Decimal from 'decimal.js';\nimport { factory } from '../../utils/factory.js';\nimport { deepMap } from '../../utils/collection.js';\nimport { nearlyEqual } from '../../utils/number.js';\nimport { nearlyEqual as bigNearlyEqual } from '../../utils/bignumber/nearlyEqual.js';\nimport { createAlgorithm11 } from '../../type/matrix/utils/algorithm11.js';\nimport { createAlgorithm14 } from '../../type/matrix/utils/algorithm14.js';\nvar name = 'floor';\nvar dependencies = ['typed', 'config', 'round', 'matrix', 'equalScalar'];\nexport var createFloor = /* #__PURE__ */factory(name, dependencies, (_ref) => {\n  var {\n    typed,\n    config,\n    round,\n    matrix,\n    equalScalar\n  } = _ref;\n  var algorithm11 = createAlgorithm11({\n    typed,\n    equalScalar\n  });\n  var algorithm14 = createAlgorithm14({\n    typed\n  });\n  /**\n   * Round a value towards minus infinity.\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.floor(x)\n   *    math.floor(x, n)\n   *\n   * Examples:\n   *\n   *    math.floor(3.2)              // returns number 3\n   *    math.floor(3.8)              // returns number 3\n   *    math.floor(-4.2)             // returns number -5\n   *    math.floor(-4.7)             // returns number -5\n   *\n   *    math.floor(3.212, 2)          // returns number 3.21\n   *    math.floor(3.288, 2)          // returns number 3.28\n   *    math.floor(-4.212, 2)         // returns number -4.22\n   *    math.floor(-4.782, 2)         // returns number -4.79\n   *\n   *    const c = math.complex(3.24, -2.71)\n   *    math.floor(c)                 // returns Complex 3 - 3i\n   *    math.floor(c, 1)              // returns Complex 3.2 - 2.8i\n   *\n   *    math.floor([3.2, 3.8, -4.7])       // returns Array [3, 3, -5]\n   *    math.floor([3.21, 3.82, -4.71], 1)  // returns Array [3.2, 3.8, -4.8]\n   *\n   * See also:\n   *\n   *    ceil, fix, round\n   *\n   * @param  {number | BigNumber | Fraction | Complex | Array | Matrix} x  Number to be rounded\n   * @param  {number | BigNumber | Array} [n=0]                            Number of decimals\n   * @return {number | BigNumber | Fraction | Complex | Array | Matrix} Rounded value\n   */\n\n  return typed('floor', {\n    number: function number(x) {\n      if (nearlyEqual(x, round(x), config.epsilon)) {\n        return round(x);\n      } else {\n        return Math.floor(x);\n      }\n    },\n    'number, number': function numberNumber(x, n) {\n      if (nearlyEqual(x, round(x, n), config.epsilon)) {\n        return round(x, n);\n      } else {\n        var [number, exponent] = \"\".concat(x, \"e\").split('e');\n        var result = Math.floor(Number(\"\".concat(number, \"e\").concat(Number(exponent) + n)));\n        [number, exponent] = \"\".concat(result, \"e\").split('e');\n        return Number(\"\".concat(number, \"e\").concat(Number(exponent) - n));\n      }\n    },\n    Complex: function Complex(x) {\n      return x.floor();\n    },\n    'Complex, number': function ComplexNumber(x, n) {\n      return x.floor(n);\n    },\n    BigNumber: function BigNumber(x) {\n      if (bigNearlyEqual(x, round(x), config.epsilon)) {\n        return round(x);\n      } else {\n        return x.floor();\n      }\n    },\n    'BigNumber, BigNumber': function BigNumberBigNumber(x, n) {\n      if (bigNearlyEqual(x, round(x, n), config.epsilon)) {\n        return round(x, n);\n      } else {\n        return x.toDecimalPlaces(n.toNumber(), Decimal.ROUND_FLOOR);\n      }\n    },\n    Fraction: function Fraction(x) {\n      return x.floor();\n    },\n    'Fraction, number': function FractionNumber(x, n) {\n      return x.floor(n);\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      // deep map collection, skip zeros since floor(0) = 0\n      return deepMap(x, this, true);\n    },\n    'Array | Matrix, number': function ArrayMatrixNumber(x, n) {\n      // deep map collection, skip zeros since ceil(0) = 0\n      return deepMap(x, i => this(i, n), true);\n    },\n    'SparseMatrix, number | BigNumber': function SparseMatrixNumberBigNumber(x, y) {\n      return algorithm11(x, y, this, false);\n    },\n    'DenseMatrix, number | BigNumber': function DenseMatrixNumberBigNumber(x, y) {\n      return algorithm14(x, y, this, false);\n    },\n    'number | Complex | BigNumber, Array': function numberComplexBigNumberArray(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, this, true).valueOf();\n    }\n  });\n});","import { factory } from '../../../utils/factory.js';\nimport { DimensionError } from '../../../error/DimensionError.js';\nvar name = 'algorithm01';\nvar dependencies = ['typed'];\nexport var createAlgorithm01 = /* #__PURE__ */factory(name, dependencies, (_ref) => {\n  var {\n    typed\n  } = _ref;\n\n  /**\n   * Iterates over SparseMatrix nonzero items and invokes the callback function f(Dij, Sij).\n   * Callback function invoked NNZ times (number of nonzero items in SparseMatrix).\n   *\n   *\n   *          ┌  f(Dij, Sij)  ; S(i,j) !== 0\n   * C(i,j) = ┤\n   *          └  Dij          ; otherwise\n   *\n   *\n   * @param {Matrix}   denseMatrix       The DenseMatrix instance (D)\n   * @param {Matrix}   sparseMatrix      The SparseMatrix instance (S)\n   * @param {Function} callback          The f(Dij,Sij) operation to invoke, where Dij = DenseMatrix(i,j) and Sij = SparseMatrix(i,j)\n   * @param {boolean}  inverse           A true value indicates callback should be invoked f(Sij,Dij)\n   *\n   * @return {Matrix}                    DenseMatrix (C)\n   *\n   * see https://github.com/josdejong/mathjs/pull/346#issuecomment-97477571\n   */\n  return function algorithm1(denseMatrix, sparseMatrix, callback, inverse) {\n    // dense matrix arrays\n    var adata = denseMatrix._data;\n    var asize = denseMatrix._size;\n    var adt = denseMatrix._datatype; // sparse matrix arrays\n\n    var bvalues = sparseMatrix._values;\n    var bindex = sparseMatrix._index;\n    var bptr = sparseMatrix._ptr;\n    var bsize = sparseMatrix._size;\n    var bdt = sparseMatrix._datatype; // validate dimensions\n\n    if (asize.length !== bsize.length) {\n      throw new DimensionError(asize.length, bsize.length);\n    } // check rows & columns\n\n\n    if (asize[0] !== bsize[0] || asize[1] !== bsize[1]) {\n      throw new RangeError('Dimension mismatch. Matrix A (' + asize + ') must match Matrix B (' + bsize + ')');\n    } // sparse matrix cannot be a Pattern matrix\n\n\n    if (!bvalues) {\n      throw new Error('Cannot perform operation on Dense Matrix and Pattern Sparse Matrix');\n    } // rows & columns\n\n\n    var rows = asize[0];\n    var columns = asize[1]; // process data types\n\n    var dt = typeof adt === 'string' && adt === bdt ? adt : undefined; // callback function\n\n    var cf = dt ? typed.find(callback, [dt, dt]) : callback; // vars\n\n    var i, j; // result (DenseMatrix)\n\n    var cdata = []; // initialize c\n\n    for (i = 0; i < rows; i++) {\n      cdata[i] = [];\n    } // workspace\n\n\n    var x = []; // marks indicating we have a value in x for a given column\n\n    var w = []; // loop columns in b\n\n    for (j = 0; j < columns; j++) {\n      // column mark\n      var mark = j + 1; // values in column j\n\n      for (var k0 = bptr[j], k1 = bptr[j + 1], k = k0; k < k1; k++) {\n        // row\n        i = bindex[k]; // update workspace\n\n        x[i] = inverse ? cf(bvalues[k], adata[i][j]) : cf(adata[i][j], bvalues[k]); // mark i as updated\n\n        w[i] = mark;\n      } // loop rows\n\n\n      for (i = 0; i < rows; i++) {\n        // check row is in workspace\n        if (w[i] === mark) {\n          // c[i][j] was already calculated\n          cdata[i][j] = x[i];\n        } else {\n          // item does not exist in S\n          cdata[i][j] = adata[i][j];\n        }\n      }\n    } // return dense matrix\n\n\n    return denseMatrix.createDenseMatrix({\n      data: cdata,\n      size: [rows, columns],\n      datatype: dt\n    });\n  };\n});","import { factory } from '../../../utils/factory.js';\nimport { DimensionError } from '../../../error/DimensionError.js';\nvar name = 'algorithm04';\nvar dependencies = ['typed', 'equalScalar'];\nexport var createAlgorithm04 = /* #__PURE__ */factory(name, dependencies, (_ref) => {\n  var {\n    typed,\n    equalScalar\n  } = _ref;\n\n  /**\n   * Iterates over SparseMatrix A and SparseMatrix B nonzero items and invokes the callback function f(Aij, Bij).\n   * Callback function invoked MAX(NNZA, NNZB) times\n   *\n   *\n   *          ┌  f(Aij, Bij)  ; A(i,j) !== 0 && B(i,j) !== 0\n   * C(i,j) = ┤  A(i,j)       ; A(i,j) !== 0\n   *          └  B(i,j)       ; B(i,j) !== 0\n   *\n   *\n   * @param {Matrix}   a                 The SparseMatrix instance (A)\n   * @param {Matrix}   b                 The SparseMatrix instance (B)\n   * @param {Function} callback          The f(Aij,Bij) operation to invoke\n   *\n   * @return {Matrix}                    SparseMatrix (C)\n   *\n   * see https://github.com/josdejong/mathjs/pull/346#issuecomment-97620294\n   */\n  return function algorithm04(a, b, callback) {\n    // sparse matrix arrays\n    var avalues = a._values;\n    var aindex = a._index;\n    var aptr = a._ptr;\n    var asize = a._size;\n    var adt = a._datatype; // sparse matrix arrays\n\n    var bvalues = b._values;\n    var bindex = b._index;\n    var bptr = b._ptr;\n    var bsize = b._size;\n    var bdt = b._datatype; // validate dimensions\n\n    if (asize.length !== bsize.length) {\n      throw new DimensionError(asize.length, bsize.length);\n    } // check rows & columns\n\n\n    if (asize[0] !== bsize[0] || asize[1] !== bsize[1]) {\n      throw new RangeError('Dimension mismatch. Matrix A (' + asize + ') must match Matrix B (' + bsize + ')');\n    } // rows & columns\n\n\n    var rows = asize[0];\n    var columns = asize[1]; // datatype\n\n    var dt; // equal signature to use\n\n    var eq = equalScalar; // zero value\n\n    var zero = 0; // callback signature to use\n\n    var cf = callback; // process data types\n\n    if (typeof adt === 'string' && adt === bdt) {\n      // datatype\n      dt = adt; // find signature that matches (dt, dt)\n\n      eq = typed.find(equalScalar, [dt, dt]); // convert 0 to the same datatype\n\n      zero = typed.convert(0, dt); // callback\n\n      cf = typed.find(callback, [dt, dt]);\n    } // result arrays\n\n\n    var cvalues = avalues && bvalues ? [] : undefined;\n    var cindex = [];\n    var cptr = []; // workspace\n\n    var xa = avalues && bvalues ? [] : undefined;\n    var xb = avalues && bvalues ? [] : undefined; // marks indicating we have a value in x for a given column\n\n    var wa = [];\n    var wb = []; // vars\n\n    var i, j, k, k0, k1; // loop columns\n\n    for (j = 0; j < columns; j++) {\n      // update cptr\n      cptr[j] = cindex.length; // columns mark\n\n      var mark = j + 1; // loop A(:,j)\n\n      for (k0 = aptr[j], k1 = aptr[j + 1], k = k0; k < k1; k++) {\n        // row\n        i = aindex[k]; // update c\n\n        cindex.push(i); // update workspace\n\n        wa[i] = mark; // check we need to process values\n\n        if (xa) {\n          xa[i] = avalues[k];\n        }\n      } // loop B(:,j)\n\n\n      for (k0 = bptr[j], k1 = bptr[j + 1], k = k0; k < k1; k++) {\n        // row\n        i = bindex[k]; // check row exists in A\n\n        if (wa[i] === mark) {\n          // update record in xa @ i\n          if (xa) {\n            // invoke callback\n            var v = cf(xa[i], bvalues[k]); // check for zero\n\n            if (!eq(v, zero)) {\n              // update workspace\n              xa[i] = v;\n            } else {\n              // remove mark (index will be removed later)\n              wa[i] = null;\n            }\n          }\n        } else {\n          // update c\n          cindex.push(i); // update workspace\n\n          wb[i] = mark; // check we need to process values\n\n          if (xb) {\n            xb[i] = bvalues[k];\n          }\n        }\n      } // check we need to process values (non pattern matrix)\n\n\n      if (xa && xb) {\n        // initialize first index in j\n        k = cptr[j]; // loop index in j\n\n        while (k < cindex.length) {\n          // row\n          i = cindex[k]; // check workspace has value @ i\n\n          if (wa[i] === mark) {\n            // push value (Aij != 0 || (Aij != 0 && Bij != 0))\n            cvalues[k] = xa[i]; // increment pointer\n\n            k++;\n          } else if (wb[i] === mark) {\n            // push value (bij != 0)\n            cvalues[k] = xb[i]; // increment pointer\n\n            k++;\n          } else {\n            // remove index @ k\n            cindex.splice(k, 1);\n          }\n        }\n      }\n    } // update cptr\n\n\n    cptr[columns] = cindex.length; // return sparse matrix\n\n    return a.createSparseMatrix({\n      values: cvalues,\n      index: cindex,\n      ptr: cptr,\n      size: [rows, columns],\n      datatype: dt\n    });\n  };\n});","import { factory } from '../../../utils/factory.js';\nvar name = 'algorithm10';\nvar dependencies = ['typed', 'DenseMatrix'];\nexport var createAlgorithm10 = /* #__PURE__ */factory(name, dependencies, (_ref) => {\n  var {\n    typed,\n    DenseMatrix\n  } = _ref;\n\n  /**\n   * Iterates over SparseMatrix S nonzero items and invokes the callback function f(Sij, b).\n   * Callback function invoked NZ times (number of nonzero items in S).\n   *\n   *\n   *          ┌  f(Sij, b)  ; S(i,j) !== 0\n   * C(i,j) = ┤\n   *          └  b          ; otherwise\n   *\n   *\n   * @param {Matrix}   s                 The SparseMatrix instance (S)\n   * @param {Scalar}   b                 The Scalar value\n   * @param {Function} callback          The f(Aij,b) operation to invoke\n   * @param {boolean}  inverse           A true value indicates callback should be invoked f(b,Sij)\n   *\n   * @return {Matrix}                    DenseMatrix (C)\n   *\n   * https://github.com/josdejong/mathjs/pull/346#issuecomment-97626813\n   */\n  return function algorithm10(s, b, callback, inverse) {\n    // sparse matrix arrays\n    var avalues = s._values;\n    var aindex = s._index;\n    var aptr = s._ptr;\n    var asize = s._size;\n    var adt = s._datatype; // sparse matrix cannot be a Pattern matrix\n\n    if (!avalues) {\n      throw new Error('Cannot perform operation on Pattern Sparse Matrix and Scalar value');\n    } // rows & columns\n\n\n    var rows = asize[0];\n    var columns = asize[1]; // datatype\n\n    var dt; // callback signature to use\n\n    var cf = callback; // process data types\n\n    if (typeof adt === 'string') {\n      // datatype\n      dt = adt; // convert b to the same datatype\n\n      b = typed.convert(b, dt); // callback\n\n      cf = typed.find(callback, [dt, dt]);\n    } // result arrays\n\n\n    var cdata = []; // workspaces\n\n    var x = []; // marks indicating we have a value in x for a given column\n\n    var w = []; // loop columns\n\n    for (var j = 0; j < columns; j++) {\n      // columns mark\n      var mark = j + 1; // values in j\n\n      for (var k0 = aptr[j], k1 = aptr[j + 1], k = k0; k < k1; k++) {\n        // row\n        var r = aindex[k]; // update workspace\n\n        x[r] = avalues[k];\n        w[r] = mark;\n      } // loop rows\n\n\n      for (var i = 0; i < rows; i++) {\n        // initialize C on first column\n        if (j === 0) {\n          // create row array\n          cdata[i] = [];\n        } // check sparse matrix has a value @ i,j\n\n\n        if (w[i] === mark) {\n          // invoke callback, update C\n          cdata[i][j] = inverse ? cf(b, x[i]) : cf(x[i], b);\n        } else {\n          // dense matrix value @ i, j\n          cdata[i][j] = b;\n        }\n      }\n    } // return dense matrix\n\n\n    return new DenseMatrix({\n      data: cdata,\n      size: [rows, columns],\n      datatype: dt\n    });\n  };\n});","import { factory } from '../../../utils/factory.js';\nimport { DimensionError } from '../../../error/DimensionError.js';\nvar name = 'algorithm13';\nvar dependencies = ['typed'];\nexport var createAlgorithm13 = /* #__PURE__ */factory(name, dependencies, (_ref) => {\n  var {\n    typed\n  } = _ref;\n\n  /**\n   * Iterates over DenseMatrix items and invokes the callback function f(Aij..z, Bij..z).\n   * Callback function invoked MxN times.\n   *\n   * C(i,j,...z) = f(Aij..z, Bij..z)\n   *\n   * @param {Matrix}   a                 The DenseMatrix instance (A)\n   * @param {Matrix}   b                 The DenseMatrix instance (B)\n   * @param {Function} callback          The f(Aij..z,Bij..z) operation to invoke\n   *\n   * @return {Matrix}                    DenseMatrix (C)\n   *\n   * https://github.com/josdejong/mathjs/pull/346#issuecomment-97658658\n   */\n  return function algorithm13(a, b, callback) {\n    // a arrays\n    var adata = a._data;\n    var asize = a._size;\n    var adt = a._datatype; // b arrays\n\n    var bdata = b._data;\n    var bsize = b._size;\n    var bdt = b._datatype; // c arrays\n\n    var csize = []; // validate dimensions\n\n    if (asize.length !== bsize.length) {\n      throw new DimensionError(asize.length, bsize.length);\n    } // validate each one of the dimension sizes\n\n\n    for (var s = 0; s < asize.length; s++) {\n      // must match\n      if (asize[s] !== bsize[s]) {\n        throw new RangeError('Dimension mismatch. Matrix A (' + asize + ') must match Matrix B (' + bsize + ')');\n      } // update dimension in c\n\n\n      csize[s] = asize[s];\n    } // datatype\n\n\n    var dt; // callback signature to use\n\n    var cf = callback; // process data types\n\n    if (typeof adt === 'string' && adt === bdt) {\n      // datatype\n      dt = adt; // callback\n\n      cf = typed.find(callback, [dt, dt]);\n    } // populate cdata, iterate through dimensions\n\n\n    var cdata = csize.length > 0 ? _iterate(cf, 0, csize, csize[0], adata, bdata) : []; // c matrix\n\n    return a.createDenseMatrix({\n      data: cdata,\n      size: csize,\n      datatype: dt\n    });\n  }; // recursive function\n\n  function _iterate(f, level, s, n, av, bv) {\n    // initialize array for this level\n    var cv = []; // check we reach the last level\n\n    if (level === s.length - 1) {\n      // loop arrays in last level\n      for (var i = 0; i < n; i++) {\n        // invoke callback and store value\n        cv[i] = f(av[i], bv[i]);\n      }\n    } else {\n      // iterate current level\n      for (var j = 0; j < n; j++) {\n        // iterate next level\n        cv[j] = _iterate(f, level + 1, s, s[level + 1], av[j], bv[j]);\n      }\n    }\n\n    return cv;\n  }\n});","import { factory } from '../../../utils/factory.js';\nimport { DimensionError } from '../../../error/DimensionError.js';\nvar name = 'algorithm02';\nvar dependencies = ['typed', 'equalScalar'];\nexport var createAlgorithm02 = /* #__PURE__ */factory(name, dependencies, (_ref) => {\n  var {\n    typed,\n    equalScalar\n  } = _ref;\n\n  /**\n   * Iterates over SparseMatrix nonzero items and invokes the callback function f(Dij, Sij).\n   * Callback function invoked NNZ times (number of nonzero items in SparseMatrix).\n   *\n   *\n   *          ┌  f(Dij, Sij)  ; S(i,j) !== 0\n   * C(i,j) = ┤\n   *          └  0            ; otherwise\n   *\n   *\n   * @param {Matrix}   denseMatrix       The DenseMatrix instance (D)\n   * @param {Matrix}   sparseMatrix      The SparseMatrix instance (S)\n   * @param {Function} callback          The f(Dij,Sij) operation to invoke, where Dij = DenseMatrix(i,j) and Sij = SparseMatrix(i,j)\n   * @param {boolean}  inverse           A true value indicates callback should be invoked f(Sij,Dij)\n   *\n   * @return {Matrix}                    SparseMatrix (C)\n   *\n   * see https://github.com/josdejong/mathjs/pull/346#issuecomment-97477571\n   */\n  return function algorithm02(denseMatrix, sparseMatrix, callback, inverse) {\n    // dense matrix arrays\n    var adata = denseMatrix._data;\n    var asize = denseMatrix._size;\n    var adt = denseMatrix._datatype; // sparse matrix arrays\n\n    var bvalues = sparseMatrix._values;\n    var bindex = sparseMatrix._index;\n    var bptr = sparseMatrix._ptr;\n    var bsize = sparseMatrix._size;\n    var bdt = sparseMatrix._datatype; // validate dimensions\n\n    if (asize.length !== bsize.length) {\n      throw new DimensionError(asize.length, bsize.length);\n    } // check rows & columns\n\n\n    if (asize[0] !== bsize[0] || asize[1] !== bsize[1]) {\n      throw new RangeError('Dimension mismatch. Matrix A (' + asize + ') must match Matrix B (' + bsize + ')');\n    } // sparse matrix cannot be a Pattern matrix\n\n\n    if (!bvalues) {\n      throw new Error('Cannot perform operation on Dense Matrix and Pattern Sparse Matrix');\n    } // rows & columns\n\n\n    var rows = asize[0];\n    var columns = asize[1]; // datatype\n\n    var dt; // equal signature to use\n\n    var eq = equalScalar; // zero value\n\n    var zero = 0; // callback signature to use\n\n    var cf = callback; // process data types\n\n    if (typeof adt === 'string' && adt === bdt) {\n      // datatype\n      dt = adt; // find signature that matches (dt, dt)\n\n      eq = typed.find(equalScalar, [dt, dt]); // convert 0 to the same datatype\n\n      zero = typed.convert(0, dt); // callback\n\n      cf = typed.find(callback, [dt, dt]);\n    } // result (SparseMatrix)\n\n\n    var cvalues = [];\n    var cindex = [];\n    var cptr = []; // loop columns in b\n\n    for (var j = 0; j < columns; j++) {\n      // update cptr\n      cptr[j] = cindex.length; // values in column j\n\n      for (var k0 = bptr[j], k1 = bptr[j + 1], k = k0; k < k1; k++) {\n        // row\n        var i = bindex[k]; // update C(i,j)\n\n        var cij = inverse ? cf(bvalues[k], adata[i][j]) : cf(adata[i][j], bvalues[k]); // check for nonzero\n\n        if (!eq(cij, zero)) {\n          // push i & v\n          cindex.push(i);\n          cvalues.push(cij);\n        }\n      }\n    } // update cptr\n\n\n    cptr[columns] = cindex.length; // return sparse matrix\n\n    return sparseMatrix.createSparseMatrix({\n      values: cvalues,\n      index: cindex,\n      ptr: cptr,\n      size: [rows, columns],\n      datatype: dt\n    });\n  };\n});","import { factory } from '../../../utils/factory.js';\nimport { DimensionError } from '../../../error/DimensionError.js';\nvar name = 'algorithm03';\nvar dependencies = ['typed'];\nexport var createAlgorithm03 = /* #__PURE__ */factory(name, dependencies, (_ref) => {\n  var {\n    typed\n  } = _ref;\n\n  /**\n   * Iterates over SparseMatrix items and invokes the callback function f(Dij, Sij).\n   * Callback function invoked M*N times.\n   *\n   *\n   *          ┌  f(Dij, Sij)  ; S(i,j) !== 0\n   * C(i,j) = ┤\n   *          └  f(Dij, 0)    ; otherwise\n   *\n   *\n   * @param {Matrix}   denseMatrix       The DenseMatrix instance (D)\n   * @param {Matrix}   sparseMatrix      The SparseMatrix instance (C)\n   * @param {Function} callback          The f(Dij,Sij) operation to invoke, where Dij = DenseMatrix(i,j) and Sij = SparseMatrix(i,j)\n   * @param {boolean}  inverse           A true value indicates callback should be invoked f(Sij,Dij)\n   *\n   * @return {Matrix}                    DenseMatrix (C)\n   *\n   * see https://github.com/josdejong/mathjs/pull/346#issuecomment-97477571\n   */\n  return function algorithm03(denseMatrix, sparseMatrix, callback, inverse) {\n    // dense matrix arrays\n    var adata = denseMatrix._data;\n    var asize = denseMatrix._size;\n    var adt = denseMatrix._datatype; // sparse matrix arrays\n\n    var bvalues = sparseMatrix._values;\n    var bindex = sparseMatrix._index;\n    var bptr = sparseMatrix._ptr;\n    var bsize = sparseMatrix._size;\n    var bdt = sparseMatrix._datatype; // validate dimensions\n\n    if (asize.length !== bsize.length) {\n      throw new DimensionError(asize.length, bsize.length);\n    } // check rows & columns\n\n\n    if (asize[0] !== bsize[0] || asize[1] !== bsize[1]) {\n      throw new RangeError('Dimension mismatch. Matrix A (' + asize + ') must match Matrix B (' + bsize + ')');\n    } // sparse matrix cannot be a Pattern matrix\n\n\n    if (!bvalues) {\n      throw new Error('Cannot perform operation on Dense Matrix and Pattern Sparse Matrix');\n    } // rows & columns\n\n\n    var rows = asize[0];\n    var columns = asize[1]; // datatype\n\n    var dt; // zero value\n\n    var zero = 0; // callback signature to use\n\n    var cf = callback; // process data types\n\n    if (typeof adt === 'string' && adt === bdt) {\n      // datatype\n      dt = adt; // convert 0 to the same datatype\n\n      zero = typed.convert(0, dt); // callback\n\n      cf = typed.find(callback, [dt, dt]);\n    } // result (DenseMatrix)\n\n\n    var cdata = []; // initialize dense matrix\n\n    for (var z = 0; z < rows; z++) {\n      // initialize row\n      cdata[z] = [];\n    } // workspace\n\n\n    var x = []; // marks indicating we have a value in x for a given column\n\n    var w = []; // loop columns in b\n\n    for (var j = 0; j < columns; j++) {\n      // column mark\n      var mark = j + 1; // values in column j\n\n      for (var k0 = bptr[j], k1 = bptr[j + 1], k = k0; k < k1; k++) {\n        // row\n        var i = bindex[k]; // update workspace\n\n        x[i] = inverse ? cf(bvalues[k], adata[i][j]) : cf(adata[i][j], bvalues[k]);\n        w[i] = mark;\n      } // process workspace\n\n\n      for (var y = 0; y < rows; y++) {\n        // check we have a calculated value for current row\n        if (w[y] === mark) {\n          // use calculated value\n          cdata[y][j] = x[y];\n        } else {\n          // calculate value\n          cdata[y][j] = inverse ? cf(zero, adata[y][j]) : cf(adata[y][j], zero);\n        }\n      }\n    } // return dense matrix\n\n\n    return denseMatrix.createDenseMatrix({\n      data: cdata,\n      size: [rows, columns],\n      datatype: dt\n    });\n  };\n});","import { factory } from '../../../utils/factory.js';\nimport { DimensionError } from '../../../error/DimensionError.js';\nvar name = 'algorithm05';\nvar dependencies = ['typed', 'equalScalar'];\nexport var createAlgorithm05 = /* #__PURE__ */factory(name, dependencies, (_ref) => {\n  var {\n    typed,\n    equalScalar\n  } = _ref;\n\n  /**\n   * Iterates over SparseMatrix A and SparseMatrix B nonzero items and invokes the callback function f(Aij, Bij).\n   * Callback function invoked MAX(NNZA, NNZB) times\n   *\n   *\n   *          ┌  f(Aij, Bij)  ; A(i,j) !== 0 || B(i,j) !== 0\n   * C(i,j) = ┤\n   *          └  0            ; otherwise\n   *\n   *\n   * @param {Matrix}   a                 The SparseMatrix instance (A)\n   * @param {Matrix}   b                 The SparseMatrix instance (B)\n   * @param {Function} callback          The f(Aij,Bij) operation to invoke\n   *\n   * @return {Matrix}                    SparseMatrix (C)\n   *\n   * see https://github.com/josdejong/mathjs/pull/346#issuecomment-97620294\n   */\n  return function algorithm05(a, b, callback) {\n    // sparse matrix arrays\n    var avalues = a._values;\n    var aindex = a._index;\n    var aptr = a._ptr;\n    var asize = a._size;\n    var adt = a._datatype; // sparse matrix arrays\n\n    var bvalues = b._values;\n    var bindex = b._index;\n    var bptr = b._ptr;\n    var bsize = b._size;\n    var bdt = b._datatype; // validate dimensions\n\n    if (asize.length !== bsize.length) {\n      throw new DimensionError(asize.length, bsize.length);\n    } // check rows & columns\n\n\n    if (asize[0] !== bsize[0] || asize[1] !== bsize[1]) {\n      throw new RangeError('Dimension mismatch. Matrix A (' + asize + ') must match Matrix B (' + bsize + ')');\n    } // rows & columns\n\n\n    var rows = asize[0];\n    var columns = asize[1]; // datatype\n\n    var dt; // equal signature to use\n\n    var eq = equalScalar; // zero value\n\n    var zero = 0; // callback signature to use\n\n    var cf = callback; // process data types\n\n    if (typeof adt === 'string' && adt === bdt) {\n      // datatype\n      dt = adt; // find signature that matches (dt, dt)\n\n      eq = typed.find(equalScalar, [dt, dt]); // convert 0 to the same datatype\n\n      zero = typed.convert(0, dt); // callback\n\n      cf = typed.find(callback, [dt, dt]);\n    } // result arrays\n\n\n    var cvalues = avalues && bvalues ? [] : undefined;\n    var cindex = [];\n    var cptr = []; // workspaces\n\n    var xa = cvalues ? [] : undefined;\n    var xb = cvalues ? [] : undefined; // marks indicating we have a value in x for a given column\n\n    var wa = [];\n    var wb = []; // vars\n\n    var i, j, k, k1; // loop columns\n\n    for (j = 0; j < columns; j++) {\n      // update cptr\n      cptr[j] = cindex.length; // columns mark\n\n      var mark = j + 1; // loop values A(:,j)\n\n      for (k = aptr[j], k1 = aptr[j + 1]; k < k1; k++) {\n        // row\n        i = aindex[k]; // push index\n\n        cindex.push(i); // update workspace\n\n        wa[i] = mark; // check we need to process values\n\n        if (xa) {\n          xa[i] = avalues[k];\n        }\n      } // loop values B(:,j)\n\n\n      for (k = bptr[j], k1 = bptr[j + 1]; k < k1; k++) {\n        // row\n        i = bindex[k]; // check row existed in A\n\n        if (wa[i] !== mark) {\n          // push index\n          cindex.push(i);\n        } // update workspace\n\n\n        wb[i] = mark; // check we need to process values\n\n        if (xb) {\n          xb[i] = bvalues[k];\n        }\n      } // check we need to process values (non pattern matrix)\n\n\n      if (cvalues) {\n        // initialize first index in j\n        k = cptr[j]; // loop index in j\n\n        while (k < cindex.length) {\n          // row\n          i = cindex[k]; // marks\n\n          var wai = wa[i];\n          var wbi = wb[i]; // check Aij or Bij are nonzero\n\n          if (wai === mark || wbi === mark) {\n            // matrix values @ i,j\n            var va = wai === mark ? xa[i] : zero;\n            var vb = wbi === mark ? xb[i] : zero; // Cij\n\n            var vc = cf(va, vb); // check for zero\n\n            if (!eq(vc, zero)) {\n              // push value\n              cvalues.push(vc); // increment pointer\n\n              k++;\n            } else {\n              // remove value @ i, do not increment pointer\n              cindex.splice(k, 1);\n            }\n          }\n        }\n      }\n    } // update cptr\n\n\n    cptr[columns] = cindex.length; // return sparse matrix\n\n    return a.createSparseMatrix({\n      values: cvalues,\n      index: cindex,\n      ptr: cptr,\n      size: [rows, columns],\n      datatype: dt\n    });\n  };\n});","import { factory } from '../../../utils/factory.js';\nvar name = 'algorithm12';\nvar dependencies = ['typed', 'DenseMatrix'];\nexport var createAlgorithm12 = /* #__PURE__ */factory(name, dependencies, (_ref) => {\n  var {\n    typed,\n    DenseMatrix\n  } = _ref;\n\n  /**\n   * Iterates over SparseMatrix S nonzero items and invokes the callback function f(Sij, b).\n   * Callback function invoked MxN times.\n   *\n   *\n   *          ┌  f(Sij, b)  ; S(i,j) !== 0\n   * C(i,j) = ┤\n   *          └  f(0, b)    ; otherwise\n   *\n   *\n   * @param {Matrix}   s                 The SparseMatrix instance (S)\n   * @param {Scalar}   b                 The Scalar value\n   * @param {Function} callback          The f(Aij,b) operation to invoke\n   * @param {boolean}  inverse           A true value indicates callback should be invoked f(b,Sij)\n   *\n   * @return {Matrix}                    DenseMatrix (C)\n   *\n   * https://github.com/josdejong/mathjs/pull/346#issuecomment-97626813\n   */\n  return function algorithm12(s, b, callback, inverse) {\n    // sparse matrix arrays\n    var avalues = s._values;\n    var aindex = s._index;\n    var aptr = s._ptr;\n    var asize = s._size;\n    var adt = s._datatype; // sparse matrix cannot be a Pattern matrix\n\n    if (!avalues) {\n      throw new Error('Cannot perform operation on Pattern Sparse Matrix and Scalar value');\n    } // rows & columns\n\n\n    var rows = asize[0];\n    var columns = asize[1]; // datatype\n\n    var dt; // callback signature to use\n\n    var cf = callback; // process data types\n\n    if (typeof adt === 'string') {\n      // datatype\n      dt = adt; // convert b to the same datatype\n\n      b = typed.convert(b, dt); // callback\n\n      cf = typed.find(callback, [dt, dt]);\n    } // result arrays\n\n\n    var cdata = []; // workspaces\n\n    var x = []; // marks indicating we have a value in x for a given column\n\n    var w = []; // loop columns\n\n    for (var j = 0; j < columns; j++) {\n      // columns mark\n      var mark = j + 1; // values in j\n\n      for (var k0 = aptr[j], k1 = aptr[j + 1], k = k0; k < k1; k++) {\n        // row\n        var r = aindex[k]; // update workspace\n\n        x[r] = avalues[k];\n        w[r] = mark;\n      } // loop rows\n\n\n      for (var i = 0; i < rows; i++) {\n        // initialize C on first column\n        if (j === 0) {\n          // create row array\n          cdata[i] = [];\n        } // check sparse matrix has a value @ i,j\n\n\n        if (w[i] === mark) {\n          // invoke callback, update C\n          cdata[i][j] = inverse ? cf(b, x[i]) : cf(x[i], b);\n        } else {\n          // dense matrix value @ i, j\n          cdata[i][j] = inverse ? cf(b, 0) : cf(0, b);\n        }\n      }\n    } // return dense matrix\n\n\n    return new DenseMatrix({\n      data: cdata,\n      size: [rows, columns],\n      datatype: dt\n    });\n  };\n});","import { factory } from '../../utils/factory.js';\nimport { createAlgorithm02 } from '../../type/matrix/utils/algorithm02.js';\nimport { createAlgorithm03 } from '../../type/matrix/utils/algorithm03.js';\nimport { createAlgorithm05 } from '../../type/matrix/utils/algorithm05.js';\nimport { createAlgorithm11 } from '../../type/matrix/utils/algorithm11.js';\nimport { createAlgorithm12 } from '../../type/matrix/utils/algorithm12.js';\nimport { createAlgorithm13 } from '../../type/matrix/utils/algorithm13.js';\nimport { createAlgorithm14 } from '../../type/matrix/utils/algorithm14.js';\nimport { modNumber } from '../../plain/number/index.js';\nvar name = 'mod';\nvar dependencies = ['typed', 'matrix', 'equalScalar', 'DenseMatrix'];\nexport var createMod = /* #__PURE__ */factory(name, dependencies, (_ref) => {\n  var {\n    typed,\n    matrix,\n    equalScalar,\n    DenseMatrix\n  } = _ref;\n  var algorithm02 = createAlgorithm02({\n    typed,\n    equalScalar\n  });\n  var algorithm03 = createAlgorithm03({\n    typed\n  });\n  var algorithm05 = createAlgorithm05({\n    typed,\n    equalScalar\n  });\n  var algorithm11 = createAlgorithm11({\n    typed,\n    equalScalar\n  });\n  var algorithm12 = createAlgorithm12({\n    typed,\n    DenseMatrix\n  });\n  var algorithm13 = createAlgorithm13({\n    typed\n  });\n  var algorithm14 = createAlgorithm14({\n    typed\n  });\n  /**\n   * Calculates the modulus, the remainder of an integer division.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * The modulus is defined as:\n   *\n   *     x - y * floor(x / y)\n   *\n   * See https://en.wikipedia.org/wiki/Modulo_operation.\n   *\n   * Syntax:\n   *\n   *    math.mod(x, y)\n   *\n   * Examples:\n   *\n   *    math.mod(8, 3)                // returns 2\n   *    math.mod(11, 2)               // returns 1\n   *\n   *    function isOdd(x) {\n   *      return math.mod(x, 2) != 0\n   *    }\n   *\n   *    isOdd(2)                      // returns false\n   *    isOdd(3)                      // returns true\n   *\n   * See also:\n   *\n   *    divide\n   *\n   * @param  {number | BigNumber | Fraction | Array | Matrix} x Dividend\n   * @param  {number | BigNumber | Fraction | Array | Matrix} y Divisor\n   * @return {number | BigNumber | Fraction | Array | Matrix} Returns the remainder of `x` divided by `y`.\n   */\n\n  return typed(name, {\n    'number, number': modNumber,\n    'BigNumber, BigNumber': function BigNumberBigNumber(x, y) {\n      if (y.isNeg()) {\n        throw new Error('Cannot calculate mod for a negative divisor');\n      }\n\n      return y.isZero() ? x : x.mod(y);\n    },\n    'Fraction, Fraction': function FractionFraction(x, y) {\n      if (y.compare(0) < 0) {\n        throw new Error('Cannot calculate mod for a negative divisor');\n      } // Workaround suggested in Fraction.js library to calculate correct modulo for negative dividend\n\n\n      return x.compare(0) >= 0 ? x.mod(y) : x.mod(y).add(y).mod(y);\n    },\n    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {\n      return algorithm05(x, y, this, false);\n    },\n    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {\n      return algorithm02(y, x, this, true);\n    },\n    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {\n      return algorithm03(x, y, this, false);\n    },\n    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {\n      return algorithm13(x, y, this);\n    },\n    'Array, Array': function ArrayArray(x, y) {\n      // use matrix implementation\n      return this(matrix(x), matrix(y)).valueOf();\n    },\n    'Array, Matrix': function ArrayMatrix(x, y) {\n      // use matrix implementation\n      return this(matrix(x), y);\n    },\n    'Matrix, Array': function MatrixArray(x, y) {\n      // use matrix implementation\n      return this(x, matrix(y));\n    },\n    'SparseMatrix, any': function SparseMatrixAny(x, y) {\n      return algorithm11(x, y, this, false);\n    },\n    'DenseMatrix, any': function DenseMatrixAny(x, y) {\n      return algorithm14(x, y, this, false);\n    },\n    'any, SparseMatrix': function anySparseMatrix(x, y) {\n      return algorithm12(y, x, this, true);\n    },\n    'any, DenseMatrix': function anyDenseMatrix(x, y) {\n      return algorithm14(y, x, this, true);\n    },\n    'Array, any': function ArrayAny(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(x), y, this, false).valueOf();\n    },\n    'any, Array': function anyArray(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, this, true).valueOf();\n    }\n  });\n});","import { factory } from '../../utils/factory.js';\nimport { multiplyNumber } from '../../plain/number/index.js';\nvar name = 'multiplyScalar';\nvar dependencies = ['typed'];\nexport var createMultiplyScalar = /* #__PURE__ */factory(name, dependencies, (_ref) => {\n  var {\n    typed\n  } = _ref;\n\n  /**\n   * Multiply two scalar values, `x * y`.\n   * This function is meant for internal use: it is used by the public function\n   * `multiply`\n   *\n   * This function does not support collections (Array or Matrix).\n   *\n   * @param  {number | BigNumber | Fraction | Complex | Unit} x   First value to multiply\n   * @param  {number | BigNumber | Fraction | Complex} y          Second value to multiply\n   * @return {number | BigNumber | Fraction | Complex | Unit}     Multiplication of `x` and `y`\n   * @private\n   */\n  return typed('multiplyScalar', {\n    'number, number': multiplyNumber,\n    'Complex, Complex': function ComplexComplex(x, y) {\n      return x.mul(y);\n    },\n    'BigNumber, BigNumber': function BigNumberBigNumber(x, y) {\n      return x.times(y);\n    },\n    'Fraction, Fraction': function FractionFraction(x, y) {\n      return x.mul(y);\n    },\n    'number | Fraction | BigNumber | Complex, Unit': function numberFractionBigNumberComplexUnit(x, y) {\n      var res = y.clone();\n      res.value = res.value === null ? res._normalize(x) : this(res.value, x);\n      return res;\n    },\n    'Unit, number | Fraction | BigNumber | Complex': function UnitNumberFractionBigNumberComplex(x, y) {\n      var res = x.clone();\n      res.value = res.value === null ? res._normalize(y) : this(res.value, y);\n      return res;\n    },\n    'Unit, Unit': function UnitUnit(x, y) {\n      return x.multiply(y);\n    }\n  });\n});","import { factory } from '../../utils/factory.js';\nimport { isMatrix } from '../../utils/is.js';\nimport { extend } from '../../utils/object.js';\nimport { arraySize } from '../../utils/array.js';\nimport { createAlgorithm11 } from '../../type/matrix/utils/algorithm11.js';\nimport { createAlgorithm14 } from '../../type/matrix/utils/algorithm14.js';\nvar name = 'multiply';\nvar dependencies = ['typed', 'matrix', 'addScalar', 'multiplyScalar', 'equalScalar', 'dot'];\nexport var createMultiply = /* #__PURE__ */factory(name, dependencies, (_ref) => {\n  var {\n    typed,\n    matrix,\n    addScalar,\n    multiplyScalar,\n    equalScalar,\n    dot\n  } = _ref;\n  var algorithm11 = createAlgorithm11({\n    typed,\n    equalScalar\n  });\n  var algorithm14 = createAlgorithm14({\n    typed\n  });\n\n  function _validateMatrixDimensions(size1, size2) {\n    // check left operand dimensions\n    switch (size1.length) {\n      case 1:\n        // check size2\n        switch (size2.length) {\n          case 1:\n            // Vector x Vector\n            if (size1[0] !== size2[0]) {\n              // throw error\n              throw new RangeError('Dimension mismatch in multiplication. Vectors must have the same length');\n            }\n\n            break;\n\n          case 2:\n            // Vector x Matrix\n            if (size1[0] !== size2[0]) {\n              // throw error\n              throw new RangeError('Dimension mismatch in multiplication. Vector length (' + size1[0] + ') must match Matrix rows (' + size2[0] + ')');\n            }\n\n            break;\n\n          default:\n            throw new Error('Can only multiply a 1 or 2 dimensional matrix (Matrix B has ' + size2.length + ' dimensions)');\n        }\n\n        break;\n\n      case 2:\n        // check size2\n        switch (size2.length) {\n          case 1:\n            // Matrix x Vector\n            if (size1[1] !== size2[0]) {\n              // throw error\n              throw new RangeError('Dimension mismatch in multiplication. Matrix columns (' + size1[1] + ') must match Vector length (' + size2[0] + ')');\n            }\n\n            break;\n\n          case 2:\n            // Matrix x Matrix\n            if (size1[1] !== size2[0]) {\n              // throw error\n              throw new RangeError('Dimension mismatch in multiplication. Matrix A columns (' + size1[1] + ') must match Matrix B rows (' + size2[0] + ')');\n            }\n\n            break;\n\n          default:\n            throw new Error('Can only multiply a 1 or 2 dimensional matrix (Matrix B has ' + size2.length + ' dimensions)');\n        }\n\n        break;\n\n      default:\n        throw new Error('Can only multiply a 1 or 2 dimensional matrix (Matrix A has ' + size1.length + ' dimensions)');\n    }\n  }\n  /**\n   * C = A * B\n   *\n   * @param {Matrix} a            Dense Vector   (N)\n   * @param {Matrix} b            Dense Vector   (N)\n   *\n   * @return {number}             Scalar value\n   */\n\n\n  function _multiplyVectorVector(a, b, n) {\n    // check empty vector\n    if (n === 0) {\n      throw new Error('Cannot multiply two empty vectors');\n    }\n\n    return dot(a, b);\n  }\n  /**\n   * C = A * B\n   *\n   * @param {Matrix} a            Dense Vector   (M)\n   * @param {Matrix} b            Matrix         (MxN)\n   *\n   * @return {Matrix}             Dense Vector   (N)\n   */\n\n\n  function _multiplyVectorMatrix(a, b) {\n    // process storage\n    if (b.storage() !== 'dense') {\n      throw new Error('Support for SparseMatrix not implemented');\n    }\n\n    return _multiplyVectorDenseMatrix(a, b);\n  }\n  /**\n   * C = A * B\n   *\n   * @param {Matrix} a            Dense Vector   (M)\n   * @param {Matrix} b            Dense Matrix   (MxN)\n   *\n   * @return {Matrix}             Dense Vector   (N)\n   */\n\n\n  function _multiplyVectorDenseMatrix(a, b) {\n    // a dense\n    var adata = a._data;\n    var asize = a._size;\n    var adt = a._datatype; // b dense\n\n    var bdata = b._data;\n    var bsize = b._size;\n    var bdt = b._datatype; // rows & columns\n\n    var alength = asize[0];\n    var bcolumns = bsize[1]; // datatype\n\n    var dt; // addScalar signature to use\n\n    var af = addScalar; // multiplyScalar signature to use\n\n    var mf = multiplyScalar; // process data types\n\n    if (adt && bdt && adt === bdt && typeof adt === 'string') {\n      // datatype\n      dt = adt; // find signatures that matches (dt, dt)\n\n      af = typed.find(addScalar, [dt, dt]);\n      mf = typed.find(multiplyScalar, [dt, dt]);\n    } // result\n\n\n    var c = []; // loop matrix columns\n\n    for (var j = 0; j < bcolumns; j++) {\n      // sum (do not initialize it with zero)\n      var sum = mf(adata[0], bdata[0][j]); // loop vector\n\n      for (var i = 1; i < alength; i++) {\n        // multiply & accumulate\n        sum = af(sum, mf(adata[i], bdata[i][j]));\n      }\n\n      c[j] = sum;\n    } // return matrix\n\n\n    return a.createDenseMatrix({\n      data: c,\n      size: [bcolumns],\n      datatype: dt\n    });\n  }\n  /**\n   * C = A * B\n   *\n   * @param {Matrix} a            Matrix         (MxN)\n   * @param {Matrix} b            Dense Vector   (N)\n   *\n   * @return {Matrix}             Dense Vector   (M)\n   */\n\n\n  var _multiplyMatrixVector = typed('_multiplyMatrixVector', {\n    'DenseMatrix, any': _multiplyDenseMatrixVector,\n    'SparseMatrix, any': _multiplySparseMatrixVector\n  });\n  /**\n   * C = A * B\n   *\n   * @param {Matrix} a            Matrix         (MxN)\n   * @param {Matrix} b            Matrix         (NxC)\n   *\n   * @return {Matrix}             Matrix         (MxC)\n   */\n\n\n  var _multiplyMatrixMatrix = typed('_multiplyMatrixMatrix', {\n    'DenseMatrix, DenseMatrix': _multiplyDenseMatrixDenseMatrix,\n    'DenseMatrix, SparseMatrix': _multiplyDenseMatrixSparseMatrix,\n    'SparseMatrix, DenseMatrix': _multiplySparseMatrixDenseMatrix,\n    'SparseMatrix, SparseMatrix': _multiplySparseMatrixSparseMatrix\n  });\n  /**\n   * C = A * B\n   *\n   * @param {Matrix} a            DenseMatrix  (MxN)\n   * @param {Matrix} b            Dense Vector (N)\n   *\n   * @return {Matrix}             Dense Vector (M)\n   */\n\n\n  function _multiplyDenseMatrixVector(a, b) {\n    // a dense\n    var adata = a._data;\n    var asize = a._size;\n    var adt = a._datatype; // b dense\n\n    var bdata = b._data;\n    var bdt = b._datatype; // rows & columns\n\n    var arows = asize[0];\n    var acolumns = asize[1]; // datatype\n\n    var dt; // addScalar signature to use\n\n    var af = addScalar; // multiplyScalar signature to use\n\n    var mf = multiplyScalar; // process data types\n\n    if (adt && bdt && adt === bdt && typeof adt === 'string') {\n      // datatype\n      dt = adt; // find signatures that matches (dt, dt)\n\n      af = typed.find(addScalar, [dt, dt]);\n      mf = typed.find(multiplyScalar, [dt, dt]);\n    } // result\n\n\n    var c = []; // loop matrix a rows\n\n    for (var i = 0; i < arows; i++) {\n      // current row\n      var row = adata[i]; // sum (do not initialize it with zero)\n\n      var sum = mf(row[0], bdata[0]); // loop matrix a columns\n\n      for (var j = 1; j < acolumns; j++) {\n        // multiply & accumulate\n        sum = af(sum, mf(row[j], bdata[j]));\n      }\n\n      c[i] = sum;\n    } // return matrix\n\n\n    return a.createDenseMatrix({\n      data: c,\n      size: [arows],\n      datatype: dt\n    });\n  }\n  /**\n   * C = A * B\n   *\n   * @param {Matrix} a            DenseMatrix    (MxN)\n   * @param {Matrix} b            DenseMatrix    (NxC)\n   *\n   * @return {Matrix}             DenseMatrix    (MxC)\n   */\n\n\n  function _multiplyDenseMatrixDenseMatrix(a, b) {\n    // a dense\n    var adata = a._data;\n    var asize = a._size;\n    var adt = a._datatype; // b dense\n\n    var bdata = b._data;\n    var bsize = b._size;\n    var bdt = b._datatype; // rows & columns\n\n    var arows = asize[0];\n    var acolumns = asize[1];\n    var bcolumns = bsize[1]; // datatype\n\n    var dt; // addScalar signature to use\n\n    var af = addScalar; // multiplyScalar signature to use\n\n    var mf = multiplyScalar; // process data types\n\n    if (adt && bdt && adt === bdt && typeof adt === 'string') {\n      // datatype\n      dt = adt; // find signatures that matches (dt, dt)\n\n      af = typed.find(addScalar, [dt, dt]);\n      mf = typed.find(multiplyScalar, [dt, dt]);\n    } // result\n\n\n    var c = []; // loop matrix a rows\n\n    for (var i = 0; i < arows; i++) {\n      // current row\n      var row = adata[i]; // initialize row array\n\n      c[i] = []; // loop matrix b columns\n\n      for (var j = 0; j < bcolumns; j++) {\n        // sum (avoid initializing sum to zero)\n        var sum = mf(row[0], bdata[0][j]); // loop matrix a columns\n\n        for (var x = 1; x < acolumns; x++) {\n          // multiply & accumulate\n          sum = af(sum, mf(row[x], bdata[x][j]));\n        }\n\n        c[i][j] = sum;\n      }\n    } // return matrix\n\n\n    return a.createDenseMatrix({\n      data: c,\n      size: [arows, bcolumns],\n      datatype: dt\n    });\n  }\n  /**\n   * C = A * B\n   *\n   * @param {Matrix} a            DenseMatrix    (MxN)\n   * @param {Matrix} b            SparseMatrix   (NxC)\n   *\n   * @return {Matrix}             SparseMatrix   (MxC)\n   */\n\n\n  function _multiplyDenseMatrixSparseMatrix(a, b) {\n    // a dense\n    var adata = a._data;\n    var asize = a._size;\n    var adt = a._datatype; // b sparse\n\n    var bvalues = b._values;\n    var bindex = b._index;\n    var bptr = b._ptr;\n    var bsize = b._size;\n    var bdt = b._datatype; // validate b matrix\n\n    if (!bvalues) {\n      throw new Error('Cannot multiply Dense Matrix times Pattern only Matrix');\n    } // rows & columns\n\n\n    var arows = asize[0];\n    var bcolumns = bsize[1]; // datatype\n\n    var dt; // addScalar signature to use\n\n    var af = addScalar; // multiplyScalar signature to use\n\n    var mf = multiplyScalar; // equalScalar signature to use\n\n    var eq = equalScalar; // zero value\n\n    var zero = 0; // process data types\n\n    if (adt && bdt && adt === bdt && typeof adt === 'string') {\n      // datatype\n      dt = adt; // find signatures that matches (dt, dt)\n\n      af = typed.find(addScalar, [dt, dt]);\n      mf = typed.find(multiplyScalar, [dt, dt]);\n      eq = typed.find(equalScalar, [dt, dt]); // convert 0 to the same datatype\n\n      zero = typed.convert(0, dt);\n    } // result\n\n\n    var cvalues = [];\n    var cindex = [];\n    var cptr = []; // c matrix\n\n    var c = b.createSparseMatrix({\n      values: cvalues,\n      index: cindex,\n      ptr: cptr,\n      size: [arows, bcolumns],\n      datatype: dt\n    }); // loop b columns\n\n    for (var jb = 0; jb < bcolumns; jb++) {\n      // update ptr\n      cptr[jb] = cindex.length; // indeces in column jb\n\n      var kb0 = bptr[jb];\n      var kb1 = bptr[jb + 1]; // do not process column jb if no data exists\n\n      if (kb1 > kb0) {\n        // last row mark processed\n        var last = 0; // loop a rows\n\n        for (var i = 0; i < arows; i++) {\n          // column mark\n          var mark = i + 1; // C[i, jb]\n\n          var cij = void 0; // values in b column j\n\n          for (var kb = kb0; kb < kb1; kb++) {\n            // row\n            var ib = bindex[kb]; // check value has been initialized\n\n            if (last !== mark) {\n              // first value in column jb\n              cij = mf(adata[i][ib], bvalues[kb]); // update mark\n\n              last = mark;\n            } else {\n              // accumulate value\n              cij = af(cij, mf(adata[i][ib], bvalues[kb]));\n            }\n          } // check column has been processed and value != 0\n\n\n          if (last === mark && !eq(cij, zero)) {\n            // push row & value\n            cindex.push(i);\n            cvalues.push(cij);\n          }\n        }\n      }\n    } // update ptr\n\n\n    cptr[bcolumns] = cindex.length; // return sparse matrix\n\n    return c;\n  }\n  /**\n   * C = A * B\n   *\n   * @param {Matrix} a            SparseMatrix    (MxN)\n   * @param {Matrix} b            Dense Vector (N)\n   *\n   * @return {Matrix}             SparseMatrix    (M, 1)\n   */\n\n\n  function _multiplySparseMatrixVector(a, b) {\n    // a sparse\n    var avalues = a._values;\n    var aindex = a._index;\n    var aptr = a._ptr;\n    var adt = a._datatype; // validate a matrix\n\n    if (!avalues) {\n      throw new Error('Cannot multiply Pattern only Matrix times Dense Matrix');\n    } // b dense\n\n\n    var bdata = b._data;\n    var bdt = b._datatype; // rows & columns\n\n    var arows = a._size[0];\n    var brows = b._size[0]; // result\n\n    var cvalues = [];\n    var cindex = [];\n    var cptr = []; // datatype\n\n    var dt; // addScalar signature to use\n\n    var af = addScalar; // multiplyScalar signature to use\n\n    var mf = multiplyScalar; // equalScalar signature to use\n\n    var eq = equalScalar; // zero value\n\n    var zero = 0; // process data types\n\n    if (adt && bdt && adt === bdt && typeof adt === 'string') {\n      // datatype\n      dt = adt; // find signatures that matches (dt, dt)\n\n      af = typed.find(addScalar, [dt, dt]);\n      mf = typed.find(multiplyScalar, [dt, dt]);\n      eq = typed.find(equalScalar, [dt, dt]); // convert 0 to the same datatype\n\n      zero = typed.convert(0, dt);\n    } // workspace\n\n\n    var x = []; // vector with marks indicating a value x[i] exists in a given column\n\n    var w = []; // update ptr\n\n    cptr[0] = 0; // rows in b\n\n    for (var ib = 0; ib < brows; ib++) {\n      // b[ib]\n      var vbi = bdata[ib]; // check b[ib] != 0, avoid loops\n\n      if (!eq(vbi, zero)) {\n        // A values & index in ib column\n        for (var ka0 = aptr[ib], ka1 = aptr[ib + 1], ka = ka0; ka < ka1; ka++) {\n          // a row\n          var ia = aindex[ka]; // check value exists in current j\n\n          if (!w[ia]) {\n            // ia is new entry in j\n            w[ia] = true; // add i to pattern of C\n\n            cindex.push(ia); // x(ia) = A\n\n            x[ia] = mf(vbi, avalues[ka]);\n          } else {\n            // i exists in C already\n            x[ia] = af(x[ia], mf(vbi, avalues[ka]));\n          }\n        }\n      }\n    } // copy values from x to column jb of c\n\n\n    for (var p1 = cindex.length, p = 0; p < p1; p++) {\n      // row\n      var ic = cindex[p]; // copy value\n\n      cvalues[p] = x[ic];\n    } // update ptr\n\n\n    cptr[1] = cindex.length; // return sparse matrix\n\n    return a.createSparseMatrix({\n      values: cvalues,\n      index: cindex,\n      ptr: cptr,\n      size: [arows, 1],\n      datatype: dt\n    });\n  }\n  /**\n   * C = A * B\n   *\n   * @param {Matrix} a            SparseMatrix      (MxN)\n   * @param {Matrix} b            DenseMatrix       (NxC)\n   *\n   * @return {Matrix}             SparseMatrix      (MxC)\n   */\n\n\n  function _multiplySparseMatrixDenseMatrix(a, b) {\n    // a sparse\n    var avalues = a._values;\n    var aindex = a._index;\n    var aptr = a._ptr;\n    var adt = a._datatype; // validate a matrix\n\n    if (!avalues) {\n      throw new Error('Cannot multiply Pattern only Matrix times Dense Matrix');\n    } // b dense\n\n\n    var bdata = b._data;\n    var bdt = b._datatype; // rows & columns\n\n    var arows = a._size[0];\n    var brows = b._size[0];\n    var bcolumns = b._size[1]; // datatype\n\n    var dt; // addScalar signature to use\n\n    var af = addScalar; // multiplyScalar signature to use\n\n    var mf = multiplyScalar; // equalScalar signature to use\n\n    var eq = equalScalar; // zero value\n\n    var zero = 0; // process data types\n\n    if (adt && bdt && adt === bdt && typeof adt === 'string') {\n      // datatype\n      dt = adt; // find signatures that matches (dt, dt)\n\n      af = typed.find(addScalar, [dt, dt]);\n      mf = typed.find(multiplyScalar, [dt, dt]);\n      eq = typed.find(equalScalar, [dt, dt]); // convert 0 to the same datatype\n\n      zero = typed.convert(0, dt);\n    } // result\n\n\n    var cvalues = [];\n    var cindex = [];\n    var cptr = []; // c matrix\n\n    var c = a.createSparseMatrix({\n      values: cvalues,\n      index: cindex,\n      ptr: cptr,\n      size: [arows, bcolumns],\n      datatype: dt\n    }); // workspace\n\n    var x = []; // vector with marks indicating a value x[i] exists in a given column\n\n    var w = []; // loop b columns\n\n    for (var jb = 0; jb < bcolumns; jb++) {\n      // update ptr\n      cptr[jb] = cindex.length; // mark in workspace for current column\n\n      var mark = jb + 1; // rows in jb\n\n      for (var ib = 0; ib < brows; ib++) {\n        // b[ib, jb]\n        var vbij = bdata[ib][jb]; // check b[ib, jb] != 0, avoid loops\n\n        if (!eq(vbij, zero)) {\n          // A values & index in ib column\n          for (var ka0 = aptr[ib], ka1 = aptr[ib + 1], ka = ka0; ka < ka1; ka++) {\n            // a row\n            var ia = aindex[ka]; // check value exists in current j\n\n            if (w[ia] !== mark) {\n              // ia is new entry in j\n              w[ia] = mark; // add i to pattern of C\n\n              cindex.push(ia); // x(ia) = A\n\n              x[ia] = mf(vbij, avalues[ka]);\n            } else {\n              // i exists in C already\n              x[ia] = af(x[ia], mf(vbij, avalues[ka]));\n            }\n          }\n        }\n      } // copy values from x to column jb of c\n\n\n      for (var p0 = cptr[jb], p1 = cindex.length, p = p0; p < p1; p++) {\n        // row\n        var ic = cindex[p]; // copy value\n\n        cvalues[p] = x[ic];\n      }\n    } // update ptr\n\n\n    cptr[bcolumns] = cindex.length; // return sparse matrix\n\n    return c;\n  }\n  /**\n   * C = A * B\n   *\n   * @param {Matrix} a            SparseMatrix      (MxN)\n   * @param {Matrix} b            SparseMatrix      (NxC)\n   *\n   * @return {Matrix}             SparseMatrix      (MxC)\n   */\n\n\n  function _multiplySparseMatrixSparseMatrix(a, b) {\n    // a sparse\n    var avalues = a._values;\n    var aindex = a._index;\n    var aptr = a._ptr;\n    var adt = a._datatype; // b sparse\n\n    var bvalues = b._values;\n    var bindex = b._index;\n    var bptr = b._ptr;\n    var bdt = b._datatype; // rows & columns\n\n    var arows = a._size[0];\n    var bcolumns = b._size[1]; // flag indicating both matrices (a & b) contain data\n\n    var values = avalues && bvalues; // datatype\n\n    var dt; // addScalar signature to use\n\n    var af = addScalar; // multiplyScalar signature to use\n\n    var mf = multiplyScalar; // process data types\n\n    if (adt && bdt && adt === bdt && typeof adt === 'string') {\n      // datatype\n      dt = adt; // find signatures that matches (dt, dt)\n\n      af = typed.find(addScalar, [dt, dt]);\n      mf = typed.find(multiplyScalar, [dt, dt]);\n    } // result\n\n\n    var cvalues = values ? [] : undefined;\n    var cindex = [];\n    var cptr = []; // c matrix\n\n    var c = a.createSparseMatrix({\n      values: cvalues,\n      index: cindex,\n      ptr: cptr,\n      size: [arows, bcolumns],\n      datatype: dt\n    }); // workspace\n\n    var x = values ? [] : undefined; // vector with marks indicating a value x[i] exists in a given column\n\n    var w = []; // variables\n\n    var ka, ka0, ka1, kb, kb0, kb1, ia, ib; // loop b columns\n\n    for (var jb = 0; jb < bcolumns; jb++) {\n      // update ptr\n      cptr[jb] = cindex.length; // mark in workspace for current column\n\n      var mark = jb + 1; // B values & index in j\n\n      for (kb0 = bptr[jb], kb1 = bptr[jb + 1], kb = kb0; kb < kb1; kb++) {\n        // b row\n        ib = bindex[kb]; // check we need to process values\n\n        if (values) {\n          // loop values in a[:,ib]\n          for (ka0 = aptr[ib], ka1 = aptr[ib + 1], ka = ka0; ka < ka1; ka++) {\n            // row\n            ia = aindex[ka]; // check value exists in current j\n\n            if (w[ia] !== mark) {\n              // ia is new entry in j\n              w[ia] = mark; // add i to pattern of C\n\n              cindex.push(ia); // x(ia) = A\n\n              x[ia] = mf(bvalues[kb], avalues[ka]);\n            } else {\n              // i exists in C already\n              x[ia] = af(x[ia], mf(bvalues[kb], avalues[ka]));\n            }\n          }\n        } else {\n          // loop values in a[:,ib]\n          for (ka0 = aptr[ib], ka1 = aptr[ib + 1], ka = ka0; ka < ka1; ka++) {\n            // row\n            ia = aindex[ka]; // check value exists in current j\n\n            if (w[ia] !== mark) {\n              // ia is new entry in j\n              w[ia] = mark; // add i to pattern of C\n\n              cindex.push(ia);\n            }\n          }\n        }\n      } // check we need to process matrix values (pattern matrix)\n\n\n      if (values) {\n        // copy values from x to column jb of c\n        for (var p0 = cptr[jb], p1 = cindex.length, p = p0; p < p1; p++) {\n          // row\n          var ic = cindex[p]; // copy value\n\n          cvalues[p] = x[ic];\n        }\n      }\n    } // update ptr\n\n\n    cptr[bcolumns] = cindex.length; // return sparse matrix\n\n    return c;\n  }\n  /**\n   * Multiply two or more values, `x * y`.\n   * For matrices, the matrix product is calculated.\n   *\n   * Syntax:\n   *\n   *    math.multiply(x, y)\n   *    math.multiply(x, y, z, ...)\n   *\n   * Examples:\n   *\n   *    math.multiply(4, 5.2)        // returns number 20.8\n   *    math.multiply(2, 3, 4)       // returns number 24\n   *\n   *    const a = math.complex(2, 3)\n   *    const b = math.complex(4, 1)\n   *    math.multiply(a, b)          // returns Complex 5 + 14i\n   *\n   *    const c = [[1, 2], [4, 3]]\n   *    const d = [[1, 2, 3], [3, -4, 7]]\n   *    math.multiply(c, d)          // returns Array [[7, -6, 17], [13, -4, 33]]\n   *\n   *    const e = math.unit('2.1 km')\n   *    math.multiply(3, e)          // returns Unit 6.3 km\n   *\n   * See also:\n   *\n   *    divide, prod, cross, dot\n   *\n   * @param  {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} x First value to multiply\n   * @param  {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} y Second value to multiply\n   * @return {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} Multiplication of `x` and `y`\n   */\n\n\n  return typed(name, extend({\n    // we extend the signatures of multiplyScalar with signatures dealing with matrices\n    'Array, Array': function ArrayArray(x, y) {\n      // check dimensions\n      _validateMatrixDimensions(arraySize(x), arraySize(y)); // use dense matrix implementation\n\n\n      var m = this(matrix(x), matrix(y)); // return array or scalar\n\n      return isMatrix(m) ? m.valueOf() : m;\n    },\n    'Matrix, Matrix': function MatrixMatrix(x, y) {\n      // dimensions\n      var xsize = x.size();\n      var ysize = y.size(); // check dimensions\n\n      _validateMatrixDimensions(xsize, ysize); // process dimensions\n\n\n      if (xsize.length === 1) {\n        // process y dimensions\n        if (ysize.length === 1) {\n          // Vector * Vector\n          return _multiplyVectorVector(x, y, xsize[0]);\n        } // Vector * Matrix\n\n\n        return _multiplyVectorMatrix(x, y);\n      } // process y dimensions\n\n\n      if (ysize.length === 1) {\n        // Matrix * Vector\n        return _multiplyMatrixVector(x, y);\n      } // Matrix * Matrix\n\n\n      return _multiplyMatrixMatrix(x, y);\n    },\n    'Matrix, Array': function MatrixArray(x, y) {\n      // use Matrix * Matrix implementation\n      return this(x, matrix(y));\n    },\n    'Array, Matrix': function ArrayMatrix(x, y) {\n      // use Matrix * Matrix implementation\n      return this(matrix(x, y.storage()), y);\n    },\n    'SparseMatrix, any': function SparseMatrixAny(x, y) {\n      return algorithm11(x, y, multiplyScalar, false);\n    },\n    'DenseMatrix, any': function DenseMatrixAny(x, y) {\n      return algorithm14(x, y, multiplyScalar, false);\n    },\n    'any, SparseMatrix': function anySparseMatrix(x, y) {\n      return algorithm11(y, x, multiplyScalar, true);\n    },\n    'any, DenseMatrix': function anyDenseMatrix(x, y) {\n      return algorithm14(y, x, multiplyScalar, true);\n    },\n    'Array, any': function ArrayAny(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(x), y, multiplyScalar, false).valueOf();\n    },\n    'any, Array': function anyArray(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, multiplyScalar, true).valueOf();\n    },\n    'any, any': multiplyScalar,\n    'any, any, ...any': function anyAnyAny(x, y, rest) {\n      var result = this(x, y);\n\n      for (var i = 0; i < rest.length; i++) {\n        result = this(result, rest[i]);\n      }\n\n      return result;\n    }\n  }, multiplyScalar.signatures));\n});","import { factory } from '../../utils/factory.js';\nimport { DimensionError } from '../../error/DimensionError.js';\nimport { createAlgorithm01 } from '../../type/matrix/utils/algorithm01.js';\nimport { createAlgorithm03 } from '../../type/matrix/utils/algorithm03.js';\nimport { createAlgorithm05 } from '../../type/matrix/utils/algorithm05.js';\nimport { createAlgorithm10 } from '../../type/matrix/utils/algorithm10.js';\nimport { createAlgorithm13 } from '../../type/matrix/utils/algorithm13.js';\nimport { createAlgorithm14 } from '../../type/matrix/utils/algorithm14.js';\nvar name = 'subtract';\nvar dependencies = ['typed', 'matrix', 'equalScalar', 'addScalar', 'unaryMinus', 'DenseMatrix'];\nexport var createSubtract = /* #__PURE__ */factory(name, dependencies, (_ref) => {\n  var {\n    typed,\n    matrix,\n    equalScalar,\n    addScalar,\n    unaryMinus,\n    DenseMatrix\n  } = _ref;\n  // TODO: split function subtract in two: subtract and subtractScalar\n  var algorithm01 = createAlgorithm01({\n    typed\n  });\n  var algorithm03 = createAlgorithm03({\n    typed\n  });\n  var algorithm05 = createAlgorithm05({\n    typed,\n    equalScalar\n  });\n  var algorithm10 = createAlgorithm10({\n    typed,\n    DenseMatrix\n  });\n  var algorithm13 = createAlgorithm13({\n    typed\n  });\n  var algorithm14 = createAlgorithm14({\n    typed\n  });\n  /**\n   * Subtract two values, `x - y`.\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.subtract(x, y)\n   *\n   * Examples:\n   *\n   *    math.subtract(5.3, 2)        // returns number 3.3\n   *\n   *    const a = math.complex(2, 3)\n   *    const b = math.complex(4, 1)\n   *    math.subtract(a, b)          // returns Complex -2 + 2i\n   *\n   *    math.subtract([5, 7, 4], 4)  // returns Array [1, 3, 0]\n   *\n   *    const c = math.unit('2.1 km')\n   *    const d = math.unit('500m')\n   *    math.subtract(c, d)          // returns Unit 1.6 km\n   *\n   * See also:\n   *\n   *    add\n   *\n   * @param  {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} x\n   *            Initial value\n   * @param  {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} y\n   *            Value to subtract from `x`\n   * @return {number | BigNumber | Fraction | Complex | Unit | Array | Matrix}\n   *            Subtraction of `x` and `y`\n   */\n\n  return typed(name, {\n    'number, number': function numberNumber(x, y) {\n      return x - y;\n    },\n    'Complex, Complex': function ComplexComplex(x, y) {\n      return x.sub(y);\n    },\n    'BigNumber, BigNumber': function BigNumberBigNumber(x, y) {\n      return x.minus(y);\n    },\n    'Fraction, Fraction': function FractionFraction(x, y) {\n      return x.sub(y);\n    },\n    'Unit, Unit': function UnitUnit(x, y) {\n      if (x.value === null) {\n        throw new Error('Parameter x contains a unit with undefined value');\n      }\n\n      if (y.value === null) {\n        throw new Error('Parameter y contains a unit with undefined value');\n      }\n\n      if (!x.equalBase(y)) {\n        throw new Error('Units do not match');\n      }\n\n      var res = x.clone();\n      res.value = this(res.value, y.value);\n      res.fixPrefix = false;\n      return res;\n    },\n    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {\n      checkEqualDimensions(x, y);\n      return algorithm05(x, y, this);\n    },\n    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {\n      checkEqualDimensions(x, y);\n      return algorithm03(y, x, this, true);\n    },\n    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {\n      checkEqualDimensions(x, y);\n      return algorithm01(x, y, this, false);\n    },\n    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {\n      checkEqualDimensions(x, y);\n      return algorithm13(x, y, this);\n    },\n    'Array, Array': function ArrayArray(x, y) {\n      // use matrix implementation\n      return this(matrix(x), matrix(y)).valueOf();\n    },\n    'Array, Matrix': function ArrayMatrix(x, y) {\n      // use matrix implementation\n      return this(matrix(x), y);\n    },\n    'Matrix, Array': function MatrixArray(x, y) {\n      // use matrix implementation\n      return this(x, matrix(y));\n    },\n    'SparseMatrix, any': function SparseMatrixAny(x, y) {\n      return algorithm10(x, unaryMinus(y), addScalar);\n    },\n    'DenseMatrix, any': function DenseMatrixAny(x, y) {\n      return algorithm14(x, y, this);\n    },\n    'any, SparseMatrix': function anySparseMatrix(x, y) {\n      return algorithm10(y, x, this, true);\n    },\n    'any, DenseMatrix': function anyDenseMatrix(x, y) {\n      return algorithm14(y, x, this, true);\n    },\n    'Array, any': function ArrayAny(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(x), y, this, false).valueOf();\n    },\n    'any, Array': function anyArray(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, this, true).valueOf();\n    }\n  });\n});\n/**\n * Check whether matrix x and y have the same number of dimensions.\n * Throws a DimensionError when dimensions are not equal\n * @param {Matrix} x\n * @param {Matrix} y\n */\n\nfunction checkEqualDimensions(x, y) {\n  var xsize = x.size();\n  var ysize = y.size();\n\n  if (xsize.length !== ysize.length) {\n    throw new DimensionError(xsize.length, ysize.length);\n  }\n}","import { factory } from '../../../utils/factory.js';\nimport { DimensionError } from '../../../error/DimensionError.js';\nvar name = 'algorithm07';\nvar dependencies = ['typed', 'DenseMatrix'];\nexport var createAlgorithm07 = /* #__PURE__ */factory(name, dependencies, (_ref) => {\n  var {\n    typed,\n    DenseMatrix\n  } = _ref;\n\n  /**\n   * Iterates over SparseMatrix A and SparseMatrix B items (zero and nonzero) and invokes the callback function f(Aij, Bij).\n   * Callback function invoked MxN times.\n   *\n   * C(i,j) = f(Aij, Bij)\n   *\n   * @param {Matrix}   a                 The SparseMatrix instance (A)\n   * @param {Matrix}   b                 The SparseMatrix instance (B)\n   * @param {Function} callback          The f(Aij,Bij) operation to invoke\n   *\n   * @return {Matrix}                    DenseMatrix (C)\n   *\n   * see https://github.com/josdejong/mathjs/pull/346#issuecomment-97620294\n   */\n  return function algorithm07(a, b, callback) {\n    // sparse matrix arrays\n    var asize = a._size;\n    var adt = a._datatype; // sparse matrix arrays\n\n    var bsize = b._size;\n    var bdt = b._datatype; // validate dimensions\n\n    if (asize.length !== bsize.length) {\n      throw new DimensionError(asize.length, bsize.length);\n    } // check rows & columns\n\n\n    if (asize[0] !== bsize[0] || asize[1] !== bsize[1]) {\n      throw new RangeError('Dimension mismatch. Matrix A (' + asize + ') must match Matrix B (' + bsize + ')');\n    } // rows & columns\n\n\n    var rows = asize[0];\n    var columns = asize[1]; // datatype\n\n    var dt; // zero value\n\n    var zero = 0; // callback signature to use\n\n    var cf = callback; // process data types\n\n    if (typeof adt === 'string' && adt === bdt) {\n      // datatype\n      dt = adt; // convert 0 to the same datatype\n\n      zero = typed.convert(0, dt); // callback\n\n      cf = typed.find(callback, [dt, dt]);\n    } // vars\n\n\n    var i, j; // result arrays\n\n    var cdata = []; // initialize c\n\n    for (i = 0; i < rows; i++) {\n      cdata[i] = [];\n    } // workspaces\n\n\n    var xa = [];\n    var xb = []; // marks indicating we have a value in x for a given column\n\n    var wa = [];\n    var wb = []; // loop columns\n\n    for (j = 0; j < columns; j++) {\n      // columns mark\n      var mark = j + 1; // scatter the values of A(:,j) into workspace\n\n      _scatter(a, j, wa, xa, mark); // scatter the values of B(:,j) into workspace\n\n\n      _scatter(b, j, wb, xb, mark); // loop rows\n\n\n      for (i = 0; i < rows; i++) {\n        // matrix values @ i,j\n        var va = wa[i] === mark ? xa[i] : zero;\n        var vb = wb[i] === mark ? xb[i] : zero; // invoke callback\n\n        cdata[i][j] = cf(va, vb);\n      }\n    } // return dense matrix\n\n\n    return new DenseMatrix({\n      data: cdata,\n      size: [rows, columns],\n      datatype: dt\n    });\n  };\n\n  function _scatter(m, j, w, x, mark) {\n    // a arrays\n    var values = m._values;\n    var index = m._index;\n    var ptr = m._ptr; // loop values in column j\n\n    for (var k = ptr[j], k1 = ptr[j + 1]; k < k1; k++) {\n      // row\n      var i = index[k]; // update workspace\n\n      w[i] = mark;\n      x[i] = values[k];\n    }\n  }\n});","import { factory } from '../../utils/factory.js';\nimport { deepMap } from '../../utils/collection.js';\nvar name = 'conj';\nvar dependencies = ['typed'];\nexport var createConj = /* #__PURE__ */factory(name, dependencies, (_ref) => {\n  var {\n    typed\n  } = _ref;\n\n  /**\n   * Compute the complex conjugate of a complex value.\n   * If `x = a+bi`, the complex conjugate of `x` is `a - bi`.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.conj(x)\n   *\n   * Examples:\n   *\n   *    math.conj(math.complex('2 + 3i'))  // returns Complex 2 - 3i\n   *    math.conj(math.complex('2 - 3i'))  // returns Complex 2 + 3i\n   *    math.conj(math.complex('-5.2i'))  // returns Complex 5.2i\n   *\n   * See also:\n   *\n   *    re, im, arg, abs\n   *\n   * @param {number | BigNumber | Complex | Array | Matrix} x\n   *            A complex number or array with complex numbers\n   * @return {number | BigNumber | Complex | Array | Matrix}\n   *            The complex conjugate of x\n   */\n  return typed(name, {\n    number: function number(x) {\n      return x;\n    },\n    BigNumber: function BigNumber(x) {\n      return x;\n    },\n    Complex: function Complex(x) {\n      return x.conjugate();\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      return deepMap(x, this);\n    }\n  });\n});","// (c) 2018, Mariusz Nowak\n// SPDX-License-Identifier: ISC\n// Derived from https://github.com/medikoo/lru-queue\nexport function lruQueue(limit) {\n  var size = 0;\n  var base = 1;\n  var queue = Object.create(null);\n  var map = Object.create(null);\n  var index = 0;\n\n  var del = function del(id) {\n    var oldIndex = map[id];\n    if (!oldIndex) return;\n    delete queue[oldIndex];\n    delete map[id];\n    --size;\n    if (base !== oldIndex) return;\n\n    if (!size) {\n      index = 0;\n      base = 1;\n      return;\n    }\n\n    while (!hasOwnProperty.call(queue, ++base)) {\n      continue;\n    }\n  };\n\n  limit = Math.abs(limit);\n  return {\n    hit: function hit(id) {\n      var oldIndex = map[id];\n      var nuIndex = ++index;\n      queue[nuIndex] = id;\n      map[id] = nuIndex;\n\n      if (!oldIndex) {\n        ++size;\n        if (size <= limit) return undefined;\n        id = queue[base];\n        del(id);\n        return id;\n      }\n\n      delete queue[oldIndex];\n      if (base !== oldIndex) return undefined;\n\n      while (!hasOwnProperty.call(queue, ++base)) {\n        continue;\n      }\n\n      return undefined;\n    },\n    delete: del,\n    clear: function clear() {\n      size = index = 0;\n      base = 1;\n      queue = Object.create(null);\n      map = Object.create(null);\n    }\n  };\n}\n;","// function utils\nimport { lruQueue } from './lruQueue.js';\n/**\n * Memoize a given function by caching the computed result.\n * The cache of a memoized function can be cleared by deleting the `cache`\n * property of the function.\n *\n * @param {function} fn                     The function to be memoized.\n *                                          Must be a pure function.\n * @param {Object} [options]\n * @param {function(args: Array): string} [options.hasher]\n *    A custom hash builder. Is JSON.stringify by default.\n * @param {number | undefined} [options.limit]\n *    Maximum number of values that may be cached. Undefined indicates\n *    unlimited (default)\n * @return {function}                       Returns the memoized function\n */\n\nexport function memoize(fn) {\n  var {\n    hasher,\n    limit\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  limit = limit == null ? Number.POSITIVE_INFINITY : limit;\n  hasher = hasher == null ? JSON.stringify : hasher;\n  return function memoize() {\n    if (typeof memoize.cache !== 'object') {\n      memoize.cache = {\n        values: new Map(),\n        lru: lruQueue(limit || Number.POSITIVE_INFINITY)\n      };\n    }\n\n    var args = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    var hash = hasher(args);\n\n    if (memoize.cache.values.has(hash)) {\n      memoize.cache.lru.hit(hash);\n      return memoize.cache.values.get(hash);\n    }\n\n    var newVal = fn.apply(fn, args);\n    memoize.cache.values.set(hash, newVal);\n    memoize.cache.values.delete(memoize.cache.lru.hit(hash));\n    return newVal;\n  };\n}\n/**\n * Memoize a given function by caching all results and the arguments,\n * and comparing against the arguments of previous results before\n * executing again.\n * This is less performant than `memoize` which calculates a hash,\n * which is very fast to compare. Use `memoizeCompare` only when it is\n * not possible to create a unique serializable hash from the function\n * arguments.\n * The isEqual function must compare two sets of arguments\n * and return true when equal (can be a deep equality check for example).\n * @param {function} fn\n * @param {function(a: *, b: *) : boolean} isEqual\n * @returns {function}\n */\n\nexport function memoizeCompare(fn, isEqual) {\n  var memoize = function memoize() {\n    var args = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    for (var c = 0; c < memoize.cache.length; c++) {\n      var cached = memoize.cache[c];\n\n      if (isEqual(args, cached.args)) {\n        // TODO: move this cache entry to the top so recently used entries move up?\n        return cached.res;\n      }\n    }\n\n    var res = fn.apply(fn, args);\n    memoize.cache.unshift({\n      args,\n      res\n    });\n    return res;\n  };\n\n  memoize.cache = [];\n  return memoize;\n}\n/**\n * Find the maximum number of arguments expected by a typed function.\n * @param {function} fn   A typed function\n * @return {number} Returns the maximum number of expected arguments.\n *                  Returns -1 when no signatures where found on the function.\n */\n\nexport function maxArgumentCount(fn) {\n  return Object.keys(fn.signatures || {}).reduce(function (args, signature) {\n    var count = (signature.match(/,/g) || []).length + 1;\n    return Math.max(args, count);\n  }, -1);\n}","import { isBigNumber } from '../../utils/is.js';\nimport { resize } from '../../utils/array.js';\nimport { isInteger } from '../../utils/number.js';\nimport { factory } from '../../utils/factory.js';\nvar name = 'identity';\nvar dependencies = ['typed', 'config', 'matrix', 'BigNumber', 'DenseMatrix', 'SparseMatrix'];\nexport var createIdentity = /* #__PURE__ */factory(name, dependencies, (_ref) => {\n  var {\n    typed,\n    config,\n    matrix,\n    BigNumber,\n    DenseMatrix,\n    SparseMatrix\n  } = _ref;\n\n  /**\n   * Create a 2-dimensional identity matrix with size m x n or n x n.\n   * The matrix has ones on the diagonal and zeros elsewhere.\n   *\n   * Syntax:\n   *\n   *    math.identity(n)\n   *    math.identity(n, format)\n   *    math.identity(m, n)\n   *    math.identity(m, n, format)\n   *    math.identity([m, n])\n   *    math.identity([m, n], format)\n   *\n   * Examples:\n   *\n   *    math.identity(3)                    // returns [[1, 0, 0], [0, 1, 0], [0, 0, 1]]\n   *    math.identity(3, 2)                 // returns [[1, 0], [0, 1], [0, 0]]\n   *\n   *    const A = [[1, 2, 3], [4, 5, 6]]\n   *    math.identity(math.size(A))         // returns [[1, 0, 0], [0, 1, 0]]\n   *\n   * See also:\n   *\n   *    diag, ones, zeros, size, range\n   *\n   * @param {...number | Matrix | Array} size   The size for the matrix\n   * @param {string} [format]                   The Matrix storage format\n   *\n   * @return {Matrix | Array | number} A matrix with ones on the diagonal.\n   */\n  return typed(name, {\n    '': function _() {\n      return config.matrix === 'Matrix' ? matrix([]) : [];\n    },\n    string: function string(format) {\n      return matrix(format);\n    },\n    'number | BigNumber': function numberBigNumber(rows) {\n      return _identity(rows, rows, config.matrix === 'Matrix' ? 'dense' : undefined);\n    },\n    'number | BigNumber, string': function numberBigNumberString(rows, format) {\n      return _identity(rows, rows, format);\n    },\n    'number | BigNumber, number | BigNumber': function numberBigNumberNumberBigNumber(rows, cols) {\n      return _identity(rows, cols, config.matrix === 'Matrix' ? 'dense' : undefined);\n    },\n    'number | BigNumber, number | BigNumber, string': function numberBigNumberNumberBigNumberString(rows, cols, format) {\n      return _identity(rows, cols, format);\n    },\n    Array: function Array(size) {\n      return _identityVector(size);\n    },\n    'Array, string': function ArrayString(size, format) {\n      return _identityVector(size, format);\n    },\n    Matrix: function Matrix(size) {\n      return _identityVector(size.valueOf(), size.storage());\n    },\n    'Matrix, string': function MatrixString(size, format) {\n      return _identityVector(size.valueOf(), format);\n    }\n  });\n\n  function _identityVector(size, format) {\n    switch (size.length) {\n      case 0:\n        return format ? matrix(format) : [];\n\n      case 1:\n        return _identity(size[0], size[0], format);\n\n      case 2:\n        return _identity(size[0], size[1], format);\n\n      default:\n        throw new Error('Vector containing two values expected');\n    }\n  }\n  /**\n   * Create an identity matrix\n   * @param {number | BigNumber} rows\n   * @param {number | BigNumber} cols\n   * @param {string} [format]\n   * @returns {Matrix}\n   * @private\n   */\n\n\n  function _identity(rows, cols, format) {\n    // BigNumber constructor with the right precision\n    var Big = isBigNumber(rows) || isBigNumber(cols) ? BigNumber : null;\n    if (isBigNumber(rows)) rows = rows.toNumber();\n    if (isBigNumber(cols)) cols = cols.toNumber();\n\n    if (!isInteger(rows) || rows < 1) {\n      throw new Error('Parameters in function identity must be positive integers');\n    }\n\n    if (!isInteger(cols) || cols < 1) {\n      throw new Error('Parameters in function identity must be positive integers');\n    }\n\n    var one = Big ? new BigNumber(1) : 1;\n    var defaultValue = Big ? new Big(0) : 0;\n    var size = [rows, cols]; // check we need to return a matrix\n\n    if (format) {\n      // create diagonal matrix (use optimized implementation for storage format)\n      if (format === 'sparse') {\n        return SparseMatrix.diagonal(size, one, 0, defaultValue);\n      }\n\n      if (format === 'dense') {\n        return DenseMatrix.diagonal(size, one, 0, defaultValue);\n      }\n\n      throw new TypeError(\"Unknown matrix type \\\"\".concat(format, \"\\\"\"));\n    } // create and resize array\n\n\n    var res = resize([], size, defaultValue); // fill in ones on the diagonal\n\n    var minimum = rows < cols ? rows : cols; // fill diagonal\n\n    for (var d = 0; d < minimum; d++) {\n      res[d][d] = one;\n    }\n\n    return res;\n  }\n});","export function noBignumber() {\n  throw new Error('No \"bignumber\" implementation available');\n}\nexport function noFraction() {\n  throw new Error('No \"fraction\" implementation available');\n}\nexport function noMatrix() {\n  throw new Error('No \"matrix\" implementation available');\n}\nexport function noIndex() {\n  throw new Error('No \"index\" implementation available');\n}\nexport function noSubset() {\n  throw new Error('No \"matrix\" implementation available');\n}","/**\n * Create a syntax error with the message:\n *     'Wrong number of arguments in function <fn> (<count> provided, <min>-<max> expected)'\n * @param {string} fn     Function name\n * @param {number} count  Actual argument count\n * @param {number} min    Minimum required argument count\n * @param {number} [max]  Maximum required argument count\n * @extends Error\n */\nexport function ArgumentsError(fn, count, min, max) {\n  if (!(this instanceof ArgumentsError)) {\n    throw new SyntaxError('Constructor must be called with the new operator');\n  }\n\n  this.fn = fn;\n  this.count = count;\n  this.min = min;\n  this.max = max;\n  this.message = 'Wrong number of arguments in function ' + fn + ' (' + count + ' provided, ' + min + (max !== undefined && max !== null ? '-' + max : '') + ' expected)';\n  this.stack = new Error().stack;\n}\nArgumentsError.prototype = new Error();\nArgumentsError.prototype.constructor = Error;\nArgumentsError.prototype.name = 'ArgumentsError';\nArgumentsError.prototype.isArgumentsError = true;","import { arraySize } from '../../utils/array.js';\nimport { factory } from '../../utils/factory.js';\nimport { noMatrix } from '../../utils/noop.js';\nvar name = 'size';\nvar dependencies = ['typed', 'config', '?matrix'];\nexport var createSize = /* #__PURE__ */factory(name, dependencies, (_ref) => {\n  var {\n    typed,\n    config,\n    matrix\n  } = _ref;\n\n  /**\n   * Calculate the size of a matrix or scalar.\n   *\n   * Syntax:\n   *\n   *     math.size(x)\n   *\n   * Examples:\n   *\n   *     math.size(2.3)                  // returns []\n   *     math.size('hello world')        // returns [11]\n   *\n   *     const A = [[1, 2, 3], [4, 5, 6]]\n   *     math.size(A)                    // returns [2, 3]\n   *     math.size(math.range(1,6))      // returns [5]\n   *\n   * See also:\n   *\n   *     resize, squeeze, subset\n   *\n   * @param {boolean | number | Complex | Unit | string | Array | Matrix} x  A matrix\n   * @return {Array | Matrix} A vector with size of `x`.\n   */\n  return typed(name, {\n    Matrix: function Matrix(x) {\n      return x.create(x.size());\n    },\n    Array: arraySize,\n    string: function string(x) {\n      return config.matrix === 'Array' ? [x.length] : matrix([x.length]);\n    },\n    'number | Complex | BigNumber | Unit | boolean | null': function numberComplexBigNumberUnitBooleanNull(x) {\n      // scalar\n      return config.matrix === 'Array' ? [] : matrix ? matrix([]) : noMatrix();\n    }\n  });\n});","import { hasOwnProperty } from './object.js';\n/**\n * Get a property of a plain object\n * Throws an error in case the object is not a plain object or the\n * property is not defined on the object itself\n * @param {Object} object\n * @param {string} prop\n * @return {*} Returns the property value when safe\n */\n\nfunction getSafeProperty(object, prop) {\n  // only allow getting safe properties of a plain object\n  if (isPlainObject(object) && isSafeProperty(object, prop)) {\n    return object[prop];\n  }\n\n  if (typeof object[prop] === 'function' && isSafeMethod(object, prop)) {\n    throw new Error('Cannot access method \"' + prop + '\" as a property');\n  }\n\n  throw new Error('No access to property \"' + prop + '\"');\n}\n/**\n * Set a property on a plain object.\n * Throws an error in case the object is not a plain object or the\n * property would override an inherited property like .constructor or .toString\n * @param {Object} object\n * @param {string} prop\n * @param {*} value\n * @return {*} Returns the value\n */\n// TODO: merge this function into access.js?\n\n\nfunction setSafeProperty(object, prop, value) {\n  // only allow setting safe properties of a plain object\n  if (isPlainObject(object) && isSafeProperty(object, prop)) {\n    object[prop] = value;\n    return value;\n  }\n\n  throw new Error('No access to property \"' + prop + '\"');\n}\n/**\n * Test whether a property is safe to use for an object.\n * For example .toString and .constructor are not safe\n * @param {string} prop\n * @return {boolean} Returns true when safe\n */\n\n\nfunction isSafeProperty(object, prop) {\n  if (!object || typeof object !== 'object') {\n    return false;\n  } // SAFE: whitelisted\n  // e.g length\n\n\n  if (hasOwnProperty(safeNativeProperties, prop)) {\n    return true;\n  } // UNSAFE: inherited from Object prototype\n  // e.g constructor\n\n\n  if (prop in Object.prototype) {\n    // 'in' is used instead of hasOwnProperty for nodejs v0.10\n    // which is inconsistent on root prototypes. It is safe\n    // here because Object.prototype is a root object\n    return false;\n  } // UNSAFE: inherited from Function prototype\n  // e.g call, apply\n\n\n  if (prop in Function.prototype) {\n    // 'in' is used instead of hasOwnProperty for nodejs v0.10\n    // which is inconsistent on root prototypes. It is safe\n    // here because Function.prototype is a root object\n    return false;\n  }\n\n  return true;\n}\n/**\n * Validate whether a method is safe.\n * Throws an error when that's not the case.\n * @param {Object} object\n * @param {string} method\n */\n// TODO: merge this function into assign.js?\n\n\nfunction validateSafeMethod(object, method) {\n  if (!isSafeMethod(object, method)) {\n    throw new Error('No access to method \"' + method + '\"');\n  }\n}\n/**\n * Check whether a method is safe.\n * Throws an error when that's not the case (for example for `constructor`).\n * @param {Object} object\n * @param {string} method\n * @return {boolean} Returns true when safe, false otherwise\n */\n\n\nfunction isSafeMethod(object, method) {\n  if (object === null || object === undefined || typeof object[method] !== 'function') {\n    return false;\n  } // UNSAFE: ghosted\n  // e.g overridden toString\n  // Note that IE10 doesn't support __proto__ and we can't do this check there.\n\n\n  if (hasOwnProperty(object, method) && Object.getPrototypeOf && method in Object.getPrototypeOf(object)) {\n    return false;\n  } // SAFE: whitelisted\n  // e.g toString\n\n\n  if (hasOwnProperty(safeNativeMethods, method)) {\n    return true;\n  } // UNSAFE: inherited from Object prototype\n  // e.g constructor\n\n\n  if (method in Object.prototype) {\n    // 'in' is used instead of hasOwnProperty for nodejs v0.10\n    // which is inconsistent on root prototypes. It is safe\n    // here because Object.prototype is a root object\n    return false;\n  } // UNSAFE: inherited from Function prototype\n  // e.g call, apply\n\n\n  if (method in Function.prototype) {\n    // 'in' is used instead of hasOwnProperty for nodejs v0.10\n    // which is inconsistent on root prototypes. It is safe\n    // here because Function.prototype is a root object\n    return false;\n  }\n\n  return true;\n}\n\nfunction isPlainObject(object) {\n  return typeof object === 'object' && object && object.constructor === Object;\n}\n\nvar safeNativeProperties = {\n  length: true,\n  name: true\n};\nvar safeNativeMethods = {\n  toString: true,\n  valueOf: true,\n  toLocaleString: true\n};\nexport { getSafeProperty };\nexport { setSafeProperty };\nexport { isSafeProperty };\nexport { validateSafeMethod };\nexport { isSafeMethod };\nexport { isPlainObject };","import { isIndex } from '../../utils/is.js';\nimport { clone } from '../../utils/object.js';\nimport { validateIndex } from '../../utils/array.js';\nimport { getSafeProperty, setSafeProperty } from '../../utils/customs.js';\nimport { DimensionError } from '../../error/DimensionError.js';\nimport { factory } from '../../utils/factory.js';\nvar name = 'subset';\nvar dependencies = ['typed', 'matrix'];\nexport var createSubset = /* #__PURE__ */factory(name, dependencies, (_ref) => {\n  var {\n    typed,\n    matrix\n  } = _ref;\n\n  /**\n   * Get or set a subset of a matrix or string.\n   *\n   * Syntax:\n   *     math.subset(value, index)                                // retrieve a subset\n   *     math.subset(value, index, replacement [, defaultValue])  // replace a subset\n   *\n   * Examples:\n   *\n   *     // get a subset\n   *     const d = [[1, 2], [3, 4]]\n   *     math.subset(d, math.index(1, 0))        // returns 3\n   *     math.subset(d, math.index([0, 1], 1))   // returns [[2], [4]]\n   *\n   *     // replace a subset\n   *     const e = []\n   *     const f = math.subset(e, math.index(0, [0, 2]), [5, 6])  // f = [[5, 6]]\n   *     const g = math.subset(f, math.index(1, 1), 7, 0)         // g = [[5, 6], [0, 7]]\n   *\n   * See also:\n   *\n   *     size, resize, squeeze, index\n   *\n   * @param {Array | Matrix | string} matrix  An array, matrix, or string\n   * @param {Index} index                     An index containing ranges for each\n   *                                          dimension\n   * @param {*} [replacement]                 An array, matrix, or scalar.\n   *                                          If provided, the subset is replaced with replacement.\n   *                                          If not provided, the subset is returned\n   * @param {*} [defaultValue=undefined]      Default value, filled in on new entries when\n   *                                          the matrix is resized. If not provided,\n   *                                          math.matrix elements will be left undefined.\n   * @return {Array | Matrix | string} Either the retrieved subset or the updated matrix.\n   */\n  return typed(name, {\n    // get subset\n    'Array, Index': function ArrayIndex(value, index) {\n      var m = matrix(value);\n      var subset = m.subset(index); // returns a Matrix\n\n      return index.isScalar() ? subset : subset.valueOf(); // return an Array (like the input)\n    },\n    'Matrix, Index': function MatrixIndex(value, index) {\n      return value.subset(index);\n    },\n    'Object, Index': _getObjectProperty,\n    'string, Index': _getSubstring,\n    // set subset\n    'Array, Index, any': function ArrayIndexAny(value, index, replacement) {\n      return matrix(clone(value)).subset(index, replacement, undefined).valueOf();\n    },\n    'Array, Index, any, any': function ArrayIndexAnyAny(value, index, replacement, defaultValue) {\n      return matrix(clone(value)).subset(index, replacement, defaultValue).valueOf();\n    },\n    'Matrix, Index, any': function MatrixIndexAny(value, index, replacement) {\n      return value.clone().subset(index, replacement);\n    },\n    'Matrix, Index, any, any': function MatrixIndexAnyAny(value, index, replacement, defaultValue) {\n      return value.clone().subset(index, replacement, defaultValue);\n    },\n    'string, Index, string': _setSubstring,\n    'string, Index, string, string': _setSubstring,\n    'Object, Index, any': _setObjectProperty\n  });\n});\n/**\n * Retrieve a subset of a string\n * @param {string} str            string from which to get a substring\n * @param {Index} index           An index containing ranges for each dimension\n * @returns {string} substring\n * @private\n */\n\nfunction _getSubstring(str, index) {\n  if (!isIndex(index)) {\n    // TODO: better error message\n    throw new TypeError('Index expected');\n  }\n\n  if (index.size().length !== 1) {\n    throw new DimensionError(index.size().length, 1);\n  } // validate whether the range is out of range\n\n\n  var strLen = str.length;\n  validateIndex(index.min()[0], strLen);\n  validateIndex(index.max()[0], strLen);\n  var range = index.dimension(0);\n  var substr = '';\n  range.forEach(function (v) {\n    substr += str.charAt(v);\n  });\n  return substr;\n}\n/**\n * Replace a substring in a string\n * @param {string} str            string to be replaced\n * @param {Index} index           An index containing ranges for each dimension\n * @param {string} replacement    Replacement string\n * @param {string} [defaultValue] Default value to be uses when resizing\n *                                the string. is ' ' by default\n * @returns {string} result\n * @private\n */\n\n\nfunction _setSubstring(str, index, replacement, defaultValue) {\n  if (!index || index.isIndex !== true) {\n    // TODO: better error message\n    throw new TypeError('Index expected');\n  }\n\n  if (index.size().length !== 1) {\n    throw new DimensionError(index.size().length, 1);\n  }\n\n  if (defaultValue !== undefined) {\n    if (typeof defaultValue !== 'string' || defaultValue.length !== 1) {\n      throw new TypeError('Single character expected as defaultValue');\n    }\n  } else {\n    defaultValue = ' ';\n  }\n\n  var range = index.dimension(0);\n  var len = range.size()[0];\n\n  if (len !== replacement.length) {\n    throw new DimensionError(range.size()[0], replacement.length);\n  } // validate whether the range is out of range\n\n\n  var strLen = str.length;\n  validateIndex(index.min()[0]);\n  validateIndex(index.max()[0]); // copy the string into an array with characters\n\n  var chars = [];\n\n  for (var i = 0; i < strLen; i++) {\n    chars[i] = str.charAt(i);\n  }\n\n  range.forEach(function (v, i) {\n    chars[v] = replacement.charAt(i[0]);\n  }); // initialize undefined characters with a space\n\n  if (chars.length > strLen) {\n    for (var _i = strLen - 1, _len = chars.length; _i < _len; _i++) {\n      if (!chars[_i]) {\n        chars[_i] = defaultValue;\n      }\n    }\n  }\n\n  return chars.join('');\n}\n/**\n * Retrieve a property from an object\n * @param {Object} object\n * @param {Index} index\n * @return {*} Returns the value of the property\n * @private\n */\n\n\nfunction _getObjectProperty(object, index) {\n  if (index.size().length !== 1) {\n    throw new DimensionError(index.size(), 1);\n  }\n\n  var key = index.dimension(0);\n\n  if (typeof key !== 'string') {\n    throw new TypeError('String expected as index to retrieve an object property');\n  }\n\n  return getSafeProperty(object, key);\n}\n/**\n * Set a property on an object\n * @param {Object} object\n * @param {Index} index\n * @param {*} replacement\n * @return {*} Returns the updated object\n * @private\n */\n\n\nfunction _setObjectProperty(object, index, replacement) {\n  if (index.size().length !== 1) {\n    throw new DimensionError(index.size(), 1);\n  }\n\n  var key = index.dimension(0);\n\n  if (typeof key !== 'string') {\n    throw new TypeError('String expected as index to retrieve an object property');\n  } // clone the object, and apply the property to the clone\n\n\n  var updated = clone(object);\n  setSafeProperty(updated, key, replacement);\n  return updated;\n}","import { isBigNumber } from '../../utils/is.js';\nimport { isInteger } from '../../utils/number.js';\nimport { resize } from '../../utils/array.js';\nimport { factory } from '../../utils/factory.js';\nvar name = 'zeros';\nvar dependencies = ['typed', 'config', 'matrix', 'BigNumber'];\nexport var createZeros = /* #__PURE__ */factory(name, dependencies, (_ref) => {\n  var {\n    typed,\n    config,\n    matrix,\n    BigNumber\n  } = _ref;\n\n  /**\n   * Create a matrix filled with zeros. The created matrix can have one or\n   * multiple dimensions.\n   *\n   * Syntax:\n   *\n   *    math.zeros(m)\n   *    math.zeros(m, format)\n   *    math.zeros(m, n)\n   *    math.zeros(m, n, format)\n   *    math.zeros([m, n])\n   *    math.zeros([m, n], format)\n   *\n   * Examples:\n   *\n   *    math.zeros(3)                  // returns [0, 0, 0]\n   *    math.zeros(3, 2)               // returns [[0, 0], [0, 0], [0, 0]]\n   *    math.zeros(3, 'dense')         // returns [0, 0, 0]\n   *\n   *    const A = [[1, 2, 3], [4, 5, 6]]\n   *    math.zeros(math.size(A))       // returns [[0, 0, 0], [0, 0, 0]]\n   *\n   * See also:\n   *\n   *    ones, identity, size, range\n   *\n   * @param {...number | Array} size    The size of each dimension of the matrix\n   * @param {string} [format]           The Matrix storage format\n   *\n   * @return {Array | Matrix}           A matrix filled with zeros\n   */\n  return typed(name, {\n    '': function _() {\n      return config.matrix === 'Array' ? _zeros([]) : _zeros([], 'default');\n    },\n    // math.zeros(m, n, p, ..., format)\n    // TODO: more accurate signature '...number | BigNumber, string' as soon as typed-function supports this\n    '...number | BigNumber | string': function numberBigNumberString(size) {\n      var last = size[size.length - 1];\n\n      if (typeof last === 'string') {\n        var format = size.pop();\n        return _zeros(size, format);\n      } else if (config.matrix === 'Array') {\n        return _zeros(size);\n      } else {\n        return _zeros(size, 'default');\n      }\n    },\n    Array: _zeros,\n    Matrix: function Matrix(size) {\n      var format = size.storage();\n      return _zeros(size.valueOf(), format);\n    },\n    'Array | Matrix, string': function ArrayMatrixString(size, format) {\n      return _zeros(size.valueOf(), format);\n    }\n  });\n  /**\n   * Create an Array or Matrix with zeros\n   * @param {Array} size\n   * @param {string} [format='default']\n   * @return {Array | Matrix}\n   * @private\n   */\n\n  function _zeros(size, format) {\n    var hasBigNumbers = _normalize(size);\n\n    var defaultValue = hasBigNumbers ? new BigNumber(0) : 0;\n\n    _validate(size);\n\n    if (format) {\n      // return a matrix\n      var m = matrix(format);\n\n      if (size.length > 0) {\n        return m.resize(size, defaultValue);\n      }\n\n      return m;\n    } else {\n      // return an Array\n      var arr = [];\n\n      if (size.length > 0) {\n        return resize(arr, size, defaultValue);\n      }\n\n      return arr;\n    }\n  } // replace BigNumbers with numbers, returns true if size contained BigNumbers\n\n\n  function _normalize(size) {\n    var hasBigNumbers = false;\n    size.forEach(function (value, index, arr) {\n      if (isBigNumber(value)) {\n        hasBigNumbers = true;\n        arr[index] = value.toNumber();\n      }\n    });\n    return hasBigNumbers;\n  } // validate arguments\n\n\n  function _validate(size) {\n    size.forEach(function (value) {\n      if (typeof value !== 'number' || !isInteger(value) || value < 0) {\n        throw new Error('Parameters in function zeros must be positive integers');\n      }\n    });\n  }\n}); // TODO: zeros contains almost the same code as ones. Reuse this?","import { format as formatString } from '../../utils/string.js';\nimport { factory } from '../../utils/factory.js';\nvar name = 'format';\nvar dependencies = ['typed'];\nexport var createFormat = /* #__PURE__ */factory(name, dependencies, (_ref) => {\n  var {\n    typed\n  } = _ref;\n\n  /**\n   * Format a value of any type into a string.\n   *\n   * Syntax:\n   *\n   *    math.format(value)\n   *    math.format(value, options)\n   *    math.format(value, precision)\n   *    math.format(value, callback)\n   *\n   * Where:\n   *\n   *  - `value: *`\n   *    The value to be formatted\n   *  - `options: Object`\n   *    An object with formatting options. Available options:\n   *    - `notation: string`\n   *      Number notation. Choose from:\n   *      - 'fixed'\n   *        Always use regular number notation.\n   *        For example '123.40' and '14000000'\n   *      - 'exponential'\n   *        Always use exponential notation.\n   *        For example '1.234e+2' and '1.4e+7'\n   *      - 'engineering'\n   *        Always use engineering notation: always have exponential notation,\n   *        and select the exponent to be a multiple of 3.\n   *        For example '123.4e+0' and '14.0e+6'\n   *      - 'auto' (default)\n   *        Regular number notation for numbers having an absolute value between\n   *        `lower` and `upper` bounds, and uses exponential notation elsewhere.\n   *        Lower bound is included, upper bound is excluded.\n   *        For example '123.4' and '1.4e7'.\n   *    - `precision: number`\n   *      A number between 0 and 16 to round the digits of the number. In case\n   *      of notations 'exponential', 'engineering', and 'auto', `precision`\n   *      defines the total number of significant digits returned.\n   *      In case of notation 'fixed', `precision` defines the number of\n   *      significant digits after the decimal point.\n   *      `precision` is undefined by default.\n   *    - `lowerExp: number`\n   *      Exponent determining the lower boundary for formatting a value with\n   *      an exponent when `notation='auto`. Default value is `-3`.\n   *    - `upperExp: number`\n   *      Exponent determining the upper boundary for formatting a value with\n   *      an exponent when `notation='auto`. Default value is `5`.\n   *    - `fraction: string`. Available values: 'ratio' (default) or 'decimal'.\n   *      For example `format(fraction(1, 3))` will output '1/3' when 'ratio' is\n   *      configured, and will output `0.(3)` when 'decimal' is configured.\n   * - `callback: function`\n   *   A custom formatting function, invoked for all numeric elements in `value`,\n   *   for example all elements of a matrix, or the real and imaginary\n   *   parts of a complex number. This callback can be used to override the\n   *   built-in numeric notation with any type of formatting. Function `callback`\n   *   is called with `value` as parameter and must return a string.\n   *\n   * When `value` is an Object:\n   *\n   * - When the object contains a property `format` being a function, this function\n   *   is invoked as `value.format(options)` and the result is returned.\n   * - When the object has its own `toString` method, this method is invoked\n   *   and the result is returned.\n   * - In other cases the function will loop over all object properties and\n   *   return JSON object notation like '{\"a\": 2, \"b\": 3}'.\n   *\n   * When value is a function:\n   *\n   * - When the function has a property `syntax`, it returns this\n   *   syntax description.\n   * - In other cases, a string `'function'` is returned.\n   *\n   * Examples:\n   *\n   *    math.format(6.4)                                        // returns '6.4'\n   *    math.format(1240000)                                    // returns '1.24e6'\n   *    math.format(1/3)                                        // returns '0.3333333333333333'\n   *    math.format(1/3, 3)                                     // returns '0.333'\n   *    math.format(21385, 2)                                   // returns '21000'\n   *    math.format(12e8, {notation: 'fixed'})                  // returns '1200000000'\n   *    math.format(2.3,  {notation: 'fixed', precision: 4})    // returns '2.3000'\n   *    math.format(52.8, {notation: 'exponential'})            // returns '5.28e+1'\n   *    math.format(12400,{notation: 'engineering'})            // returns '12.400e+3'\n   *    math.format(2000, {lowerExp: -2, upperExp: 2})          // returns '2e+3'\n   *\n   *    function formatCurrency(value) {\n   *      // return currency notation with two digits:\n   *      return '$' + value.toFixed(2)\n   *\n   *      // you could also use math.format inside the callback:\n   *      // return '$' + math.format(value, {notation: 'fixed', precision: 2})\n   *    }\n   *    math.format([2.1, 3, 0.016], formatCurrency}            // returns '[$2.10, $3.00, $0.02]'\n   *\n   * See also:\n   *\n   *    print\n   *\n   * @param {*} value                               Value to be stringified\n   * @param {Object | Function | number} [options]  Formatting options\n   * @return {string} The formatted value\n   */\n  return typed(name, {\n    any: formatString,\n    'any, Object | function | number': formatString\n  });\n});","import { typeOf } from '../../utils/is.js';\nimport { factory } from '../../utils/factory.js';\nimport { noBignumber, noFraction } from '../../utils/noop.js';\nvar name = 'numeric';\nvar dependencies = ['number', '?bignumber', '?fraction'];\nexport var createNumeric = /* #__PURE__ */factory(name, dependencies, (_ref) => {\n  var {\n    number: _number,\n    bignumber,\n    fraction\n  } = _ref;\n  var validInputTypes = {\n    string: true,\n    number: true,\n    BigNumber: true,\n    Fraction: true\n  }; // Load the conversion functions for each output type\n\n  var validOutputTypes = {\n    number: x => _number(x),\n    BigNumber: bignumber ? x => bignumber(x) : noBignumber,\n    Fraction: fraction ? x => fraction(x) : noFraction\n  };\n  /**\n   * Convert a numeric input to a specific numeric type: number, BigNumber, or Fraction.\n   *\n   * Syntax:\n   *\n   *    math.numeric(x)\n   *\n   * Examples:\n   *\n   *    math.numeric('4')                           // returns number 4\n   *    math.numeric('4', 'number')                 // returns number 4\n   *    math.numeric('4', 'BigNumber')              // returns BigNumber 4\n   *    math.numeric('4', 'Fraction')               // returns Fraction 4\n   *    math.numeric(4, 'Fraction')                 // returns Fraction 4\n   *    math.numeric(math.fraction(2, 5), 'number') // returns number 0.4\n   *\n   * See also:\n   *\n   *    number, fraction, bignumber, string, format\n   *\n   * @param {string | number | BigNumber | Fraction } value\n   *              A numeric value or a string containing a numeric value\n   * @param {string} outputType\n   *              Desired numeric output type.\n   *              Available values: 'number', 'BigNumber', or 'Fraction'\n   * @return {number | BigNumber | Fraction}\n   *              Returns an instance of the numeric in the requested type\n   */\n\n  return function numeric(value, outputType) {\n    var inputType = typeOf(value);\n\n    if (!(inputType in validInputTypes)) {\n      throw new TypeError('Cannot convert ' + value + ' of type \"' + inputType + '\"; valid input types are ' + Object.keys(validInputTypes).join(', '));\n    }\n\n    if (!(outputType in validOutputTypes)) {\n      throw new TypeError('Cannot convert ' + value + ' to type \"' + outputType + '\"; valid output types are ' + Object.keys(validOutputTypes).join(', '));\n    }\n\n    if (outputType === inputType) {\n      return value;\n    } else {\n      return validOutputTypes[outputType](value);\n    }\n  };\n});","import { factory } from '../../utils/factory.js';\nimport { typeOf } from '../../utils/is.js';\nvar name = 'divideScalar';\nvar dependencies = ['typed', 'numeric'];\nexport var createDivideScalar = /* #__PURE__ */factory(name, dependencies, (_ref) => {\n  var {\n    typed,\n    numeric\n  } = _ref;\n\n  /**\n   * Divide two scalar values, `x / y`.\n   * This function is meant for internal use: it is used by the public functions\n   * `divide` and `inv`.\n   *\n   * This function does not support collections (Array or Matrix).\n   *\n   * @param  {number | BigNumber | Fraction | Complex | Unit} x   Numerator\n   * @param  {number | BigNumber | Fraction | Complex} y          Denominator\n   * @return {number | BigNumber | Fraction | Complex | Unit}     Quotient, `x / y`\n   * @private\n   */\n  return typed(name, {\n    'number, number': function numberNumber(x, y) {\n      return x / y;\n    },\n    'Complex, Complex': function ComplexComplex(x, y) {\n      return x.div(y);\n    },\n    'BigNumber, BigNumber': function BigNumberBigNumber(x, y) {\n      return x.div(y);\n    },\n    'Fraction, Fraction': function FractionFraction(x, y) {\n      return x.div(y);\n    },\n    'Unit, number | Fraction | BigNumber': function UnitNumberFractionBigNumber(x, y) {\n      var res = x.clone(); // TODO: move the divide function to Unit.js, it uses internals of Unit\n\n      var one = numeric(1, typeOf(y));\n      res.value = this(res.value === null ? res._normalize(one) : res.value, y);\n      return res;\n    },\n    'number | Fraction | BigNumber, Unit': function numberFractionBigNumberUnit(x, y) {\n      var res = y.clone();\n      res = res.pow(-1); // TODO: move the divide function to Unit.js, it uses internals of Unit\n\n      var one = numeric(1, typeOf(x));\n      res.value = this(x, y.value === null ? y._normalize(one) : y.value);\n      return res;\n    },\n    'Unit, Unit': function UnitUnit(x, y) {\n      return x.divide(y);\n    }\n  });\n});","import { factory } from '../../utils/factory.js';\nimport { isInteger } from '../../utils/number.js';\nimport { arraySize as size } from '../../utils/array.js';\nimport { powNumber } from '../../plain/number/index.js';\nvar name = 'pow';\nvar dependencies = ['typed', 'config', 'identity', 'multiply', 'matrix', 'fraction', 'number', 'Complex'];\nexport var createPow = /* #__PURE__ */factory(name, dependencies, (_ref) => {\n  var {\n    typed,\n    config,\n    identity,\n    multiply,\n    matrix,\n    number,\n    fraction,\n    Complex\n  } = _ref;\n\n  /**\n   * Calculates the power of x to y, `x ^ y`.\n   * Matrix exponentiation is supported for square matrices `x`, and positive\n   * integer exponents `y`.\n   *\n   * For cubic roots of negative numbers, the function returns the principal\n   * root by default. In order to let the function return the real root,\n   * math.js can be configured with `math.config({predictable: true})`.\n   * To retrieve all cubic roots of a value, use `math.cbrt(x, true)`.\n   *\n   * Syntax:\n   *\n   *    math.pow(x, y)\n   *\n   * Examples:\n   *\n   *    math.pow(2, 3)               // returns number 8\n   *\n   *    const a = math.complex(2, 3)\n   *    math.pow(a, 2)                // returns Complex -5 + 12i\n   *\n   *    const b = [[1, 2], [4, 3]]\n   *    math.pow(b, 2)               // returns Array [[9, 8], [16, 17]]\n   *\n   * See also:\n   *\n   *    multiply, sqrt, cbrt, nthRoot\n   *\n   * @param  {number | BigNumber | Complex | Unit | Array | Matrix} x  The base\n   * @param  {number | BigNumber | Complex} y                          The exponent\n   * @return {number | BigNumber | Complex | Array | Matrix} The value of `x` to the power `y`\n   */\n  return typed(name, {\n    'number, number': _pow,\n    'Complex, Complex': function ComplexComplex(x, y) {\n      return x.pow(y);\n    },\n    'BigNumber, BigNumber': function BigNumberBigNumber(x, y) {\n      if (y.isInteger() || x >= 0 || config.predictable) {\n        return x.pow(y);\n      } else {\n        return new Complex(x.toNumber(), 0).pow(y.toNumber(), 0);\n      }\n    },\n    'Fraction, Fraction': function FractionFraction(x, y) {\n      if (y.d !== 1) {\n        if (config.predictable) {\n          throw new Error('Function pow does not support non-integer exponents for fractions.');\n        } else {\n          return _pow(x.valueOf(), y.valueOf());\n        }\n      } else {\n        return x.pow(y);\n      }\n    },\n    'Array, number': _powArray,\n    'Array, BigNumber': function ArrayBigNumber(x, y) {\n      return _powArray(x, y.toNumber());\n    },\n    'Matrix, number': _powMatrix,\n    'Matrix, BigNumber': function MatrixBigNumber(x, y) {\n      return _powMatrix(x, y.toNumber());\n    },\n    'Unit, number | BigNumber': function UnitNumberBigNumber(x, y) {\n      return x.pow(y);\n    }\n  });\n  /**\n   * Calculates the power of x to y, x^y, for two numbers.\n   * @param {number} x\n   * @param {number} y\n   * @return {number | Complex} res\n   * @private\n   */\n\n  function _pow(x, y) {\n    // Alternatively could define a 'realmode' config option or something, but\n    // 'predictable' will work for now\n    if (config.predictable && !isInteger(y) && x < 0) {\n      // Check to see if y can be represented as a fraction\n      try {\n        var yFrac = fraction(y);\n        var yNum = number(yFrac);\n\n        if (y === yNum || Math.abs((y - yNum) / y) < 1e-14) {\n          if (yFrac.d % 2 === 1) {\n            return (yFrac.n % 2 === 0 ? 1 : -1) * Math.pow(-x, y);\n          }\n        }\n      } catch (ex) {// fraction() throws an error if y is Infinity, etc.\n      } // Unable to express y as a fraction, so continue on\n\n    } // **for predictable mode** x^Infinity === NaN if x < -1\n    // N.B. this behavour is different from `Math.pow` which gives\n    // (-2)^Infinity === Infinity\n\n\n    if (config.predictable && (x < -1 && y === Infinity || x > -1 && x < 0 && y === -Infinity)) {\n      return NaN;\n    }\n\n    if (isInteger(y) || x >= 0 || config.predictable) {\n      return powNumber(x, y);\n    } else {\n      // TODO: the following infinity checks are duplicated from powNumber. Deduplicate this somehow\n      // x^Infinity === 0 if -1 < x < 1\n      // A real number 0 is returned instead of complex(0)\n      if (x * x < 1 && y === Infinity || x * x > 1 && y === -Infinity) {\n        return 0;\n      }\n\n      return new Complex(x, 0).pow(y, 0);\n    }\n  }\n  /**\n   * Calculate the power of a 2d array\n   * @param {Array} x     must be a 2 dimensional, square matrix\n   * @param {number} y    a positive, integer value\n   * @returns {Array}\n   * @private\n   */\n\n\n  function _powArray(x, y) {\n    if (!isInteger(y) || y < 0) {\n      throw new TypeError('For A^b, b must be a positive integer (value is ' + y + ')');\n    } // verify that A is a 2 dimensional square matrix\n\n\n    var s = size(x);\n\n    if (s.length !== 2) {\n      throw new Error('For A^b, A must be 2 dimensional (A has ' + s.length + ' dimensions)');\n    }\n\n    if (s[0] !== s[1]) {\n      throw new Error('For A^b, A must be square (size is ' + s[0] + 'x' + s[1] + ')');\n    }\n\n    var res = identity(s[0]).valueOf();\n    var px = x;\n\n    while (y >= 1) {\n      if ((y & 1) === 1) {\n        res = multiply(px, res);\n      }\n\n      y >>= 1;\n      px = multiply(px, px);\n    }\n\n    return res;\n  }\n  /**\n   * Calculate the power of a 2d matrix\n   * @param {Matrix} x     must be a 2 dimensional, square matrix\n   * @param {number} y    a positive, integer value\n   * @returns {Matrix}\n   * @private\n   */\n\n\n  function _powMatrix(x, y) {\n    return matrix(_powArray(x.valueOf(), y));\n  }\n});","function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { factory } from '../../utils/factory.js';\nimport { deepMap } from '../../utils/collection.js';\nimport { isInteger } from '../../utils/number.js';\nimport { createAlgorithm11 } from '../../type/matrix/utils/algorithm11.js';\nimport { createAlgorithm12 } from '../../type/matrix/utils/algorithm12.js';\nimport { createAlgorithm14 } from '../../type/matrix/utils/algorithm14.js';\nimport { roundNumber } from '../../plain/number/index.js';\nvar NO_INT = 'Number of decimals in function round must be an integer';\nvar name = 'round';\nvar dependencies = ['typed', 'matrix', 'equalScalar', 'zeros', 'BigNumber', 'DenseMatrix'];\nexport var createRound = /* #__PURE__ */factory(name, dependencies, (_ref) => {\n  var {\n    typed,\n    matrix,\n    equalScalar,\n    zeros,\n    BigNumber,\n    DenseMatrix\n  } = _ref;\n  var algorithm11 = createAlgorithm11({\n    typed,\n    equalScalar\n  });\n  var algorithm12 = createAlgorithm12({\n    typed,\n    DenseMatrix\n  });\n  var algorithm14 = createAlgorithm14({\n    typed\n  });\n  /**\n   * Round a value towards the nearest integer.\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.round(x)\n   *    math.round(x, n)\n   *\n   * Examples:\n   *\n   *    math.round(3.22)             // returns number 3\n   *    math.round(3.82)             // returns number 4\n   *    math.round(-4.2)             // returns number -4\n   *    math.round(-4.7)             // returns number -5\n   *    math.round(3.22, 1)          // returns number 3.2\n   *    math.round(3.88, 1)          // returns number 3.9\n   *    math.round(-4.21, 1)         // returns number -4.2\n   *    math.round(-4.71, 1)         // returns number -4.7\n   *    math.round(math.pi, 3)       // returns number 3.142\n   *    math.round(123.45678, 2)     // returns number 123.46\n   *\n   *    const c = math.complex(3.2, -2.7)\n   *    math.round(c)                // returns Complex 3 - 3i\n   *\n   *    math.round([3.2, 3.8, -4.7]) // returns Array [3, 4, -5]\n   *\n   * See also:\n   *\n   *    ceil, fix, floor\n   *\n   * @param  {number | BigNumber | Fraction | Complex | Array | Matrix} x  Number to be rounded\n   * @param  {number | BigNumber | Array} [n=0]                            Number of decimals\n   * @return {number | BigNumber | Fraction | Complex | Array | Matrix} Rounded value\n   */\n\n  return typed(name, _objectSpread(_objectSpread({}, roundNumberSignatures), {}, {\n    Complex: function Complex(x) {\n      return x.round();\n    },\n    'Complex, number': function ComplexNumber(x, n) {\n      if (n % 1) {\n        throw new TypeError(NO_INT);\n      }\n\n      return x.round(n);\n    },\n    'Complex, BigNumber': function ComplexBigNumber(x, n) {\n      if (!n.isInteger()) {\n        throw new TypeError(NO_INT);\n      }\n\n      var _n = n.toNumber();\n\n      return x.round(_n);\n    },\n    'number, BigNumber': function numberBigNumber(x, n) {\n      if (!n.isInteger()) {\n        throw new TypeError(NO_INT);\n      }\n\n      return new BigNumber(x).toDecimalPlaces(n.toNumber());\n    },\n    BigNumber: function BigNumber(x) {\n      return x.toDecimalPlaces(0);\n    },\n    'BigNumber, BigNumber': function BigNumberBigNumber(x, n) {\n      if (!n.isInteger()) {\n        throw new TypeError(NO_INT);\n      }\n\n      return x.toDecimalPlaces(n.toNumber());\n    },\n    Fraction: function Fraction(x) {\n      return x.round();\n    },\n    'Fraction, number': function FractionNumber(x, n) {\n      if (n % 1) {\n        throw new TypeError(NO_INT);\n      }\n\n      return x.round(n);\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      // deep map collection, skip zeros since round(0) = 0\n      return deepMap(x, this, true);\n    },\n    'SparseMatrix, number | BigNumber': function SparseMatrixNumberBigNumber(x, y) {\n      return algorithm11(x, y, this, false);\n    },\n    'DenseMatrix, number | BigNumber': function DenseMatrixNumberBigNumber(x, y) {\n      return algorithm14(x, y, this, false);\n    },\n    'number | Complex | BigNumber, SparseMatrix': function numberComplexBigNumberSparseMatrix(x, y) {\n      // check scalar is zero\n      if (equalScalar(x, 0)) {\n        // do not execute algorithm, result will be a zero matrix\n        return zeros(y.size(), y.storage());\n      }\n\n      return algorithm12(y, x, this, true);\n    },\n    'number | Complex | BigNumber, DenseMatrix': function numberComplexBigNumberDenseMatrix(x, y) {\n      // check scalar is zero\n      if (equalScalar(x, 0)) {\n        // do not execute algorithm, result will be a zero matrix\n        return zeros(y.size(), y.storage());\n      }\n\n      return algorithm14(y, x, this, true);\n    },\n    'Array, number | BigNumber': function ArrayNumberBigNumber(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(x), y, this, false).valueOf();\n    },\n    'number | Complex | BigNumber, Array': function numberComplexBigNumberArray(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, this, true).valueOf();\n    }\n  }));\n});\nvar roundNumberSignatures = {\n  number: roundNumber,\n  'number, number': function numberNumber(x, n) {\n    if (!isInteger(n)) {\n      throw new TypeError(NO_INT);\n    }\n\n    if (n < 0 || n > 15) {\n      throw new Error('Number of decimals in function round must be in te range of 0-15');\n    }\n\n    return roundNumber(x, n);\n  }\n};\nexport var createRoundNumber = /* #__PURE__ */factory(name, ['typed'], (_ref2) => {\n  var {\n    typed\n  } = _ref2;\n  return typed(name, roundNumberSignatures);\n});","import { factory } from '../../utils/factory.js';\nimport { createAlgorithm03 } from '../../type/matrix/utils/algorithm03.js';\nimport { createAlgorithm07 } from '../../type/matrix/utils/algorithm07.js';\nimport { createAlgorithm12 } from '../../type/matrix/utils/algorithm12.js';\nimport { createAlgorithm13 } from '../../type/matrix/utils/algorithm13.js';\nimport { createAlgorithm14 } from '../../type/matrix/utils/algorithm14.js';\nvar name = 'equal';\nvar dependencies = ['typed', 'matrix', 'equalScalar', 'DenseMatrix'];\nexport var createEqual = /* #__PURE__ */factory(name, dependencies, (_ref) => {\n  var {\n    typed,\n    matrix,\n    equalScalar,\n    DenseMatrix\n  } = _ref;\n  var algorithm03 = createAlgorithm03({\n    typed\n  });\n  var algorithm07 = createAlgorithm07({\n    typed,\n    DenseMatrix\n  });\n  var algorithm12 = createAlgorithm12({\n    typed,\n    DenseMatrix\n  });\n  var algorithm13 = createAlgorithm13({\n    typed\n  });\n  var algorithm14 = createAlgorithm14({\n    typed\n  });\n  /**\n   * Test whether two values are equal.\n   *\n   * The function tests whether the relative difference between x and y is\n   * smaller than the configured epsilon. The function cannot be used to\n   * compare values smaller than approximately 2.22e-16.\n   *\n   * For matrices, the function is evaluated element wise.\n   * In case of complex numbers, x.re must equal y.re, and x.im must equal y.im.\n   *\n   * Values `null` and `undefined` are compared strictly, thus `null` is only\n   * equal to `null` and nothing else, and `undefined` is only equal to\n   * `undefined` and nothing else. Strings are compared by their numerical value.\n   *\n   * Syntax:\n   *\n   *    math.equal(x, y)\n   *\n   * Examples:\n   *\n   *    math.equal(2 + 2, 3)         // returns false\n   *    math.equal(2 + 2, 4)         // returns true\n   *\n   *    const a = math.unit('50 cm')\n   *    const b = math.unit('5 m')\n   *    math.equal(a, b)             // returns true\n   *\n   *    const c = [2, 5, 1]\n   *    const d = [2, 7, 1]\n   *\n   *    math.equal(c, d)             // returns [true, false, true]\n   *    math.deepEqual(c, d)         // returns false\n   *\n   *    math.equal(\"1000\", \"1e3\")    // returns true\n   *    math.equal(0, null)          // returns false\n   *\n   * See also:\n   *\n   *    unequal, smaller, smallerEq, larger, largerEq, compare, deepEqual, equalText\n   *\n   * @param  {number | BigNumber | boolean | Complex | Unit | string | Array | Matrix} x First value to compare\n   * @param  {number | BigNumber | boolean | Complex | Unit | string | Array | Matrix} y Second value to compare\n   * @return {boolean | Array | Matrix} Returns true when the compared values are equal, else returns false\n   */\n\n  return typed(name, {\n    'any, any': function anyAny(x, y) {\n      // strict equality for null and undefined?\n      if (x === null) {\n        return y === null;\n      }\n\n      if (y === null) {\n        return x === null;\n      }\n\n      if (x === undefined) {\n        return y === undefined;\n      }\n\n      if (y === undefined) {\n        return x === undefined;\n      }\n\n      return equalScalar(x, y);\n    },\n    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {\n      return algorithm07(x, y, equalScalar);\n    },\n    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {\n      return algorithm03(y, x, equalScalar, true);\n    },\n    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {\n      return algorithm03(x, y, equalScalar, false);\n    },\n    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {\n      return algorithm13(x, y, equalScalar);\n    },\n    'Array, Array': function ArrayArray(x, y) {\n      // use matrix implementation\n      return this(matrix(x), matrix(y)).valueOf();\n    },\n    'Array, Matrix': function ArrayMatrix(x, y) {\n      // use matrix implementation\n      return this(matrix(x), y);\n    },\n    'Matrix, Array': function MatrixArray(x, y) {\n      // use matrix implementation\n      return this(x, matrix(y));\n    },\n    'SparseMatrix, any': function SparseMatrixAny(x, y) {\n      return algorithm12(x, y, equalScalar, false);\n    },\n    'DenseMatrix, any': function DenseMatrixAny(x, y) {\n      return algorithm14(x, y, equalScalar, false);\n    },\n    'any, SparseMatrix': function anySparseMatrix(x, y) {\n      return algorithm12(y, x, equalScalar, true);\n    },\n    'any, DenseMatrix': function anyDenseMatrix(x, y) {\n      return algorithm14(y, x, equalScalar, true);\n    },\n    'Array, any': function ArrayAny(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(x), y, equalScalar, false).valueOf();\n    },\n    'any, Array': function anyArray(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, equalScalar, true).valueOf();\n    }\n  });\n});\nexport var createEqualNumber = factory(name, ['typed', 'equalScalar'], (_ref2) => {\n  var {\n    typed,\n    equalScalar\n  } = _ref2;\n  return typed(name, {\n    'any, any': function anyAny(x, y) {\n      // strict equality for null and undefined?\n      if (x === null) {\n        return y === null;\n      }\n\n      if (y === null) {\n        return x === null;\n      }\n\n      if (x === undefined) {\n        return y === undefined;\n      }\n\n      if (y === undefined) {\n        return x === undefined;\n      }\n\n      return equalScalar(x, y);\n    }\n  });\n});","import { nearlyEqual as bigNearlyEqual } from '../../utils/bignumber/nearlyEqual.js';\nimport { nearlyEqual } from '../../utils/number.js';\nimport { factory } from '../../utils/factory.js';\nimport { createAlgorithm03 } from '../../type/matrix/utils/algorithm03.js';\nimport { createAlgorithm07 } from '../../type/matrix/utils/algorithm07.js';\nimport { createAlgorithm12 } from '../../type/matrix/utils/algorithm12.js';\nimport { createAlgorithm14 } from '../../type/matrix/utils/algorithm14.js';\nimport { createAlgorithm13 } from '../../type/matrix/utils/algorithm13.js';\nvar name = 'smaller';\nvar dependencies = ['typed', 'config', 'matrix', 'DenseMatrix'];\nexport var createSmaller = /* #__PURE__ */factory(name, dependencies, (_ref) => {\n  var {\n    typed,\n    config,\n    matrix,\n    DenseMatrix\n  } = _ref;\n  var algorithm03 = createAlgorithm03({\n    typed\n  });\n  var algorithm07 = createAlgorithm07({\n    typed,\n    DenseMatrix\n  });\n  var algorithm12 = createAlgorithm12({\n    typed,\n    DenseMatrix\n  });\n  var algorithm13 = createAlgorithm13({\n    typed\n  });\n  var algorithm14 = createAlgorithm14({\n    typed\n  });\n  /**\n   * Test whether value x is smaller than y.\n   *\n   * The function returns true when x is smaller than y and the relative\n   * difference between x and y is smaller than the configured epsilon. The\n   * function cannot be used to compare values smaller than approximately 2.22e-16.\n   *\n   * For matrices, the function is evaluated element wise.\n   * Strings are compared by their numerical value.\n   *\n   * Syntax:\n   *\n   *    math.smaller(x, y)\n   *\n   * Examples:\n   *\n   *    math.smaller(2, 3)            // returns true\n   *    math.smaller(5, 2 * 2)        // returns false\n   *\n   *    const a = math.unit('5 cm')\n   *    const b = math.unit('2 inch')\n   *    math.smaller(a, b)            // returns true\n   *\n   * See also:\n   *\n   *    equal, unequal, smallerEq, smaller, smallerEq, compare\n   *\n   * @param  {number | BigNumber | Fraction | boolean | Unit | string | Array | Matrix} x First value to compare\n   * @param  {number | BigNumber | Fraction | boolean | Unit | string | Array | Matrix} y Second value to compare\n   * @return {boolean | Array | Matrix} Returns true when the x is smaller than y, else returns false\n   */\n\n  return typed(name, {\n    'boolean, boolean': function booleanBoolean(x, y) {\n      return x < y;\n    },\n    'number, number': function numberNumber(x, y) {\n      return x < y && !nearlyEqual(x, y, config.epsilon);\n    },\n    'BigNumber, BigNumber': function BigNumberBigNumber(x, y) {\n      return x.lt(y) && !bigNearlyEqual(x, y, config.epsilon);\n    },\n    'Fraction, Fraction': function FractionFraction(x, y) {\n      return x.compare(y) === -1;\n    },\n    'Complex, Complex': function ComplexComplex(x, y) {\n      throw new TypeError('No ordering relation is defined for complex numbers');\n    },\n    'Unit, Unit': function UnitUnit(x, y) {\n      if (!x.equalBase(y)) {\n        throw new Error('Cannot compare units with different base');\n      }\n\n      return this(x.value, y.value);\n    },\n    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {\n      return algorithm07(x, y, this);\n    },\n    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {\n      return algorithm03(y, x, this, true);\n    },\n    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {\n      return algorithm03(x, y, this, false);\n    },\n    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {\n      return algorithm13(x, y, this);\n    },\n    'Array, Array': function ArrayArray(x, y) {\n      // use matrix implementation\n      return this(matrix(x), matrix(y)).valueOf();\n    },\n    'Array, Matrix': function ArrayMatrix(x, y) {\n      // use matrix implementation\n      return this(matrix(x), y);\n    },\n    'Matrix, Array': function MatrixArray(x, y) {\n      // use matrix implementation\n      return this(x, matrix(y));\n    },\n    'SparseMatrix, any': function SparseMatrixAny(x, y) {\n      return algorithm12(x, y, this, false);\n    },\n    'DenseMatrix, any': function DenseMatrixAny(x, y) {\n      return algorithm14(x, y, this, false);\n    },\n    'any, SparseMatrix': function anySparseMatrix(x, y) {\n      return algorithm12(y, x, this, true);\n    },\n    'any, DenseMatrix': function anyDenseMatrix(x, y) {\n      return algorithm14(y, x, this, true);\n    },\n    'Array, any': function ArrayAny(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(x), y, this, false).valueOf();\n    },\n    'any, Array': function anyArray(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, this, true).valueOf();\n    }\n  });\n});\nexport var createSmallerNumber = /* #__PURE__ */factory(name, ['typed', 'config'], (_ref2) => {\n  var {\n    typed,\n    config\n  } = _ref2;\n  return typed(name, {\n    'number, number': function numberNumber(x, y) {\n      return x < y && !nearlyEqual(x, y, config.epsilon);\n    }\n  });\n});","import { nearlyEqual as bigNearlyEqual } from '../../utils/bignumber/nearlyEqual.js';\nimport { nearlyEqual } from '../../utils/number.js';\nimport { factory } from '../../utils/factory.js';\nimport { createAlgorithm03 } from '../../type/matrix/utils/algorithm03.js';\nimport { createAlgorithm07 } from '../../type/matrix/utils/algorithm07.js';\nimport { createAlgorithm12 } from '../../type/matrix/utils/algorithm12.js';\nimport { createAlgorithm14 } from '../../type/matrix/utils/algorithm14.js';\nimport { createAlgorithm13 } from '../../type/matrix/utils/algorithm13.js';\nvar name = 'larger';\nvar dependencies = ['typed', 'config', 'matrix', 'DenseMatrix'];\nexport var createLarger = /* #__PURE__ */factory(name, dependencies, (_ref) => {\n  var {\n    typed,\n    config,\n    matrix,\n    DenseMatrix\n  } = _ref;\n  var algorithm03 = createAlgorithm03({\n    typed\n  });\n  var algorithm07 = createAlgorithm07({\n    typed,\n    DenseMatrix\n  });\n  var algorithm12 = createAlgorithm12({\n    typed,\n    DenseMatrix\n  });\n  var algorithm13 = createAlgorithm13({\n    typed\n  });\n  var algorithm14 = createAlgorithm14({\n    typed\n  });\n  /**\n   * Test whether value x is larger than y.\n   *\n   * The function returns true when x is larger than y and the relative\n   * difference between x and y is larger than the configured epsilon. The\n   * function cannot be used to compare values smaller than approximately 2.22e-16.\n   *\n   * For matrices, the function is evaluated element wise.\n   * Strings are compared by their numerical value.\n   *\n   * Syntax:\n   *\n   *    math.larger(x, y)\n   *\n   * Examples:\n   *\n   *    math.larger(2, 3)             // returns false\n   *    math.larger(5, 2 + 2)         // returns true\n   *\n   *    const a = math.unit('5 cm')\n   *    const b = math.unit('2 inch')\n   *    math.larger(a, b)             // returns false\n   *\n   * See also:\n   *\n   *    equal, unequal, smaller, smallerEq, largerEq, compare\n   *\n   * @param  {number | BigNumber | Fraction | boolean | Unit | string | Array | Matrix} x First value to compare\n   * @param  {number | BigNumber | Fraction | boolean | Unit | string | Array | Matrix} y Second value to compare\n   * @return {boolean | Array | Matrix} Returns true when the x is larger than y, else returns false\n   */\n\n  return typed(name, {\n    'boolean, boolean': function booleanBoolean(x, y) {\n      return x > y;\n    },\n    'number, number': function numberNumber(x, y) {\n      return x > y && !nearlyEqual(x, y, config.epsilon);\n    },\n    'BigNumber, BigNumber': function BigNumberBigNumber(x, y) {\n      return x.gt(y) && !bigNearlyEqual(x, y, config.epsilon);\n    },\n    'Fraction, Fraction': function FractionFraction(x, y) {\n      return x.compare(y) === 1;\n    },\n    'Complex, Complex': function ComplexComplex() {\n      throw new TypeError('No ordering relation is defined for complex numbers');\n    },\n    'Unit, Unit': function UnitUnit(x, y) {\n      if (!x.equalBase(y)) {\n        throw new Error('Cannot compare units with different base');\n      }\n\n      return this(x.value, y.value);\n    },\n    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {\n      return algorithm07(x, y, this);\n    },\n    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {\n      return algorithm03(y, x, this, true);\n    },\n    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {\n      return algorithm03(x, y, this, false);\n    },\n    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {\n      return algorithm13(x, y, this);\n    },\n    'Array, Array': function ArrayArray(x, y) {\n      // use matrix implementation\n      return this(matrix(x), matrix(y)).valueOf();\n    },\n    'Array, Matrix': function ArrayMatrix(x, y) {\n      // use matrix implementation\n      return this(matrix(x), y);\n    },\n    'Matrix, Array': function MatrixArray(x, y) {\n      // use matrix implementation\n      return this(x, matrix(y));\n    },\n    'SparseMatrix, any': function SparseMatrixAny(x, y) {\n      return algorithm12(x, y, this, false);\n    },\n    'DenseMatrix, any': function DenseMatrixAny(x, y) {\n      return algorithm14(x, y, this, false);\n    },\n    'any, SparseMatrix': function anySparseMatrix(x, y) {\n      return algorithm12(y, x, this, true);\n    },\n    'any, DenseMatrix': function anyDenseMatrix(x, y) {\n      return algorithm14(y, x, this, true);\n    },\n    'Array, any': function ArrayAny(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(x), y, this, false).valueOf();\n    },\n    'any, Array': function anyArray(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, this, true).valueOf();\n    }\n  });\n});\nexport var createLargerNumber = /* #__PURE__ */factory(name, ['typed', 'config'], (_ref2) => {\n  var {\n    typed,\n    config\n  } = _ref2;\n  return typed(name, {\n    'number, number': function numberNumber(x, y) {\n      return x > y && !nearlyEqual(x, y, config.epsilon);\n    }\n  });\n});","import { factory } from '../../utils/factory.js';\nvar name = 'FibonacciHeap';\nvar dependencies = ['smaller', 'larger'];\nexport var createFibonacciHeapClass = /* #__PURE__ */factory(name, dependencies, (_ref) => {\n  var {\n    smaller,\n    larger\n  } = _ref;\n  var oneOverLogPhi = 1.0 / Math.log((1.0 + Math.sqrt(5.0)) / 2.0);\n  /**\n   * Fibonacci Heap implementation, used interally for Matrix math.\n   * @class FibonacciHeap\n   * @constructor FibonacciHeap\n   */\n\n  function FibonacciHeap() {\n    if (!(this instanceof FibonacciHeap)) {\n      throw new SyntaxError('Constructor must be called with the new operator');\n    } // initialize fields\n\n\n    this._minimum = null;\n    this._size = 0;\n  }\n  /**\n   * Attach type information\n   */\n\n\n  FibonacciHeap.prototype.type = 'FibonacciHeap';\n  FibonacciHeap.prototype.isFibonacciHeap = true;\n  /**\n   * Inserts a new data element into the heap. No heap consolidation is\n   * performed at this time, the new node is simply inserted into the root\n   * list of this heap. Running time: O(1) actual.\n   * @memberof FibonacciHeap\n   */\n\n  FibonacciHeap.prototype.insert = function (key, value) {\n    // create node\n    var node = {\n      key: key,\n      value: value,\n      degree: 0\n    }; // check we have a node in the minimum\n\n    if (this._minimum) {\n      // minimum node\n      var minimum = this._minimum; // update left & right of node\n\n      node.left = minimum;\n      node.right = minimum.right;\n      minimum.right = node;\n      node.right.left = node; // update minimum node in heap if needed\n\n      if (smaller(key, minimum.key)) {\n        // node has a smaller key, use it as minimum\n        this._minimum = node;\n      }\n    } else {\n      // set left & right\n      node.left = node;\n      node.right = node; // this is the first node\n\n      this._minimum = node;\n    } // increment number of nodes in heap\n\n\n    this._size++; // return node\n\n    return node;\n  };\n  /**\n   * Returns the number of nodes in heap. Running time: O(1) actual.\n   * @memberof FibonacciHeap\n   */\n\n\n  FibonacciHeap.prototype.size = function () {\n    return this._size;\n  };\n  /**\n   * Removes all elements from this heap.\n   * @memberof FibonacciHeap\n   */\n\n\n  FibonacciHeap.prototype.clear = function () {\n    this._minimum = null;\n    this._size = 0;\n  };\n  /**\n   * Returns true if the heap is empty, otherwise false.\n   * @memberof FibonacciHeap\n   */\n\n\n  FibonacciHeap.prototype.isEmpty = function () {\n    return this._size === 0;\n  };\n  /**\n   * Extracts the node with minimum key from heap. Amortized running\n   * time: O(log n).\n   * @memberof FibonacciHeap\n   */\n\n\n  FibonacciHeap.prototype.extractMinimum = function () {\n    // node to remove\n    var node = this._minimum; // check we have a minimum\n\n    if (node === null) {\n      return node;\n    } // current minimum\n\n\n    var minimum = this._minimum; // get number of children\n\n    var numberOfChildren = node.degree; // pointer to the first child\n\n    var x = node.child; // for each child of node do...\n\n    while (numberOfChildren > 0) {\n      // store node in right side\n      var tempRight = x.right; // remove x from child list\n\n      x.left.right = x.right;\n      x.right.left = x.left; // add x to root list of heap\n\n      x.left = minimum;\n      x.right = minimum.right;\n      minimum.right = x;\n      x.right.left = x; // set Parent[x] to null\n\n      x.parent = null;\n      x = tempRight;\n      numberOfChildren--;\n    } // remove node from root list of heap\n\n\n    node.left.right = node.right;\n    node.right.left = node.left; // update minimum\n\n    if (node === node.right) {\n      // empty\n      minimum = null;\n    } else {\n      // update minimum\n      minimum = node.right; // we need to update the pointer to the root with minimum key\n\n      minimum = _findMinimumNode(minimum, this._size);\n    } // decrement size of heap\n\n\n    this._size--; // update minimum\n\n    this._minimum = minimum; // return node\n\n    return node;\n  };\n  /**\n   * Removes a node from the heap given the reference to the node. The trees\n   * in the heap will be consolidated, if necessary. This operation may fail\n   * to remove the correct element if there are nodes with key value -Infinity.\n   * Running time: O(log n) amortized.\n   * @memberof FibonacciHeap\n   */\n\n\n  FibonacciHeap.prototype.remove = function (node) {\n    // decrease key value\n    this._minimum = _decreaseKey(this._minimum, node, -1); // remove the smallest\n\n    this.extractMinimum();\n  };\n  /**\n   * Decreases the key value for a heap node, given the new value to take on.\n   * The structure of the heap may be changed and will not be consolidated.\n   * Running time: O(1) amortized.\n   * @memberof FibonacciHeap\n   */\n\n\n  function _decreaseKey(minimum, node, key) {\n    // set node key\n    node.key = key; // get parent node\n\n    var parent = node.parent;\n\n    if (parent && smaller(node.key, parent.key)) {\n      // remove node from parent\n      _cut(minimum, node, parent); // remove all nodes from parent to the root parent\n\n\n      _cascadingCut(minimum, parent);\n    } // update minimum node if needed\n\n\n    if (smaller(node.key, minimum.key)) {\n      minimum = node;\n    } // return minimum\n\n\n    return minimum;\n  }\n  /**\n   * The reverse of the link operation: removes node from the child list of parent.\n   * This method assumes that min is non-null. Running time: O(1).\n   * @memberof FibonacciHeap\n   */\n\n\n  function _cut(minimum, node, parent) {\n    // remove node from parent children and decrement Degree[parent]\n    node.left.right = node.right;\n    node.right.left = node.left;\n    parent.degree--; // reset y.child if necessary\n\n    if (parent.child === node) {\n      parent.child = node.right;\n    } // remove child if degree is 0\n\n\n    if (parent.degree === 0) {\n      parent.child = null;\n    } // add node to root list of heap\n\n\n    node.left = minimum;\n    node.right = minimum.right;\n    minimum.right = node;\n    node.right.left = node; // set parent[node] to null\n\n    node.parent = null; // set mark[node] to false\n\n    node.mark = false;\n  }\n  /**\n   * Performs a cascading cut operation. This cuts node from its parent and then\n   * does the same for its parent, and so on up the tree.\n   * Running time: O(log n); O(1) excluding the recursion.\n   * @memberof FibonacciHeap\n   */\n\n\n  function _cascadingCut(minimum, node) {\n    // store parent node\n    var parent = node.parent; // if there's a parent...\n\n    if (!parent) {\n      return;\n    } // if node is unmarked, set it marked\n\n\n    if (!node.mark) {\n      node.mark = true;\n    } else {\n      // it's marked, cut it from parent\n      _cut(minimum, node, parent); // cut its parent as well\n\n\n      _cascadingCut(parent);\n    }\n  }\n  /**\n   * Make the first node a child of the second one. Running time: O(1) actual.\n   * @memberof FibonacciHeap\n   */\n\n\n  var _linkNodes = function _linkNodes(node, parent) {\n    // remove node from root list of heap\n    node.left.right = node.right;\n    node.right.left = node.left; // make node a Child of parent\n\n    node.parent = parent;\n\n    if (!parent.child) {\n      parent.child = node;\n      node.right = node;\n      node.left = node;\n    } else {\n      node.left = parent.child;\n      node.right = parent.child.right;\n      parent.child.right = node;\n      node.right.left = node;\n    } // increase degree[parent]\n\n\n    parent.degree++; // set mark[node] false\n\n    node.mark = false;\n  };\n\n  function _findMinimumNode(minimum, size) {\n    // to find trees of the same degree efficiently we use an array of length O(log n) in which we keep a pointer to one root of each degree\n    var arraySize = Math.floor(Math.log(size) * oneOverLogPhi) + 1; // create list with initial capacity\n\n    var array = new Array(arraySize); // find the number of root nodes.\n\n    var numRoots = 0;\n    var x = minimum;\n\n    if (x) {\n      numRoots++;\n      x = x.right;\n\n      while (x !== minimum) {\n        numRoots++;\n        x = x.right;\n      }\n    } // vars\n\n\n    var y; // For each node in root list do...\n\n    while (numRoots > 0) {\n      // access this node's degree..\n      var d = x.degree; // get next node\n\n      var next = x.right; // check if there is a node already in array with the same degree\n\n      while (true) {\n        // get node with the same degree is any\n        y = array[d];\n\n        if (!y) {\n          break;\n        } // make one node with the same degree a child of the other, do this based on the key value.\n\n\n        if (larger(x.key, y.key)) {\n          var temp = y;\n          y = x;\n          x = temp;\n        } // make y a child of x\n\n\n        _linkNodes(y, x); // we have handled this degree, go to next one.\n\n\n        array[d] = null;\n        d++;\n      } // save this node for later when we might encounter another of the same degree.\n\n\n      array[d] = x; // move forward through list.\n\n      x = next;\n      numRoots--;\n    } // Set min to null (effectively losing the root list) and reconstruct the root list from the array entries in array[].\n\n\n    minimum = null; // loop nodes in array\n\n    for (var i = 0; i < arraySize; i++) {\n      // get current node\n      y = array[i];\n\n      if (!y) {\n        continue;\n      } // check if we have a linked list\n\n\n      if (minimum) {\n        // First remove node from root list.\n        y.left.right = y.right;\n        y.right.left = y.left; // now add to root list, again.\n\n        y.left = minimum;\n        y.right = minimum.right;\n        minimum.right = y;\n        y.right.left = y; // check if this is a new min.\n\n        if (smaller(y.key, minimum.key)) {\n          minimum = y;\n        }\n      } else {\n        minimum = y;\n      }\n    }\n\n    return minimum;\n  }\n\n  return FibonacciHeap;\n}, {\n  isClass: true\n});","import { factory } from '../../utils/factory.js';\nvar name = 'Spa';\nvar dependencies = ['addScalar', 'equalScalar', 'FibonacciHeap'];\nexport var createSpaClass = /* #__PURE__ */factory(name, dependencies, (_ref) => {\n  var {\n    addScalar,\n    equalScalar,\n    FibonacciHeap\n  } = _ref;\n\n  /**\n   * An ordered Sparse Accumulator is a representation for a sparse vector that includes a dense array\n   * of the vector elements and an ordered list of non-zero elements.\n   */\n  function Spa() {\n    if (!(this instanceof Spa)) {\n      throw new SyntaxError('Constructor must be called with the new operator');\n    } // allocate vector, TODO use typed arrays\n\n\n    this._values = [];\n    this._heap = new FibonacciHeap();\n  }\n  /**\n   * Attach type information\n   */\n\n\n  Spa.prototype.type = 'Spa';\n  Spa.prototype.isSpa = true;\n  /**\n   * Set the value for index i.\n   *\n   * @param {number} i                       The index\n   * @param {number | BigNumber | Complex}   The value at index i\n   */\n\n  Spa.prototype.set = function (i, v) {\n    // check we have a value @ i\n    if (!this._values[i]) {\n      // insert in heap\n      var node = this._heap.insert(i, v); // set the value @ i\n\n\n      this._values[i] = node;\n    } else {\n      // update the value @ i\n      this._values[i].value = v;\n    }\n  };\n\n  Spa.prototype.get = function (i) {\n    var node = this._values[i];\n\n    if (node) {\n      return node.value;\n    }\n\n    return 0;\n  };\n\n  Spa.prototype.accumulate = function (i, v) {\n    // node @ i\n    var node = this._values[i];\n\n    if (!node) {\n      // insert in heap\n      node = this._heap.insert(i, v); // initialize value\n\n      this._values[i] = node;\n    } else {\n      // accumulate value\n      node.value = addScalar(node.value, v);\n    }\n  };\n\n  Spa.prototype.forEach = function (from, to, callback) {\n    // references\n    var heap = this._heap;\n    var values = this._values; // nodes\n\n    var nodes = []; // node with minimum key, save it\n\n    var node = heap.extractMinimum();\n\n    if (node) {\n      nodes.push(node);\n    } // extract nodes from heap (ordered)\n\n\n    while (node && node.key <= to) {\n      // check it is in range\n      if (node.key >= from) {\n        // check value is not zero\n        if (!equalScalar(node.value, 0)) {\n          // invoke callback\n          callback(node.key, node.value, this);\n        }\n      } // extract next node, save it\n\n\n      node = heap.extractMinimum();\n\n      if (node) {\n        nodes.push(node);\n      }\n    } // reinsert all nodes in heap\n\n\n    for (var i = 0; i < nodes.length; i++) {\n      // current node\n      var n = nodes[i]; // insert node in heap\n\n      node = heap.insert(n.key, n.value); // update values\n\n      values[node.key] = node;\n    }\n  };\n\n  Spa.prototype.swap = function (i, j) {\n    // node @ i and j\n    var nodei = this._values[i];\n    var nodej = this._values[j]; // check we need to insert indeces\n\n    if (!nodei && nodej) {\n      // insert in heap\n      nodei = this._heap.insert(i, nodej.value); // remove from heap\n\n      this._heap.remove(nodej); // set values\n\n\n      this._values[i] = nodei;\n      this._values[j] = undefined;\n    } else if (nodei && !nodej) {\n      // insert in heap\n      nodej = this._heap.insert(j, nodei.value); // remove from heap\n\n      this._heap.remove(nodei); // set values\n\n\n      this._values[j] = nodej;\n      this._values[i] = undefined;\n    } else if (nodei && nodej) {\n      // swap values\n      var v = nodei.value;\n      nodei.value = nodej.value;\n      nodej.value = v;\n    }\n  };\n\n  return Spa;\n}, {\n  isClass: true\n});","import { memoize } from '../function.js';\n/**\n * Calculate BigNumber e\n * @param {function} BigNumber   BigNumber constructor\n * @returns {BigNumber} Returns e\n */\n\nexport var createBigNumberE = memoize(function (BigNumber) {\n  return new BigNumber(1).exp();\n}, {\n  hasher\n});\n/**\n * Calculate BigNumber golden ratio, phi = (1+sqrt(5))/2\n * @param {function} BigNumber   BigNumber constructor\n * @returns {BigNumber} Returns phi\n */\n\nexport var createBigNumberPhi = memoize(function (BigNumber) {\n  return new BigNumber(1).plus(new BigNumber(5).sqrt()).div(2);\n}, {\n  hasher\n});\n/**\n * Calculate BigNumber pi.\n * @param {function} BigNumber   BigNumber constructor\n * @returns {BigNumber} Returns pi\n */\n\nexport var createBigNumberPi = memoize(function (BigNumber) {\n  return BigNumber.acos(-1);\n}, {\n  hasher\n});\n/**\n * Calculate BigNumber tau, tau = 2 * pi\n * @param {function} BigNumber   BigNumber constructor\n * @returns {BigNumber} Returns tau\n */\n\nexport var createBigNumberTau = memoize(function (BigNumber) {\n  return createBigNumberPi(BigNumber).times(2);\n}, {\n  hasher\n});\n/**\n * Create a hash for a BigNumber constructor function. The created has is\n * the configured precision\n * @param {Array} args         Supposed to contain a single entry with\n *                             a BigNumber constructor\n * @return {number} precision\n * @private\n */\n\nfunction hasher(args) {\n  return args[0].precision;\n}","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { isComplex, isUnit, typeOf } from '../../utils/is.js';\nimport { factory } from '../../utils/factory.js';\nimport { memoize } from '../../utils/function.js';\nimport { endsWith } from '../../utils/string.js';\nimport { clone, hasOwnProperty } from '../../utils/object.js';\nimport { createBigNumberPi as createPi } from '../../utils/bignumber/constants.js';\nvar name = 'Unit';\nvar dependencies = ['?on', 'config', 'addScalar', 'subtract', 'multiplyScalar', 'divideScalar', 'pow', 'abs', 'fix', 'round', 'equal', 'isNumeric', 'format', 'number', 'Complex', 'BigNumber', 'Fraction'];\nexport var createUnitClass = /* #__PURE__ */factory(name, dependencies, (_ref) => {\n  var {\n    on,\n    config,\n    addScalar,\n    subtract,\n    multiplyScalar,\n    divideScalar,\n    pow,\n    abs,\n    fix,\n    round,\n    equal,\n    isNumeric,\n    format,\n    number,\n    Complex,\n    BigNumber: _BigNumber,\n    Fraction: _Fraction\n  } = _ref;\n  var toNumber = number;\n  /**\n   * A unit can be constructed in the following ways:\n   *\n   *     const a = new Unit(value, name)\n   *     const b = new Unit(null, name)\n   *     const c = Unit.parse(str)\n   *\n   * Example usage:\n   *\n   *     const a = new Unit(5, 'cm')               // 50 mm\n   *     const b = Unit.parse('23 kg')             // 23 kg\n   *     const c = math.in(a, new Unit(null, 'm')  // 0.05 m\n   *     const d = new Unit(9.81, \"m/s^2\")         // 9.81 m/s^2\n   *\n   * @class Unit\n   * @constructor Unit\n   * @param {number | BigNumber | Fraction | Complex | boolean} [value]  A value like 5.2\n   * @param {string} [name]   A unit name like \"cm\" or \"inch\", or a derived unit of the form: \"u1[^ex1] [u2[^ex2] ...] [/ u3[^ex3] [u4[^ex4]]]\", such as \"kg m^2/s^2\", where each unit appearing after the forward slash is taken to be in the denominator. \"kg m^2 s^-2\" is a synonym and is also acceptable. Any of the units can include a prefix.\n   */\n\n  function Unit(value, name) {\n    if (!(this instanceof Unit)) {\n      throw new Error('Constructor must be called with the new operator');\n    }\n\n    if (!(value === null || value === undefined || isNumeric(value) || isComplex(value))) {\n      throw new TypeError('First parameter in Unit constructor must be number, BigNumber, Fraction, Complex, or undefined');\n    }\n\n    if (name !== undefined && (typeof name !== 'string' || name === '')) {\n      throw new TypeError('Second parameter in Unit constructor must be a string');\n    }\n\n    if (name !== undefined) {\n      var u = Unit.parse(name);\n      this.units = u.units;\n      this.dimensions = u.dimensions;\n    } else {\n      this.units = [{\n        unit: UNIT_NONE,\n        prefix: PREFIXES.NONE,\n        // link to a list with supported prefixes\n        power: 0\n      }];\n      this.dimensions = [];\n\n      for (var i = 0; i < BASE_DIMENSIONS.length; i++) {\n        this.dimensions[i] = 0;\n      }\n    }\n\n    this.value = value !== undefined && value !== null ? this._normalize(value) : null;\n    this.fixPrefix = false; // if true, function format will not search for the\n    // best prefix but leave it as initially provided.\n    // fixPrefix is set true by the method Unit.to\n    // The justification behind this is that if the constructor is explicitly called,\n    // the caller wishes the units to be returned exactly as he supplied.\n\n    this.skipAutomaticSimplification = true;\n  }\n  /**\n   * Attach type information\n   */\n\n\n  Unit.prototype.type = 'Unit';\n  Unit.prototype.isUnit = true; // private variables and functions for the Unit parser\n\n  var text, index, c;\n\n  function skipWhitespace() {\n    while (c === ' ' || c === '\\t') {\n      next();\n    }\n  }\n\n  function isDigitDot(c) {\n    return c >= '0' && c <= '9' || c === '.';\n  }\n\n  function isDigit(c) {\n    return c >= '0' && c <= '9';\n  }\n\n  function next() {\n    index++;\n    c = text.charAt(index);\n  }\n\n  function revert(oldIndex) {\n    index = oldIndex;\n    c = text.charAt(index);\n  }\n\n  function parseNumber() {\n    var number = '';\n    var oldIndex = index;\n\n    if (c === '+') {\n      next();\n    } else if (c === '-') {\n      number += c;\n      next();\n    }\n\n    if (!isDigitDot(c)) {\n      // a + or - must be followed by a digit\n      revert(oldIndex);\n      return null;\n    } // get number, can have a single dot\n\n\n    if (c === '.') {\n      number += c;\n      next();\n\n      if (!isDigit(c)) {\n        // this is no legal number, it is just a dot\n        revert(oldIndex);\n        return null;\n      }\n    } else {\n      while (isDigit(c)) {\n        number += c;\n        next();\n      }\n\n      if (c === '.') {\n        number += c;\n        next();\n      }\n    }\n\n    while (isDigit(c)) {\n      number += c;\n      next();\n    } // check for exponential notation like \"2.3e-4\" or \"1.23e50\"\n\n\n    if (c === 'E' || c === 'e') {\n      // The grammar branches here. This could either be part of an exponent or the start of a unit that begins with the letter e, such as \"4exabytes\"\n      var tentativeNumber = '';\n      var tentativeIndex = index;\n      tentativeNumber += c;\n      next();\n\n      if (c === '+' || c === '-') {\n        tentativeNumber += c;\n        next();\n      } // Scientific notation MUST be followed by an exponent (otherwise we assume it is not scientific notation)\n\n\n      if (!isDigit(c)) {\n        // The e or E must belong to something else, so return the number without the e or E.\n        revert(tentativeIndex);\n        return number;\n      } // We can now safely say that this is scientific notation.\n\n\n      number = number + tentativeNumber;\n\n      while (isDigit(c)) {\n        number += c;\n        next();\n      }\n    }\n\n    return number;\n  }\n\n  function parseUnit() {\n    var unitName = ''; // Alphanumeric characters only; matches [a-zA-Z0-9]\n\n    while (isDigit(c) || Unit.isValidAlpha(c)) {\n      unitName += c;\n      next();\n    } // Must begin with [a-zA-Z]\n\n\n    var firstC = unitName.charAt(0);\n\n    if (Unit.isValidAlpha(firstC)) {\n      return unitName;\n    } else {\n      return null;\n    }\n  }\n\n  function parseCharacter(toFind) {\n    if (c === toFind) {\n      next();\n      return toFind;\n    } else {\n      return null;\n    }\n  }\n  /**\n   * Parse a string into a unit. The value of the unit is parsed as number,\n   * BigNumber, or Fraction depending on the math.js config setting `number`.\n   *\n   * Throws an exception if the provided string does not contain a valid unit or\n   * cannot be parsed.\n   * @memberof Unit\n   * @param {string} str        A string like \"5.2 inch\", \"4e2 cm/s^2\"\n   * @return {Unit} unit\n   */\n\n\n  Unit.parse = function (str, options) {\n    options = options || {};\n    text = str;\n    index = -1;\n    c = '';\n\n    if (typeof text !== 'string') {\n      throw new TypeError('Invalid argument in Unit.parse, string expected');\n    }\n\n    var unit = new Unit();\n    unit.units = [];\n    var powerMultiplierCurrent = 1;\n    var expectingUnit = false; // A unit should follow this pattern:\n    // [number] ...[ [*/] unit[^number] ]\n    // unit[^number] ... [ [*/] unit[^number] ]\n    // Rules:\n    // number is any floating point number.\n    // unit is any alphanumeric string beginning with an alpha. Units with names like e3 should be avoided because they look like the exponent of a floating point number!\n    // The string may optionally begin with a number.\n    // Each unit may optionally be followed by ^number.\n    // Whitespace or a forward slash is recommended between consecutive units, although the following technically is parseable:\n    //   2m^2kg/s^2\n    // it is not good form. If a unit starts with e, then it could be confused as a floating point number:\n    //   4erg\n\n    next();\n    skipWhitespace(); // Optional number at the start of the string\n\n    var valueStr = parseNumber();\n    var value = null;\n\n    if (valueStr) {\n      if (config.number === 'BigNumber') {\n        value = new _BigNumber(valueStr);\n      } else if (config.number === 'Fraction') {\n        try {\n          // not all numbers can be turned in Fractions, for example very small numbers not\n          value = new _Fraction(valueStr);\n        } catch (err) {\n          value = parseFloat(valueStr);\n        }\n      } else {\n        // number\n        value = parseFloat(valueStr);\n      }\n\n      skipWhitespace(); // Whitespace is not required here\n      // handle multiplication or division right after the value, like '1/s'\n\n      if (parseCharacter('*')) {\n        powerMultiplierCurrent = 1;\n        expectingUnit = true;\n      } else if (parseCharacter('/')) {\n        powerMultiplierCurrent = -1;\n        expectingUnit = true;\n      }\n    } // Stack to keep track of powerMultipliers applied to each parentheses group\n\n\n    var powerMultiplierStack = []; // Running product of all elements in powerMultiplierStack\n\n    var powerMultiplierStackProduct = 1;\n\n    while (true) {\n      skipWhitespace(); // Check for and consume opening parentheses, pushing powerMultiplierCurrent to the stack\n      // A '(' will always appear directly before a unit.\n\n      while (c === '(') {\n        powerMultiplierStack.push(powerMultiplierCurrent);\n        powerMultiplierStackProduct *= powerMultiplierCurrent;\n        powerMultiplierCurrent = 1;\n        next();\n        skipWhitespace();\n      } // Is there something here?\n\n\n      var uStr = void 0;\n\n      if (c) {\n        var oldC = c;\n        uStr = parseUnit();\n\n        if (uStr === null) {\n          throw new SyntaxError('Unexpected \"' + oldC + '\" in \"' + text + '\" at index ' + index.toString());\n        }\n      } else {\n        // End of input.\n        break;\n      } // Verify the unit exists and get the prefix (if any)\n\n\n      var res = _findUnit(uStr);\n\n      if (res === null) {\n        // Unit not found.\n        throw new SyntaxError('Unit \"' + uStr + '\" not found.');\n      }\n\n      var power = powerMultiplierCurrent * powerMultiplierStackProduct; // Is there a \"^ number\"?\n\n      skipWhitespace();\n\n      if (parseCharacter('^')) {\n        skipWhitespace();\n        var p = parseNumber();\n\n        if (p === null) {\n          // No valid number found for the power!\n          throw new SyntaxError('In \"' + str + '\", \"^\" must be followed by a floating-point number');\n        }\n\n        power *= p;\n      } // Add the unit to the list\n\n\n      unit.units.push({\n        unit: res.unit,\n        prefix: res.prefix,\n        power: power\n      });\n\n      for (var i = 0; i < BASE_DIMENSIONS.length; i++) {\n        unit.dimensions[i] += (res.unit.dimensions[i] || 0) * power;\n      } // Check for and consume closing parentheses, popping from the stack.\n      // A ')' will always follow a unit.\n\n\n      skipWhitespace();\n\n      while (c === ')') {\n        if (powerMultiplierStack.length === 0) {\n          throw new SyntaxError('Unmatched \")\" in \"' + text + '\" at index ' + index.toString());\n        }\n\n        powerMultiplierStackProduct /= powerMultiplierStack.pop();\n        next();\n        skipWhitespace();\n      } // \"*\" and \"/\" should mean we are expecting something to come next.\n      // Is there a forward slash? If so, negate powerMultiplierCurrent. The next unit or paren group is in the denominator.\n\n\n      expectingUnit = false;\n\n      if (parseCharacter('*')) {\n        // explicit multiplication\n        powerMultiplierCurrent = 1;\n        expectingUnit = true;\n      } else if (parseCharacter('/')) {\n        // division\n        powerMultiplierCurrent = -1;\n        expectingUnit = true;\n      } else {\n        // implicit multiplication\n        powerMultiplierCurrent = 1;\n      } // Replace the unit into the auto unit system\n\n\n      if (res.unit.base) {\n        var baseDim = res.unit.base.key;\n        UNIT_SYSTEMS.auto[baseDim] = {\n          unit: res.unit,\n          prefix: res.prefix\n        };\n      }\n    } // Has the string been entirely consumed?\n\n\n    skipWhitespace();\n\n    if (c) {\n      throw new SyntaxError('Could not parse: \"' + str + '\"');\n    } // Is there a trailing slash?\n\n\n    if (expectingUnit) {\n      throw new SyntaxError('Trailing characters: \"' + str + '\"');\n    } // Is the parentheses stack empty?\n\n\n    if (powerMultiplierStack.length !== 0) {\n      throw new SyntaxError('Unmatched \"(\" in \"' + text + '\"');\n    } // Are there any units at all?\n\n\n    if (unit.units.length === 0 && !options.allowNoUnits) {\n      throw new SyntaxError('\"' + str + '\" contains no units');\n    }\n\n    unit.value = value !== undefined ? unit._normalize(value) : null;\n    return unit;\n  };\n  /**\n   * create a copy of this unit\n   * @memberof Unit\n   * @return {Unit} Returns a cloned version of the unit\n   */\n\n\n  Unit.prototype.clone = function () {\n    var unit = new Unit();\n    unit.fixPrefix = this.fixPrefix;\n    unit.skipAutomaticSimplification = this.skipAutomaticSimplification;\n    unit.value = clone(this.value);\n    unit.dimensions = this.dimensions.slice(0);\n    unit.units = [];\n\n    for (var i = 0; i < this.units.length; i++) {\n      unit.units[i] = {};\n\n      for (var p in this.units[i]) {\n        if (hasOwnProperty(this.units[i], p)) {\n          unit.units[i][p] = this.units[i][p];\n        }\n      }\n    }\n\n    return unit;\n  };\n  /**\n   * Return whether the unit is derived (such as m/s, or cm^2, but not N)\n   * @memberof Unit\n   * @return {boolean} True if the unit is derived\n   */\n\n\n  Unit.prototype._isDerived = function () {\n    if (this.units.length === 0) {\n      return false;\n    }\n\n    return this.units.length > 1 || Math.abs(this.units[0].power - 1.0) > 1e-15;\n  };\n  /**\n   * Normalize a value, based on its currently set unit(s)\n   * @memberof Unit\n   * @param {number | BigNumber | Fraction | boolean} value\n   * @return {number | BigNumber | Fraction | boolean} normalized value\n   * @private\n   */\n\n\n  Unit.prototype._normalize = function (value) {\n    var unitValue, unitOffset, unitPower, unitPrefixValue;\n    var convert;\n\n    if (value === null || value === undefined || this.units.length === 0) {\n      return value;\n    } else if (this._isDerived()) {\n      // This is a derived unit, so do not apply offsets.\n      // For example, with J kg^-1 degC^-1 you would NOT want to apply the offset.\n      var res = value;\n      convert = Unit._getNumberConverter(typeOf(value)); // convert to Fraction or BigNumber if needed\n\n      for (var i = 0; i < this.units.length; i++) {\n        unitValue = convert(this.units[i].unit.value);\n        unitPrefixValue = convert(this.units[i].prefix.value);\n        unitPower = convert(this.units[i].power);\n        res = multiplyScalar(res, pow(multiplyScalar(unitValue, unitPrefixValue), unitPower));\n      }\n\n      return res;\n    } else {\n      // This is a single unit of power 1, like kg or degC\n      convert = Unit._getNumberConverter(typeOf(value)); // convert to Fraction or BigNumber if needed\n\n      unitValue = convert(this.units[0].unit.value);\n      unitOffset = convert(this.units[0].unit.offset);\n      unitPrefixValue = convert(this.units[0].prefix.value);\n      return multiplyScalar(addScalar(value, unitOffset), multiplyScalar(unitValue, unitPrefixValue));\n    }\n  };\n  /**\n   * Denormalize a value, based on its currently set unit(s)\n   * @memberof Unit\n   * @param {number} value\n   * @param {number} [prefixValue]    Optional prefix value to be used (ignored if this is a derived unit)\n   * @return {number} denormalized value\n   * @private\n   */\n\n\n  Unit.prototype._denormalize = function (value, prefixValue) {\n    var unitValue, unitOffset, unitPower, unitPrefixValue;\n    var convert;\n\n    if (value === null || value === undefined || this.units.length === 0) {\n      return value;\n    } else if (this._isDerived()) {\n      // This is a derived unit, so do not apply offsets.\n      // For example, with J kg^-1 degC^-1 you would NOT want to apply the offset.\n      // Also, prefixValue is ignored--but we will still use the prefix value stored in each unit, since kg is usually preferable to g unless the user decides otherwise.\n      var res = value;\n      convert = Unit._getNumberConverter(typeOf(value)); // convert to Fraction or BigNumber if needed\n\n      for (var i = 0; i < this.units.length; i++) {\n        unitValue = convert(this.units[i].unit.value);\n        unitPrefixValue = convert(this.units[i].prefix.value);\n        unitPower = convert(this.units[i].power);\n        res = divideScalar(res, pow(multiplyScalar(unitValue, unitPrefixValue), unitPower));\n      }\n\n      return res;\n    } else {\n      // This is a single unit of power 1, like kg or degC\n      convert = Unit._getNumberConverter(typeOf(value)); // convert to Fraction or BigNumber if needed\n\n      unitValue = convert(this.units[0].unit.value);\n      unitPrefixValue = convert(this.units[0].prefix.value);\n      unitOffset = convert(this.units[0].unit.offset);\n\n      if (prefixValue === undefined || prefixValue === null) {\n        return subtract(divideScalar(divideScalar(value, unitValue), unitPrefixValue), unitOffset);\n      } else {\n        return subtract(divideScalar(divideScalar(value, unitValue), prefixValue), unitOffset);\n      }\n    }\n  };\n  /**\n   * Find a unit from a string\n   * @memberof Unit\n   * @param {string} str              A string like 'cm' or 'inch'\n   * @returns {Object | null} result  When found, an object with fields unit and\n   *                                  prefix is returned. Else, null is returned.\n   * @private\n   */\n\n\n  var _findUnit = memoize(str => {\n    // First, match units names exactly. For example, a user could define 'mm' as 10^-4 m, which is silly, but then we would want 'mm' to match the user-defined unit.\n    if (hasOwnProperty(UNITS, str)) {\n      var unit = UNITS[str];\n      var prefix = unit.prefixes[''];\n      return {\n        unit,\n        prefix\n      };\n    }\n\n    for (var _name in UNITS) {\n      if (hasOwnProperty(UNITS, _name)) {\n        if (endsWith(str, _name)) {\n          var _unit = UNITS[_name];\n          var prefixLen = str.length - _name.length;\n          var prefixName = str.substring(0, prefixLen);\n\n          var _prefix = hasOwnProperty(_unit.prefixes, prefixName) ? _unit.prefixes[prefixName] : undefined;\n\n          if (_prefix !== undefined) {\n            // store unit, prefix, and value\n            return {\n              unit: _unit,\n              prefix: _prefix\n            };\n          }\n        }\n      }\n    }\n\n    return null;\n  }, {\n    hasher: args => args[0],\n    limit: 100\n  });\n  /**\n   * Test if the given expression is a unit.\n   * The unit can have a prefix but cannot have a value.\n   * @memberof Unit\n   * @param {string} name   A string to be tested whether it is a value less unit.\n   *                        The unit can have prefix, like \"cm\"\n   * @return {boolean}      true if the given string is a unit\n   */\n\n\n  Unit.isValuelessUnit = function (name) {\n    return _findUnit(name) !== null;\n  };\n  /**\n   * check if this unit has given base unit\n   * If this unit is a derived unit, this will ALWAYS return false, since by definition base units are not derived.\n   * @memberof Unit\n   * @param {BASE_UNITS | string | undefined} base\n   */\n\n\n  Unit.prototype.hasBase = function (base) {\n    if (typeof base === 'string') {\n      base = BASE_UNITS[base];\n    }\n\n    if (!base) {\n      return false;\n    } // All dimensions must be the same\n\n\n    for (var i = 0; i < BASE_DIMENSIONS.length; i++) {\n      if (Math.abs((this.dimensions[i] || 0) - (base.dimensions[i] || 0)) > 1e-12) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n  /**\n   * Check if this unit has a base or bases equal to another base or bases\n   * For derived units, the exponent on each base also must match\n   * @memberof Unit\n   * @param {Unit} other\n   * @return {boolean} true if equal base\n   */\n\n\n  Unit.prototype.equalBase = function (other) {\n    // All dimensions must be the same\n    for (var i = 0; i < BASE_DIMENSIONS.length; i++) {\n      if (Math.abs((this.dimensions[i] || 0) - (other.dimensions[i] || 0)) > 1e-12) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n  /**\n   * Check if this unit equals another unit\n   * @memberof Unit\n   * @param {Unit} other\n   * @return {boolean} true if both units are equal\n   */\n\n\n  Unit.prototype.equals = function (other) {\n    return this.equalBase(other) && equal(this.value, other.value);\n  };\n  /**\n   * Multiply this unit with another one\n   * @memberof Unit\n   * @param {Unit} other\n   * @return {Unit} product of this unit and the other unit\n   */\n\n\n  Unit.prototype.multiply = function (other) {\n    var res = this.clone();\n\n    for (var i = 0; i < BASE_DIMENSIONS.length; i++) {\n      // Dimensions arrays may be of different lengths. Default to 0.\n      res.dimensions[i] = (this.dimensions[i] || 0) + (other.dimensions[i] || 0);\n    } // Append other's units list onto res\n\n\n    for (var _i = 0; _i < other.units.length; _i++) {\n      // Make a shallow copy of every unit\n      var inverted = _objectSpread({}, other.units[_i]);\n\n      res.units.push(inverted);\n    } // If at least one operand has a value, then the result should also have a value\n\n\n    if (this.value !== null || other.value !== null) {\n      var valThis = this.value === null ? this._normalize(1) : this.value;\n      var valOther = other.value === null ? other._normalize(1) : other.value;\n      res.value = multiplyScalar(valThis, valOther);\n    } else {\n      res.value = null;\n    }\n\n    res.skipAutomaticSimplification = false;\n    return getNumericIfUnitless(res);\n  };\n  /**\n   * Divide this unit by another one\n   * @memberof Unit\n   * @param {Unit} other\n   * @return {Unit} result of dividing this unit by the other unit\n   */\n\n\n  Unit.prototype.divide = function (other) {\n    var res = this.clone();\n\n    for (var i = 0; i < BASE_DIMENSIONS.length; i++) {\n      // Dimensions arrays may be of different lengths. Default to 0.\n      res.dimensions[i] = (this.dimensions[i] || 0) - (other.dimensions[i] || 0);\n    } // Invert and append other's units list onto res\n\n\n    for (var _i2 = 0; _i2 < other.units.length; _i2++) {\n      // Make a shallow copy of every unit\n      var inverted = _objectSpread(_objectSpread({}, other.units[_i2]), {}, {\n        power: -other.units[_i2].power\n      });\n\n      res.units.push(inverted);\n    } // If at least one operand has a value, the result should have a value\n\n\n    if (this.value !== null || other.value !== null) {\n      var valThis = this.value === null ? this._normalize(1) : this.value;\n      var valOther = other.value === null ? other._normalize(1) : other.value;\n      res.value = divideScalar(valThis, valOther);\n    } else {\n      res.value = null;\n    }\n\n    res.skipAutomaticSimplification = false;\n    return getNumericIfUnitless(res);\n  };\n  /**\n   * Calculate the power of a unit\n   * @memberof Unit\n   * @param {number | Fraction | BigNumber} p\n   * @returns {Unit}      The result: this^p\n   */\n\n\n  Unit.prototype.pow = function (p) {\n    var res = this.clone();\n\n    for (var i = 0; i < BASE_DIMENSIONS.length; i++) {\n      // Dimensions arrays may be of different lengths. Default to 0.\n      res.dimensions[i] = (this.dimensions[i] || 0) * p;\n    } // Adjust the power of each unit in the list\n\n\n    for (var _i3 = 0; _i3 < res.units.length; _i3++) {\n      res.units[_i3].power *= p;\n    }\n\n    if (res.value !== null) {\n      res.value = pow(res.value, p); // only allow numeric output, we don't want to return a Complex number\n      // if (!isNumeric(res.value)) {\n      //  res.value = NaN\n      // }\n      // Update: Complex supported now\n    } else {\n      res.value = null;\n    }\n\n    res.skipAutomaticSimplification = false;\n    return getNumericIfUnitless(res);\n  };\n  /**\n   * Return the numeric value of this unit if it is dimensionless, has a value, and config.predictable == false; or the original unit otherwise\n   * @param {Unit} unit\n   * @returns {number | Fraction | BigNumber | Unit}  The numeric value of the unit if conditions are met, or the original unit otherwise\n   */\n\n\n  function getNumericIfUnitless(unit) {\n    if (unit.equalBase(BASE_UNITS.NONE) && unit.value !== null && !config.predictable) {\n      return unit.value;\n    } else {\n      return unit;\n    }\n  }\n  /**\n   * Calculate the absolute value of a unit\n   * @memberof Unit\n   * @param {number | Fraction | BigNumber} x\n   * @returns {Unit}      The result: |x|, absolute value of x\n   */\n\n\n  Unit.prototype.abs = function () {\n    // This gives correct, but unexpected, results for units with an offset.\n    // For example, abs(-283.15 degC) = -263.15 degC !!!\n    var ret = this.clone();\n    ret.value = ret.value !== null ? abs(ret.value) : null;\n\n    for (var i in ret.units) {\n      if (ret.units[i].unit.name === 'VA' || ret.units[i].unit.name === 'VAR') {\n        ret.units[i].unit = UNITS.W;\n      }\n    }\n\n    return ret;\n  };\n  /**\n   * Convert the unit to a specific unit name.\n   * @memberof Unit\n   * @param {string | Unit} valuelessUnit   A unit without value. Can have prefix, like \"cm\"\n   * @returns {Unit} Returns a clone of the unit with a fixed prefix and unit.\n   */\n\n\n  Unit.prototype.to = function (valuelessUnit) {\n    var other;\n    var value = this.value === null ? this._normalize(1) : this.value;\n\n    if (typeof valuelessUnit === 'string') {\n      // other = new Unit(null, valuelessUnit)\n      other = Unit.parse(valuelessUnit);\n\n      if (!this.equalBase(other)) {\n        throw new Error(\"Units do not match ('\".concat(other.toString(), \"' != '\").concat(this.toString(), \"')\"));\n      }\n\n      if (other.value !== null) {\n        throw new Error('Cannot convert to a unit with a value');\n      }\n\n      other.value = clone(value);\n      other.fixPrefix = true;\n      other.skipAutomaticSimplification = true;\n      return other;\n    } else if (isUnit(valuelessUnit)) {\n      if (!this.equalBase(valuelessUnit)) {\n        throw new Error(\"Units do not match ('\".concat(valuelessUnit.toString(), \"' != '\").concat(this.toString(), \"')\"));\n      }\n\n      if (valuelessUnit.value !== null) {\n        throw new Error('Cannot convert to a unit with a value');\n      }\n\n      other = valuelessUnit.clone();\n      other.value = clone(value);\n      other.fixPrefix = true;\n      other.skipAutomaticSimplification = true;\n      return other;\n    } else {\n      throw new Error('String or Unit expected as parameter');\n    }\n  };\n  /**\n   * Return the value of the unit when represented with given valueless unit\n   * @memberof Unit\n   * @param {string | Unit} valuelessUnit    For example 'cm' or 'inch'\n   * @return {number} Returns the unit value as number.\n   */\n  // TODO: deprecate Unit.toNumber? It's always better to use toNumeric\n\n\n  Unit.prototype.toNumber = function (valuelessUnit) {\n    return toNumber(this.toNumeric(valuelessUnit));\n  };\n  /**\n   * Return the value of the unit in the original numeric type\n   * @memberof Unit\n   * @param {string | Unit} valuelessUnit    For example 'cm' or 'inch'\n   * @return {number | BigNumber | Fraction} Returns the unit value\n   */\n\n\n  Unit.prototype.toNumeric = function (valuelessUnit) {\n    var other;\n\n    if (valuelessUnit) {\n      // Allow getting the numeric value without converting to a different unit\n      other = this.to(valuelessUnit);\n    } else {\n      other = this.clone();\n    }\n\n    if (other._isDerived() || other.units.length === 0) {\n      return other._denormalize(other.value);\n    } else {\n      return other._denormalize(other.value, other.units[0].prefix.value);\n    }\n  };\n  /**\n   * Get a string representation of the unit.\n   * @memberof Unit\n   * @return {string}\n   */\n\n\n  Unit.prototype.toString = function () {\n    return this.format();\n  };\n  /**\n   * Get a JSON representation of the unit\n   * @memberof Unit\n   * @returns {Object} Returns a JSON object structured as:\n   *                   `{\"mathjs\": \"Unit\", \"value\": 2, \"unit\": \"cm\", \"fixPrefix\": false}`\n   */\n\n\n  Unit.prototype.toJSON = function () {\n    return {\n      mathjs: 'Unit',\n      value: this._denormalize(this.value),\n      unit: this.formatUnits(),\n      fixPrefix: this.fixPrefix\n    };\n  };\n  /**\n   * Instantiate a Unit from a JSON object\n   * @memberof Unit\n   * @param {Object} json  A JSON object structured as:\n   *                       `{\"mathjs\": \"Unit\", \"value\": 2, \"unit\": \"cm\", \"fixPrefix\": false}`\n   * @return {Unit}\n   */\n\n\n  Unit.fromJSON = function (json) {\n    var unit = new Unit(json.value, json.unit);\n    unit.fixPrefix = json.fixPrefix || false;\n    return unit;\n  };\n  /**\n   * Returns the string representation of the unit.\n   * @memberof Unit\n   * @return {string}\n   */\n\n\n  Unit.prototype.valueOf = Unit.prototype.toString;\n  /**\n   * Simplify this Unit's unit list and return a new Unit with the simplified list.\n   * The returned Unit will contain a list of the \"best\" units for formatting.\n   */\n\n  Unit.prototype.simplify = function () {\n    var ret = this.clone();\n    var proposedUnitList = []; // Search for a matching base\n\n    var matchingBase;\n\n    for (var key in currentUnitSystem) {\n      if (hasOwnProperty(currentUnitSystem, key)) {\n        if (ret.hasBase(BASE_UNITS[key])) {\n          matchingBase = key;\n          break;\n        }\n      }\n    }\n\n    if (matchingBase === 'NONE') {\n      ret.units = [];\n    } else {\n      var matchingUnit;\n\n      if (matchingBase) {\n        // Does the unit system have a matching unit?\n        if (hasOwnProperty(currentUnitSystem, matchingBase)) {\n          matchingUnit = currentUnitSystem[matchingBase];\n        }\n      }\n\n      if (matchingUnit) {\n        ret.units = [{\n          unit: matchingUnit.unit,\n          prefix: matchingUnit.prefix,\n          power: 1.0\n        }];\n      } else {\n        // Multiple units or units with powers are formatted like this:\n        // 5 (kg m^2) / (s^3 mol)\n        // Build an representation from the base units of the current unit system\n        var missingBaseDim = false;\n\n        for (var i = 0; i < BASE_DIMENSIONS.length; i++) {\n          var baseDim = BASE_DIMENSIONS[i];\n\n          if (Math.abs(ret.dimensions[i] || 0) > 1e-12) {\n            if (hasOwnProperty(currentUnitSystem, baseDim)) {\n              proposedUnitList.push({\n                unit: currentUnitSystem[baseDim].unit,\n                prefix: currentUnitSystem[baseDim].prefix,\n                power: ret.dimensions[i] || 0\n              });\n            } else {\n              missingBaseDim = true;\n            }\n          }\n        } // Is the proposed unit list \"simpler\" than the existing one?\n\n\n        if (proposedUnitList.length < ret.units.length && !missingBaseDim) {\n          // Replace this unit list with the proposed list\n          ret.units = proposedUnitList;\n        }\n      }\n    }\n\n    return ret;\n  };\n  /**\n   * Returns a new Unit in the SI system with the same value as this one\n   */\n\n\n  Unit.prototype.toSI = function () {\n    var ret = this.clone();\n    var proposedUnitList = []; // Multiple units or units with powers are formatted like this:\n    // 5 (kg m^2) / (s^3 mol)\n    // Build an representation from the base units of the SI unit system\n\n    for (var i = 0; i < BASE_DIMENSIONS.length; i++) {\n      var baseDim = BASE_DIMENSIONS[i];\n\n      if (Math.abs(ret.dimensions[i] || 0) > 1e-12) {\n        if (hasOwnProperty(UNIT_SYSTEMS.si, baseDim)) {\n          proposedUnitList.push({\n            unit: UNIT_SYSTEMS.si[baseDim].unit,\n            prefix: UNIT_SYSTEMS.si[baseDim].prefix,\n            power: ret.dimensions[i] || 0\n          });\n        } else {\n          throw new Error('Cannot express custom unit ' + baseDim + ' in SI units');\n        }\n      }\n    } // Replace this unit list with the proposed list\n\n\n    ret.units = proposedUnitList;\n    ret.fixPrefix = true;\n    ret.skipAutomaticSimplification = true;\n    return ret;\n  };\n  /**\n   * Get a string representation of the units of this Unit, without the value. The unit list is formatted as-is without first being simplified.\n   * @memberof Unit\n   * @return {string}\n   */\n\n\n  Unit.prototype.formatUnits = function () {\n    var strNum = '';\n    var strDen = '';\n    var nNum = 0;\n    var nDen = 0;\n\n    for (var i = 0; i < this.units.length; i++) {\n      if (this.units[i].power > 0) {\n        nNum++;\n        strNum += ' ' + this.units[i].prefix.name + this.units[i].unit.name;\n\n        if (Math.abs(this.units[i].power - 1.0) > 1e-15) {\n          strNum += '^' + this.units[i].power;\n        }\n      } else if (this.units[i].power < 0) {\n        nDen++;\n      }\n    }\n\n    if (nDen > 0) {\n      for (var _i4 = 0; _i4 < this.units.length; _i4++) {\n        if (this.units[_i4].power < 0) {\n          if (nNum > 0) {\n            strDen += ' ' + this.units[_i4].prefix.name + this.units[_i4].unit.name;\n\n            if (Math.abs(this.units[_i4].power + 1.0) > 1e-15) {\n              strDen += '^' + -this.units[_i4].power;\n            }\n          } else {\n            strDen += ' ' + this.units[_i4].prefix.name + this.units[_i4].unit.name;\n            strDen += '^' + this.units[_i4].power;\n          }\n        }\n      }\n    } // Remove leading \" \"\n\n\n    strNum = strNum.substr(1);\n    strDen = strDen.substr(1); // Add parans for better copy/paste back into evaluate, for example, or for better pretty print formatting\n\n    if (nNum > 1 && nDen > 0) {\n      strNum = '(' + strNum + ')';\n    }\n\n    if (nDen > 1 && nNum > 0) {\n      strDen = '(' + strDen + ')';\n    }\n\n    var str = strNum;\n\n    if (nNum > 0 && nDen > 0) {\n      str += ' / ';\n    }\n\n    str += strDen;\n    return str;\n  };\n  /**\n   * Get a string representation of the Unit, with optional formatting options.\n   * @memberof Unit\n   * @param {Object | number | Function} [options]  Formatting options. See\n   *                                                lib/utils/number:format for a\n   *                                                description of the available\n   *                                                options.\n   * @return {string}\n   */\n\n\n  Unit.prototype.format = function (options) {\n    // Simplfy the unit list, unless it is valueless or was created directly in the\n    // constructor or as the result of to or toSI\n    var simp = this.skipAutomaticSimplification || this.value === null ? this.clone() : this.simplify(); // Apply some custom logic for handling VA and VAR. The goal is to express the value of the unit as a real value, if possible. Otherwise, use a real-valued unit instead of a complex-valued one.\n\n    var isImaginary = false;\n\n    if (typeof simp.value !== 'undefined' && simp.value !== null && isComplex(simp.value)) {\n      // TODO: Make this better, for example, use relative magnitude of re and im rather than absolute\n      isImaginary = Math.abs(simp.value.re) < 1e-14;\n    }\n\n    for (var i in simp.units) {\n      if (hasOwnProperty(simp.units, i)) {\n        if (simp.units[i].unit) {\n          if (simp.units[i].unit.name === 'VA' && isImaginary) {\n            simp.units[i].unit = UNITS.VAR;\n          } else if (simp.units[i].unit.name === 'VAR' && !isImaginary) {\n            simp.units[i].unit = UNITS.VA;\n          }\n        }\n      }\n    } // Now apply the best prefix\n    // Units must have only one unit and not have the fixPrefix flag set\n\n\n    if (simp.units.length === 1 && !simp.fixPrefix) {\n      // Units must have integer powers, otherwise the prefix will change the\n      // outputted value by not-an-integer-power-of-ten\n      if (Math.abs(simp.units[0].power - Math.round(simp.units[0].power)) < 1e-14) {\n        // Apply the best prefix\n        simp.units[0].prefix = simp._bestPrefix();\n      }\n    }\n\n    var value = simp._denormalize(simp.value);\n\n    var str = simp.value !== null ? format(value, options || {}) : '';\n    var unitStr = simp.formatUnits();\n\n    if (simp.value && isComplex(simp.value)) {\n      str = '(' + str + ')'; // Surround complex values with ( ) to enable better parsing\n    }\n\n    if (unitStr.length > 0 && str.length > 0) {\n      str += ' ';\n    }\n\n    str += unitStr;\n    return str;\n  };\n  /**\n   * Calculate the best prefix using current value.\n   * @memberof Unit\n   * @returns {Object} prefix\n   * @private\n   */\n\n\n  Unit.prototype._bestPrefix = function () {\n    if (this.units.length !== 1) {\n      throw new Error('Can only compute the best prefix for single units with integer powers, like kg, s^2, N^-1, and so forth!');\n    }\n\n    if (Math.abs(this.units[0].power - Math.round(this.units[0].power)) >= 1e-14) {\n      throw new Error('Can only compute the best prefix for single units with integer powers, like kg, s^2, N^-1, and so forth!');\n    } // find the best prefix value (resulting in the value of which\n    // the absolute value of the log10 is closest to zero,\n    // though with a little offset of 1.2 for nicer values: you get a\n    // sequence 1mm 100mm 500mm 0.6m 1m 10m 100m 500m 0.6km 1km ...\n    // Note: the units value can be any numeric type, but to find the best\n    // prefix it's enough to work with limited precision of a regular number\n    // Update: using mathjs abs since we also allow complex numbers\n\n\n    var absValue = this.value !== null ? abs(this.value) : 0;\n    var absUnitValue = abs(this.units[0].unit.value);\n    var bestPrefix = this.units[0].prefix;\n\n    if (absValue === 0) {\n      return bestPrefix;\n    }\n\n    var power = this.units[0].power;\n    var bestDiff = Math.log(absValue / Math.pow(bestPrefix.value * absUnitValue, power)) / Math.LN10 - 1.2;\n    if (bestDiff > -2.200001 && bestDiff < 1.800001) return bestPrefix; // Allow the original prefix\n\n    bestDiff = Math.abs(bestDiff);\n    var prefixes = this.units[0].unit.prefixes;\n\n    for (var p in prefixes) {\n      if (hasOwnProperty(prefixes, p)) {\n        var prefix = prefixes[p];\n\n        if (prefix.scientific) {\n          var diff = Math.abs(Math.log(absValue / Math.pow(prefix.value * absUnitValue, power)) / Math.LN10 - 1.2);\n\n          if (diff < bestDiff || diff === bestDiff && prefix.name.length < bestPrefix.name.length) {\n            // choose the prefix with the smallest diff, or if equal, choose the one\n            // with the shortest name (can happen with SHORTLONG for example)\n            bestPrefix = prefix;\n            bestDiff = diff;\n          }\n        }\n      }\n    }\n\n    return bestPrefix;\n  };\n  /**\n   * Returns an array of units whose sum is equal to this unit\n   * @memberof Unit\n   * @param {Array} [parts] An array of strings or valueless units.\n   *\n   *   Example:\n   *\n   *   const u = new Unit(1, 'm')\n   *   u.splitUnit(['feet', 'inch'])\n   *     [ 3 feet, 3.3700787401575 inch ]\n   *\n   * @return {Array} An array of units.\n   */\n\n\n  Unit.prototype.splitUnit = function (parts) {\n    var x = this.clone();\n    var ret = [];\n\n    for (var i = 0; i < parts.length; i++) {\n      // Convert x to the requested unit\n      x = x.to(parts[i]);\n      if (i === parts.length - 1) break; // Get the numeric value of this unit\n\n      var xNumeric = x.toNumeric(); // Check to see if xNumeric is nearly equal to an integer,\n      // since fix can incorrectly round down if there is round-off error\n\n      var xRounded = round(xNumeric);\n      var xFixed = void 0;\n      var isNearlyEqual = equal(xRounded, xNumeric);\n\n      if (isNearlyEqual) {\n        xFixed = xRounded;\n      } else {\n        xFixed = fix(x.toNumeric());\n      }\n\n      var y = new Unit(xFixed, parts[i].toString());\n      ret.push(y);\n      x = subtract(x, y);\n    } // This little bit fixes a bug where the remainder should be 0 but is a little bit off.\n    // But instead of comparing x, the remainder, with zero--we will compare the sum of\n    // all the parts so far with the original value. If they are nearly equal,\n    // we set the remainder to 0.\n\n\n    var testSum = 0;\n\n    for (var _i5 = 0; _i5 < ret.length; _i5++) {\n      testSum = addScalar(testSum, ret[_i5].value);\n    }\n\n    if (equal(testSum, this.value)) {\n      x.value = 0;\n    }\n\n    ret.push(x);\n    return ret;\n  };\n\n  var PREFIXES = {\n    NONE: {\n      '': {\n        name: '',\n        value: 1,\n        scientific: true\n      }\n    },\n    SHORT: {\n      '': {\n        name: '',\n        value: 1,\n        scientific: true\n      },\n      da: {\n        name: 'da',\n        value: 1e1,\n        scientific: false\n      },\n      h: {\n        name: 'h',\n        value: 1e2,\n        scientific: false\n      },\n      k: {\n        name: 'k',\n        value: 1e3,\n        scientific: true\n      },\n      M: {\n        name: 'M',\n        value: 1e6,\n        scientific: true\n      },\n      G: {\n        name: 'G',\n        value: 1e9,\n        scientific: true\n      },\n      T: {\n        name: 'T',\n        value: 1e12,\n        scientific: true\n      },\n      P: {\n        name: 'P',\n        value: 1e15,\n        scientific: true\n      },\n      E: {\n        name: 'E',\n        value: 1e18,\n        scientific: true\n      },\n      Z: {\n        name: 'Z',\n        value: 1e21,\n        scientific: true\n      },\n      Y: {\n        name: 'Y',\n        value: 1e24,\n        scientific: true\n      },\n      d: {\n        name: 'd',\n        value: 1e-1,\n        scientific: false\n      },\n      c: {\n        name: 'c',\n        value: 1e-2,\n        scientific: false\n      },\n      m: {\n        name: 'm',\n        value: 1e-3,\n        scientific: true\n      },\n      u: {\n        name: 'u',\n        value: 1e-6,\n        scientific: true\n      },\n      n: {\n        name: 'n',\n        value: 1e-9,\n        scientific: true\n      },\n      p: {\n        name: 'p',\n        value: 1e-12,\n        scientific: true\n      },\n      f: {\n        name: 'f',\n        value: 1e-15,\n        scientific: true\n      },\n      a: {\n        name: 'a',\n        value: 1e-18,\n        scientific: true\n      },\n      z: {\n        name: 'z',\n        value: 1e-21,\n        scientific: true\n      },\n      y: {\n        name: 'y',\n        value: 1e-24,\n        scientific: true\n      }\n    },\n    LONG: {\n      '': {\n        name: '',\n        value: 1,\n        scientific: true\n      },\n      deca: {\n        name: 'deca',\n        value: 1e1,\n        scientific: false\n      },\n      hecto: {\n        name: 'hecto',\n        value: 1e2,\n        scientific: false\n      },\n      kilo: {\n        name: 'kilo',\n        value: 1e3,\n        scientific: true\n      },\n      mega: {\n        name: 'mega',\n        value: 1e6,\n        scientific: true\n      },\n      giga: {\n        name: 'giga',\n        value: 1e9,\n        scientific: true\n      },\n      tera: {\n        name: 'tera',\n        value: 1e12,\n        scientific: true\n      },\n      peta: {\n        name: 'peta',\n        value: 1e15,\n        scientific: true\n      },\n      exa: {\n        name: 'exa',\n        value: 1e18,\n        scientific: true\n      },\n      zetta: {\n        name: 'zetta',\n        value: 1e21,\n        scientific: true\n      },\n      yotta: {\n        name: 'yotta',\n        value: 1e24,\n        scientific: true\n      },\n      deci: {\n        name: 'deci',\n        value: 1e-1,\n        scientific: false\n      },\n      centi: {\n        name: 'centi',\n        value: 1e-2,\n        scientific: false\n      },\n      milli: {\n        name: 'milli',\n        value: 1e-3,\n        scientific: true\n      },\n      micro: {\n        name: 'micro',\n        value: 1e-6,\n        scientific: true\n      },\n      nano: {\n        name: 'nano',\n        value: 1e-9,\n        scientific: true\n      },\n      pico: {\n        name: 'pico',\n        value: 1e-12,\n        scientific: true\n      },\n      femto: {\n        name: 'femto',\n        value: 1e-15,\n        scientific: true\n      },\n      atto: {\n        name: 'atto',\n        value: 1e-18,\n        scientific: true\n      },\n      zepto: {\n        name: 'zepto',\n        value: 1e-21,\n        scientific: true\n      },\n      yocto: {\n        name: 'yocto',\n        value: 1e-24,\n        scientific: true\n      }\n    },\n    SQUARED: {\n      '': {\n        name: '',\n        value: 1,\n        scientific: true\n      },\n      da: {\n        name: 'da',\n        value: 1e2,\n        scientific: false\n      },\n      h: {\n        name: 'h',\n        value: 1e4,\n        scientific: false\n      },\n      k: {\n        name: 'k',\n        value: 1e6,\n        scientific: true\n      },\n      M: {\n        name: 'M',\n        value: 1e12,\n        scientific: true\n      },\n      G: {\n        name: 'G',\n        value: 1e18,\n        scientific: true\n      },\n      T: {\n        name: 'T',\n        value: 1e24,\n        scientific: true\n      },\n      P: {\n        name: 'P',\n        value: 1e30,\n        scientific: true\n      },\n      E: {\n        name: 'E',\n        value: 1e36,\n        scientific: true\n      },\n      Z: {\n        name: 'Z',\n        value: 1e42,\n        scientific: true\n      },\n      Y: {\n        name: 'Y',\n        value: 1e48,\n        scientific: true\n      },\n      d: {\n        name: 'd',\n        value: 1e-2,\n        scientific: false\n      },\n      c: {\n        name: 'c',\n        value: 1e-4,\n        scientific: false\n      },\n      m: {\n        name: 'm',\n        value: 1e-6,\n        scientific: true\n      },\n      u: {\n        name: 'u',\n        value: 1e-12,\n        scientific: true\n      },\n      n: {\n        name: 'n',\n        value: 1e-18,\n        scientific: true\n      },\n      p: {\n        name: 'p',\n        value: 1e-24,\n        scientific: true\n      },\n      f: {\n        name: 'f',\n        value: 1e-30,\n        scientific: true\n      },\n      a: {\n        name: 'a',\n        value: 1e-36,\n        scientific: true\n      },\n      z: {\n        name: 'z',\n        value: 1e-42,\n        scientific: true\n      },\n      y: {\n        name: 'y',\n        value: 1e-48,\n        scientific: true\n      }\n    },\n    CUBIC: {\n      '': {\n        name: '',\n        value: 1,\n        scientific: true\n      },\n      da: {\n        name: 'da',\n        value: 1e3,\n        scientific: false\n      },\n      h: {\n        name: 'h',\n        value: 1e6,\n        scientific: false\n      },\n      k: {\n        name: 'k',\n        value: 1e9,\n        scientific: true\n      },\n      M: {\n        name: 'M',\n        value: 1e18,\n        scientific: true\n      },\n      G: {\n        name: 'G',\n        value: 1e27,\n        scientific: true\n      },\n      T: {\n        name: 'T',\n        value: 1e36,\n        scientific: true\n      },\n      P: {\n        name: 'P',\n        value: 1e45,\n        scientific: true\n      },\n      E: {\n        name: 'E',\n        value: 1e54,\n        scientific: true\n      },\n      Z: {\n        name: 'Z',\n        value: 1e63,\n        scientific: true\n      },\n      Y: {\n        name: 'Y',\n        value: 1e72,\n        scientific: true\n      },\n      d: {\n        name: 'd',\n        value: 1e-3,\n        scientific: false\n      },\n      c: {\n        name: 'c',\n        value: 1e-6,\n        scientific: false\n      },\n      m: {\n        name: 'm',\n        value: 1e-9,\n        scientific: true\n      },\n      u: {\n        name: 'u',\n        value: 1e-18,\n        scientific: true\n      },\n      n: {\n        name: 'n',\n        value: 1e-27,\n        scientific: true\n      },\n      p: {\n        name: 'p',\n        value: 1e-36,\n        scientific: true\n      },\n      f: {\n        name: 'f',\n        value: 1e-45,\n        scientific: true\n      },\n      a: {\n        name: 'a',\n        value: 1e-54,\n        scientific: true\n      },\n      z: {\n        name: 'z',\n        value: 1e-63,\n        scientific: true\n      },\n      y: {\n        name: 'y',\n        value: 1e-72,\n        scientific: true\n      }\n    },\n    BINARY_SHORT_SI: {\n      '': {\n        name: '',\n        value: 1,\n        scientific: true\n      },\n      k: {\n        name: 'k',\n        value: 1e3,\n        scientific: true\n      },\n      M: {\n        name: 'M',\n        value: 1e6,\n        scientific: true\n      },\n      G: {\n        name: 'G',\n        value: 1e9,\n        scientific: true\n      },\n      T: {\n        name: 'T',\n        value: 1e12,\n        scientific: true\n      },\n      P: {\n        name: 'P',\n        value: 1e15,\n        scientific: true\n      },\n      E: {\n        name: 'E',\n        value: 1e18,\n        scientific: true\n      },\n      Z: {\n        name: 'Z',\n        value: 1e21,\n        scientific: true\n      },\n      Y: {\n        name: 'Y',\n        value: 1e24,\n        scientific: true\n      }\n    },\n    BINARY_SHORT_IEC: {\n      '': {\n        name: '',\n        value: 1,\n        scientific: true\n      },\n      Ki: {\n        name: 'Ki',\n        value: 1024,\n        scientific: true\n      },\n      Mi: {\n        name: 'Mi',\n        value: Math.pow(1024, 2),\n        scientific: true\n      },\n      Gi: {\n        name: 'Gi',\n        value: Math.pow(1024, 3),\n        scientific: true\n      },\n      Ti: {\n        name: 'Ti',\n        value: Math.pow(1024, 4),\n        scientific: true\n      },\n      Pi: {\n        name: 'Pi',\n        value: Math.pow(1024, 5),\n        scientific: true\n      },\n      Ei: {\n        name: 'Ei',\n        value: Math.pow(1024, 6),\n        scientific: true\n      },\n      Zi: {\n        name: 'Zi',\n        value: Math.pow(1024, 7),\n        scientific: true\n      },\n      Yi: {\n        name: 'Yi',\n        value: Math.pow(1024, 8),\n        scientific: true\n      }\n    },\n    BINARY_LONG_SI: {\n      '': {\n        name: '',\n        value: 1,\n        scientific: true\n      },\n      kilo: {\n        name: 'kilo',\n        value: 1e3,\n        scientific: true\n      },\n      mega: {\n        name: 'mega',\n        value: 1e6,\n        scientific: true\n      },\n      giga: {\n        name: 'giga',\n        value: 1e9,\n        scientific: true\n      },\n      tera: {\n        name: 'tera',\n        value: 1e12,\n        scientific: true\n      },\n      peta: {\n        name: 'peta',\n        value: 1e15,\n        scientific: true\n      },\n      exa: {\n        name: 'exa',\n        value: 1e18,\n        scientific: true\n      },\n      zetta: {\n        name: 'zetta',\n        value: 1e21,\n        scientific: true\n      },\n      yotta: {\n        name: 'yotta',\n        value: 1e24,\n        scientific: true\n      }\n    },\n    BINARY_LONG_IEC: {\n      '': {\n        name: '',\n        value: 1,\n        scientific: true\n      },\n      kibi: {\n        name: 'kibi',\n        value: 1024,\n        scientific: true\n      },\n      mebi: {\n        name: 'mebi',\n        value: Math.pow(1024, 2),\n        scientific: true\n      },\n      gibi: {\n        name: 'gibi',\n        value: Math.pow(1024, 3),\n        scientific: true\n      },\n      tebi: {\n        name: 'tebi',\n        value: Math.pow(1024, 4),\n        scientific: true\n      },\n      pebi: {\n        name: 'pebi',\n        value: Math.pow(1024, 5),\n        scientific: true\n      },\n      exi: {\n        name: 'exi',\n        value: Math.pow(1024, 6),\n        scientific: true\n      },\n      zebi: {\n        name: 'zebi',\n        value: Math.pow(1024, 7),\n        scientific: true\n      },\n      yobi: {\n        name: 'yobi',\n        value: Math.pow(1024, 8),\n        scientific: true\n      }\n    },\n    BTU: {\n      '': {\n        name: '',\n        value: 1,\n        scientific: true\n      },\n      MM: {\n        name: 'MM',\n        value: 1e6,\n        scientific: true\n      }\n    }\n  };\n  PREFIXES.SHORTLONG = _extends({}, PREFIXES.SHORT, PREFIXES.LONG);\n  PREFIXES.BINARY_SHORT = _extends({}, PREFIXES.BINARY_SHORT_SI, PREFIXES.BINARY_SHORT_IEC);\n  PREFIXES.BINARY_LONG = _extends({}, PREFIXES.BINARY_LONG_SI, PREFIXES.BINARY_LONG_IEC);\n  /* Internally, each unit is represented by a value and a dimension array. The elements of the dimensions array have the following meaning:\n   * Index  Dimension\n   * -----  ---------\n   *   0    Length\n   *   1    Mass\n   *   2    Time\n   *   3    Current\n   *   4    Temperature\n   *   5    Luminous intensity\n   *   6    Amount of substance\n   *   7    Angle\n   *   8    Bit (digital)\n   * For example, the unit \"298.15 K\" is a pure temperature and would have a value of 298.15 and a dimension array of [0, 0, 0, 0, 1, 0, 0, 0, 0]. The unit \"1 cal / (gm °C)\" can be written in terms of the 9 fundamental dimensions as [length^2] / ([time^2] * [temperature]), and would a value of (after conversion to SI) 4184.0 and a dimensions array of [2, 0, -2, 0, -1, 0, 0, 0, 0].\n   *\n   */\n\n  var BASE_DIMENSIONS = ['MASS', 'LENGTH', 'TIME', 'CURRENT', 'TEMPERATURE', 'LUMINOUS_INTENSITY', 'AMOUNT_OF_SUBSTANCE', 'ANGLE', 'BIT'];\n  var BASE_UNITS = {\n    NONE: {\n      dimensions: [0, 0, 0, 0, 0, 0, 0, 0, 0]\n    },\n    MASS: {\n      dimensions: [1, 0, 0, 0, 0, 0, 0, 0, 0]\n    },\n    LENGTH: {\n      dimensions: [0, 1, 0, 0, 0, 0, 0, 0, 0]\n    },\n    TIME: {\n      dimensions: [0, 0, 1, 0, 0, 0, 0, 0, 0]\n    },\n    CURRENT: {\n      dimensions: [0, 0, 0, 1, 0, 0, 0, 0, 0]\n    },\n    TEMPERATURE: {\n      dimensions: [0, 0, 0, 0, 1, 0, 0, 0, 0]\n    },\n    LUMINOUS_INTENSITY: {\n      dimensions: [0, 0, 0, 0, 0, 1, 0, 0, 0]\n    },\n    AMOUNT_OF_SUBSTANCE: {\n      dimensions: [0, 0, 0, 0, 0, 0, 1, 0, 0]\n    },\n    FORCE: {\n      dimensions: [1, 1, -2, 0, 0, 0, 0, 0, 0]\n    },\n    SURFACE: {\n      dimensions: [0, 2, 0, 0, 0, 0, 0, 0, 0]\n    },\n    VOLUME: {\n      dimensions: [0, 3, 0, 0, 0, 0, 0, 0, 0]\n    },\n    ENERGY: {\n      dimensions: [1, 2, -2, 0, 0, 0, 0, 0, 0]\n    },\n    POWER: {\n      dimensions: [1, 2, -3, 0, 0, 0, 0, 0, 0]\n    },\n    PRESSURE: {\n      dimensions: [1, -1, -2, 0, 0, 0, 0, 0, 0]\n    },\n    ELECTRIC_CHARGE: {\n      dimensions: [0, 0, 1, 1, 0, 0, 0, 0, 0]\n    },\n    ELECTRIC_CAPACITANCE: {\n      dimensions: [-1, -2, 4, 2, 0, 0, 0, 0, 0]\n    },\n    ELECTRIC_POTENTIAL: {\n      dimensions: [1, 2, -3, -1, 0, 0, 0, 0, 0]\n    },\n    ELECTRIC_RESISTANCE: {\n      dimensions: [1, 2, -3, -2, 0, 0, 0, 0, 0]\n    },\n    ELECTRIC_INDUCTANCE: {\n      dimensions: [1, 2, -2, -2, 0, 0, 0, 0, 0]\n    },\n    ELECTRIC_CONDUCTANCE: {\n      dimensions: [-1, -2, 3, 2, 0, 0, 0, 0, 0]\n    },\n    MAGNETIC_FLUX: {\n      dimensions: [1, 2, -2, -1, 0, 0, 0, 0, 0]\n    },\n    MAGNETIC_FLUX_DENSITY: {\n      dimensions: [1, 0, -2, -1, 0, 0, 0, 0, 0]\n    },\n    FREQUENCY: {\n      dimensions: [0, 0, -1, 0, 0, 0, 0, 0, 0]\n    },\n    ANGLE: {\n      dimensions: [0, 0, 0, 0, 0, 0, 0, 1, 0]\n    },\n    BIT: {\n      dimensions: [0, 0, 0, 0, 0, 0, 0, 0, 1]\n    }\n  };\n\n  for (var key in BASE_UNITS) {\n    if (hasOwnProperty(BASE_UNITS, key)) {\n      BASE_UNITS[key].key = key;\n    }\n  }\n\n  var BASE_UNIT_NONE = {};\n  var UNIT_NONE = {\n    name: '',\n    base: BASE_UNIT_NONE,\n    value: 1,\n    offset: 0,\n    dimensions: BASE_DIMENSIONS.map(x => 0)\n  };\n  var UNITS = {\n    // length\n    meter: {\n      name: 'meter',\n      base: BASE_UNITS.LENGTH,\n      prefixes: PREFIXES.LONG,\n      value: 1,\n      offset: 0\n    },\n    inch: {\n      name: 'inch',\n      base: BASE_UNITS.LENGTH,\n      prefixes: PREFIXES.NONE,\n      value: 0.0254,\n      offset: 0\n    },\n    foot: {\n      name: 'foot',\n      base: BASE_UNITS.LENGTH,\n      prefixes: PREFIXES.NONE,\n      value: 0.3048,\n      offset: 0\n    },\n    yard: {\n      name: 'yard',\n      base: BASE_UNITS.LENGTH,\n      prefixes: PREFIXES.NONE,\n      value: 0.9144,\n      offset: 0\n    },\n    mile: {\n      name: 'mile',\n      base: BASE_UNITS.LENGTH,\n      prefixes: PREFIXES.NONE,\n      value: 1609.344,\n      offset: 0\n    },\n    link: {\n      name: 'link',\n      base: BASE_UNITS.LENGTH,\n      prefixes: PREFIXES.NONE,\n      value: 0.201168,\n      offset: 0\n    },\n    rod: {\n      name: 'rod',\n      base: BASE_UNITS.LENGTH,\n      prefixes: PREFIXES.NONE,\n      value: 5.0292,\n      offset: 0\n    },\n    chain: {\n      name: 'chain',\n      base: BASE_UNITS.LENGTH,\n      prefixes: PREFIXES.NONE,\n      value: 20.1168,\n      offset: 0\n    },\n    angstrom: {\n      name: 'angstrom',\n      base: BASE_UNITS.LENGTH,\n      prefixes: PREFIXES.NONE,\n      value: 1e-10,\n      offset: 0\n    },\n    m: {\n      name: 'm',\n      base: BASE_UNITS.LENGTH,\n      prefixes: PREFIXES.SHORT,\n      value: 1,\n      offset: 0\n    },\n    in: {\n      name: 'in',\n      base: BASE_UNITS.LENGTH,\n      prefixes: PREFIXES.NONE,\n      value: 0.0254,\n      offset: 0\n    },\n    ft: {\n      name: 'ft',\n      base: BASE_UNITS.LENGTH,\n      prefixes: PREFIXES.NONE,\n      value: 0.3048,\n      offset: 0\n    },\n    yd: {\n      name: 'yd',\n      base: BASE_UNITS.LENGTH,\n      prefixes: PREFIXES.NONE,\n      value: 0.9144,\n      offset: 0\n    },\n    mi: {\n      name: 'mi',\n      base: BASE_UNITS.LENGTH,\n      prefixes: PREFIXES.NONE,\n      value: 1609.344,\n      offset: 0\n    },\n    li: {\n      name: 'li',\n      base: BASE_UNITS.LENGTH,\n      prefixes: PREFIXES.NONE,\n      value: 0.201168,\n      offset: 0\n    },\n    rd: {\n      name: 'rd',\n      base: BASE_UNITS.LENGTH,\n      prefixes: PREFIXES.NONE,\n      value: 5.029210,\n      offset: 0\n    },\n    ch: {\n      name: 'ch',\n      base: BASE_UNITS.LENGTH,\n      prefixes: PREFIXES.NONE,\n      value: 20.1168,\n      offset: 0\n    },\n    mil: {\n      name: 'mil',\n      base: BASE_UNITS.LENGTH,\n      prefixes: PREFIXES.NONE,\n      value: 0.0000254,\n      offset: 0\n    },\n    // 1/1000 inch\n    // Surface\n    m2: {\n      name: 'm2',\n      base: BASE_UNITS.SURFACE,\n      prefixes: PREFIXES.SQUARED,\n      value: 1,\n      offset: 0\n    },\n    sqin: {\n      name: 'sqin',\n      base: BASE_UNITS.SURFACE,\n      prefixes: PREFIXES.NONE,\n      value: 0.00064516,\n      offset: 0\n    },\n    // 645.16 mm2\n    sqft: {\n      name: 'sqft',\n      base: BASE_UNITS.SURFACE,\n      prefixes: PREFIXES.NONE,\n      value: 0.09290304,\n      offset: 0\n    },\n    // 0.09290304 m2\n    sqyd: {\n      name: 'sqyd',\n      base: BASE_UNITS.SURFACE,\n      prefixes: PREFIXES.NONE,\n      value: 0.83612736,\n      offset: 0\n    },\n    // 0.83612736 m2\n    sqmi: {\n      name: 'sqmi',\n      base: BASE_UNITS.SURFACE,\n      prefixes: PREFIXES.NONE,\n      value: 2589988.110336,\n      offset: 0\n    },\n    // 2.589988110336 km2\n    sqrd: {\n      name: 'sqrd',\n      base: BASE_UNITS.SURFACE,\n      prefixes: PREFIXES.NONE,\n      value: 25.29295,\n      offset: 0\n    },\n    // 25.29295 m2\n    sqch: {\n      name: 'sqch',\n      base: BASE_UNITS.SURFACE,\n      prefixes: PREFIXES.NONE,\n      value: 404.6873,\n      offset: 0\n    },\n    // 404.6873 m2\n    sqmil: {\n      name: 'sqmil',\n      base: BASE_UNITS.SURFACE,\n      prefixes: PREFIXES.NONE,\n      value: 6.4516e-10,\n      offset: 0\n    },\n    // 6.4516 * 10^-10 m2\n    acre: {\n      name: 'acre',\n      base: BASE_UNITS.SURFACE,\n      prefixes: PREFIXES.NONE,\n      value: 4046.86,\n      offset: 0\n    },\n    // 4046.86 m2\n    hectare: {\n      name: 'hectare',\n      base: BASE_UNITS.SURFACE,\n      prefixes: PREFIXES.NONE,\n      value: 10000,\n      offset: 0\n    },\n    // 10000 m2\n    // Volume\n    m3: {\n      name: 'm3',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.CUBIC,\n      value: 1,\n      offset: 0\n    },\n    L: {\n      name: 'L',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.SHORT,\n      value: 0.001,\n      offset: 0\n    },\n    // litre\n    l: {\n      name: 'l',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.SHORT,\n      value: 0.001,\n      offset: 0\n    },\n    // litre\n    litre: {\n      name: 'litre',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.LONG,\n      value: 0.001,\n      offset: 0\n    },\n    cuin: {\n      name: 'cuin',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.NONE,\n      value: 1.6387064e-5,\n      offset: 0\n    },\n    // 1.6387064e-5 m3\n    cuft: {\n      name: 'cuft',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.NONE,\n      value: 0.028316846592,\n      offset: 0\n    },\n    // 28.316 846 592 L\n    cuyd: {\n      name: 'cuyd',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.NONE,\n      value: 0.764554857984,\n      offset: 0\n    },\n    // 764.554 857 984 L\n    teaspoon: {\n      name: 'teaspoon',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.NONE,\n      value: 0.000005,\n      offset: 0\n    },\n    // 5 mL\n    tablespoon: {\n      name: 'tablespoon',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.NONE,\n      value: 0.000015,\n      offset: 0\n    },\n    // 15 mL\n    // {name: 'cup', base: BASE_UNITS.VOLUME, prefixes: PREFIXES.NONE, value: 0.000240, offset: 0}, // 240 mL  // not possible, we have already another cup\n    drop: {\n      name: 'drop',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.NONE,\n      value: 5e-8,\n      offset: 0\n    },\n    // 0.05 mL = 5e-8 m3\n    gtt: {\n      name: 'gtt',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.NONE,\n      value: 5e-8,\n      offset: 0\n    },\n    // 0.05 mL = 5e-8 m3\n    // Liquid volume\n    minim: {\n      name: 'minim',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.NONE,\n      value: 0.00000006161152,\n      offset: 0\n    },\n    // 0.06161152 mL\n    fluiddram: {\n      name: 'fluiddram',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.NONE,\n      value: 0.0000036966911,\n      offset: 0\n    },\n    // 3.696691 mL\n    fluidounce: {\n      name: 'fluidounce',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.NONE,\n      value: 0.00002957353,\n      offset: 0\n    },\n    // 29.57353 mL\n    gill: {\n      name: 'gill',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.NONE,\n      value: 0.0001182941,\n      offset: 0\n    },\n    // 118.2941 mL\n    cc: {\n      name: 'cc',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.NONE,\n      value: 1e-6,\n      offset: 0\n    },\n    // 1e-6 L\n    cup: {\n      name: 'cup',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.NONE,\n      value: 0.0002365882,\n      offset: 0\n    },\n    // 236.5882 mL\n    pint: {\n      name: 'pint',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.NONE,\n      value: 0.0004731765,\n      offset: 0\n    },\n    // 473.1765 mL\n    quart: {\n      name: 'quart',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.NONE,\n      value: 0.0009463529,\n      offset: 0\n    },\n    // 946.3529 mL\n    gallon: {\n      name: 'gallon',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.NONE,\n      value: 0.003785412,\n      offset: 0\n    },\n    // 3.785412 L\n    beerbarrel: {\n      name: 'beerbarrel',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.NONE,\n      value: 0.1173478,\n      offset: 0\n    },\n    // 117.3478 L\n    oilbarrel: {\n      name: 'oilbarrel',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.NONE,\n      value: 0.1589873,\n      offset: 0\n    },\n    // 158.9873 L\n    hogshead: {\n      name: 'hogshead',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.NONE,\n      value: 0.2384810,\n      offset: 0\n    },\n    // 238.4810 L\n    // {name: 'min', base: BASE_UNITS.VOLUME, prefixes: PREFIXES.NONE, value: 0.00000006161152, offset: 0}, // 0.06161152 mL // min is already in use as minute\n    fldr: {\n      name: 'fldr',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.NONE,\n      value: 0.0000036966911,\n      offset: 0\n    },\n    // 3.696691 mL\n    floz: {\n      name: 'floz',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.NONE,\n      value: 0.00002957353,\n      offset: 0\n    },\n    // 29.57353 mL\n    gi: {\n      name: 'gi',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.NONE,\n      value: 0.0001182941,\n      offset: 0\n    },\n    // 118.2941 mL\n    cp: {\n      name: 'cp',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.NONE,\n      value: 0.0002365882,\n      offset: 0\n    },\n    // 236.5882 mL\n    pt: {\n      name: 'pt',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.NONE,\n      value: 0.0004731765,\n      offset: 0\n    },\n    // 473.1765 mL\n    qt: {\n      name: 'qt',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.NONE,\n      value: 0.0009463529,\n      offset: 0\n    },\n    // 946.3529 mL\n    gal: {\n      name: 'gal',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.NONE,\n      value: 0.003785412,\n      offset: 0\n    },\n    // 3.785412 L\n    bbl: {\n      name: 'bbl',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.NONE,\n      value: 0.1173478,\n      offset: 0\n    },\n    // 117.3478 L\n    obl: {\n      name: 'obl',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.NONE,\n      value: 0.1589873,\n      offset: 0\n    },\n    // 158.9873 L\n    // {name: 'hogshead', base: BASE_UNITS.VOLUME, prefixes: PREFIXES.NONE, value: 0.2384810, offset: 0}, // 238.4810 L // TODO: hh?\n    // Mass\n    g: {\n      name: 'g',\n      base: BASE_UNITS.MASS,\n      prefixes: PREFIXES.SHORT,\n      value: 0.001,\n      offset: 0\n    },\n    gram: {\n      name: 'gram',\n      base: BASE_UNITS.MASS,\n      prefixes: PREFIXES.LONG,\n      value: 0.001,\n      offset: 0\n    },\n    ton: {\n      name: 'ton',\n      base: BASE_UNITS.MASS,\n      prefixes: PREFIXES.SHORT,\n      value: 907.18474,\n      offset: 0\n    },\n    t: {\n      name: 't',\n      base: BASE_UNITS.MASS,\n      prefixes: PREFIXES.SHORT,\n      value: 1000,\n      offset: 0\n    },\n    tonne: {\n      name: 'tonne',\n      base: BASE_UNITS.MASS,\n      prefixes: PREFIXES.LONG,\n      value: 1000,\n      offset: 0\n    },\n    grain: {\n      name: 'grain',\n      base: BASE_UNITS.MASS,\n      prefixes: PREFIXES.NONE,\n      value: 64.79891e-6,\n      offset: 0\n    },\n    dram: {\n      name: 'dram',\n      base: BASE_UNITS.MASS,\n      prefixes: PREFIXES.NONE,\n      value: 1.7718451953125e-3,\n      offset: 0\n    },\n    ounce: {\n      name: 'ounce',\n      base: BASE_UNITS.MASS,\n      prefixes: PREFIXES.NONE,\n      value: 28.349523125e-3,\n      offset: 0\n    },\n    poundmass: {\n      name: 'poundmass',\n      base: BASE_UNITS.MASS,\n      prefixes: PREFIXES.NONE,\n      value: 453.59237e-3,\n      offset: 0\n    },\n    hundredweight: {\n      name: 'hundredweight',\n      base: BASE_UNITS.MASS,\n      prefixes: PREFIXES.NONE,\n      value: 45.359237,\n      offset: 0\n    },\n    stick: {\n      name: 'stick',\n      base: BASE_UNITS.MASS,\n      prefixes: PREFIXES.NONE,\n      value: 115e-3,\n      offset: 0\n    },\n    stone: {\n      name: 'stone',\n      base: BASE_UNITS.MASS,\n      prefixes: PREFIXES.NONE,\n      value: 6.35029318,\n      offset: 0\n    },\n    gr: {\n      name: 'gr',\n      base: BASE_UNITS.MASS,\n      prefixes: PREFIXES.NONE,\n      value: 64.79891e-6,\n      offset: 0\n    },\n    dr: {\n      name: 'dr',\n      base: BASE_UNITS.MASS,\n      prefixes: PREFIXES.NONE,\n      value: 1.7718451953125e-3,\n      offset: 0\n    },\n    oz: {\n      name: 'oz',\n      base: BASE_UNITS.MASS,\n      prefixes: PREFIXES.NONE,\n      value: 28.349523125e-3,\n      offset: 0\n    },\n    lbm: {\n      name: 'lbm',\n      base: BASE_UNITS.MASS,\n      prefixes: PREFIXES.NONE,\n      value: 453.59237e-3,\n      offset: 0\n    },\n    cwt: {\n      name: 'cwt',\n      base: BASE_UNITS.MASS,\n      prefixes: PREFIXES.NONE,\n      value: 45.359237,\n      offset: 0\n    },\n    // Time\n    s: {\n      name: 's',\n      base: BASE_UNITS.TIME,\n      prefixes: PREFIXES.SHORT,\n      value: 1,\n      offset: 0\n    },\n    min: {\n      name: 'min',\n      base: BASE_UNITS.TIME,\n      prefixes: PREFIXES.NONE,\n      value: 60,\n      offset: 0\n    },\n    h: {\n      name: 'h',\n      base: BASE_UNITS.TIME,\n      prefixes: PREFIXES.NONE,\n      value: 3600,\n      offset: 0\n    },\n    second: {\n      name: 'second',\n      base: BASE_UNITS.TIME,\n      prefixes: PREFIXES.LONG,\n      value: 1,\n      offset: 0\n    },\n    sec: {\n      name: 'sec',\n      base: BASE_UNITS.TIME,\n      prefixes: PREFIXES.LONG,\n      value: 1,\n      offset: 0\n    },\n    minute: {\n      name: 'minute',\n      base: BASE_UNITS.TIME,\n      prefixes: PREFIXES.NONE,\n      value: 60,\n      offset: 0\n    },\n    hour: {\n      name: 'hour',\n      base: BASE_UNITS.TIME,\n      prefixes: PREFIXES.NONE,\n      value: 3600,\n      offset: 0\n    },\n    day: {\n      name: 'day',\n      base: BASE_UNITS.TIME,\n      prefixes: PREFIXES.NONE,\n      value: 86400,\n      offset: 0\n    },\n    week: {\n      name: 'week',\n      base: BASE_UNITS.TIME,\n      prefixes: PREFIXES.NONE,\n      value: 7 * 86400,\n      offset: 0\n    },\n    month: {\n      name: 'month',\n      base: BASE_UNITS.TIME,\n      prefixes: PREFIXES.NONE,\n      value: 2629800,\n      // 1/12th of Julian year\n      offset: 0\n    },\n    year: {\n      name: 'year',\n      base: BASE_UNITS.TIME,\n      prefixes: PREFIXES.NONE,\n      value: 31557600,\n      // Julian year\n      offset: 0\n    },\n    decade: {\n      name: 'decade',\n      base: BASE_UNITS.TIME,\n      prefixes: PREFIXES.NONE,\n      value: 315576000,\n      // Julian decade\n      offset: 0\n    },\n    century: {\n      name: 'century',\n      base: BASE_UNITS.TIME,\n      prefixes: PREFIXES.NONE,\n      value: 3155760000,\n      // Julian century\n      offset: 0\n    },\n    millennium: {\n      name: 'millennium',\n      base: BASE_UNITS.TIME,\n      prefixes: PREFIXES.NONE,\n      value: 31557600000,\n      // Julian millennium\n      offset: 0\n    },\n    // Frequency\n    hertz: {\n      name: 'Hertz',\n      base: BASE_UNITS.FREQUENCY,\n      prefixes: PREFIXES.LONG,\n      value: 1,\n      offset: 0,\n      reciprocal: true\n    },\n    Hz: {\n      name: 'Hz',\n      base: BASE_UNITS.FREQUENCY,\n      prefixes: PREFIXES.SHORT,\n      value: 1,\n      offset: 0,\n      reciprocal: true\n    },\n    // Angle\n    rad: {\n      name: 'rad',\n      base: BASE_UNITS.ANGLE,\n      prefixes: PREFIXES.SHORT,\n      value: 1,\n      offset: 0\n    },\n    radian: {\n      name: 'radian',\n      base: BASE_UNITS.ANGLE,\n      prefixes: PREFIXES.LONG,\n      value: 1,\n      offset: 0\n    },\n    // deg = rad / (2*pi) * 360 = rad / 0.017453292519943295769236907684888\n    deg: {\n      name: 'deg',\n      base: BASE_UNITS.ANGLE,\n      prefixes: PREFIXES.SHORT,\n      value: null,\n      // will be filled in by calculateAngleValues()\n      offset: 0\n    },\n    degree: {\n      name: 'degree',\n      base: BASE_UNITS.ANGLE,\n      prefixes: PREFIXES.LONG,\n      value: null,\n      // will be filled in by calculateAngleValues()\n      offset: 0\n    },\n    // grad = rad / (2*pi) * 400  = rad / 0.015707963267948966192313216916399\n    grad: {\n      name: 'grad',\n      base: BASE_UNITS.ANGLE,\n      prefixes: PREFIXES.SHORT,\n      value: null,\n      // will be filled in by calculateAngleValues()\n      offset: 0\n    },\n    gradian: {\n      name: 'gradian',\n      base: BASE_UNITS.ANGLE,\n      prefixes: PREFIXES.LONG,\n      value: null,\n      // will be filled in by calculateAngleValues()\n      offset: 0\n    },\n    // cycle = rad / (2*pi) = rad / 6.2831853071795864769252867665793\n    cycle: {\n      name: 'cycle',\n      base: BASE_UNITS.ANGLE,\n      prefixes: PREFIXES.NONE,\n      value: null,\n      // will be filled in by calculateAngleValues()\n      offset: 0\n    },\n    // arcsec = rad / (3600 * (360 / 2 * pi)) = rad / 0.0000048481368110953599358991410235795\n    arcsec: {\n      name: 'arcsec',\n      base: BASE_UNITS.ANGLE,\n      prefixes: PREFIXES.NONE,\n      value: null,\n      // will be filled in by calculateAngleValues()\n      offset: 0\n    },\n    // arcmin = rad / (60 * (360 / 2 * pi)) = rad / 0.00029088820866572159615394846141477\n    arcmin: {\n      name: 'arcmin',\n      base: BASE_UNITS.ANGLE,\n      prefixes: PREFIXES.NONE,\n      value: null,\n      // will be filled in by calculateAngleValues()\n      offset: 0\n    },\n    // Electric current\n    A: {\n      name: 'A',\n      base: BASE_UNITS.CURRENT,\n      prefixes: PREFIXES.SHORT,\n      value: 1,\n      offset: 0\n    },\n    ampere: {\n      name: 'ampere',\n      base: BASE_UNITS.CURRENT,\n      prefixes: PREFIXES.LONG,\n      value: 1,\n      offset: 0\n    },\n    // Temperature\n    // K(C) = °C + 273.15\n    // K(F) = (°F + 459.67) / 1.8\n    // K(R) = °R / 1.8\n    K: {\n      name: 'K',\n      base: BASE_UNITS.TEMPERATURE,\n      prefixes: PREFIXES.NONE,\n      value: 1,\n      offset: 0\n    },\n    degC: {\n      name: 'degC',\n      base: BASE_UNITS.TEMPERATURE,\n      prefixes: PREFIXES.NONE,\n      value: 1,\n      offset: 273.15\n    },\n    degF: {\n      name: 'degF',\n      base: BASE_UNITS.TEMPERATURE,\n      prefixes: PREFIXES.NONE,\n      value: 1 / 1.8,\n      offset: 459.67\n    },\n    degR: {\n      name: 'degR',\n      base: BASE_UNITS.TEMPERATURE,\n      prefixes: PREFIXES.NONE,\n      value: 1 / 1.8,\n      offset: 0\n    },\n    kelvin: {\n      name: 'kelvin',\n      base: BASE_UNITS.TEMPERATURE,\n      prefixes: PREFIXES.NONE,\n      value: 1,\n      offset: 0\n    },\n    celsius: {\n      name: 'celsius',\n      base: BASE_UNITS.TEMPERATURE,\n      prefixes: PREFIXES.NONE,\n      value: 1,\n      offset: 273.15\n    },\n    fahrenheit: {\n      name: 'fahrenheit',\n      base: BASE_UNITS.TEMPERATURE,\n      prefixes: PREFIXES.NONE,\n      value: 1 / 1.8,\n      offset: 459.67\n    },\n    rankine: {\n      name: 'rankine',\n      base: BASE_UNITS.TEMPERATURE,\n      prefixes: PREFIXES.NONE,\n      value: 1 / 1.8,\n      offset: 0\n    },\n    // amount of substance\n    mol: {\n      name: 'mol',\n      base: BASE_UNITS.AMOUNT_OF_SUBSTANCE,\n      prefixes: PREFIXES.SHORT,\n      value: 1,\n      offset: 0\n    },\n    mole: {\n      name: 'mole',\n      base: BASE_UNITS.AMOUNT_OF_SUBSTANCE,\n      prefixes: PREFIXES.LONG,\n      value: 1,\n      offset: 0\n    },\n    // luminous intensity\n    cd: {\n      name: 'cd',\n      base: BASE_UNITS.LUMINOUS_INTENSITY,\n      prefixes: PREFIXES.SHORT,\n      value: 1,\n      offset: 0\n    },\n    candela: {\n      name: 'candela',\n      base: BASE_UNITS.LUMINOUS_INTENSITY,\n      prefixes: PREFIXES.LONG,\n      value: 1,\n      offset: 0\n    },\n    // TODO: units STERADIAN\n    // {name: 'sr', base: BASE_UNITS.STERADIAN, prefixes: PREFIXES.NONE, value: 1, offset: 0},\n    // {name: 'steradian', base: BASE_UNITS.STERADIAN, prefixes: PREFIXES.NONE, value: 1, offset: 0},\n    // Force\n    N: {\n      name: 'N',\n      base: BASE_UNITS.FORCE,\n      prefixes: PREFIXES.SHORT,\n      value: 1,\n      offset: 0\n    },\n    newton: {\n      name: 'newton',\n      base: BASE_UNITS.FORCE,\n      prefixes: PREFIXES.LONG,\n      value: 1,\n      offset: 0\n    },\n    dyn: {\n      name: 'dyn',\n      base: BASE_UNITS.FORCE,\n      prefixes: PREFIXES.SHORT,\n      value: 0.00001,\n      offset: 0\n    },\n    dyne: {\n      name: 'dyne',\n      base: BASE_UNITS.FORCE,\n      prefixes: PREFIXES.LONG,\n      value: 0.00001,\n      offset: 0\n    },\n    lbf: {\n      name: 'lbf',\n      base: BASE_UNITS.FORCE,\n      prefixes: PREFIXES.NONE,\n      value: 4.4482216152605,\n      offset: 0\n    },\n    poundforce: {\n      name: 'poundforce',\n      base: BASE_UNITS.FORCE,\n      prefixes: PREFIXES.NONE,\n      value: 4.4482216152605,\n      offset: 0\n    },\n    kip: {\n      name: 'kip',\n      base: BASE_UNITS.FORCE,\n      prefixes: PREFIXES.LONG,\n      value: 4448.2216,\n      offset: 0\n    },\n    kilogramforce: {\n      name: 'kilogramforce',\n      base: BASE_UNITS.FORCE,\n      prefixes: PREFIXES.NONE,\n      value: 9.80665,\n      offset: 0\n    },\n    // Energy\n    J: {\n      name: 'J',\n      base: BASE_UNITS.ENERGY,\n      prefixes: PREFIXES.SHORT,\n      value: 1,\n      offset: 0\n    },\n    joule: {\n      name: 'joule',\n      base: BASE_UNITS.ENERGY,\n      prefixes: PREFIXES.SHORT,\n      value: 1,\n      offset: 0\n    },\n    erg: {\n      name: 'erg',\n      base: BASE_UNITS.ENERGY,\n      prefixes: PREFIXES.NONE,\n      value: 1e-7,\n      offset: 0\n    },\n    Wh: {\n      name: 'Wh',\n      base: BASE_UNITS.ENERGY,\n      prefixes: PREFIXES.SHORT,\n      value: 3600,\n      offset: 0\n    },\n    BTU: {\n      name: 'BTU',\n      base: BASE_UNITS.ENERGY,\n      prefixes: PREFIXES.BTU,\n      value: 1055.05585262,\n      offset: 0\n    },\n    eV: {\n      name: 'eV',\n      base: BASE_UNITS.ENERGY,\n      prefixes: PREFIXES.SHORT,\n      value: 1.602176565e-19,\n      offset: 0\n    },\n    electronvolt: {\n      name: 'electronvolt',\n      base: BASE_UNITS.ENERGY,\n      prefixes: PREFIXES.LONG,\n      value: 1.602176565e-19,\n      offset: 0\n    },\n    // Power\n    W: {\n      name: 'W',\n      base: BASE_UNITS.POWER,\n      prefixes: PREFIXES.SHORT,\n      value: 1,\n      offset: 0\n    },\n    watt: {\n      name: 'watt',\n      base: BASE_UNITS.POWER,\n      prefixes: PREFIXES.LONG,\n      value: 1,\n      offset: 0\n    },\n    hp: {\n      name: 'hp',\n      base: BASE_UNITS.POWER,\n      prefixes: PREFIXES.NONE,\n      value: 745.6998715386,\n      offset: 0\n    },\n    // Electrical power units\n    VAR: {\n      name: 'VAR',\n      base: BASE_UNITS.POWER,\n      prefixes: PREFIXES.SHORT,\n      value: Complex.I,\n      offset: 0\n    },\n    VA: {\n      name: 'VA',\n      base: BASE_UNITS.POWER,\n      prefixes: PREFIXES.SHORT,\n      value: 1,\n      offset: 0\n    },\n    // Pressure\n    Pa: {\n      name: 'Pa',\n      base: BASE_UNITS.PRESSURE,\n      prefixes: PREFIXES.SHORT,\n      value: 1,\n      offset: 0\n    },\n    psi: {\n      name: 'psi',\n      base: BASE_UNITS.PRESSURE,\n      prefixes: PREFIXES.NONE,\n      value: 6894.75729276459,\n      offset: 0\n    },\n    atm: {\n      name: 'atm',\n      base: BASE_UNITS.PRESSURE,\n      prefixes: PREFIXES.NONE,\n      value: 101325,\n      offset: 0\n    },\n    bar: {\n      name: 'bar',\n      base: BASE_UNITS.PRESSURE,\n      prefixes: PREFIXES.SHORTLONG,\n      value: 100000,\n      offset: 0\n    },\n    torr: {\n      name: 'torr',\n      base: BASE_UNITS.PRESSURE,\n      prefixes: PREFIXES.NONE,\n      value: 133.322,\n      offset: 0\n    },\n    mmHg: {\n      name: 'mmHg',\n      base: BASE_UNITS.PRESSURE,\n      prefixes: PREFIXES.NONE,\n      value: 133.322,\n      offset: 0\n    },\n    mmH2O: {\n      name: 'mmH2O',\n      base: BASE_UNITS.PRESSURE,\n      prefixes: PREFIXES.NONE,\n      value: 9.80665,\n      offset: 0\n    },\n    cmH2O: {\n      name: 'cmH2O',\n      base: BASE_UNITS.PRESSURE,\n      prefixes: PREFIXES.NONE,\n      value: 98.0665,\n      offset: 0\n    },\n    // Electric charge\n    coulomb: {\n      name: 'coulomb',\n      base: BASE_UNITS.ELECTRIC_CHARGE,\n      prefixes: PREFIXES.LONG,\n      value: 1,\n      offset: 0\n    },\n    C: {\n      name: 'C',\n      base: BASE_UNITS.ELECTRIC_CHARGE,\n      prefixes: PREFIXES.SHORT,\n      value: 1,\n      offset: 0\n    },\n    // Electric capacitance\n    farad: {\n      name: 'farad',\n      base: BASE_UNITS.ELECTRIC_CAPACITANCE,\n      prefixes: PREFIXES.LONG,\n      value: 1,\n      offset: 0\n    },\n    F: {\n      name: 'F',\n      base: BASE_UNITS.ELECTRIC_CAPACITANCE,\n      prefixes: PREFIXES.SHORT,\n      value: 1,\n      offset: 0\n    },\n    // Electric potential\n    volt: {\n      name: 'volt',\n      base: BASE_UNITS.ELECTRIC_POTENTIAL,\n      prefixes: PREFIXES.LONG,\n      value: 1,\n      offset: 0\n    },\n    V: {\n      name: 'V',\n      base: BASE_UNITS.ELECTRIC_POTENTIAL,\n      prefixes: PREFIXES.SHORT,\n      value: 1,\n      offset: 0\n    },\n    // Electric resistance\n    ohm: {\n      name: 'ohm',\n      base: BASE_UNITS.ELECTRIC_RESISTANCE,\n      prefixes: PREFIXES.SHORTLONG,\n      // Both Mohm and megaohm are acceptable\n      value: 1,\n      offset: 0\n    },\n\n    /*\n     * Unicode breaks in browsers if charset is not specified\n    Ω: {\n      name: 'Ω',\n      base: BASE_UNITS.ELECTRIC_RESISTANCE,\n      prefixes: PREFIXES.SHORT,\n      value: 1,\n      offset: 0\n    },\n    */\n    // Electric inductance\n    henry: {\n      name: 'henry',\n      base: BASE_UNITS.ELECTRIC_INDUCTANCE,\n      prefixes: PREFIXES.LONG,\n      value: 1,\n      offset: 0\n    },\n    H: {\n      name: 'H',\n      base: BASE_UNITS.ELECTRIC_INDUCTANCE,\n      prefixes: PREFIXES.SHORT,\n      value: 1,\n      offset: 0\n    },\n    // Electric conductance\n    siemens: {\n      name: 'siemens',\n      base: BASE_UNITS.ELECTRIC_CONDUCTANCE,\n      prefixes: PREFIXES.LONG,\n      value: 1,\n      offset: 0\n    },\n    S: {\n      name: 'S',\n      base: BASE_UNITS.ELECTRIC_CONDUCTANCE,\n      prefixes: PREFIXES.SHORT,\n      value: 1,\n      offset: 0\n    },\n    // Magnetic flux\n    weber: {\n      name: 'weber',\n      base: BASE_UNITS.MAGNETIC_FLUX,\n      prefixes: PREFIXES.LONG,\n      value: 1,\n      offset: 0\n    },\n    Wb: {\n      name: 'Wb',\n      base: BASE_UNITS.MAGNETIC_FLUX,\n      prefixes: PREFIXES.SHORT,\n      value: 1,\n      offset: 0\n    },\n    // Magnetic flux density\n    tesla: {\n      name: 'tesla',\n      base: BASE_UNITS.MAGNETIC_FLUX_DENSITY,\n      prefixes: PREFIXES.LONG,\n      value: 1,\n      offset: 0\n    },\n    T: {\n      name: 'T',\n      base: BASE_UNITS.MAGNETIC_FLUX_DENSITY,\n      prefixes: PREFIXES.SHORT,\n      value: 1,\n      offset: 0\n    },\n    // Binary\n    b: {\n      name: 'b',\n      base: BASE_UNITS.BIT,\n      prefixes: PREFIXES.BINARY_SHORT,\n      value: 1,\n      offset: 0\n    },\n    bits: {\n      name: 'bits',\n      base: BASE_UNITS.BIT,\n      prefixes: PREFIXES.BINARY_LONG,\n      value: 1,\n      offset: 0\n    },\n    B: {\n      name: 'B',\n      base: BASE_UNITS.BIT,\n      prefixes: PREFIXES.BINARY_SHORT,\n      value: 8,\n      offset: 0\n    },\n    bytes: {\n      name: 'bytes',\n      base: BASE_UNITS.BIT,\n      prefixes: PREFIXES.BINARY_LONG,\n      value: 8,\n      offset: 0\n    }\n  }; // aliases (formerly plurals)\n\n  var ALIASES = {\n    meters: 'meter',\n    inches: 'inch',\n    feet: 'foot',\n    yards: 'yard',\n    miles: 'mile',\n    links: 'link',\n    rods: 'rod',\n    chains: 'chain',\n    angstroms: 'angstrom',\n    lt: 'l',\n    litres: 'litre',\n    liter: 'litre',\n    liters: 'litre',\n    teaspoons: 'teaspoon',\n    tablespoons: 'tablespoon',\n    minims: 'minim',\n    fluiddrams: 'fluiddram',\n    fluidounces: 'fluidounce',\n    gills: 'gill',\n    cups: 'cup',\n    pints: 'pint',\n    quarts: 'quart',\n    gallons: 'gallon',\n    beerbarrels: 'beerbarrel',\n    oilbarrels: 'oilbarrel',\n    hogsheads: 'hogshead',\n    gtts: 'gtt',\n    grams: 'gram',\n    tons: 'ton',\n    tonnes: 'tonne',\n    grains: 'grain',\n    drams: 'dram',\n    ounces: 'ounce',\n    poundmasses: 'poundmass',\n    hundredweights: 'hundredweight',\n    sticks: 'stick',\n    lb: 'lbm',\n    lbs: 'lbm',\n    kips: 'kip',\n    kgf: 'kilogramforce',\n    acres: 'acre',\n    hectares: 'hectare',\n    sqfeet: 'sqft',\n    sqyard: 'sqyd',\n    sqmile: 'sqmi',\n    sqmiles: 'sqmi',\n    mmhg: 'mmHg',\n    mmh2o: 'mmH2O',\n    cmh2o: 'cmH2O',\n    seconds: 'second',\n    secs: 'second',\n    minutes: 'minute',\n    mins: 'minute',\n    hours: 'hour',\n    hr: 'hour',\n    hrs: 'hour',\n    days: 'day',\n    weeks: 'week',\n    months: 'month',\n    years: 'year',\n    decades: 'decade',\n    centuries: 'century',\n    millennia: 'millennium',\n    hertz: 'hertz',\n    radians: 'radian',\n    degrees: 'degree',\n    gradians: 'gradian',\n    cycles: 'cycle',\n    arcsecond: 'arcsec',\n    arcseconds: 'arcsec',\n    arcminute: 'arcmin',\n    arcminutes: 'arcmin',\n    BTUs: 'BTU',\n    watts: 'watt',\n    joules: 'joule',\n    amperes: 'ampere',\n    coulombs: 'coulomb',\n    volts: 'volt',\n    ohms: 'ohm',\n    farads: 'farad',\n    webers: 'weber',\n    teslas: 'tesla',\n    electronvolts: 'electronvolt',\n    moles: 'mole',\n    bit: 'bits',\n    byte: 'bytes'\n  };\n  /**\n   * Calculate the values for the angle units.\n   * Value is calculated as number or BigNumber depending on the configuration\n   * @param {{number: 'number' | 'BigNumber'}} config\n   */\n\n  function calculateAngleValues(config) {\n    if (config.number === 'BigNumber') {\n      var pi = createPi(_BigNumber);\n      UNITS.rad.value = new _BigNumber(1);\n      UNITS.deg.value = pi.div(180); // 2 * pi / 360\n\n      UNITS.grad.value = pi.div(200); // 2 * pi / 400\n\n      UNITS.cycle.value = pi.times(2); // 2 * pi\n\n      UNITS.arcsec.value = pi.div(648000); // 2 * pi / 360 / 3600\n\n      UNITS.arcmin.value = pi.div(10800); // 2 * pi / 360 / 60\n    } else {\n      // number\n      UNITS.rad.value = 1;\n      UNITS.deg.value = Math.PI / 180; // 2 * pi / 360\n\n      UNITS.grad.value = Math.PI / 200; // 2 * pi / 400\n\n      UNITS.cycle.value = Math.PI * 2; // 2 * pi\n\n      UNITS.arcsec.value = Math.PI / 648000; // 2 * pi / 360 / 3600\n\n      UNITS.arcmin.value = Math.PI / 10800; // 2 * pi / 360 / 60\n    } // copy to the full names of the angles\n\n\n    UNITS.radian.value = UNITS.rad.value;\n    UNITS.degree.value = UNITS.deg.value;\n    UNITS.gradian.value = UNITS.grad.value;\n  } // apply the angle values now\n\n\n  calculateAngleValues(config);\n\n  if (on) {\n    // recalculate the values on change of configuration\n    on('config', function (curr, prev) {\n      if (curr.number !== prev.number) {\n        calculateAngleValues(curr);\n      }\n    });\n  }\n  /**\n   * A unit system is a set of dimensionally independent base units plus a set of derived units, formed by multiplication and division of the base units, that are by convention used with the unit system.\n   * A user perhaps could issue a command to select a preferred unit system, or use the default (see below).\n   * Auto unit system: The default unit system is updated on the fly anytime a unit is parsed. The corresponding unit in the default unit system is updated, so that answers are given in the same units the user supplies.\n   */\n\n\n  var UNIT_SYSTEMS = {\n    si: {\n      // Base units\n      NONE: {\n        unit: UNIT_NONE,\n        prefix: PREFIXES.NONE['']\n      },\n      LENGTH: {\n        unit: UNITS.m,\n        prefix: PREFIXES.SHORT['']\n      },\n      MASS: {\n        unit: UNITS.g,\n        prefix: PREFIXES.SHORT.k\n      },\n      TIME: {\n        unit: UNITS.s,\n        prefix: PREFIXES.SHORT['']\n      },\n      CURRENT: {\n        unit: UNITS.A,\n        prefix: PREFIXES.SHORT['']\n      },\n      TEMPERATURE: {\n        unit: UNITS.K,\n        prefix: PREFIXES.SHORT['']\n      },\n      LUMINOUS_INTENSITY: {\n        unit: UNITS.cd,\n        prefix: PREFIXES.SHORT['']\n      },\n      AMOUNT_OF_SUBSTANCE: {\n        unit: UNITS.mol,\n        prefix: PREFIXES.SHORT['']\n      },\n      ANGLE: {\n        unit: UNITS.rad,\n        prefix: PREFIXES.SHORT['']\n      },\n      BIT: {\n        unit: UNITS.bits,\n        prefix: PREFIXES.SHORT['']\n      },\n      // Derived units\n      FORCE: {\n        unit: UNITS.N,\n        prefix: PREFIXES.SHORT['']\n      },\n      ENERGY: {\n        unit: UNITS.J,\n        prefix: PREFIXES.SHORT['']\n      },\n      POWER: {\n        unit: UNITS.W,\n        prefix: PREFIXES.SHORT['']\n      },\n      PRESSURE: {\n        unit: UNITS.Pa,\n        prefix: PREFIXES.SHORT['']\n      },\n      ELECTRIC_CHARGE: {\n        unit: UNITS.C,\n        prefix: PREFIXES.SHORT['']\n      },\n      ELECTRIC_CAPACITANCE: {\n        unit: UNITS.F,\n        prefix: PREFIXES.SHORT['']\n      },\n      ELECTRIC_POTENTIAL: {\n        unit: UNITS.V,\n        prefix: PREFIXES.SHORT['']\n      },\n      ELECTRIC_RESISTANCE: {\n        unit: UNITS.ohm,\n        prefix: PREFIXES.SHORT['']\n      },\n      ELECTRIC_INDUCTANCE: {\n        unit: UNITS.H,\n        prefix: PREFIXES.SHORT['']\n      },\n      ELECTRIC_CONDUCTANCE: {\n        unit: UNITS.S,\n        prefix: PREFIXES.SHORT['']\n      },\n      MAGNETIC_FLUX: {\n        unit: UNITS.Wb,\n        prefix: PREFIXES.SHORT['']\n      },\n      MAGNETIC_FLUX_DENSITY: {\n        unit: UNITS.T,\n        prefix: PREFIXES.SHORT['']\n      },\n      FREQUENCY: {\n        unit: UNITS.Hz,\n        prefix: PREFIXES.SHORT['']\n      }\n    }\n  }; // Clone to create the other unit systems\n\n  UNIT_SYSTEMS.cgs = JSON.parse(JSON.stringify(UNIT_SYSTEMS.si));\n  UNIT_SYSTEMS.cgs.LENGTH = {\n    unit: UNITS.m,\n    prefix: PREFIXES.SHORT.c\n  };\n  UNIT_SYSTEMS.cgs.MASS = {\n    unit: UNITS.g,\n    prefix: PREFIXES.SHORT['']\n  };\n  UNIT_SYSTEMS.cgs.FORCE = {\n    unit: UNITS.dyn,\n    prefix: PREFIXES.SHORT['']\n  };\n  UNIT_SYSTEMS.cgs.ENERGY = {\n    unit: UNITS.erg,\n    prefix: PREFIXES.NONE['']\n  }; // there are wholly 4 unique cgs systems for electricity and magnetism,\n  // so let's not worry about it unless somebody complains\n\n  UNIT_SYSTEMS.us = JSON.parse(JSON.stringify(UNIT_SYSTEMS.si));\n  UNIT_SYSTEMS.us.LENGTH = {\n    unit: UNITS.ft,\n    prefix: PREFIXES.NONE['']\n  };\n  UNIT_SYSTEMS.us.MASS = {\n    unit: UNITS.lbm,\n    prefix: PREFIXES.NONE['']\n  };\n  UNIT_SYSTEMS.us.TEMPERATURE = {\n    unit: UNITS.degF,\n    prefix: PREFIXES.NONE['']\n  };\n  UNIT_SYSTEMS.us.FORCE = {\n    unit: UNITS.lbf,\n    prefix: PREFIXES.NONE['']\n  };\n  UNIT_SYSTEMS.us.ENERGY = {\n    unit: UNITS.BTU,\n    prefix: PREFIXES.BTU['']\n  };\n  UNIT_SYSTEMS.us.POWER = {\n    unit: UNITS.hp,\n    prefix: PREFIXES.NONE['']\n  };\n  UNIT_SYSTEMS.us.PRESSURE = {\n    unit: UNITS.psi,\n    prefix: PREFIXES.NONE['']\n  }; // Add additional unit systems here.\n  // Choose a unit system to seed the auto unit system.\n\n  UNIT_SYSTEMS.auto = JSON.parse(JSON.stringify(UNIT_SYSTEMS.si)); // Set the current unit system\n\n  var currentUnitSystem = UNIT_SYSTEMS.auto;\n  /**\n   * Set a unit system for formatting derived units.\n   * @param {string} [name] The name of the unit system.\n   */\n\n  Unit.setUnitSystem = function (name) {\n    if (hasOwnProperty(UNIT_SYSTEMS, name)) {\n      currentUnitSystem = UNIT_SYSTEMS[name];\n    } else {\n      throw new Error('Unit system ' + name + ' does not exist. Choices are: ' + Object.keys(UNIT_SYSTEMS).join(', '));\n    }\n  };\n  /**\n   * Return the current unit system.\n   * @return {string} The current unit system.\n   */\n\n\n  Unit.getUnitSystem = function () {\n    for (var _key in UNIT_SYSTEMS) {\n      if (hasOwnProperty(UNIT_SYSTEMS, _key)) {\n        if (UNIT_SYSTEMS[_key] === currentUnitSystem) {\n          return _key;\n        }\n      }\n    }\n  };\n  /**\n   * Converters to convert from number to an other numeric type like BigNumber\n   * or Fraction\n   */\n\n\n  Unit.typeConverters = {\n    BigNumber: function BigNumber(x) {\n      return new _BigNumber(x + ''); // stringify to prevent constructor error\n    },\n    Fraction: function Fraction(x) {\n      return new _Fraction(x);\n    },\n    Complex: function Complex(x) {\n      return x;\n    },\n    number: function number(x) {\n      return x;\n    }\n  };\n  /**\n   * Retrieve the right convertor function corresponding with the type\n   * of provided exampleValue.\n   *\n   * @param {string} type   A string 'number', 'BigNumber', or 'Fraction'\n   *                        In case of an unknown type,\n   * @return {Function}\n   */\n\n  Unit._getNumberConverter = function (type) {\n    if (!Unit.typeConverters[type]) {\n      throw new TypeError('Unsupported type \"' + type + '\"');\n    }\n\n    return Unit.typeConverters[type];\n  }; // Add dimensions to each built-in unit\n\n\n  for (var _key2 in UNITS) {\n    if (hasOwnProperty(UNITS, _key2)) {\n      var unit = UNITS[_key2];\n      unit.dimensions = unit.base.dimensions;\n    }\n  } // Create aliases\n\n\n  for (var _name2 in ALIASES) {\n    if (hasOwnProperty(ALIASES, _name2)) {\n      var _unit2 = UNITS[ALIASES[_name2]];\n      var alias = {};\n\n      for (var _key3 in _unit2) {\n        if (hasOwnProperty(_unit2, _key3)) {\n          alias[_key3] = _unit2[_key3];\n        }\n      }\n\n      alias.name = _name2;\n      UNITS[_name2] = alias;\n    }\n  }\n  /**\n   * Checks if a character is a valid latin letter (upper or lower case).\n   * Note that this function can be overridden, for example to allow support of other alphabets.\n   * @param {string} c Tested character\n   */\n\n\n  Unit.isValidAlpha = function isValidAlpha(c) {\n    return /^[a-zA-Z]$/.test(c);\n  };\n\n  function assertUnitNameIsValid(name) {\n    for (var i = 0; i < name.length; i++) {\n      c = name.charAt(i);\n\n      if (i === 0 && !Unit.isValidAlpha(c)) {\n        throw new Error('Invalid unit name (must begin with alpha character): \"' + name + '\"');\n      }\n\n      if (i > 0 && !(Unit.isValidAlpha(c) || isDigit(c))) {\n        throw new Error('Invalid unit name (only alphanumeric characters are allowed): \"' + name + '\"');\n      }\n    }\n  }\n  /**\n   * Wrapper around createUnitSingle.\n   * Example:\n   *  createUnit({\n   *    foo: { },\n   *    bar: {\n   *      definition: 'kg/foo',\n   *      aliases: ['ba', 'barr', 'bars'],\n   *      offset: 200\n   *    },\n   *    baz: '4 bar'\n   *  },\n   *  {\n   *    override: true\n   *  })\n   * @param {object} obj      Object map. Each key becomes a unit which is defined by its value.\n   * @param {object} options\n   */\n\n\n  Unit.createUnit = function (obj, options) {\n    if (typeof obj !== 'object') {\n      throw new TypeError(\"createUnit expects first parameter to be of type 'Object'\");\n    } // Remove all units and aliases we are overriding\n\n\n    if (options && options.override) {\n      for (var _key4 in obj) {\n        if (hasOwnProperty(obj, _key4)) {\n          Unit.deleteUnit(_key4);\n        }\n\n        if (obj[_key4].aliases) {\n          for (var i = 0; i < obj[_key4].aliases.length; i++) {\n            Unit.deleteUnit(obj[_key4].aliases[i]);\n          }\n        }\n      }\n    } // TODO: traverse multiple times until all units have been added\n\n\n    var lastUnit;\n\n    for (var _key5 in obj) {\n      if (hasOwnProperty(obj, _key5)) {\n        lastUnit = Unit.createUnitSingle(_key5, obj[_key5]);\n      }\n    }\n\n    return lastUnit;\n  };\n  /**\n   * Create a user-defined unit and register it with the Unit type.\n   * Example:\n   *  createUnitSingle('knot', '0.514444444 m/s')\n   *  createUnitSingle('acre', new Unit(43560, 'ft^2'))\n   *\n   * @param {string} name      The name of the new unit. Must be unique. Example: 'knot'\n   * @param {string, Unit, Object} definition      Definition of the unit in terms\n   * of existing units. For example, '0.514444444 m / s'. Can be a Unit, a string,\n   * or an Object. If an Object, may have the following properties:\n   *   - definition {string|Unit} The definition of this unit.\n   *   - prefixes {string} \"none\", \"short\", \"long\", \"binary_short\", or \"binary_long\".\n   *     The default is \"none\".\n   *   - aliases {Array} Array of strings. Example: ['knots', 'kt', 'kts']\n   *   - offset {Numeric} An offset to apply when converting from the unit. For\n   *     example, the offset for celsius is 273.15 and the offset for farhenheit\n   *     is 459.67. Default is 0.\n   *   - baseName {string} If the unit's dimension does not match that of any other\n   *     base unit, the name of the newly create base unit. Otherwise, this property\n   *     has no effect.\n   *\n   * @param {Object} options   (optional) An object containing any of the following\n   * properties:\n   *   - override {boolean} Whether this unit should be allowed to override existing\n   *     units.\n   *\n   * @return {Unit}\n   */\n\n\n  Unit.createUnitSingle = function (name, obj, options) {\n    if (typeof obj === 'undefined' || obj === null) {\n      obj = {};\n    }\n\n    if (typeof name !== 'string') {\n      throw new TypeError(\"createUnitSingle expects first parameter to be of type 'string'\");\n    } // Check collisions with existing units\n\n\n    if (hasOwnProperty(UNITS, name)) {\n      throw new Error('Cannot create unit \"' + name + '\": a unit with that name already exists');\n    } // TODO: Validate name for collisions with other built-in functions (like abs or cos, for example), and for acceptable variable names. For example, '42' is probably not a valid unit. Nor is '%', since it is also an operator.\n\n\n    assertUnitNameIsValid(name);\n    var defUnit = null; // The Unit from which the new unit will be created.\n\n    var aliases = [];\n    var offset = 0;\n    var definition;\n    var prefixes;\n    var baseName;\n\n    if (obj && obj.type === 'Unit') {\n      defUnit = obj.clone();\n    } else if (typeof obj === 'string') {\n      if (obj !== '') {\n        definition = obj;\n      }\n    } else if (typeof obj === 'object') {\n      definition = obj.definition;\n      prefixes = obj.prefixes;\n      offset = obj.offset;\n      baseName = obj.baseName;\n\n      if (obj.aliases) {\n        aliases = obj.aliases.valueOf(); // aliases could be a Matrix, so convert to Array\n      }\n    } else {\n      throw new TypeError('Cannot create unit \"' + name + '\" from \"' + obj.toString() + '\": expecting \"string\" or \"Unit\" or \"Object\"');\n    }\n\n    if (aliases) {\n      for (var i = 0; i < aliases.length; i++) {\n        if (hasOwnProperty(UNITS, aliases[i])) {\n          throw new Error('Cannot create alias \"' + aliases[i] + '\": a unit with that name already exists');\n        }\n      }\n    }\n\n    if (definition && typeof definition === 'string' && !defUnit) {\n      try {\n        defUnit = Unit.parse(definition, {\n          allowNoUnits: true\n        });\n      } catch (ex) {\n        ex.message = 'Could not create unit \"' + name + '\" from \"' + definition + '\": ' + ex.message;\n        throw ex;\n      }\n    } else if (definition && definition.type === 'Unit') {\n      defUnit = definition.clone();\n    }\n\n    aliases = aliases || [];\n    offset = offset || 0;\n\n    if (prefixes && prefixes.toUpperCase) {\n      prefixes = PREFIXES[prefixes.toUpperCase()] || PREFIXES.NONE;\n    } else {\n      prefixes = PREFIXES.NONE;\n    } // If defUnit is null, it is because the user did not\n    // specify a defintion. So create a new base dimension.\n\n\n    var newUnit = {};\n\n    if (!defUnit) {\n      // Add a new base dimension\n      baseName = baseName || name + '_STUFF'; // foo --> foo_STUFF, or the essence of foo\n\n      if (BASE_DIMENSIONS.indexOf(baseName) >= 0) {\n        throw new Error('Cannot create new base unit \"' + name + '\": a base unit with that name already exists (and cannot be overridden)');\n      }\n\n      BASE_DIMENSIONS.push(baseName); // Push 0 onto existing base units\n\n      for (var b in BASE_UNITS) {\n        if (hasOwnProperty(BASE_UNITS, b)) {\n          BASE_UNITS[b].dimensions[BASE_DIMENSIONS.length - 1] = 0;\n        }\n      } // Add the new base unit\n\n\n      var newBaseUnit = {\n        dimensions: []\n      };\n\n      for (var _i6 = 0; _i6 < BASE_DIMENSIONS.length; _i6++) {\n        newBaseUnit.dimensions[_i6] = 0;\n      }\n\n      newBaseUnit.dimensions[BASE_DIMENSIONS.length - 1] = 1;\n      newBaseUnit.key = baseName;\n      BASE_UNITS[baseName] = newBaseUnit;\n      newUnit = {\n        name: name,\n        value: 1,\n        dimensions: BASE_UNITS[baseName].dimensions.slice(0),\n        prefixes: prefixes,\n        offset: offset,\n        base: BASE_UNITS[baseName]\n      };\n      currentUnitSystem[baseName] = {\n        unit: newUnit,\n        prefix: PREFIXES.NONE['']\n      };\n    } else {\n      newUnit = {\n        name: name,\n        value: defUnit.value,\n        dimensions: defUnit.dimensions.slice(0),\n        prefixes: prefixes,\n        offset: offset\n      }; // Create a new base if no matching base exists\n\n      var anyMatch = false;\n\n      for (var _i7 in BASE_UNITS) {\n        if (hasOwnProperty(BASE_UNITS, _i7)) {\n          var match = true;\n\n          for (var j = 0; j < BASE_DIMENSIONS.length; j++) {\n            if (Math.abs((newUnit.dimensions[j] || 0) - (BASE_UNITS[_i7].dimensions[j] || 0)) > 1e-12) {\n              match = false;\n              break;\n            }\n          }\n\n          if (match) {\n            anyMatch = true;\n            newUnit.base = BASE_UNITS[_i7];\n            break;\n          }\n        }\n      }\n\n      if (!anyMatch) {\n        baseName = baseName || name + '_STUFF'; // foo --> foo_STUFF, or the essence of foo\n        // Add the new base unit\n\n        var _newBaseUnit = {\n          dimensions: defUnit.dimensions.slice(0)\n        };\n        _newBaseUnit.key = baseName;\n        BASE_UNITS[baseName] = _newBaseUnit;\n        currentUnitSystem[baseName] = {\n          unit: newUnit,\n          prefix: PREFIXES.NONE['']\n        };\n        newUnit.base = BASE_UNITS[baseName];\n      }\n    }\n\n    Unit.UNITS[name] = newUnit;\n\n    for (var _i8 = 0; _i8 < aliases.length; _i8++) {\n      var aliasName = aliases[_i8];\n      var _alias = {};\n\n      for (var _key6 in newUnit) {\n        if (hasOwnProperty(newUnit, _key6)) {\n          _alias[_key6] = newUnit[_key6];\n        }\n      }\n\n      _alias.name = aliasName;\n      Unit.UNITS[aliasName] = _alias;\n    } // delete the memoization cache, since adding a new unit to the array\n    // invalidates all old results\n\n\n    delete _findUnit.cache;\n    return new Unit(null, name);\n  };\n\n  Unit.deleteUnit = function (name) {\n    delete Unit.UNITS[name];\n  }; // expose arrays with prefixes, dimensions, units, systems\n\n\n  Unit.PREFIXES = PREFIXES;\n  Unit.BASE_DIMENSIONS = BASE_DIMENSIONS;\n  Unit.BASE_UNITS = BASE_UNITS;\n  Unit.UNIT_SYSTEMS = UNIT_SYSTEMS;\n  Unit.UNITS = UNITS;\n  return Unit;\n}, {\n  isClass: true\n});","import { factory } from '../../../utils/factory.js';\nimport { deepMap } from '../../../utils/collection.js';\nvar name = 'unit';\nvar dependencies = ['typed', 'Unit']; // This function is named createUnitFunction to prevent a naming conflict with createUnit\n\nexport var createUnitFunction = /* #__PURE__ */factory(name, dependencies, (_ref) => {\n  var {\n    typed,\n    Unit\n  } = _ref;\n\n  /**\n   * Create a unit. Depending on the passed arguments, the function\n   * will create and return a new math.Unit object.\n   * When a matrix is provided, all elements will be converted to units.\n   *\n   * Syntax:\n   *\n   *     math.unit(unit : string)\n   *     math.unit(value : number, unit : string)\n   *\n   * Examples:\n   *\n   *    const a = math.unit(5, 'cm')    // returns Unit 50 mm\n   *    const b = math.unit('23 kg')    // returns Unit 23 kg\n   *    a.to('m')                       // returns Unit 0.05 m\n   *\n   * See also:\n   *\n   *    bignumber, boolean, complex, index, matrix, number, string, createUnit\n   *\n   * @param {* | Array | Matrix} args   A number and unit.\n   * @return {Unit | Array | Matrix}    The created unit\n   */\n  return typed(name, {\n    Unit: function Unit(x) {\n      return x.clone();\n    },\n    string: function string(x) {\n      if (Unit.isValuelessUnit(x)) {\n        return new Unit(null, x); // a pure unit\n      }\n\n      return Unit.parse(x, {\n        allowNoUnits: true\n      }); // a unit with value, like '5cm'\n    },\n    'number | BigNumber | Fraction | Complex, string': function numberBigNumberFractionComplexString(value, unit) {\n      return new Unit(value, unit);\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      return deepMap(x, this);\n    }\n  });\n});","import { factory } from '../../../utils/factory.js';\nvar name = 'createUnit';\nvar dependencies = ['typed', 'Unit'];\nexport var createCreateUnit = /* #__PURE__ */factory(name, dependencies, (_ref) => {\n  var {\n    typed,\n    Unit\n  } = _ref;\n\n  /**\n   * Create a user-defined unit and register it with the Unit type.\n   *\n   * Syntax:\n   *\n   *     math.createUnit({\n   *       baseUnit1: {\n   *         aliases: [string, ...]\n   *         prefixes: object\n   *       },\n   *       unit2: {\n   *         definition: string,\n   *         aliases: [string, ...]\n   *         prefixes: object,\n   *         offset: number\n   *       },\n   *       unit3: string    // Shortcut\n   *     })\n   *\n   *     // Another shortcut:\n   *     math.createUnit(string, unit : string, [object])\n   *\n   * Examples:\n   *\n   *     math.createUnit('foo')\n   *     math.createUnit('knot', {definition: '0.514444444 m/s', aliases: ['knots', 'kt', 'kts']})\n   *     math.createUnit('mph', '1 mile/hour')\n   *\n   * @param {string} name      The name of the new unit. Must be unique. Example: 'knot'\n   * @param {string, Unit} definition      Definition of the unit in terms of existing units. For example, '0.514444444 m / s'.\n   * @param {Object} options   (optional) An object containing any of the following properties:\n   *     - `prefixes {string}` \"none\", \"short\", \"long\", \"binary_short\", or \"binary_long\". The default is \"none\".\n   *     - `aliases {Array}` Array of strings. Example: ['knots', 'kt', 'kts']\n   *     - `offset {Numeric}` An offset to apply when converting from the unit. For example, the offset for celsius is 273.15. Default is 0.\n   *\n   * See also:\n   *\n   *     unit\n   *\n   * @return {Unit} The new unit\n   */\n  return typed(name, {\n    // General function signature. First parameter is an object where each property is the definition of a new unit. The object keys are the unit names and the values are the definitions. The values can be objects, strings, or Units. If a property is an empty object or an empty string, a new base unit is created. The second parameter is the options.\n    'Object, Object': function ObjectObject(obj, options) {\n      return Unit.createUnit(obj, options);\n    },\n    // Same as above but without the options.\n    Object: function Object(obj) {\n      return Unit.createUnit(obj, {});\n    },\n    // Shortcut method for creating one unit.\n    'string, Unit | string | Object, Object': function stringUnitStringObjectObject(name, def, options) {\n      var obj = {};\n      obj[name] = def;\n      return Unit.createUnit(obj, options);\n    },\n    // Same as above but without the options.\n    'string, Unit | string | Object': function stringUnitStringObject(name, def) {\n      var obj = {};\n      obj[name] = def;\n      return Unit.createUnit(obj, {});\n    },\n    // Without a definition, creates a base unit.\n    string: function string(name) {\n      var obj = {};\n      obj[name] = {};\n      return Unit.createUnit(obj, {});\n    }\n  });\n});","import { factory } from '../../utils/factory.js';\nimport { extend } from '../../utils/object.js';\nimport { createAlgorithm01 } from '../../type/matrix/utils/algorithm01.js';\nimport { createAlgorithm04 } from '../../type/matrix/utils/algorithm04.js';\nimport { createAlgorithm10 } from '../../type/matrix/utils/algorithm10.js';\nimport { createAlgorithm13 } from '../../type/matrix/utils/algorithm13.js';\nimport { createAlgorithm14 } from '../../type/matrix/utils/algorithm14.js';\nvar name = 'add';\nvar dependencies = ['typed', 'matrix', 'addScalar', 'equalScalar', 'DenseMatrix', 'SparseMatrix'];\nexport var createAdd = /* #__PURE__ */factory(name, dependencies, (_ref) => {\n  var {\n    typed,\n    matrix,\n    addScalar,\n    equalScalar,\n    DenseMatrix,\n    SparseMatrix\n  } = _ref;\n  var algorithm01 = createAlgorithm01({\n    typed\n  });\n  var algorithm04 = createAlgorithm04({\n    typed,\n    equalScalar\n  });\n  var algorithm10 = createAlgorithm10({\n    typed,\n    DenseMatrix\n  });\n  var algorithm13 = createAlgorithm13({\n    typed\n  });\n  var algorithm14 = createAlgorithm14({\n    typed\n  });\n  /**\n   * Add two or more values, `x + y`.\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.add(x, y)\n   *    math.add(x, y, z, ...)\n   *\n   * Examples:\n   *\n   *    math.add(2, 3)               // returns number 5\n   *    math.add(2, 3, 4)            // returns number 9\n   *\n   *    const a = math.complex(2, 3)\n   *    const b = math.complex(-4, 1)\n   *    math.add(a, b)               // returns Complex -2 + 4i\n   *\n   *    math.add([1, 2, 3], 4)       // returns Array [5, 6, 7]\n   *\n   *    const c = math.unit('5 cm')\n   *    const d = math.unit('2.1 mm')\n   *    math.add(c, d)               // returns Unit 52.1 mm\n   *\n   *    math.add(\"2.3\", \"4\")         // returns number 6.3\n   *\n   * See also:\n   *\n   *    subtract, sum\n   *\n   * @param  {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} x First value to add\n   * @param  {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} y Second value to add\n   * @return {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} Sum of `x` and `y`\n   */\n\n  return typed(name, extend({\n    // we extend the signatures of addScalar with signatures dealing with matrices\n    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {\n      return algorithm13(x, y, addScalar);\n    },\n    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {\n      return algorithm01(x, y, addScalar, false);\n    },\n    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {\n      return algorithm01(y, x, addScalar, true);\n    },\n    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {\n      return algorithm04(x, y, addScalar);\n    },\n    'Array, Array': function ArrayArray(x, y) {\n      // use matrix implementation\n      return this(matrix(x), matrix(y)).valueOf();\n    },\n    'Array, Matrix': function ArrayMatrix(x, y) {\n      // use matrix implementation\n      return this(matrix(x), y);\n    },\n    'Matrix, Array': function MatrixArray(x, y) {\n      // use matrix implementation\n      return this(x, matrix(y));\n    },\n    'DenseMatrix, any': function DenseMatrixAny(x, y) {\n      return algorithm14(x, y, addScalar, false);\n    },\n    'SparseMatrix, any': function SparseMatrixAny(x, y) {\n      return algorithm10(x, y, addScalar, false);\n    },\n    'any, DenseMatrix': function anyDenseMatrix(x, y) {\n      return algorithm14(y, x, addScalar, true);\n    },\n    'any, SparseMatrix': function anySparseMatrix(x, y) {\n      return algorithm10(y, x, addScalar, true);\n    },\n    'Array, any': function ArrayAny(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(x), y, addScalar, false).valueOf();\n    },\n    'any, Array': function anyArray(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, addScalar, true).valueOf();\n    },\n    'any, any': addScalar,\n    'any, any, ...any': function anyAnyAny(x, y, rest) {\n      var result = this(x, y);\n\n      for (var i = 0; i < rest.length; i++) {\n        result = this(result, rest[i]);\n      }\n\n      return result;\n    }\n  }, addScalar.signatures));\n});","import { factory } from '../../utils/factory.js';\nimport { isMatrix } from '../../utils/is.js';\nvar name = 'dot';\nvar dependencies = ['typed', 'addScalar', 'multiplyScalar', 'conj', 'size'];\nexport var createDot = /* #__PURE__ */factory(name, dependencies, (_ref) => {\n  var {\n    typed,\n    addScalar,\n    multiplyScalar,\n    conj,\n    size\n  } = _ref;\n\n  /**\n   * Calculate the dot product of two vectors. The dot product of\n   * `A = [a1, a2, ..., an]` and `B = [b1, b2, ..., bn]` is defined as:\n   *\n   *    dot(A, B) = conj(a1) * b1 + conj(a2) * b2 + ... + conj(an) * bn\n   *\n   * Syntax:\n   *\n   *    math.dot(x, y)\n   *\n   * Examples:\n   *\n   *    math.dot([2, 4, 1], [2, 2, 3])       // returns number 15\n   *    math.multiply([2, 4, 1], [2, 2, 3])  // returns number 15\n   *\n   * See also:\n   *\n   *    multiply, cross\n   *\n   * @param  {Array | Matrix} x     First vector\n   * @param  {Array | Matrix} y     Second vector\n   * @return {number}               Returns the dot product of `x` and `y`\n   */\n  return typed(name, {\n    'Array | DenseMatrix, Array | DenseMatrix': _denseDot,\n    'SparseMatrix, SparseMatrix': _sparseDot\n  });\n\n  function _validateDim(x, y) {\n    var xSize = _size(x);\n\n    var ySize = _size(y);\n\n    var xLen, yLen;\n\n    if (xSize.length === 1) {\n      xLen = xSize[0];\n    } else if (xSize.length === 2 && xSize[1] === 1) {\n      xLen = xSize[0];\n    } else {\n      throw new RangeError('Expected a column vector, instead got a matrix of size (' + xSize.join(', ') + ')');\n    }\n\n    if (ySize.length === 1) {\n      yLen = ySize[0];\n    } else if (ySize.length === 2 && ySize[1] === 1) {\n      yLen = ySize[0];\n    } else {\n      throw new RangeError('Expected a column vector, instead got a matrix of size (' + ySize.join(', ') + ')');\n    }\n\n    if (xLen !== yLen) throw new RangeError('Vectors must have equal length (' + xLen + ' != ' + yLen + ')');\n    if (xLen === 0) throw new RangeError('Cannot calculate the dot product of empty vectors');\n    return xLen;\n  }\n\n  function _denseDot(a, b) {\n    var N = _validateDim(a, b);\n\n    var adata = isMatrix(a) ? a._data : a;\n    var adt = isMatrix(a) ? a._datatype : undefined;\n    var bdata = isMatrix(b) ? b._data : b;\n    var bdt = isMatrix(b) ? b._datatype : undefined; // are these 2-dimensional column vectors? (as opposed to 1-dimensional vectors)\n\n    var aIsColumn = _size(a).length === 2;\n    var bIsColumn = _size(b).length === 2;\n    var add = addScalar;\n    var mul = multiplyScalar; // process data types\n\n    if (adt && bdt && adt === bdt && typeof adt === 'string') {\n      var dt = adt; // find signatures that matches (dt, dt)\n\n      add = typed.find(addScalar, [dt, dt]);\n      mul = typed.find(multiplyScalar, [dt, dt]);\n    } // both vectors 1-dimensional\n\n\n    if (!aIsColumn && !bIsColumn) {\n      var c = mul(conj(adata[0]), bdata[0]);\n\n      for (var i = 1; i < N; i++) {\n        c = add(c, mul(conj(adata[i]), bdata[i]));\n      }\n\n      return c;\n    } // a is 1-dim, b is column\n\n\n    if (!aIsColumn && bIsColumn) {\n      var _c = mul(conj(adata[0]), bdata[0][0]);\n\n      for (var _i = 1; _i < N; _i++) {\n        _c = add(_c, mul(conj(adata[_i]), bdata[_i][0]));\n      }\n\n      return _c;\n    } // a is column, b is 1-dim\n\n\n    if (aIsColumn && !bIsColumn) {\n      var _c2 = mul(conj(adata[0][0]), bdata[0]);\n\n      for (var _i2 = 1; _i2 < N; _i2++) {\n        _c2 = add(_c2, mul(conj(adata[_i2][0]), bdata[_i2]));\n      }\n\n      return _c2;\n    } // both vectors are column\n\n\n    if (aIsColumn && bIsColumn) {\n      var _c3 = mul(conj(adata[0][0]), bdata[0][0]);\n\n      for (var _i3 = 1; _i3 < N; _i3++) {\n        _c3 = add(_c3, mul(conj(adata[_i3][0]), bdata[_i3][0]));\n      }\n\n      return _c3;\n    }\n  }\n\n  function _sparseDot(x, y) {\n    _validateDim(x, y);\n\n    var xindex = x._index;\n    var xvalues = x._values;\n    var yindex = y._index;\n    var yvalues = y._values; // TODO optimize add & mul using datatype\n\n    var c = 0;\n    var add = addScalar;\n    var mul = multiplyScalar;\n    var i = 0;\n    var j = 0;\n\n    while (i < xindex.length && j < yindex.length) {\n      var I = xindex[i];\n      var J = yindex[j];\n\n      if (I < J) {\n        i++;\n        continue;\n      }\n\n      if (I > J) {\n        j++;\n        continue;\n      }\n\n      if (I === J) {\n        c = add(c, mul(xvalues[i], yvalues[j]));\n        i++;\n        j++;\n      }\n    }\n\n    return c;\n  } // TODO remove this once #1771 is fixed\n\n\n  function _size(x) {\n    return isMatrix(x) ? x.size() : size(x);\n  }\n});","// Reserved keywords not allowed to use in the parser\nexport var keywords = {\n  end: true\n};","import { isNode } from '../../utils/is.js';\nimport { keywords } from '../keywords.js';\nimport { deepStrictEqual, hasOwnProperty } from '../../utils/object.js';\nimport { factory } from '../../utils/factory.js';\nvar name = 'Node';\nvar dependencies = ['mathWithTransform'];\nexport var createNode = /* #__PURE__ */factory(name, dependencies, (_ref) => {\n  var {\n    mathWithTransform\n  } = _ref;\n\n  /**\n   * Node\n   */\n  function Node() {\n    if (!(this instanceof Node)) {\n      throw new SyntaxError('Constructor must be called with the new operator');\n    }\n  }\n  /**\n   * Evaluate the node\n   * @param {Object} [scope]  Scope to read/write variables\n   * @return {*}              Returns the result\n   */\n\n\n  Node.prototype.evaluate = function (scope) {\n    return this.compile().evaluate(scope);\n  };\n\n  Node.prototype.type = 'Node';\n  Node.prototype.isNode = true;\n  Node.prototype.comment = '';\n  /**\n   * Compile the node into an optimized, evauatable JavaScript function\n   * @return {{evaluate: function([Object])}} object\n   *                Returns an object with a function 'evaluate',\n   *                which can be invoked as expr.evaluate([scope: Object]),\n   *                where scope is an optional object with\n   *                variables.\n   */\n\n  Node.prototype.compile = function () {\n    var expr = this._compile(mathWithTransform, {});\n\n    var args = {};\n    var context = null;\n\n    function evaluate(scope) {\n      var s = scope || {};\n\n      _validateScope(s);\n\n      return expr(s, args, context);\n    }\n\n    return {\n      evaluate\n    };\n  };\n  /**\n   * Compile a node into a JavaScript function.\n   * This basically pre-calculates as much as possible and only leaves open\n   * calculations which depend on a dynamic scope with variables.\n   * @param {Object} math     Math.js namespace with functions and constants.\n   * @param {Object} argNames An object with argument names as key and `true`\n   *                          as value. Used in the SymbolNode to optimize\n   *                          for arguments from user assigned functions\n   *                          (see FunctionAssignmentNode) or special symbols\n   *                          like `end` (see IndexNode).\n   * @return {function} Returns a function which can be called like:\n   *                        evalNode(scope: Object, args: Object, context: *)\n   */\n\n\n  Node.prototype._compile = function (math, argNames) {\n    throw new Error('Method _compile should be implemented by type ' + this.type);\n  };\n  /**\n   * Execute a callback for each of the child nodes of this node\n   * @param {function(child: Node, path: string, parent: Node)} callback\n   */\n\n\n  Node.prototype.forEach = function (callback) {\n    // must be implemented by each of the Node implementations\n    throw new Error('Cannot run forEach on a Node interface');\n  };\n  /**\n   * Create a new Node having it's childs be the results of calling\n   * the provided callback function for each of the childs of the original node.\n   * @param {function(child: Node, path: string, parent: Node): Node} callback\n   * @returns {OperatorNode} Returns a transformed copy of the node\n   */\n\n\n  Node.prototype.map = function (callback) {\n    // must be implemented by each of the Node implementations\n    throw new Error('Cannot run map on a Node interface');\n  };\n  /**\n   * Validate whether an object is a Node, for use with map\n   * @param {Node} node\n   * @returns {Node} Returns the input if it's a node, else throws an Error\n   * @protected\n   */\n\n\n  Node.prototype._ifNode = function (node) {\n    if (!isNode(node)) {\n      throw new TypeError('Callback function must return a Node');\n    }\n\n    return node;\n  };\n  /**\n   * Recursively traverse all nodes in a node tree. Executes given callback for\n   * this node and each of its child nodes.\n   * @param {function(node: Node, path: string, parent: Node)} callback\n   *          A callback called for every node in the node tree.\n   */\n\n\n  Node.prototype.traverse = function (callback) {\n    // execute callback for itself\n    // eslint-disable-next-line\n    callback(this, null, null); // recursively traverse over all childs of a node\n\n    function _traverse(node, callback) {\n      node.forEach(function (child, path, parent) {\n        callback(child, path, parent);\n\n        _traverse(child, callback);\n      });\n    }\n\n    _traverse(this, callback);\n  };\n  /**\n   * Recursively transform a node tree via a transform function.\n   *\n   * For example, to replace all nodes of type SymbolNode having name 'x' with a\n   * ConstantNode with value 2:\n   *\n   *     const res = Node.transform(function (node, path, parent) {\n   *       if (node && node.isSymbolNode) && (node.name === 'x')) {\n   *         return new ConstantNode(2)\n   *       }\n   *       else {\n   *         return node\n   *       }\n   *     })\n   *\n   * @param {function(node: Node, path: string, parent: Node) : Node} callback\n   *          A mapping function accepting a node, and returning\n   *          a replacement for the node or the original node.\n   *          Signature: callback(node: Node, index: string, parent: Node) : Node\n   * @return {Node} Returns the original node or its replacement\n   */\n\n\n  Node.prototype.transform = function (callback) {\n    function _transform(child, path, parent) {\n      var replacement = callback(child, path, parent);\n\n      if (replacement !== child) {\n        // stop iterating when the node is replaced\n        return replacement;\n      }\n\n      return child.map(_transform);\n    }\n\n    return _transform(this, null, null);\n  };\n  /**\n   * Find any node in the node tree matching given filter function. For example, to\n   * find all nodes of type SymbolNode having name 'x':\n   *\n   *     const results = Node.filter(function (node) {\n   *       return (node && node.isSymbolNode) && (node.name === 'x')\n   *     })\n   *\n   * @param {function(node: Node, path: string, parent: Node) : Node} callback\n   *            A test function returning true when a node matches, and false\n   *            otherwise. Function signature:\n   *            callback(node: Node, index: string, parent: Node) : boolean\n   * @return {Node[]} nodes       An array with nodes matching given filter criteria\n   */\n\n\n  Node.prototype.filter = function (callback) {\n    var nodes = [];\n    this.traverse(function (node, path, parent) {\n      if (callback(node, path, parent)) {\n        nodes.push(node);\n      }\n    });\n    return nodes;\n  };\n  /**\n   * Create a shallow clone of this node\n   * @return {Node}\n   */\n\n\n  Node.prototype.clone = function () {\n    // must be implemented by each of the Node implementations\n    throw new Error('Cannot clone a Node interface');\n  };\n  /**\n   * Create a deep clone of this node\n   * @return {Node}\n   */\n\n\n  Node.prototype.cloneDeep = function () {\n    return this.map(function (node) {\n      return node.cloneDeep();\n    });\n  };\n  /**\n   * Deep compare this node with another node.\n   * @param {Node} other\n   * @return {boolean} Returns true when both nodes are of the same type and\n   *                   contain the same values (as do their childs)\n   */\n\n\n  Node.prototype.equals = function (other) {\n    return other ? deepStrictEqual(this, other) : false;\n  };\n  /**\n   * Get string representation. (wrapper function)\n   *\n   * This function can get an object of the following form:\n   * {\n   *    handler: //This can be a callback function of the form\n   *             // \"function callback(node, options)\"or\n   *             // a map that maps function names (used in FunctionNodes)\n   *             // to callbacks\n   *    parenthesis: \"keep\" //the parenthesis option (This is optional)\n   * }\n   *\n   * @param {Object} [options]\n   * @return {string}\n   */\n\n\n  Node.prototype.toString = function (options) {\n    var customString;\n\n    if (options && typeof options === 'object') {\n      switch (typeof options.handler) {\n        case 'object':\n        case 'undefined':\n          break;\n\n        case 'function':\n          customString = options.handler(this, options);\n          break;\n\n        default:\n          throw new TypeError('Object or function expected as callback');\n      }\n    }\n\n    if (typeof customString !== 'undefined') {\n      return customString;\n    }\n\n    return this._toString(options);\n  };\n  /**\n   * Get a JSON representation of the node\n   * Both .toJSON() and the static .fromJSON(json) should be implemented by all\n   * implementations of Node\n   * @returns {Object}\n   */\n\n\n  Node.prototype.toJSON = function () {\n    throw new Error('Cannot serialize object: toJSON not implemented by ' + this.type);\n  };\n  /**\n   * Get HTML representation. (wrapper function)\n   *\n   * This function can get an object of the following form:\n   * {\n   *    handler: //This can be a callback function of the form\n   *             // \"function callback(node, options)\" or\n   *             // a map that maps function names (used in FunctionNodes)\n   *             // to callbacks\n   *    parenthesis: \"keep\" //the parenthesis option (This is optional)\n   * }\n   *\n   * @param {Object} [options]\n   * @return {string}\n   */\n\n\n  Node.prototype.toHTML = function (options) {\n    var customString;\n\n    if (options && typeof options === 'object') {\n      switch (typeof options.handler) {\n        case 'object':\n        case 'undefined':\n          break;\n\n        case 'function':\n          customString = options.handler(this, options);\n          break;\n\n        default:\n          throw new TypeError('Object or function expected as callback');\n      }\n    }\n\n    if (typeof customString !== 'undefined') {\n      return customString;\n    }\n\n    return this.toHTML(options);\n  };\n  /**\n   * Internal function to generate the string output.\n   * This has to be implemented by every Node\n   *\n   * @throws {Error}\n   */\n\n\n  Node.prototype._toString = function () {\n    // must be implemented by each of the Node implementations\n    throw new Error('_toString not implemented for ' + this.type);\n  };\n  /**\n   * Get LaTeX representation. (wrapper function)\n   *\n   * This function can get an object of the following form:\n   * {\n   *    handler: //This can be a callback function of the form\n   *             // \"function callback(node, options)\"or\n   *             // a map that maps function names (used in FunctionNodes)\n   *             // to callbacks\n   *    parenthesis: \"keep\" //the parenthesis option (This is optional)\n   * }\n   *\n   * @param {Object} [options]\n   * @return {string}\n   */\n\n\n  Node.prototype.toTex = function (options) {\n    var customTex;\n\n    if (options && typeof options === 'object') {\n      switch (typeof options.handler) {\n        case 'object':\n        case 'undefined':\n          break;\n\n        case 'function':\n          customTex = options.handler(this, options);\n          break;\n\n        default:\n          throw new TypeError('Object or function expected as callback');\n      }\n    }\n\n    if (typeof customTex !== 'undefined') {\n      return customTex;\n    }\n\n    return this._toTex(options);\n  };\n  /**\n   * Internal function to generate the LaTeX output.\n   * This has to be implemented by every Node\n   *\n   * @param {Object} [options]\n   * @throws {Error}\n   */\n\n\n  Node.prototype._toTex = function (options) {\n    // must be implemented by each of the Node implementations\n    throw new Error('_toTex not implemented for ' + this.type);\n  };\n  /**\n   * Get identifier.\n   * @return {string}\n   */\n\n\n  Node.prototype.getIdentifier = function () {\n    return this.type;\n  };\n  /**\n   * Get the content of the current Node.\n   * @return {Node} node\n   **/\n\n\n  Node.prototype.getContent = function () {\n    return this;\n  };\n  /**\n   * Validate the symbol names of a scope.\n   * Throws an error when the scope contains an illegal symbol.\n   * @param {Object} scope\n   */\n\n\n  function _validateScope(scope) {\n    for (var symbol in scope) {\n      if (hasOwnProperty(scope, symbol)) {\n        if (symbol in keywords) {\n          throw new Error('Scope contains an illegal symbol, \"' + symbol + '\" is a reserved keyword');\n        }\n      }\n    }\n  }\n\n  return Node;\n}, {\n  isClass: true,\n  isNode: true\n});","import { IndexError } from '../../../error/IndexError.js';\n/**\n * Transform zero-based indices to one-based indices in errors\n * @param {Error} err\n * @returns {Error | IndexError} Returns the transformed error\n */\n\nexport function errorTransform(err) {\n  if (err && err.isIndexError) {\n    return new IndexError(err.index + 1, err.min + 1, err.max !== undefined ? err.max + 1 : undefined);\n  }\n\n  return err;\n}","import { errorTransform } from '../../transform/utils/errorTransform.js';\nimport { getSafeProperty } from '../../../utils/customs.js';\nexport function accessFactory(_ref) {\n  var {\n    subset\n  } = _ref;\n\n  /**\n   * Retrieve part of an object:\n   *\n   * - Retrieve a property from an object\n   * - Retrieve a part of a string\n   * - Retrieve a matrix subset\n   *\n   * @param {Object | Array | Matrix | string} object\n   * @param {Index} index\n   * @return {Object | Array | Matrix | string} Returns the subset\n   */\n  return function access(object, index) {\n    try {\n      if (Array.isArray(object)) {\n        return subset(object, index);\n      } else if (object && typeof object.subset === 'function') {\n        // Matrix\n        return object.subset(index);\n      } else if (typeof object === 'string') {\n        // TODO: move getStringSubset into a separate util file, use that\n        return subset(object, index);\n      } else if (typeof object === 'object') {\n        if (!index.isObjectProperty()) {\n          throw new TypeError('Cannot apply a numeric index as object property');\n        }\n\n        return getSafeProperty(object, index.getObjectProperty());\n      } else {\n        throw new TypeError('Cannot apply index: unsupported type of object');\n      }\n    } catch (err) {\n      throw errorTransform(err);\n    }\n  };\n}","import { isAccessorNode, isArrayNode, isConstantNode, isFunctionNode, isIndexNode, isNode, isObjectNode, isParenthesisNode, isSymbolNode } from '../../utils/is.js';\nimport { getSafeProperty } from '../../utils/customs.js';\nimport { factory } from '../../utils/factory.js';\nimport { accessFactory } from './utils/access.js';\nvar name = 'AccessorNode';\nvar dependencies = ['subset', 'Node'];\nexport var createAccessorNode = /* #__PURE__ */factory(name, dependencies, (_ref) => {\n  var {\n    subset,\n    Node\n  } = _ref;\n  var access = accessFactory({\n    subset\n  });\n  /**\n   * @constructor AccessorNode\n   * @extends {Node}\n   * Access an object property or get a matrix subset\n   *\n   * @param {Node} object                 The object from which to retrieve\n   *                                      a property or subset.\n   * @param {IndexNode} index             IndexNode containing ranges\n   */\n\n  function AccessorNode(object, index) {\n    if (!(this instanceof AccessorNode)) {\n      throw new SyntaxError('Constructor must be called with the new operator');\n    }\n\n    if (!isNode(object)) {\n      throw new TypeError('Node expected for parameter \"object\"');\n    }\n\n    if (!isIndexNode(index)) {\n      throw new TypeError('IndexNode expected for parameter \"index\"');\n    }\n\n    this.object = object || null;\n    this.index = index; // readonly property name\n\n    Object.defineProperty(this, 'name', {\n      get: function () {\n        if (this.index) {\n          return this.index.isObjectProperty() ? this.index.getObjectProperty() : '';\n        } else {\n          return this.object.name || '';\n        }\n      }.bind(this),\n      set: function set() {\n        throw new Error('Cannot assign a new name, name is read-only');\n      }\n    });\n  }\n\n  AccessorNode.prototype = new Node();\n  AccessorNode.prototype.type = 'AccessorNode';\n  AccessorNode.prototype.isAccessorNode = true;\n  /**\n   * Compile a node into a JavaScript function.\n   * This basically pre-calculates as much as possible and only leaves open\n   * calculations which depend on a dynamic scope with variables.\n   * @param {Object} math     Math.js namespace with functions and constants.\n   * @param {Object} argNames An object with argument names as key and `true`\n   *                          as value. Used in the SymbolNode to optimize\n   *                          for arguments from user assigned functions\n   *                          (see FunctionAssignmentNode) or special symbols\n   *                          like `end` (see IndexNode).\n   * @return {function} Returns a function which can be called like:\n   *                        evalNode(scope: Object, args: Object, context: *)\n   */\n\n  AccessorNode.prototype._compile = function (math, argNames) {\n    var evalObject = this.object._compile(math, argNames);\n\n    var evalIndex = this.index._compile(math, argNames);\n\n    if (this.index.isObjectProperty()) {\n      var prop = this.index.getObjectProperty();\n      return function evalAccessorNode(scope, args, context) {\n        return getSafeProperty(evalObject(scope, args, context), prop);\n      };\n    } else {\n      return function evalAccessorNode(scope, args, context) {\n        var object = evalObject(scope, args, context);\n        var index = evalIndex(scope, args, object); // we pass object here instead of context\n\n        return access(object, index);\n      };\n    }\n  };\n  /**\n   * Execute a callback for each of the child nodes of this node\n   * @param {function(child: Node, path: string, parent: Node)} callback\n   */\n\n\n  AccessorNode.prototype.forEach = function (callback) {\n    callback(this.object, 'object', this);\n    callback(this.index, 'index', this);\n  };\n  /**\n   * Create a new AccessorNode having it's childs be the results of calling\n   * the provided callback function for each of the childs of the original node.\n   * @param {function(child: Node, path: string, parent: Node): Node} callback\n   * @returns {AccessorNode} Returns a transformed copy of the node\n   */\n\n\n  AccessorNode.prototype.map = function (callback) {\n    return new AccessorNode(this._ifNode(callback(this.object, 'object', this)), this._ifNode(callback(this.index, 'index', this)));\n  };\n  /**\n   * Create a clone of this node, a shallow copy\n   * @return {AccessorNode}\n   */\n\n\n  AccessorNode.prototype.clone = function () {\n    return new AccessorNode(this.object, this.index);\n  };\n  /**\n   * Get string representation\n   * @param {Object} options\n   * @return {string}\n   */\n\n\n  AccessorNode.prototype._toString = function (options) {\n    var object = this.object.toString(options);\n\n    if (needParenthesis(this.object)) {\n      object = '(' + object + ')';\n    }\n\n    return object + this.index.toString(options);\n  };\n  /**\n   * Get HTML representation\n   * @param {Object} options\n   * @return {string}\n   */\n\n\n  AccessorNode.prototype.toHTML = function (options) {\n    var object = this.object.toHTML(options);\n\n    if (needParenthesis(this.object)) {\n      object = '<span class=\"math-parenthesis math-round-parenthesis\">(</span>' + object + '<span class=\"math-parenthesis math-round-parenthesis\">)</span>';\n    }\n\n    return object + this.index.toHTML(options);\n  };\n  /**\n   * Get LaTeX representation\n   * @param {Object} options\n   * @return {string}\n   */\n\n\n  AccessorNode.prototype._toTex = function (options) {\n    var object = this.object.toTex(options);\n\n    if (needParenthesis(this.object)) {\n      object = '\\\\left(\\' + object + \\'\\\\right)';\n    }\n\n    return object + this.index.toTex(options);\n  };\n  /**\n   * Get a JSON representation of the node\n   * @returns {Object}\n   */\n\n\n  AccessorNode.prototype.toJSON = function () {\n    return {\n      mathjs: 'AccessorNode',\n      object: this.object,\n      index: this.index\n    };\n  };\n  /**\n   * Instantiate an AccessorNode from its JSON representation\n   * @param {Object} json  An object structured like\n   *                       `{\"mathjs\": \"AccessorNode\", object: ..., index: ...}`,\n   *                       where mathjs is optional\n   * @returns {AccessorNode}\n   */\n\n\n  AccessorNode.fromJSON = function (json) {\n    return new AccessorNode(json.object, json.index);\n  };\n  /**\n   * Are parenthesis needed?\n   * @private\n   */\n\n\n  function needParenthesis(node) {\n    // TODO: maybe make a method on the nodes which tells whether they need parenthesis?\n    return !(isAccessorNode(node) || isArrayNode(node) || isConstantNode(node) || isFunctionNode(node) || isObjectNode(node) || isParenthesisNode(node) || isSymbolNode(node));\n  }\n\n  return AccessorNode;\n}, {\n  isClass: true,\n  isNode: true\n});","import { isNode } from '../../utils/is.js';\nimport { map } from '../../utils/array.js';\nimport { factory } from '../../utils/factory.js';\nvar name = 'ArrayNode';\nvar dependencies = ['Node'];\nexport var createArrayNode = /* #__PURE__ */factory(name, dependencies, (_ref) => {\n  var {\n    Node\n  } = _ref;\n\n  /**\n   * @constructor ArrayNode\n   * @extends {Node}\n   * Holds an 1-dimensional array with items\n   * @param {Node[]} [items]   1 dimensional array with items\n   */\n  function ArrayNode(items) {\n    if (!(this instanceof ArrayNode)) {\n      throw new SyntaxError('Constructor must be called with the new operator');\n    }\n\n    this.items = items || []; // validate input\n\n    if (!Array.isArray(this.items) || !this.items.every(isNode)) {\n      throw new TypeError('Array containing Nodes expected');\n    }\n  }\n\n  ArrayNode.prototype = new Node();\n  ArrayNode.prototype.type = 'ArrayNode';\n  ArrayNode.prototype.isArrayNode = true;\n  /**\n   * Compile a node into a JavaScript function.\n   * This basically pre-calculates as much as possible and only leaves open\n   * calculations which depend on a dynamic scope with variables.\n   * @param {Object} math     Math.js namespace with functions and constants.\n   * @param {Object} argNames An object with argument names as key and `true`\n   *                          as value. Used in the SymbolNode to optimize\n   *                          for arguments from user assigned functions\n   *                          (see FunctionAssignmentNode) or special symbols\n   *                          like `end` (see IndexNode).\n   * @return {function} Returns a function which can be called like:\n   *                        evalNode(scope: Object, args: Object, context: *)\n   */\n\n  ArrayNode.prototype._compile = function (math, argNames) {\n    var evalItems = map(this.items, function (item) {\n      return item._compile(math, argNames);\n    });\n    var asMatrix = math.config.matrix !== 'Array';\n\n    if (asMatrix) {\n      var matrix = math.matrix;\n      return function evalArrayNode(scope, args, context) {\n        return matrix(map(evalItems, function (evalItem) {\n          return evalItem(scope, args, context);\n        }));\n      };\n    } else {\n      return function evalArrayNode(scope, args, context) {\n        return map(evalItems, function (evalItem) {\n          return evalItem(scope, args, context);\n        });\n      };\n    }\n  };\n  /**\n   * Execute a callback for each of the child nodes of this node\n   * @param {function(child: Node, path: string, parent: Node)} callback\n   */\n\n\n  ArrayNode.prototype.forEach = function (callback) {\n    for (var i = 0; i < this.items.length; i++) {\n      var node = this.items[i];\n      callback(node, 'items[' + i + ']', this);\n    }\n  };\n  /**\n   * Create a new ArrayNode having it's childs be the results of calling\n   * the provided callback function for each of the childs of the original node.\n   * @param {function(child: Node, path: string, parent: Node): Node} callback\n   * @returns {ArrayNode} Returns a transformed copy of the node\n   */\n\n\n  ArrayNode.prototype.map = function (callback) {\n    var items = [];\n\n    for (var i = 0; i < this.items.length; i++) {\n      items[i] = this._ifNode(callback(this.items[i], 'items[' + i + ']', this));\n    }\n\n    return new ArrayNode(items);\n  };\n  /**\n   * Create a clone of this node, a shallow copy\n   * @return {ArrayNode}\n   */\n\n\n  ArrayNode.prototype.clone = function () {\n    return new ArrayNode(this.items.slice(0));\n  };\n  /**\n   * Get string representation\n   * @param {Object} options\n   * @return {string} str\n   * @override\n   */\n\n\n  ArrayNode.prototype._toString = function (options) {\n    var items = this.items.map(function (node) {\n      return node.toString(options);\n    });\n    return '[' + items.join(', ') + ']';\n  };\n  /**\n   * Get a JSON representation of the node\n   * @returns {Object}\n   */\n\n\n  ArrayNode.prototype.toJSON = function () {\n    return {\n      mathjs: 'ArrayNode',\n      items: this.items\n    };\n  };\n  /**\n   * Instantiate an ArrayNode from its JSON representation\n   * @param {Object} json  An object structured like\n   *                       `{\"mathjs\": \"ArrayNode\", items: [...]}`,\n   *                       where mathjs is optional\n   * @returns {ArrayNode}\n   */\n\n\n  ArrayNode.fromJSON = function (json) {\n    return new ArrayNode(json.items);\n  };\n  /**\n   * Get HTML representation\n   * @param {Object} options\n   * @return {string} str\n   * @override\n   */\n\n\n  ArrayNode.prototype.toHTML = function (options) {\n    var items = this.items.map(function (node) {\n      return node.toHTML(options);\n    });\n    return '<span class=\"math-parenthesis math-square-parenthesis\">[</span>' + items.join('<span class=\"math-separator\">,</span>') + '<span class=\"math-parenthesis math-square-parenthesis\">]</span>';\n  };\n  /**\n   * Get LaTeX representation\n   * @param {Object} options\n   * @return {string} str\n   */\n\n\n  ArrayNode.prototype._toTex = function (options) {\n    var s = '\\\\begin{bmatrix}';\n    this.items.forEach(function (node) {\n      if (node.items) {\n        s += node.items.map(function (childNode) {\n          return childNode.toTex(options);\n        }).join('&');\n      } else {\n        s += node.toTex(options);\n      } // new line\n\n\n      s += '\\\\\\\\';\n    });\n    s += '\\\\end{bmatrix}';\n    return s;\n  };\n\n  return ArrayNode;\n}, {\n  isClass: true,\n  isNode: true\n});","// list of identifiers of nodes in order of their precedence\n// also contains information about left/right associativity\n// and which other operator the operator is associative with\n// Example:\n// addition is associative with addition and subtraction, because:\n// (a+b)+c=a+(b+c)\n// (a+b)-c=a+(b-c)\n//\n// postfix operators are left associative, prefix operators\n// are right associative\n//\n// It's also possible to set the following properties:\n// latexParens: if set to false, this node doesn't need to be enclosed\n//              in parentheses when using LaTeX\n// latexLeftParens: if set to false, this !OperatorNode's!\n//                  left argument doesn't need to be enclosed\n//                  in parentheses\n// latexRightParens: the same for the right argument\nimport { hasOwnProperty } from '../utils/object.js';\nexport var properties = [{\n  // assignment\n  AssignmentNode: {},\n  FunctionAssignmentNode: {}\n}, {\n  // conditional expression\n  ConditionalNode: {\n    latexLeftParens: false,\n    latexRightParens: false,\n    latexParens: false // conditionals don't need parentheses in LaTeX because\n    // they are 2 dimensional\n\n  }\n}, {\n  // logical or\n  'OperatorNode:or': {\n    associativity: 'left',\n    associativeWith: []\n  }\n}, {\n  // logical xor\n  'OperatorNode:xor': {\n    associativity: 'left',\n    associativeWith: []\n  }\n}, {\n  // logical and\n  'OperatorNode:and': {\n    associativity: 'left',\n    associativeWith: []\n  }\n}, {\n  // bitwise or\n  'OperatorNode:bitOr': {\n    associativity: 'left',\n    associativeWith: []\n  }\n}, {\n  // bitwise xor\n  'OperatorNode:bitXor': {\n    associativity: 'left',\n    associativeWith: []\n  }\n}, {\n  // bitwise and\n  'OperatorNode:bitAnd': {\n    associativity: 'left',\n    associativeWith: []\n  }\n}, {\n  // relational operators\n  'OperatorNode:equal': {\n    associativity: 'left',\n    associativeWith: []\n  },\n  'OperatorNode:unequal': {\n    associativity: 'left',\n    associativeWith: []\n  },\n  'OperatorNode:smaller': {\n    associativity: 'left',\n    associativeWith: []\n  },\n  'OperatorNode:larger': {\n    associativity: 'left',\n    associativeWith: []\n  },\n  'OperatorNode:smallerEq': {\n    associativity: 'left',\n    associativeWith: []\n  },\n  'OperatorNode:largerEq': {\n    associativity: 'left',\n    associativeWith: []\n  },\n  RelationalNode: {\n    associativity: 'left',\n    associativeWith: []\n  }\n}, {\n  // bitshift operators\n  'OperatorNode:leftShift': {\n    associativity: 'left',\n    associativeWith: []\n  },\n  'OperatorNode:rightArithShift': {\n    associativity: 'left',\n    associativeWith: []\n  },\n  'OperatorNode:rightLogShift': {\n    associativity: 'left',\n    associativeWith: []\n  }\n}, {\n  // unit conversion\n  'OperatorNode:to': {\n    associativity: 'left',\n    associativeWith: []\n  }\n}, {\n  // range\n  RangeNode: {}\n}, {\n  // addition, subtraction\n  'OperatorNode:add': {\n    associativity: 'left',\n    associativeWith: ['OperatorNode:add', 'OperatorNode:subtract']\n  },\n  'OperatorNode:subtract': {\n    associativity: 'left',\n    associativeWith: []\n  }\n}, {\n  // multiply, divide, modulus\n  'OperatorNode:multiply': {\n    associativity: 'left',\n    associativeWith: ['OperatorNode:multiply', 'OperatorNode:divide', 'Operator:dotMultiply', 'Operator:dotDivide']\n  },\n  'OperatorNode:divide': {\n    associativity: 'left',\n    associativeWith: [],\n    latexLeftParens: false,\n    latexRightParens: false,\n    latexParens: false // fractions don't require parentheses because\n    // they're 2 dimensional, so parens aren't needed\n    // in LaTeX\n\n  },\n  'OperatorNode:dotMultiply': {\n    associativity: 'left',\n    associativeWith: ['OperatorNode:multiply', 'OperatorNode:divide', 'OperatorNode:dotMultiply', 'OperatorNode:doDivide']\n  },\n  'OperatorNode:dotDivide': {\n    associativity: 'left',\n    associativeWith: []\n  },\n  'OperatorNode:mod': {\n    associativity: 'left',\n    associativeWith: []\n  }\n}, {\n  // unary prefix operators\n  'OperatorNode:unaryPlus': {\n    associativity: 'right'\n  },\n  'OperatorNode:unaryMinus': {\n    associativity: 'right'\n  },\n  'OperatorNode:bitNot': {\n    associativity: 'right'\n  },\n  'OperatorNode:not': {\n    associativity: 'right'\n  }\n}, {\n  // exponentiation\n  'OperatorNode:pow': {\n    associativity: 'right',\n    associativeWith: [],\n    latexRightParens: false // the exponent doesn't need parentheses in\n    // LaTeX because it's 2 dimensional\n    // (it's on top)\n\n  },\n  'OperatorNode:dotPow': {\n    associativity: 'right',\n    associativeWith: []\n  }\n}, {\n  // factorial\n  'OperatorNode:factorial': {\n    associativity: 'left'\n  }\n}, {\n  // matrix transpose\n  'OperatorNode:transpose': {\n    associativity: 'left'\n  }\n}];\n/**\n * Get the precedence of a Node.\n * Higher number for higher precedence, starting with 0.\n * Returns null if the precedence is undefined.\n *\n * @param {Node} _node\n * @param {string} parenthesis\n * @return {number | null}\n */\n\nexport function getPrecedence(_node, parenthesis) {\n  var node = _node;\n\n  if (parenthesis !== 'keep') {\n    // ParenthesisNodes are only ignored when not in 'keep' mode\n    node = _node.getContent();\n  }\n\n  var identifier = node.getIdentifier();\n\n  for (var i = 0; i < properties.length; i++) {\n    if (identifier in properties[i]) {\n      return i;\n    }\n  }\n\n  return null;\n}\n/**\n * Get the associativity of an operator (left or right).\n * Returns a string containing 'left' or 'right' or null if\n * the associativity is not defined.\n *\n * @param {Node} _node\n * @param {string} parenthesis\n * @return {string|null}\n * @throws {Error}\n */\n\nexport function getAssociativity(_node, parenthesis) {\n  var node = _node;\n\n  if (parenthesis !== 'keep') {\n    // ParenthesisNodes are only ignored when not in 'keep' mode\n    node = _node.getContent();\n  }\n\n  var identifier = node.getIdentifier();\n  var index = getPrecedence(node, parenthesis);\n\n  if (index === null) {\n    // node isn't in the list\n    return null;\n  }\n\n  var property = properties[index][identifier];\n\n  if (hasOwnProperty(property, 'associativity')) {\n    if (property.associativity === 'left') {\n      return 'left';\n    }\n\n    if (property.associativity === 'right') {\n      return 'right';\n    } // associativity is invalid\n\n\n    throw Error('\\'' + identifier + '\\' has the invalid associativity \\'' + property.associativity + '\\'.');\n  } // associativity is undefined\n\n\n  return null;\n}\n/**\n * Check if an operator is associative with another operator.\n * Returns either true or false or null if not defined.\n *\n * @param {Node} nodeA\n * @param {Node} nodeB\n * @param {string} parenthesis\n * @return {boolean | null}\n */\n\nexport function isAssociativeWith(nodeA, nodeB, parenthesis) {\n  // ParenthesisNodes are only ignored when not in 'keep' mode\n  var a = parenthesis !== 'keep' ? nodeA.getContent() : nodeA;\n  var b = parenthesis !== 'keep' ? nodeA.getContent() : nodeB;\n  var identifierA = a.getIdentifier();\n  var identifierB = b.getIdentifier();\n  var index = getPrecedence(a, parenthesis);\n\n  if (index === null) {\n    // node isn't in the list\n    return null;\n  }\n\n  var property = properties[index][identifierA];\n\n  if (hasOwnProperty(property, 'associativeWith') && property.associativeWith instanceof Array) {\n    for (var i = 0; i < property.associativeWith.length; i++) {\n      if (property.associativeWith[i] === identifierB) {\n        return true;\n      }\n    }\n\n    return false;\n  } // associativeWith is not defined\n\n\n  return null;\n}","import { isAccessorNode, isIndexNode, isNode, isSymbolNode } from '../../utils/is.js';\nimport { getSafeProperty, setSafeProperty } from '../../utils/customs.js';\nimport { factory } from '../../utils/factory.js';\nimport { accessFactory } from './utils/access.js';\nimport { assignFactory } from './utils/assign.js';\nimport { getPrecedence } from '../operators.js';\nvar name = 'AssignmentNode';\nvar dependencies = ['subset', '?matrix', // FIXME: should not be needed at all, should be handled by subset\n'Node'];\nexport var createAssignmentNode = /* #__PURE__ */factory(name, dependencies, (_ref) => {\n  var {\n    subset,\n    matrix,\n    Node\n  } = _ref;\n  var access = accessFactory({\n    subset\n  });\n  var assign = assignFactory({\n    subset,\n    matrix\n  });\n  /**\n   * @constructor AssignmentNode\n   * @extends {Node}\n   *\n   * Define a symbol, like `a=3.2`, update a property like `a.b=3.2`, or\n   * replace a subset of a matrix like `A[2,2]=42`.\n   *\n   * Syntax:\n   *\n   *     new AssignmentNode(symbol, value)\n   *     new AssignmentNode(object, index, value)\n   *\n   * Usage:\n   *\n   *    new AssignmentNode(new SymbolNode('a'), new ConstantNode(2))                       // a=2\n   *    new AssignmentNode(new SymbolNode('a'), new IndexNode('b'), new ConstantNode(2))   // a.b=2\n   *    new AssignmentNode(new SymbolNode('a'), new IndexNode(1, 2), new ConstantNode(3))  // a[1,2]=3\n   *\n   * @param {SymbolNode | AccessorNode} object  Object on which to assign a value\n   * @param {IndexNode} [index=null]            Index, property name or matrix\n   *                                            index. Optional. If not provided\n   *                                            and `object` is a SymbolNode,\n   *                                            the property is assigned to the\n   *                                            global scope.\n   * @param {Node} value                        The value to be assigned\n   */\n\n  function AssignmentNode(object, index, value) {\n    if (!(this instanceof AssignmentNode)) {\n      throw new SyntaxError('Constructor must be called with the new operator');\n    }\n\n    this.object = object;\n    this.index = value ? index : null;\n    this.value = value || index; // validate input\n\n    if (!isSymbolNode(object) && !isAccessorNode(object)) {\n      throw new TypeError('SymbolNode or AccessorNode expected as \"object\"');\n    }\n\n    if (isSymbolNode(object) && object.name === 'end') {\n      throw new Error('Cannot assign to symbol \"end\"');\n    }\n\n    if (this.index && !isIndexNode(this.index)) {\n      // index is optional\n      throw new TypeError('IndexNode expected as \"index\"');\n    }\n\n    if (!isNode(this.value)) {\n      throw new TypeError('Node expected as \"value\"');\n    } // readonly property name\n\n\n    Object.defineProperty(this, 'name', {\n      get: function () {\n        if (this.index) {\n          return this.index.isObjectProperty() ? this.index.getObjectProperty() : '';\n        } else {\n          return this.object.name || '';\n        }\n      }.bind(this),\n      set: function set() {\n        throw new Error('Cannot assign a new name, name is read-only');\n      }\n    });\n  }\n\n  AssignmentNode.prototype = new Node();\n  AssignmentNode.prototype.type = 'AssignmentNode';\n  AssignmentNode.prototype.isAssignmentNode = true;\n  /**\n   * Compile a node into a JavaScript function.\n   * This basically pre-calculates as much as possible and only leaves open\n   * calculations which depend on a dynamic scope with variables.\n   * @param {Object} math     Math.js namespace with functions and constants.\n   * @param {Object} argNames An object with argument names as key and `true`\n   *                          as value. Used in the SymbolNode to optimize\n   *                          for arguments from user assigned functions\n   *                          (see FunctionAssignmentNode) or special symbols\n   *                          like `end` (see IndexNode).\n   * @return {function} Returns a function which can be called like:\n   *                        evalNode(scope: Object, args: Object, context: *)\n   */\n\n  AssignmentNode.prototype._compile = function (math, argNames) {\n    var evalObject = this.object._compile(math, argNames);\n\n    var evalIndex = this.index ? this.index._compile(math, argNames) : null;\n\n    var evalValue = this.value._compile(math, argNames);\n\n    var name = this.object.name;\n\n    if (!this.index) {\n      // apply a variable to the scope, for example `a=2`\n      if (!isSymbolNode(this.object)) {\n        throw new TypeError('SymbolNode expected as object');\n      }\n\n      return function evalAssignmentNode(scope, args, context) {\n        return setSafeProperty(scope, name, evalValue(scope, args, context));\n      };\n    } else if (this.index.isObjectProperty()) {\n      // apply an object property for example `a.b=2`\n      var prop = this.index.getObjectProperty();\n      return function evalAssignmentNode(scope, args, context) {\n        var object = evalObject(scope, args, context);\n        var value = evalValue(scope, args, context);\n        return setSafeProperty(object, prop, value);\n      };\n    } else if (isSymbolNode(this.object)) {\n      // update a matrix subset, for example `a[2]=3`\n      return function evalAssignmentNode(scope, args, context) {\n        var childObject = evalObject(scope, args, context);\n        var value = evalValue(scope, args, context);\n        var index = evalIndex(scope, args, childObject); // Important:  we pass childObject instead of context\n\n        setSafeProperty(scope, name, assign(childObject, index, value));\n        return value;\n      };\n    } else {\n      // isAccessorNode(node.object) === true\n      // update a matrix subset, for example `a.b[2]=3`\n      // we will not use the compile function of the AccessorNode, but compile it\n      // ourselves here as we need the parent object of the AccessorNode:\n      // wee need to apply the updated object to parent object\n      var evalParentObject = this.object.object._compile(math, argNames);\n\n      if (this.object.index.isObjectProperty()) {\n        var parentProp = this.object.index.getObjectProperty();\n        return function evalAssignmentNode(scope, args, context) {\n          var parent = evalParentObject(scope, args, context);\n          var childObject = getSafeProperty(parent, parentProp);\n          var index = evalIndex(scope, args, childObject); // Important: we pass childObject instead of context\n\n          var value = evalValue(scope, args, context);\n          setSafeProperty(parent, parentProp, assign(childObject, index, value));\n          return value;\n        };\n      } else {\n        // if some parameters use the 'end' parameter, we need to calculate the size\n        var evalParentIndex = this.object.index._compile(math, argNames);\n\n        return function evalAssignmentNode(scope, args, context) {\n          var parent = evalParentObject(scope, args, context);\n          var parentIndex = evalParentIndex(scope, args, parent); // Important: we pass parent instead of context\n\n          var childObject = access(parent, parentIndex);\n          var index = evalIndex(scope, args, childObject); // Important:  we pass childObject instead of context\n\n          var value = evalValue(scope, args, context);\n          assign(parent, parentIndex, assign(childObject, index, value));\n          return value;\n        };\n      }\n    }\n  };\n  /**\n   * Execute a callback for each of the child nodes of this node\n   * @param {function(child: Node, path: string, parent: Node)} callback\n   */\n\n\n  AssignmentNode.prototype.forEach = function (callback) {\n    callback(this.object, 'object', this);\n\n    if (this.index) {\n      callback(this.index, 'index', this);\n    }\n\n    callback(this.value, 'value', this);\n  };\n  /**\n   * Create a new AssignmentNode having it's childs be the results of calling\n   * the provided callback function for each of the childs of the original node.\n   * @param {function(child: Node, path: string, parent: Node): Node} callback\n   * @returns {AssignmentNode} Returns a transformed copy of the node\n   */\n\n\n  AssignmentNode.prototype.map = function (callback) {\n    var object = this._ifNode(callback(this.object, 'object', this));\n\n    var index = this.index ? this._ifNode(callback(this.index, 'index', this)) : null;\n\n    var value = this._ifNode(callback(this.value, 'value', this));\n\n    return new AssignmentNode(object, index, value);\n  };\n  /**\n   * Create a clone of this node, a shallow copy\n   * @return {AssignmentNode}\n   */\n\n\n  AssignmentNode.prototype.clone = function () {\n    return new AssignmentNode(this.object, this.index, this.value);\n  };\n  /*\n   * Is parenthesis needed?\n   * @param {node} node\n   * @param {string} [parenthesis='keep']\n   * @private\n   */\n\n\n  function needParenthesis(node, parenthesis) {\n    if (!parenthesis) {\n      parenthesis = 'keep';\n    }\n\n    var precedence = getPrecedence(node, parenthesis);\n    var exprPrecedence = getPrecedence(node.value, parenthesis);\n    return parenthesis === 'all' || exprPrecedence !== null && exprPrecedence <= precedence;\n  }\n  /**\n   * Get string representation\n   * @param {Object} options\n   * @return {string}\n   */\n\n\n  AssignmentNode.prototype._toString = function (options) {\n    var object = this.object.toString(options);\n    var index = this.index ? this.index.toString(options) : '';\n    var value = this.value.toString(options);\n\n    if (needParenthesis(this, options && options.parenthesis)) {\n      value = '(' + value + ')';\n    }\n\n    return object + index + ' = ' + value;\n  };\n  /**\n   * Get a JSON representation of the node\n   * @returns {Object}\n   */\n\n\n  AssignmentNode.prototype.toJSON = function () {\n    return {\n      mathjs: 'AssignmentNode',\n      object: this.object,\n      index: this.index,\n      value: this.value\n    };\n  };\n  /**\n   * Instantiate an AssignmentNode from its JSON representation\n   * @param {Object} json  An object structured like\n   *                       `{\"mathjs\": \"AssignmentNode\", object: ..., index: ..., value: ...}`,\n   *                       where mathjs is optional\n   * @returns {AssignmentNode}\n   */\n\n\n  AssignmentNode.fromJSON = function (json) {\n    return new AssignmentNode(json.object, json.index, json.value);\n  };\n  /**\n   * Get HTML representation\n   * @param {Object} options\n   * @return {string}\n   */\n\n\n  AssignmentNode.prototype.toHTML = function (options) {\n    var object = this.object.toHTML(options);\n    var index = this.index ? this.index.toHTML(options) : '';\n    var value = this.value.toHTML(options);\n\n    if (needParenthesis(this, options && options.parenthesis)) {\n      value = '<span class=\"math-paranthesis math-round-parenthesis\">(</span>' + value + '<span class=\"math-paranthesis math-round-parenthesis\">)</span>';\n    }\n\n    return object + index + '<span class=\"math-operator math-assignment-operator math-variable-assignment-operator math-binary-operator\">=</span>' + value;\n  };\n  /**\n   * Get LaTeX representation\n   * @param {Object} options\n   * @return {string}\n   */\n\n\n  AssignmentNode.prototype._toTex = function (options) {\n    var object = this.object.toTex(options);\n    var index = this.index ? this.index.toTex(options) : '';\n    var value = this.value.toTex(options);\n\n    if (needParenthesis(this, options && options.parenthesis)) {\n      value = \"\\\\left(\".concat(value, \"\\\\right)\");\n    }\n\n    return object + index + ':=' + value;\n  };\n\n  return AssignmentNode;\n}, {\n  isClass: true,\n  isNode: true\n});","import { errorTransform } from '../../transform/utils/errorTransform.js';\nimport { setSafeProperty } from '../../../utils/customs.js';\nexport function assignFactory(_ref) {\n  var {\n    subset,\n    matrix\n  } = _ref;\n\n  /**\n   * Replace part of an object:\n   *\n   * - Assign a property to an object\n   * - Replace a part of a string\n   * - Replace a matrix subset\n   *\n   * @param {Object | Array | Matrix | string} object\n   * @param {Index} index\n   * @param {*} value\n   * @return {Object | Array | Matrix | string} Returns the original object\n   *                                            except in case of a string\n   */\n  // TODO: change assign to return the value instead of the object\n  return function assign(object, index, value) {\n    try {\n      if (Array.isArray(object)) {\n        // we use matrix.subset here instead of the function subset because we must not clone the contents\n        return matrix(object).subset(index, value).valueOf();\n      } else if (object && typeof object.subset === 'function') {\n        // Matrix\n        return object.subset(index, value);\n      } else if (typeof object === 'string') {\n        // TODO: move setStringSubset into a separate util file, use that\n        return subset(object, index, value);\n      } else if (typeof object === 'object') {\n        if (!index.isObjectProperty()) {\n          throw TypeError('Cannot apply a numeric index as object property');\n        }\n\n        setSafeProperty(object, index.getObjectProperty(), value);\n        return object;\n      } else {\n        throw new TypeError('Cannot apply index: unsupported type of object');\n      }\n    } catch (err) {\n      throw errorTransform(err);\n    }\n  };\n}","import { isNode } from '../../utils/is.js';\nimport { forEach, map } from '../../utils/array.js';\nimport { factory } from '../../utils/factory.js';\nvar name = 'BlockNode';\nvar dependencies = ['ResultSet', 'Node'];\nexport var createBlockNode = /* #__PURE__ */factory(name, dependencies, (_ref) => {\n  var {\n    ResultSet,\n    Node\n  } = _ref;\n\n  /**\n   * @constructor BlockNode\n   * @extends {Node}\n   * Holds a set with blocks\n   * @param {Array.<{node: Node} | {node: Node, visible: boolean}>} blocks\n   *            An array with blocks, where a block is constructed as an Object\n   *            with properties block, which is a Node, and visible, which is\n   *            a boolean. The property visible is optional and is true by default\n   */\n  function BlockNode(blocks) {\n    if (!(this instanceof BlockNode)) {\n      throw new SyntaxError('Constructor must be called with the new operator');\n    } // validate input, copy blocks\n\n\n    if (!Array.isArray(blocks)) throw new Error('Array expected');\n    this.blocks = blocks.map(function (block) {\n      var node = block && block.node;\n      var visible = block && block.visible !== undefined ? block.visible : true;\n      if (!isNode(node)) throw new TypeError('Property \"node\" must be a Node');\n      if (typeof visible !== 'boolean') throw new TypeError('Property \"visible\" must be a boolean');\n      return {\n        node: node,\n        visible: visible\n      };\n    });\n  }\n\n  BlockNode.prototype = new Node();\n  BlockNode.prototype.type = 'BlockNode';\n  BlockNode.prototype.isBlockNode = true;\n  /**\n   * Compile a node into a JavaScript function.\n   * This basically pre-calculates as much as possible and only leaves open\n   * calculations which depend on a dynamic scope with variables.\n   * @param {Object} math     Math.js namespace with functions and constants.\n   * @param {Object} argNames An object with argument names as key and `true`\n   *                          as value. Used in the SymbolNode to optimize\n   *                          for arguments from user assigned functions\n   *                          (see FunctionAssignmentNode) or special symbols\n   *                          like `end` (see IndexNode).\n   * @return {function} Returns a function which can be called like:\n   *                        evalNode(scope: Object, args: Object, context: *)\n   */\n\n  BlockNode.prototype._compile = function (math, argNames) {\n    var evalBlocks = map(this.blocks, function (block) {\n      return {\n        evaluate: block.node._compile(math, argNames),\n        visible: block.visible\n      };\n    });\n    return function evalBlockNodes(scope, args, context) {\n      var results = [];\n      forEach(evalBlocks, function evalBlockNode(block) {\n        var result = block.evaluate(scope, args, context);\n\n        if (block.visible) {\n          results.push(result);\n        }\n      });\n      return new ResultSet(results);\n    };\n  };\n  /**\n   * Execute a callback for each of the child blocks of this node\n   * @param {function(child: Node, path: string, parent: Node)} callback\n   */\n\n\n  BlockNode.prototype.forEach = function (callback) {\n    for (var i = 0; i < this.blocks.length; i++) {\n      callback(this.blocks[i].node, 'blocks[' + i + '].node', this);\n    }\n  };\n  /**\n   * Create a new BlockNode having it's childs be the results of calling\n   * the provided callback function for each of the childs of the original node.\n   * @param {function(child: Node, path: string, parent: Node): Node} callback\n   * @returns {BlockNode} Returns a transformed copy of the node\n   */\n\n\n  BlockNode.prototype.map = function (callback) {\n    var blocks = [];\n\n    for (var i = 0; i < this.blocks.length; i++) {\n      var block = this.blocks[i];\n\n      var node = this._ifNode(callback(block.node, 'blocks[' + i + '].node', this));\n\n      blocks[i] = {\n        node: node,\n        visible: block.visible\n      };\n    }\n\n    return new BlockNode(blocks);\n  };\n  /**\n   * Create a clone of this node, a shallow copy\n   * @return {BlockNode}\n   */\n\n\n  BlockNode.prototype.clone = function () {\n    var blocks = this.blocks.map(function (block) {\n      return {\n        node: block.node,\n        visible: block.visible\n      };\n    });\n    return new BlockNode(blocks);\n  };\n  /**\n   * Get string representation\n   * @param {Object} options\n   * @return {string} str\n   * @override\n   */\n\n\n  BlockNode.prototype._toString = function (options) {\n    return this.blocks.map(function (param) {\n      return param.node.toString(options) + (param.visible ? '' : ';');\n    }).join('\\n');\n  };\n  /**\n   * Get a JSON representation of the node\n   * @returns {Object}\n   */\n\n\n  BlockNode.prototype.toJSON = function () {\n    return {\n      mathjs: 'BlockNode',\n      blocks: this.blocks\n    };\n  };\n  /**\n   * Instantiate an BlockNode from its JSON representation\n   * @param {Object} json  An object structured like\n   *                       `{\"mathjs\": \"BlockNode\", blocks: [{node: ..., visible: false}, ...]}`,\n   *                       where mathjs is optional\n   * @returns {BlockNode}\n   */\n\n\n  BlockNode.fromJSON = function (json) {\n    return new BlockNode(json.blocks);\n  };\n  /**\n   * Get HTML representation\n   * @param {Object} options\n   * @return {string} str\n   * @override\n   */\n\n\n  BlockNode.prototype.toHTML = function (options) {\n    return this.blocks.map(function (param) {\n      return param.node.toHTML(options) + (param.visible ? '' : '<span class=\"math-separator\">;</span>');\n    }).join('<span class=\"math-separator\"><br /></span>');\n  };\n  /**\n   * Get LaTeX representation\n   * @param {Object} options\n   * @return {string} str\n   */\n\n\n  BlockNode.prototype._toTex = function (options) {\n    return this.blocks.map(function (param) {\n      return param.node.toTex(options) + (param.visible ? '' : ';');\n    }).join('\\\\;\\\\;\\n');\n  };\n\n  return BlockNode;\n}, {\n  isClass: true,\n  isNode: true\n});","import { isBigNumber, isComplex, isNode, isUnit, typeOf } from '../../utils/is.js';\nimport { factory } from '../../utils/factory.js';\nimport { getPrecedence } from '../operators.js';\nvar name = 'ConditionalNode';\nvar dependencies = ['Node'];\nexport var createConditionalNode = /* #__PURE__ */factory(name, dependencies, (_ref) => {\n  var {\n    Node\n  } = _ref;\n\n  /**\n   * A lazy evaluating conditional operator: 'condition ? trueExpr : falseExpr'\n   *\n   * @param {Node} condition   Condition, must result in a boolean\n   * @param {Node} trueExpr    Expression evaluated when condition is true\n   * @param {Node} falseExpr   Expression evaluated when condition is true\n   *\n   * @constructor ConditionalNode\n   * @extends {Node}\n   */\n  function ConditionalNode(condition, trueExpr, falseExpr) {\n    if (!(this instanceof ConditionalNode)) {\n      throw new SyntaxError('Constructor must be called with the new operator');\n    }\n\n    if (!isNode(condition)) throw new TypeError('Parameter condition must be a Node');\n    if (!isNode(trueExpr)) throw new TypeError('Parameter trueExpr must be a Node');\n    if (!isNode(falseExpr)) throw new TypeError('Parameter falseExpr must be a Node');\n    this.condition = condition;\n    this.trueExpr = trueExpr;\n    this.falseExpr = falseExpr;\n  }\n\n  ConditionalNode.prototype = new Node();\n  ConditionalNode.prototype.type = 'ConditionalNode';\n  ConditionalNode.prototype.isConditionalNode = true;\n  /**\n   * Compile a node into a JavaScript function.\n   * This basically pre-calculates as much as possible and only leaves open\n   * calculations which depend on a dynamic scope with variables.\n   * @param {Object} math     Math.js namespace with functions and constants.\n   * @param {Object} argNames An object with argument names as key and `true`\n   *                          as value. Used in the SymbolNode to optimize\n   *                          for arguments from user assigned functions\n   *                          (see FunctionAssignmentNode) or special symbols\n   *                          like `end` (see IndexNode).\n   * @return {function} Returns a function which can be called like:\n   *                        evalNode(scope: Object, args: Object, context: *)\n   */\n\n  ConditionalNode.prototype._compile = function (math, argNames) {\n    var evalCondition = this.condition._compile(math, argNames);\n\n    var evalTrueExpr = this.trueExpr._compile(math, argNames);\n\n    var evalFalseExpr = this.falseExpr._compile(math, argNames);\n\n    return function evalConditionalNode(scope, args, context) {\n      return testCondition(evalCondition(scope, args, context)) ? evalTrueExpr(scope, args, context) : evalFalseExpr(scope, args, context);\n    };\n  };\n  /**\n   * Execute a callback for each of the child nodes of this node\n   * @param {function(child: Node, path: string, parent: Node)} callback\n   */\n\n\n  ConditionalNode.prototype.forEach = function (callback) {\n    callback(this.condition, 'condition', this);\n    callback(this.trueExpr, 'trueExpr', this);\n    callback(this.falseExpr, 'falseExpr', this);\n  };\n  /**\n   * Create a new ConditionalNode having it's childs be the results of calling\n   * the provided callback function for each of the childs of the original node.\n   * @param {function(child: Node, path: string, parent: Node): Node} callback\n   * @returns {ConditionalNode} Returns a transformed copy of the node\n   */\n\n\n  ConditionalNode.prototype.map = function (callback) {\n    return new ConditionalNode(this._ifNode(callback(this.condition, 'condition', this)), this._ifNode(callback(this.trueExpr, 'trueExpr', this)), this._ifNode(callback(this.falseExpr, 'falseExpr', this)));\n  };\n  /**\n   * Create a clone of this node, a shallow copy\n   * @return {ConditionalNode}\n   */\n\n\n  ConditionalNode.prototype.clone = function () {\n    return new ConditionalNode(this.condition, this.trueExpr, this.falseExpr);\n  };\n  /**\n   * Get string representation\n   * @param {Object} options\n   * @return {string} str\n   */\n\n\n  ConditionalNode.prototype._toString = function (options) {\n    var parenthesis = options && options.parenthesis ? options.parenthesis : 'keep';\n    var precedence = getPrecedence(this, parenthesis); // Enclose Arguments in parentheses if they are an OperatorNode\n    // or have lower or equal precedence\n    // NOTE: enclosing all OperatorNodes in parentheses is a decision\n    // purely based on aesthetics and readability\n\n    var condition = this.condition.toString(options);\n    var conditionPrecedence = getPrecedence(this.condition, parenthesis);\n\n    if (parenthesis === 'all' || this.condition.type === 'OperatorNode' || conditionPrecedence !== null && conditionPrecedence <= precedence) {\n      condition = '(' + condition + ')';\n    }\n\n    var trueExpr = this.trueExpr.toString(options);\n    var truePrecedence = getPrecedence(this.trueExpr, parenthesis);\n\n    if (parenthesis === 'all' || this.trueExpr.type === 'OperatorNode' || truePrecedence !== null && truePrecedence <= precedence) {\n      trueExpr = '(' + trueExpr + ')';\n    }\n\n    var falseExpr = this.falseExpr.toString(options);\n    var falsePrecedence = getPrecedence(this.falseExpr, parenthesis);\n\n    if (parenthesis === 'all' || this.falseExpr.type === 'OperatorNode' || falsePrecedence !== null && falsePrecedence <= precedence) {\n      falseExpr = '(' + falseExpr + ')';\n    }\n\n    return condition + ' ? ' + trueExpr + ' : ' + falseExpr;\n  };\n  /**\n   * Get a JSON representation of the node\n   * @returns {Object}\n   */\n\n\n  ConditionalNode.prototype.toJSON = function () {\n    return {\n      mathjs: 'ConditionalNode',\n      condition: this.condition,\n      trueExpr: this.trueExpr,\n      falseExpr: this.falseExpr\n    };\n  };\n  /**\n   * Instantiate an ConditionalNode from its JSON representation\n   * @param {Object} json  An object structured like\n   *                       `{\"mathjs\": \"ConditionalNode\", \"condition\": ..., \"trueExpr\": ..., \"falseExpr\": ...}`,\n   *                       where mathjs is optional\n   * @returns {ConditionalNode}\n   */\n\n\n  ConditionalNode.fromJSON = function (json) {\n    return new ConditionalNode(json.condition, json.trueExpr, json.falseExpr);\n  };\n  /**\n   * Get HTML representation\n   * @param {Object} options\n   * @return {string} str\n   */\n\n\n  ConditionalNode.prototype.toHTML = function (options) {\n    var parenthesis = options && options.parenthesis ? options.parenthesis : 'keep';\n    var precedence = getPrecedence(this, parenthesis); // Enclose Arguments in parentheses if they are an OperatorNode\n    // or have lower or equal precedence\n    // NOTE: enclosing all OperatorNodes in parentheses is a decision\n    // purely based on aesthetics and readability\n\n    var condition = this.condition.toHTML(options);\n    var conditionPrecedence = getPrecedence(this.condition, parenthesis);\n\n    if (parenthesis === 'all' || this.condition.type === 'OperatorNode' || conditionPrecedence !== null && conditionPrecedence <= precedence) {\n      condition = '<span class=\"math-parenthesis math-round-parenthesis\">(</span>' + condition + '<span class=\"math-parenthesis math-round-parenthesis\">)</span>';\n    }\n\n    var trueExpr = this.trueExpr.toHTML(options);\n    var truePrecedence = getPrecedence(this.trueExpr, parenthesis);\n\n    if (parenthesis === 'all' || this.trueExpr.type === 'OperatorNode' || truePrecedence !== null && truePrecedence <= precedence) {\n      trueExpr = '<span class=\"math-parenthesis math-round-parenthesis\">(</span>' + trueExpr + '<span class=\"math-parenthesis math-round-parenthesis\">)</span>';\n    }\n\n    var falseExpr = this.falseExpr.toHTML(options);\n    var falsePrecedence = getPrecedence(this.falseExpr, parenthesis);\n\n    if (parenthesis === 'all' || this.falseExpr.type === 'OperatorNode' || falsePrecedence !== null && falsePrecedence <= precedence) {\n      falseExpr = '<span class=\"math-parenthesis math-round-parenthesis\">(</span>' + falseExpr + '<span class=\"math-parenthesis math-round-parenthesis\">)</span>';\n    }\n\n    return condition + '<span class=\"math-operator math-conditional-operator\">?</span>' + trueExpr + '<span class=\"math-operator math-conditional-operator\">:</span>' + falseExpr;\n  };\n  /**\n   * Get LaTeX representation\n   * @param {Object} options\n   * @return {string} str\n   */\n\n\n  ConditionalNode.prototype._toTex = function (options) {\n    return '\\\\begin{cases} {' + this.trueExpr.toTex(options) + '}, &\\\\quad{\\\\text{if }\\\\;' + this.condition.toTex(options) + '}\\\\\\\\{' + this.falseExpr.toTex(options) + '}, &\\\\quad{\\\\text{otherwise}}\\\\end{cases}';\n  };\n  /**\n   * Test whether a condition is met\n   * @param {*} condition\n   * @returns {boolean} true if condition is true or non-zero, else false\n   */\n\n\n  function testCondition(condition) {\n    if (typeof condition === 'number' || typeof condition === 'boolean' || typeof condition === 'string') {\n      return !!condition;\n    }\n\n    if (condition) {\n      if (isBigNumber(condition)) {\n        return !condition.isZero();\n      }\n\n      if (isComplex(condition)) {\n        return !!(condition.re || condition.im);\n      }\n\n      if (isUnit(condition)) {\n        return !!condition.value;\n      }\n    }\n\n    if (condition === null || condition === undefined) {\n      return false;\n    }\n\n    throw new TypeError('Unsupported type of condition \"' + typeOf(condition) + '\"');\n  }\n\n  return ConditionalNode;\n}, {\n  isClass: true,\n  isNode: true\n});","\"use strict\";\n\n// Map the characters to escape to their escaped values. The list is derived\n// from http://www.cespedes.org/blog/85/how-to-escape-latex-special-characters\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar defaultEscapes = {\n  \"{\": \"\\\\{\",\n  \"}\": \"\\\\}\",\n  \"\\\\\": \"\\\\textbackslash{}\",\n  \"#\": \"\\\\#\",\n  $: \"\\\\$\",\n  \"%\": \"\\\\%\",\n  \"&\": \"\\\\&\",\n  \"^\": \"\\\\textasciicircum{}\",\n  _: \"\\\\_\",\n  \"~\": \"\\\\textasciitilde{}\"\n};\nvar formatEscapes = {\n  \"\\u2013\": \"\\\\--\",\n  \"\\u2014\": \"\\\\---\",\n  \" \": \"~\",\n  \"\\t\": \"\\\\qquad{}\",\n  \"\\r\\n\": \"\\\\newline{}\",\n  \"\\n\": \"\\\\newline{}\"\n};\n\nvar defaultEscapeMapFn = function defaultEscapeMapFn(defaultEscapes, formatEscapes) {\n  return _extends({}, defaultEscapes, formatEscapes);\n};\n\n/**\n * Escape a string to be used in LaTeX documents.\n * @param {string} str the string to be escaped.\n * @param {boolean} params.preserveFormatting whether formatting escapes should\n *  be performed (default: false).\n * @param {function} params.escapeMapFn the function to modify the escape maps.\n * @return {string} the escaped string, ready to be used in LaTeX.\n */\nmodule.exports = function (str) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$preserveFormatti = _ref.preserveFormatting,\n      preserveFormatting = _ref$preserveFormatti === undefined ? false : _ref$preserveFormatti,\n      _ref$escapeMapFn = _ref.escapeMapFn,\n      escapeMapFn = _ref$escapeMapFn === undefined ? defaultEscapeMapFn : _ref$escapeMapFn;\n\n  var runningStr = String(str);\n  var result = \"\";\n\n  var escapes = escapeMapFn(_extends({}, defaultEscapes), preserveFormatting ? _extends({}, formatEscapes) : {});\n  var escapeKeys = Object.keys(escapes); // as it is reused later on\n\n  // Algorithm: Go through the string character by character, if it matches\n  // with one of the special characters then we'll replace it with the escaped\n  // version.\n\n  var _loop = function _loop() {\n    var specialCharFound = false;\n    escapeKeys.forEach(function (key, index) {\n      if (specialCharFound) {\n        return;\n      }\n      if (runningStr.length >= key.length && runningStr.slice(0, key.length) === key) {\n        result += escapes[escapeKeys[index]];\n        runningStr = runningStr.slice(key.length, runningStr.length);\n        specialCharFound = true;\n      }\n    });\n    if (!specialCharFound) {\n      result += runningStr.slice(0, 1);\n      runningStr = runningStr.slice(1, runningStr.length);\n    }\n  };\n\n  while (runningStr) {\n    _loop();\n  }\n  return result;\n};","/* eslint no-template-curly-in-string: \"off\" */\nimport escapeLatexLib from 'escape-latex';\nimport { hasOwnProperty } from './object.js';\nexport var latexSymbols = {\n  // GREEK LETTERS\n  Alpha: 'A',\n  alpha: '\\\\alpha',\n  Beta: 'B',\n  beta: '\\\\beta',\n  Gamma: '\\\\Gamma',\n  gamma: '\\\\gamma',\n  Delta: '\\\\Delta',\n  delta: '\\\\delta',\n  Epsilon: 'E',\n  epsilon: '\\\\epsilon',\n  varepsilon: '\\\\varepsilon',\n  Zeta: 'Z',\n  zeta: '\\\\zeta',\n  Eta: 'H',\n  eta: '\\\\eta',\n  Theta: '\\\\Theta',\n  theta: '\\\\theta',\n  vartheta: '\\\\vartheta',\n  Iota: 'I',\n  iota: '\\\\iota',\n  Kappa: 'K',\n  kappa: '\\\\kappa',\n  varkappa: '\\\\varkappa',\n  Lambda: '\\\\Lambda',\n  lambda: '\\\\lambda',\n  Mu: 'M',\n  mu: '\\\\mu',\n  Nu: 'N',\n  nu: '\\\\nu',\n  Xi: '\\\\Xi',\n  xi: '\\\\xi',\n  Omicron: 'O',\n  omicron: 'o',\n  Pi: '\\\\Pi',\n  pi: '\\\\pi',\n  varpi: '\\\\varpi',\n  Rho: 'P',\n  rho: '\\\\rho',\n  varrho: '\\\\varrho',\n  Sigma: '\\\\Sigma',\n  sigma: '\\\\sigma',\n  varsigma: '\\\\varsigma',\n  Tau: 'T',\n  tau: '\\\\tau',\n  Upsilon: '\\\\Upsilon',\n  upsilon: '\\\\upsilon',\n  Phi: '\\\\Phi',\n  phi: '\\\\phi',\n  varphi: '\\\\varphi',\n  Chi: 'X',\n  chi: '\\\\chi',\n  Psi: '\\\\Psi',\n  psi: '\\\\psi',\n  Omega: '\\\\Omega',\n  omega: '\\\\omega',\n  // logic\n  true: '\\\\mathrm{True}',\n  false: '\\\\mathrm{False}',\n  // other\n  i: 'i',\n  // TODO use \\i ??\n  inf: '\\\\infty',\n  Inf: '\\\\infty',\n  infinity: '\\\\infty',\n  Infinity: '\\\\infty',\n  oo: '\\\\infty',\n  lim: '\\\\lim',\n  undefined: '\\\\mathbf{?}'\n};\nexport var latexOperators = {\n  transpose: '^\\\\top',\n  ctranspose: '^H',\n  factorial: '!',\n  pow: '^',\n  dotPow: '.^\\\\wedge',\n  // TODO find ideal solution\n  unaryPlus: '+',\n  unaryMinus: '-',\n  bitNot: '\\\\~',\n  // TODO find ideal solution\n  not: '\\\\neg',\n  multiply: '\\\\cdot',\n  divide: '\\\\frac',\n  // TODO how to handle that properly?\n  dotMultiply: '.\\\\cdot',\n  // TODO find ideal solution\n  dotDivide: '.:',\n  // TODO find ideal solution\n  mod: '\\\\mod',\n  add: '+',\n  subtract: '-',\n  to: '\\\\rightarrow',\n  leftShift: '<<',\n  rightArithShift: '>>',\n  rightLogShift: '>>>',\n  equal: '=',\n  unequal: '\\\\neq',\n  smaller: '<',\n  larger: '>',\n  smallerEq: '\\\\leq',\n  largerEq: '\\\\geq',\n  bitAnd: '\\\\&',\n  bitXor: '\\\\underline{|}',\n  bitOr: '|',\n  and: '\\\\wedge',\n  xor: '\\\\veebar',\n  or: '\\\\vee'\n};\nexport var latexFunctions = {\n  // arithmetic\n  abs: {\n    1: '\\\\left|${args[0]}\\\\right|'\n  },\n  add: {\n    2: \"\\\\left(${args[0]}\".concat(latexOperators.add, \"${args[1]}\\\\right)\")\n  },\n  cbrt: {\n    1: '\\\\sqrt[3]{${args[0]}}'\n  },\n  ceil: {\n    1: '\\\\left\\\\lceil${args[0]}\\\\right\\\\rceil'\n  },\n  cube: {\n    1: '\\\\left(${args[0]}\\\\right)^3'\n  },\n  divide: {\n    2: '\\\\frac{${args[0]}}{${args[1]}}'\n  },\n  dotDivide: {\n    2: \"\\\\left(${args[0]}\".concat(latexOperators.dotDivide, \"${args[1]}\\\\right)\")\n  },\n  dotMultiply: {\n    2: \"\\\\left(${args[0]}\".concat(latexOperators.dotMultiply, \"${args[1]}\\\\right)\")\n  },\n  dotPow: {\n    2: \"\\\\left(${args[0]}\".concat(latexOperators.dotPow, \"${args[1]}\\\\right)\")\n  },\n  exp: {\n    1: '\\\\exp\\\\left(${args[0]}\\\\right)'\n  },\n  expm1: \"\\\\left(e\".concat(latexOperators.pow, \"{${args[0]}}-1\\\\right)\"),\n  fix: {\n    1: '\\\\mathrm{${name}}\\\\left(${args[0]}\\\\right)'\n  },\n  floor: {\n    1: '\\\\left\\\\lfloor${args[0]}\\\\right\\\\rfloor'\n  },\n  gcd: '\\\\gcd\\\\left(${args}\\\\right)',\n  hypot: '\\\\hypot\\\\left(${args}\\\\right)',\n  log: {\n    1: '\\\\ln\\\\left(${args[0]}\\\\right)',\n    2: '\\\\log_{${args[1]}}\\\\left(${args[0]}\\\\right)'\n  },\n  log10: {\n    1: '\\\\log_{10}\\\\left(${args[0]}\\\\right)'\n  },\n  log1p: {\n    1: '\\\\ln\\\\left(${args[0]}+1\\\\right)',\n    2: '\\\\log_{${args[1]}}\\\\left(${args[0]}+1\\\\right)'\n  },\n  log2: '\\\\log_{2}\\\\left(${args[0]}\\\\right)',\n  mod: {\n    2: \"\\\\left(${args[0]}\".concat(latexOperators.mod, \"${args[1]}\\\\right)\")\n  },\n  multiply: {\n    2: \"\\\\left(${args[0]}\".concat(latexOperators.multiply, \"${args[1]}\\\\right)\")\n  },\n  norm: {\n    1: '\\\\left\\\\|${args[0]}\\\\right\\\\|',\n    2: undefined // use default template\n\n  },\n  nthRoot: {\n    2: '\\\\sqrt[${args[1]}]{${args[0]}}'\n  },\n  nthRoots: {\n    2: '\\\\{y : $y^{args[1]} = {${args[0]}}\\\\}'\n  },\n  pow: {\n    2: \"\\\\left(${args[0]}\\\\right)\".concat(latexOperators.pow, \"{${args[1]}}\")\n  },\n  round: {\n    1: '\\\\left\\\\lfloor${args[0]}\\\\right\\\\rceil',\n    2: undefined // use default template\n\n  },\n  sign: {\n    1: '\\\\mathrm{${name}}\\\\left(${args[0]}\\\\right)'\n  },\n  sqrt: {\n    1: '\\\\sqrt{${args[0]}}'\n  },\n  square: {\n    1: '\\\\left(${args[0]}\\\\right)^2'\n  },\n  subtract: {\n    2: \"\\\\left(${args[0]}\".concat(latexOperators.subtract, \"${args[1]}\\\\right)\")\n  },\n  unaryMinus: {\n    1: \"\".concat(latexOperators.unaryMinus, \"\\\\left(${args[0]}\\\\right)\")\n  },\n  unaryPlus: {\n    1: \"\".concat(latexOperators.unaryPlus, \"\\\\left(${args[0]}\\\\right)\")\n  },\n  // bitwise\n  bitAnd: {\n    2: \"\\\\left(${args[0]}\".concat(latexOperators.bitAnd, \"${args[1]}\\\\right)\")\n  },\n  bitNot: {\n    1: latexOperators.bitNot + '\\\\left(${args[0]}\\\\right)'\n  },\n  bitOr: {\n    2: \"\\\\left(${args[0]}\".concat(latexOperators.bitOr, \"${args[1]}\\\\right)\")\n  },\n  bitXor: {\n    2: \"\\\\left(${args[0]}\".concat(latexOperators.bitXor, \"${args[1]}\\\\right)\")\n  },\n  leftShift: {\n    2: \"\\\\left(${args[0]}\".concat(latexOperators.leftShift, \"${args[1]}\\\\right)\")\n  },\n  rightArithShift: {\n    2: \"\\\\left(${args[0]}\".concat(latexOperators.rightArithShift, \"${args[1]}\\\\right)\")\n  },\n  rightLogShift: {\n    2: \"\\\\left(${args[0]}\".concat(latexOperators.rightLogShift, \"${args[1]}\\\\right)\")\n  },\n  // combinatorics\n  bellNumbers: {\n    1: '\\\\mathrm{B}_{${args[0]}}'\n  },\n  catalan: {\n    1: '\\\\mathrm{C}_{${args[0]}}'\n  },\n  stirlingS2: {\n    2: '\\\\mathrm{S}\\\\left(${args}\\\\right)'\n  },\n  // complex\n  arg: {\n    1: '\\\\arg\\\\left(${args[0]}\\\\right)'\n  },\n  conj: {\n    1: '\\\\left(${args[0]}\\\\right)^*'\n  },\n  im: {\n    1: '\\\\Im\\\\left\\\\lbrace${args[0]}\\\\right\\\\rbrace'\n  },\n  re: {\n    1: '\\\\Re\\\\left\\\\lbrace${args[0]}\\\\right\\\\rbrace'\n  },\n  // logical\n  and: {\n    2: \"\\\\left(${args[0]}\".concat(latexOperators.and, \"${args[1]}\\\\right)\")\n  },\n  not: {\n    1: latexOperators.not + '\\\\left(${args[0]}\\\\right)'\n  },\n  or: {\n    2: \"\\\\left(${args[0]}\".concat(latexOperators.or, \"${args[1]}\\\\right)\")\n  },\n  xor: {\n    2: \"\\\\left(${args[0]}\".concat(latexOperators.xor, \"${args[1]}\\\\right)\")\n  },\n  // matrix\n  cross: {\n    2: '\\\\left(${args[0]}\\\\right)\\\\times\\\\left(${args[1]}\\\\right)'\n  },\n  ctranspose: {\n    1: \"\\\\left(${args[0]}\\\\right)\".concat(latexOperators.ctranspose)\n  },\n  det: {\n    1: '\\\\det\\\\left(${args[0]}\\\\right)'\n  },\n  dot: {\n    2: '\\\\left(${args[0]}\\\\cdot${args[1]}\\\\right)'\n  },\n  expm: {\n    1: '\\\\exp\\\\left(${args[0]}\\\\right)'\n  },\n  inv: {\n    1: '\\\\left(${args[0]}\\\\right)^{-1}'\n  },\n  sqrtm: {\n    1: \"{${args[0]}}\".concat(latexOperators.pow, \"{\\\\frac{1}{2}}\")\n  },\n  trace: {\n    1: '\\\\mathrm{tr}\\\\left(${args[0]}\\\\right)'\n  },\n  transpose: {\n    1: \"\\\\left(${args[0]}\\\\right)\".concat(latexOperators.transpose)\n  },\n  // probability\n  combinations: {\n    2: '\\\\binom{${args[0]}}{${args[1]}}'\n  },\n  combinationsWithRep: {\n    2: '\\\\left(\\\\!\\\\!{\\\\binom{${args[0]}}{${args[1]}}}\\\\!\\\\!\\\\right)'\n  },\n  factorial: {\n    1: \"\\\\left(${args[0]}\\\\right)\".concat(latexOperators.factorial)\n  },\n  gamma: {\n    1: '\\\\Gamma\\\\left(${args[0]}\\\\right)'\n  },\n  // relational\n  equal: {\n    2: \"\\\\left(${args[0]}\".concat(latexOperators.equal, \"${args[1]}\\\\right)\")\n  },\n  larger: {\n    2: \"\\\\left(${args[0]}\".concat(latexOperators.larger, \"${args[1]}\\\\right)\")\n  },\n  largerEq: {\n    2: \"\\\\left(${args[0]}\".concat(latexOperators.largerEq, \"${args[1]}\\\\right)\")\n  },\n  smaller: {\n    2: \"\\\\left(${args[0]}\".concat(latexOperators.smaller, \"${args[1]}\\\\right)\")\n  },\n  smallerEq: {\n    2: \"\\\\left(${args[0]}\".concat(latexOperators.smallerEq, \"${args[1]}\\\\right)\")\n  },\n  unequal: {\n    2: \"\\\\left(${args[0]}\".concat(latexOperators.unequal, \"${args[1]}\\\\right)\")\n  },\n  // special\n  erf: {\n    1: 'erf\\\\left(${args[0]}\\\\right)'\n  },\n  // statistics\n  max: '\\\\max\\\\left(${args}\\\\right)',\n  min: '\\\\min\\\\left(${args}\\\\right)',\n  variance: '\\\\mathrm{Var}\\\\left(${args}\\\\right)',\n  // trigonometry\n  acos: {\n    1: '\\\\cos^{-1}\\\\left(${args[0]}\\\\right)'\n  },\n  acosh: {\n    1: '\\\\cosh^{-1}\\\\left(${args[0]}\\\\right)'\n  },\n  acot: {\n    1: '\\\\cot^{-1}\\\\left(${args[0]}\\\\right)'\n  },\n  acoth: {\n    1: '\\\\coth^{-1}\\\\left(${args[0]}\\\\right)'\n  },\n  acsc: {\n    1: '\\\\csc^{-1}\\\\left(${args[0]}\\\\right)'\n  },\n  acsch: {\n    1: '\\\\mathrm{csch}^{-1}\\\\left(${args[0]}\\\\right)'\n  },\n  asec: {\n    1: '\\\\sec^{-1}\\\\left(${args[0]}\\\\right)'\n  },\n  asech: {\n    1: '\\\\mathrm{sech}^{-1}\\\\left(${args[0]}\\\\right)'\n  },\n  asin: {\n    1: '\\\\sin^{-1}\\\\left(${args[0]}\\\\right)'\n  },\n  asinh: {\n    1: '\\\\sinh^{-1}\\\\left(${args[0]}\\\\right)'\n  },\n  atan: {\n    1: '\\\\tan^{-1}\\\\left(${args[0]}\\\\right)'\n  },\n  atan2: {\n    2: '\\\\mathrm{atan2}\\\\left(${args}\\\\right)'\n  },\n  atanh: {\n    1: '\\\\tanh^{-1}\\\\left(${args[0]}\\\\right)'\n  },\n  cos: {\n    1: '\\\\cos\\\\left(${args[0]}\\\\right)'\n  },\n  cosh: {\n    1: '\\\\cosh\\\\left(${args[0]}\\\\right)'\n  },\n  cot: {\n    1: '\\\\cot\\\\left(${args[0]}\\\\right)'\n  },\n  coth: {\n    1: '\\\\coth\\\\left(${args[0]}\\\\right)'\n  },\n  csc: {\n    1: '\\\\csc\\\\left(${args[0]}\\\\right)'\n  },\n  csch: {\n    1: '\\\\mathrm{csch}\\\\left(${args[0]}\\\\right)'\n  },\n  sec: {\n    1: '\\\\sec\\\\left(${args[0]}\\\\right)'\n  },\n  sech: {\n    1: '\\\\mathrm{sech}\\\\left(${args[0]}\\\\right)'\n  },\n  sin: {\n    1: '\\\\sin\\\\left(${args[0]}\\\\right)'\n  },\n  sinh: {\n    1: '\\\\sinh\\\\left(${args[0]}\\\\right)'\n  },\n  tan: {\n    1: '\\\\tan\\\\left(${args[0]}\\\\right)'\n  },\n  tanh: {\n    1: '\\\\tanh\\\\left(${args[0]}\\\\right)'\n  },\n  // unit\n  to: {\n    2: \"\\\\left(${args[0]}\".concat(latexOperators.to, \"${args[1]}\\\\right)\")\n  },\n  // utils\n  numeric: function numeric(node, options) {\n    // Not sure if this is strictly right but should work correctly for the vast majority of use cases.\n    return node.args[0].toTex();\n  },\n  // type\n  number: {\n    0: '0',\n    1: '\\\\left(${args[0]}\\\\right)',\n    2: '\\\\left(\\\\left(${args[0]}\\\\right)${args[1]}\\\\right)'\n  },\n  string: {\n    0: '\\\\mathtt{\"\"}',\n    1: '\\\\mathrm{string}\\\\left(${args[0]}\\\\right)'\n  },\n  bignumber: {\n    0: '0',\n    1: '\\\\left(${args[0]}\\\\right)'\n  },\n  complex: {\n    0: '0',\n    1: '\\\\left(${args[0]}\\\\right)',\n    2: \"\\\\left(\\\\left(${args[0]}\\\\right)+\".concat(latexSymbols.i, \"\\\\cdot\\\\left(${args[1]}\\\\right)\\\\right)\")\n  },\n  matrix: {\n    0: '\\\\begin{bmatrix}\\\\end{bmatrix}',\n    1: '\\\\left(${args[0]}\\\\right)',\n    2: '\\\\left(${args[0]}\\\\right)'\n  },\n  sparse: {\n    0: '\\\\begin{bsparse}\\\\end{bsparse}',\n    1: '\\\\left(${args[0]}\\\\right)'\n  },\n  unit: {\n    1: '\\\\left(${args[0]}\\\\right)',\n    2: '\\\\left(\\\\left(${args[0]}\\\\right)${args[1]}\\\\right)'\n  }\n};\nexport var defaultTemplate = '\\\\mathrm{${name}}\\\\left(${args}\\\\right)';\nvar latexUnits = {\n  deg: '^\\\\circ'\n};\nexport function escapeLatex(string) {\n  return escapeLatexLib(string, {\n    preserveFormatting: true\n  });\n} // @param {string} name\n// @param {boolean} isUnit\n\nexport function toSymbol(name, isUnit) {\n  isUnit = typeof isUnit === 'undefined' ? false : isUnit;\n\n  if (isUnit) {\n    if (hasOwnProperty(latexUnits, name)) {\n      return latexUnits[name];\n    }\n\n    return '\\\\mathrm{' + escapeLatex(name) + '}';\n  }\n\n  if (hasOwnProperty(latexSymbols, name)) {\n    return latexSymbols[name];\n  }\n\n  return escapeLatex(name);\n}","import { format } from '../../utils/string.js';\nimport { typeOf } from '../../utils/is.js';\nimport { escapeLatex } from '../../utils/latex.js';\nimport { factory } from '../../utils/factory.js';\nvar name = 'ConstantNode';\nvar dependencies = ['Node'];\nexport var createConstantNode = /* #__PURE__ */factory(name, dependencies, (_ref) => {\n  var {\n    Node\n  } = _ref;\n\n  /**\n   * A ConstantNode holds a constant value like a number or string.\n   *\n   * Usage:\n   *\n   *     new ConstantNode(2.3)\n   *     new ConstantNode('hello')\n   *\n   * @param {*} value    Value can be any type (number, BigNumber, string, ...)\n   * @constructor ConstantNode\n   * @extends {Node}\n   */\n  function ConstantNode(value) {\n    if (!(this instanceof ConstantNode)) {\n      throw new SyntaxError('Constructor must be called with the new operator');\n    }\n\n    this.value = value;\n  }\n\n  ConstantNode.prototype = new Node();\n  ConstantNode.prototype.type = 'ConstantNode';\n  ConstantNode.prototype.isConstantNode = true;\n  /**\n   * Compile a node into a JavaScript function.\n   * This basically pre-calculates as much as possible and only leaves open\n   * calculations which depend on a dynamic scope with variables.\n   * @param {Object} math     Math.js namespace with functions and constants.\n   * @param {Object} argNames An object with argument names as key and `true`\n   *                          as value. Used in the SymbolNode to optimize\n   *                          for arguments from user assigned functions\n   *                          (see FunctionAssignmentNode) or special symbols\n   *                          like `end` (see IndexNode).\n   * @return {function} Returns a function which can be called like:\n   *                        evalNode(scope: Object, args: Object, context: *)\n   */\n\n  ConstantNode.prototype._compile = function (math, argNames) {\n    var value = this.value;\n    return function evalConstantNode() {\n      return value;\n    };\n  };\n  /**\n   * Execute a callback for each of the child nodes of this node\n   * @param {function(child: Node, path: string, parent: Node)} callback\n   */\n\n\n  ConstantNode.prototype.forEach = function (callback) {// nothing to do, we don't have childs\n  };\n  /**\n   * Create a new ConstantNode having it's childs be the results of calling\n   * the provided callback function for each of the childs of the original node.\n   * @param {function(child: Node, path: string, parent: Node) : Node} callback\n   * @returns {ConstantNode} Returns a clone of the node\n   */\n\n\n  ConstantNode.prototype.map = function (callback) {\n    return this.clone();\n  };\n  /**\n   * Create a clone of this node, a shallow copy\n   * @return {ConstantNode}\n   */\n\n\n  ConstantNode.prototype.clone = function () {\n    return new ConstantNode(this.value);\n  };\n  /**\n   * Get string representation\n   * @param {Object} options\n   * @return {string} str\n   */\n\n\n  ConstantNode.prototype._toString = function (options) {\n    return format(this.value, options);\n  };\n  /**\n   * Get HTML representation\n   * @param {Object} options\n   * @return {string} str\n   */\n\n\n  ConstantNode.prototype.toHTML = function (options) {\n    var value = this._toString(options);\n\n    switch (typeOf(this.value)) {\n      case 'number':\n      case 'BigNumber':\n      case 'Fraction':\n        return '<span class=\"math-number\">' + value + '</span>';\n\n      case 'string':\n        return '<span class=\"math-string\">' + value + '</span>';\n\n      case 'boolean':\n        return '<span class=\"math-boolean\">' + value + '</span>';\n\n      case 'null':\n        return '<span class=\"math-null-symbol\">' + value + '</span>';\n\n      case 'undefined':\n        return '<span class=\"math-undefined\">' + value + '</span>';\n\n      default:\n        return '<span class=\"math-symbol\">' + value + '</span>';\n    }\n  };\n  /**\n   * Get a JSON representation of the node\n   * @returns {Object}\n   */\n\n\n  ConstantNode.prototype.toJSON = function () {\n    return {\n      mathjs: 'ConstantNode',\n      value: this.value\n    };\n  };\n  /**\n   * Instantiate a ConstantNode from its JSON representation\n   * @param {Object} json  An object structured like\n   *                       `{\"mathjs\": \"SymbolNode\", value: 2.3}`,\n   *                       where mathjs is optional\n   * @returns {ConstantNode}\n   */\n\n\n  ConstantNode.fromJSON = function (json) {\n    return new ConstantNode(json.value);\n  };\n  /**\n   * Get LaTeX representation\n   * @param {Object} options\n   * @return {string} str\n   */\n\n\n  ConstantNode.prototype._toTex = function (options) {\n    var value = this._toString(options);\n\n    switch (typeOf(this.value)) {\n      case 'string':\n        return '\\\\mathtt{' + escapeLatex(value) + '}';\n\n      case 'number':\n      case 'BigNumber':\n        {\n          if (!isFinite(this.value)) {\n            return this.value.valueOf() < 0 ? '-\\\\infty' : '\\\\infty';\n          }\n\n          var index = value.toLowerCase().indexOf('e');\n\n          if (index !== -1) {\n            return value.substring(0, index) + '\\\\cdot10^{' + value.substring(index + 1) + '}';\n          }\n        }\n        return value;\n\n      case 'Fraction':\n        return this.value.toLatex();\n\n      default:\n        return value;\n    }\n  };\n\n  return ConstantNode;\n}, {\n  isClass: true,\n  isNode: true\n});","import { isNode } from '../../utils/is.js';\nimport { keywords } from '../keywords.js';\nimport { escape } from '../../utils/string.js';\nimport { forEach, join } from '../../utils/array.js';\nimport { toSymbol } from '../../utils/latex.js';\nimport { getPrecedence } from '../operators.js';\nimport { setSafeProperty } from '../../utils/customs.js';\nimport { factory } from '../../utils/factory.js';\nvar name = 'FunctionAssignmentNode';\nvar dependencies = ['typed', 'Node'];\nexport var createFunctionAssignmentNode = /* #__PURE__ */factory(name, dependencies, (_ref) => {\n  var {\n    typed,\n    Node\n  } = _ref;\n\n  /**\n   * @constructor FunctionAssignmentNode\n   * @extends {Node}\n   * Function assignment\n   *\n   * @param {string} name           Function name\n   * @param {string[] | Array.<{name: string, type: string}>} params\n   *                                Array with function parameter names, or an\n   *                                array with objects containing the name\n   *                                and type of the parameter\n   * @param {Node} expr             The function expression\n   */\n  function FunctionAssignmentNode(name, params, expr) {\n    if (!(this instanceof FunctionAssignmentNode)) {\n      throw new SyntaxError('Constructor must be called with the new operator');\n    } // validate input\n\n\n    if (typeof name !== 'string') throw new TypeError('String expected for parameter \"name\"');\n    if (!Array.isArray(params)) throw new TypeError('Array containing strings or objects expected for parameter \"params\"');\n    if (!isNode(expr)) throw new TypeError('Node expected for parameter \"expr\"');\n    if (name in keywords) throw new Error('Illegal function name, \"' + name + '\" is a reserved keyword');\n    this.name = name;\n    this.params = params.map(function (param) {\n      return param && param.name || param;\n    });\n    this.types = params.map(function (param) {\n      return param && param.type || 'any';\n    });\n    this.expr = expr;\n  }\n\n  FunctionAssignmentNode.prototype = new Node();\n  FunctionAssignmentNode.prototype.type = 'FunctionAssignmentNode';\n  FunctionAssignmentNode.prototype.isFunctionAssignmentNode = true;\n  /**\n   * Compile a node into a JavaScript function.\n   * This basically pre-calculates as much as possible and only leaves open\n   * calculations which depend on a dynamic scope with variables.\n   * @param {Object} math     Math.js namespace with functions and constants.\n   * @param {Object} argNames An object with argument names as key and `true`\n   *                          as value. Used in the SymbolNode to optimize\n   *                          for arguments from user assigned functions\n   *                          (see FunctionAssignmentNode) or special symbols\n   *                          like `end` (see IndexNode).\n   * @return {function} Returns a function which can be called like:\n   *                        evalNode(scope: Object, args: Object, context: *)\n   */\n\n  FunctionAssignmentNode.prototype._compile = function (math, argNames) {\n    var childArgNames = Object.create(argNames);\n    forEach(this.params, function (param) {\n      childArgNames[param] = true;\n    }); // compile the function expression with the child args\n\n    var evalExpr = this.expr._compile(math, childArgNames);\n\n    var name = this.name;\n    var params = this.params;\n    var signature = join(this.types, ',');\n    var syntax = name + '(' + join(this.params, ', ') + ')';\n    return function evalFunctionAssignmentNode(scope, args, context) {\n      var signatures = {};\n\n      signatures[signature] = function () {\n        var childArgs = Object.create(args);\n\n        for (var i = 0; i < params.length; i++) {\n          childArgs[params[i]] = arguments[i];\n        }\n\n        return evalExpr(scope, childArgs, context);\n      };\n\n      var fn = typed(name, signatures);\n      fn.syntax = syntax;\n      setSafeProperty(scope, name, fn);\n      return fn;\n    };\n  };\n  /**\n   * Execute a callback for each of the child nodes of this node\n   * @param {function(child: Node, path: string, parent: Node)} callback\n   */\n\n\n  FunctionAssignmentNode.prototype.forEach = function (callback) {\n    callback(this.expr, 'expr', this);\n  };\n  /**\n   * Create a new FunctionAssignmentNode having it's childs be the results of calling\n   * the provided callback function for each of the childs of the original node.\n   * @param {function(child: Node, path: string, parent: Node): Node} callback\n   * @returns {FunctionAssignmentNode} Returns a transformed copy of the node\n   */\n\n\n  FunctionAssignmentNode.prototype.map = function (callback) {\n    var expr = this._ifNode(callback(this.expr, 'expr', this));\n\n    return new FunctionAssignmentNode(this.name, this.params.slice(0), expr);\n  };\n  /**\n   * Create a clone of this node, a shallow copy\n   * @return {FunctionAssignmentNode}\n   */\n\n\n  FunctionAssignmentNode.prototype.clone = function () {\n    return new FunctionAssignmentNode(this.name, this.params.slice(0), this.expr);\n  };\n  /**\n   * Is parenthesis needed?\n   * @param {Node} node\n   * @param {Object} parenthesis\n   * @private\n   */\n\n\n  function needParenthesis(node, parenthesis) {\n    var precedence = getPrecedence(node, parenthesis);\n    var exprPrecedence = getPrecedence(node.expr, parenthesis);\n    return parenthesis === 'all' || exprPrecedence !== null && exprPrecedence <= precedence;\n  }\n  /**\n   * get string representation\n   * @param {Object} options\n   * @return {string} str\n   */\n\n\n  FunctionAssignmentNode.prototype._toString = function (options) {\n    var parenthesis = options && options.parenthesis ? options.parenthesis : 'keep';\n    var expr = this.expr.toString(options);\n\n    if (needParenthesis(this, parenthesis)) {\n      expr = '(' + expr + ')';\n    }\n\n    return this.name + '(' + this.params.join(', ') + ') = ' + expr;\n  };\n  /**\n   * Get a JSON representation of the node\n   * @returns {Object}\n   */\n\n\n  FunctionAssignmentNode.prototype.toJSON = function () {\n    var types = this.types;\n    return {\n      mathjs: 'FunctionAssignmentNode',\n      name: this.name,\n      params: this.params.map(function (param, index) {\n        return {\n          name: param,\n          type: types[index]\n        };\n      }),\n      expr: this.expr\n    };\n  };\n  /**\n   * Instantiate an FunctionAssignmentNode from its JSON representation\n   * @param {Object} json  An object structured like\n   *                       `{\"mathjs\": \"FunctionAssignmentNode\", name: ..., params: ..., expr: ...}`,\n   *                       where mathjs is optional\n   * @returns {FunctionAssignmentNode}\n   */\n\n\n  FunctionAssignmentNode.fromJSON = function (json) {\n    return new FunctionAssignmentNode(json.name, json.params, json.expr);\n  };\n  /**\n   * get HTML representation\n   * @param {Object} options\n   * @return {string} str\n   */\n\n\n  FunctionAssignmentNode.prototype.toHTML = function (options) {\n    var parenthesis = options && options.parenthesis ? options.parenthesis : 'keep';\n    var params = [];\n\n    for (var i = 0; i < this.params.length; i++) {\n      params.push('<span class=\"math-symbol math-parameter\">' + escape(this.params[i]) + '</span>');\n    }\n\n    var expr = this.expr.toHTML(options);\n\n    if (needParenthesis(this, parenthesis)) {\n      expr = '<span class=\"math-parenthesis math-round-parenthesis\">(</span>' + expr + '<span class=\"math-parenthesis math-round-parenthesis\">)</span>';\n    }\n\n    return '<span class=\"math-function\">' + escape(this.name) + '</span>' + '<span class=\"math-parenthesis math-round-parenthesis\">(</span>' + params.join('<span class=\"math-separator\">,</span>') + '<span class=\"math-parenthesis math-round-parenthesis\">)</span><span class=\"math-operator math-assignment-operator math-variable-assignment-operator math-binary-operator\">=</span>' + expr;\n  };\n  /**\n   * get LaTeX representation\n   * @param {Object} options\n   * @return {string} str\n   */\n\n\n  FunctionAssignmentNode.prototype._toTex = function (options) {\n    var parenthesis = options && options.parenthesis ? options.parenthesis : 'keep';\n    var expr = this.expr.toTex(options);\n\n    if (needParenthesis(this, parenthesis)) {\n      expr = \"\\\\left(\".concat(expr, \"\\\\right)\");\n    }\n\n    return '\\\\mathrm{' + this.name + '}\\\\left(' + this.params.map(toSymbol).join(',') + '\\\\right):=' + expr;\n  };\n\n  return FunctionAssignmentNode;\n}, {\n  isClass: true,\n  isNode: true\n});","import { isBigNumber, isConstantNode, isNode, isRangeNode, isSymbolNode } from '../../utils/is.js';\nimport { map } from '../../utils/array.js';\nimport { escape } from '../../utils/string.js';\nimport { factory } from '../../utils/factory.js';\nimport { getSafeProperty } from '../../utils/customs.js';\nvar name = 'IndexNode';\nvar dependencies = ['Range', 'Node', 'size'];\nexport var createIndexNode = /* #__PURE__ */factory(name, dependencies, (_ref) => {\n  var {\n    Range,\n    Node,\n    size\n  } = _ref;\n\n  /**\n   * @constructor IndexNode\n   * @extends Node\n   *\n   * Describes a subset of a matrix or an object property.\n   * Cannot be used on its own, needs to be used within an AccessorNode or\n   * AssignmentNode.\n   *\n   * @param {Node[]} dimensions\n   * @param {boolean} [dotNotation=false]  Optional property describing whether\n   *                                       this index was written using dot\n   *                                       notation like `a.b`, or using bracket\n   *                                       notation like `a[\"b\"]` (default).\n   *                                       Used to stringify an IndexNode.\n   */\n  function IndexNode(dimensions, dotNotation) {\n    if (!(this instanceof IndexNode)) {\n      throw new SyntaxError('Constructor must be called with the new operator');\n    }\n\n    this.dimensions = dimensions;\n    this.dotNotation = dotNotation || false; // validate input\n\n    if (!Array.isArray(dimensions) || !dimensions.every(isNode)) {\n      throw new TypeError('Array containing Nodes expected for parameter \"dimensions\"');\n    }\n\n    if (this.dotNotation && !this.isObjectProperty()) {\n      throw new Error('dotNotation only applicable for object properties');\n    }\n  }\n\n  IndexNode.prototype = new Node();\n  IndexNode.prototype.type = 'IndexNode';\n  IndexNode.prototype.isIndexNode = true;\n  /**\n   * Compile a node into a JavaScript function.\n   * This basically pre-calculates as much as possible and only leaves open\n   * calculations which depend on a dynamic scope with variables.\n   * @param {Object} math     Math.js namespace with functions and constants.\n   * @param {Object} argNames An object with argument names as key and `true`\n   *                          as value. Used in the SymbolNode to optimize\n   *                          for arguments from user assigned functions\n   *                          (see FunctionAssignmentNode) or special symbols\n   *                          like `end` (see IndexNode).\n   * @return {function} Returns a function which can be called like:\n   *                        evalNode(scope: Object, args: Object, context: *)\n   */\n\n  IndexNode.prototype._compile = function (math, argNames) {\n    // TODO: implement support for bignumber (currently bignumbers are silently\n    //       reduced to numbers when changing the value to zero-based)\n    // TODO: Optimization: when the range values are ConstantNodes,\n    //       we can beforehand resolve the zero-based value\n    // optimization for a simple object property\n    var evalDimensions = map(this.dimensions, function (range, i) {\n      if (isRangeNode(range)) {\n        if (range.needsEnd()) {\n          // create a range containing end (like '4:end')\n          var childArgNames = Object.create(argNames);\n          childArgNames.end = true;\n\n          var evalStart = range.start._compile(math, childArgNames);\n\n          var evalEnd = range.end._compile(math, childArgNames);\n\n          var evalStep = range.step ? range.step._compile(math, childArgNames) : function () {\n            return 1;\n          };\n          return function evalDimension(scope, args, context) {\n            var s = size(context).valueOf();\n            var childArgs = Object.create(args);\n            childArgs.end = s[i];\n            return createRange(evalStart(scope, childArgs, context), evalEnd(scope, childArgs, context), evalStep(scope, childArgs, context));\n          };\n        } else {\n          // create range\n          var _evalStart = range.start._compile(math, argNames);\n\n          var _evalEnd = range.end._compile(math, argNames);\n\n          var _evalStep = range.step ? range.step._compile(math, argNames) : function () {\n            return 1;\n          };\n\n          return function evalDimension(scope, args, context) {\n            return createRange(_evalStart(scope, args, context), _evalEnd(scope, args, context), _evalStep(scope, args, context));\n          };\n        }\n      } else if (isSymbolNode(range) && range.name === 'end') {\n        // SymbolNode 'end'\n        var _childArgNames = Object.create(argNames);\n\n        _childArgNames.end = true;\n\n        var evalRange = range._compile(math, _childArgNames);\n\n        return function evalDimension(scope, args, context) {\n          var s = size(context).valueOf();\n          var childArgs = Object.create(args);\n          childArgs.end = s[i];\n          return evalRange(scope, childArgs, context);\n        };\n      } else {\n        // ConstantNode\n        var _evalRange = range._compile(math, argNames);\n\n        return function evalDimension(scope, args, context) {\n          return _evalRange(scope, args, context);\n        };\n      }\n    });\n    var index = getSafeProperty(math, 'index');\n    return function evalIndexNode(scope, args, context) {\n      var dimensions = map(evalDimensions, function (evalDimension) {\n        return evalDimension(scope, args, context);\n      });\n      return index(...dimensions);\n    };\n  };\n  /**\n   * Execute a callback for each of the child nodes of this node\n   * @param {function(child: Node, path: string, parent: Node)} callback\n   */\n\n\n  IndexNode.prototype.forEach = function (callback) {\n    for (var i = 0; i < this.dimensions.length; i++) {\n      callback(this.dimensions[i], 'dimensions[' + i + ']', this);\n    }\n  };\n  /**\n   * Create a new IndexNode having it's childs be the results of calling\n   * the provided callback function for each of the childs of the original node.\n   * @param {function(child: Node, path: string, parent: Node): Node} callback\n   * @returns {IndexNode} Returns a transformed copy of the node\n   */\n\n\n  IndexNode.prototype.map = function (callback) {\n    var dimensions = [];\n\n    for (var i = 0; i < this.dimensions.length; i++) {\n      dimensions[i] = this._ifNode(callback(this.dimensions[i], 'dimensions[' + i + ']', this));\n    }\n\n    return new IndexNode(dimensions, this.dotNotation);\n  };\n  /**\n   * Create a clone of this node, a shallow copy\n   * @return {IndexNode}\n   */\n\n\n  IndexNode.prototype.clone = function () {\n    return new IndexNode(this.dimensions.slice(0), this.dotNotation);\n  };\n  /**\n   * Test whether this IndexNode contains a single property name\n   * @return {boolean}\n   */\n\n\n  IndexNode.prototype.isObjectProperty = function () {\n    return this.dimensions.length === 1 && isConstantNode(this.dimensions[0]) && typeof this.dimensions[0].value === 'string';\n  };\n  /**\n   * Returns the property name if IndexNode contains a property.\n   * If not, returns null.\n   * @return {string | null}\n   */\n\n\n  IndexNode.prototype.getObjectProperty = function () {\n    return this.isObjectProperty() ? this.dimensions[0].value : null;\n  };\n  /**\n   * Get string representation\n   * @param {Object} options\n   * @return {string} str\n   */\n\n\n  IndexNode.prototype._toString = function (options) {\n    // format the parameters like \"[1, 0:5]\"\n    return this.dotNotation ? '.' + this.getObjectProperty() : '[' + this.dimensions.join(', ') + ']';\n  };\n  /**\n   * Get a JSON representation of the node\n   * @returns {Object}\n   */\n\n\n  IndexNode.prototype.toJSON = function () {\n    return {\n      mathjs: 'IndexNode',\n      dimensions: this.dimensions,\n      dotNotation: this.dotNotation\n    };\n  };\n  /**\n   * Instantiate an IndexNode from its JSON representation\n   * @param {Object} json  An object structured like\n   *                       `{\"mathjs\": \"IndexNode\", dimensions: [...], dotNotation: false}`,\n   *                       where mathjs is optional\n   * @returns {IndexNode}\n   */\n\n\n  IndexNode.fromJSON = function (json) {\n    return new IndexNode(json.dimensions, json.dotNotation);\n  };\n  /**\n   * Get HTML representation\n   * @param {Object} options\n   * @return {string} str\n   */\n\n\n  IndexNode.prototype.toHTML = function (options) {\n    // format the parameters like \"[1, 0:5]\"\n    var dimensions = [];\n\n    for (var i = 0; i < this.dimensions.length; i++) {\n      dimensions[i] = this.dimensions[i].toHTML();\n    }\n\n    if (this.dotNotation) {\n      return '<span class=\"math-operator math-accessor-operator\">.</span>' + '<span class=\"math-symbol math-property\">' + escape(this.getObjectProperty()) + '</span>';\n    } else {\n      return '<span class=\"math-parenthesis math-square-parenthesis\">[</span>' + dimensions.join('<span class=\"math-separator\">,</span>') + '<span class=\"math-parenthesis math-square-parenthesis\">]</span>';\n    }\n  };\n  /**\n   * Get LaTeX representation\n   * @param {Object} options\n   * @return {string} str\n   */\n\n\n  IndexNode.prototype._toTex = function (options) {\n    var dimensions = this.dimensions.map(function (range) {\n      return range.toTex(options);\n    });\n    return this.dotNotation ? '.' + this.getObjectProperty() + '' : '_{' + dimensions.join(',') + '}';\n  }; // helper function to create a Range from start, step and end\n\n\n  function createRange(start, end, step) {\n    return new Range(isBigNumber(start) ? start.toNumber() : start, isBigNumber(end) ? end.toNumber() : end, isBigNumber(step) ? step.toNumber() : step);\n  }\n\n  return IndexNode;\n}, {\n  isClass: true,\n  isNode: true\n});","import { isNode } from '../../utils/is.js';\nimport { escape, stringify } from '../../utils/string.js';\nimport { isSafeProperty } from '../../utils/customs.js';\nimport { hasOwnProperty } from '../../utils/object.js';\nimport { factory } from '../../utils/factory.js';\nvar name = 'ObjectNode';\nvar dependencies = ['Node'];\nexport var createObjectNode = /* #__PURE__ */factory(name, dependencies, (_ref) => {\n  var {\n    Node\n  } = _ref;\n\n  /**\n   * @constructor ObjectNode\n   * @extends {Node}\n   * Holds an object with keys/values\n   * @param {Object.<string, Node>} [properties]   object with key/value pairs\n   */\n  function ObjectNode(properties) {\n    if (!(this instanceof ObjectNode)) {\n      throw new SyntaxError('Constructor must be called with the new operator');\n    }\n\n    this.properties = properties || {}; // validate input\n\n    if (properties) {\n      if (!(typeof properties === 'object') || !Object.keys(properties).every(function (key) {\n        return isNode(properties[key]);\n      })) {\n        throw new TypeError('Object containing Nodes expected');\n      }\n    }\n  }\n\n  ObjectNode.prototype = new Node();\n  ObjectNode.prototype.type = 'ObjectNode';\n  ObjectNode.prototype.isObjectNode = true;\n  /**\n   * Compile a node into a JavaScript function.\n   * This basically pre-calculates as much as possible and only leaves open\n   * calculations which depend on a dynamic scope with variables.\n   * @param {Object} math     Math.js namespace with functions and constants.\n   * @param {Object} argNames An object with argument names as key and `true`\n   *                          as value. Used in the SymbolNode to optimize\n   *                          for arguments from user assigned functions\n   *                          (see FunctionAssignmentNode) or special symbols\n   *                          like `end` (see IndexNode).\n   * @return {function} Returns a function which can be called like:\n   *                        evalNode(scope: Object, args: Object, context: *)\n   */\n\n  ObjectNode.prototype._compile = function (math, argNames) {\n    var evalEntries = {};\n\n    for (var key in this.properties) {\n      if (hasOwnProperty(this.properties, key)) {\n        // we stringify/parse the key here to resolve unicode characters,\n        // so you cannot create a key like {\"co\\\\u006Estructor\": null}\n        var stringifiedKey = stringify(key);\n        var parsedKey = JSON.parse(stringifiedKey);\n\n        if (!isSafeProperty(this.properties, parsedKey)) {\n          throw new Error('No access to property \"' + parsedKey + '\"');\n        }\n\n        evalEntries[parsedKey] = this.properties[key]._compile(math, argNames);\n      }\n    }\n\n    return function evalObjectNode(scope, args, context) {\n      var obj = {};\n\n      for (var _key in evalEntries) {\n        if (hasOwnProperty(evalEntries, _key)) {\n          obj[_key] = evalEntries[_key](scope, args, context);\n        }\n      }\n\n      return obj;\n    };\n  };\n  /**\n   * Execute a callback for each of the child nodes of this node\n   * @param {function(child: Node, path: string, parent: Node)} callback\n   */\n\n\n  ObjectNode.prototype.forEach = function (callback) {\n    for (var key in this.properties) {\n      if (hasOwnProperty(this.properties, key)) {\n        callback(this.properties[key], 'properties[' + stringify(key) + ']', this);\n      }\n    }\n  };\n  /**\n   * Create a new ObjectNode having it's childs be the results of calling\n   * the provided callback function for each of the childs of the original node.\n   * @param {function(child: Node, path: string, parent: Node): Node} callback\n   * @returns {ObjectNode} Returns a transformed copy of the node\n   */\n\n\n  ObjectNode.prototype.map = function (callback) {\n    var properties = {};\n\n    for (var key in this.properties) {\n      if (hasOwnProperty(this.properties, key)) {\n        properties[key] = this._ifNode(callback(this.properties[key], 'properties[' + stringify(key) + ']', this));\n      }\n    }\n\n    return new ObjectNode(properties);\n  };\n  /**\n   * Create a clone of this node, a shallow copy\n   * @return {ObjectNode}\n   */\n\n\n  ObjectNode.prototype.clone = function () {\n    var properties = {};\n\n    for (var key in this.properties) {\n      if (hasOwnProperty(this.properties, key)) {\n        properties[key] = this.properties[key];\n      }\n    }\n\n    return new ObjectNode(properties);\n  };\n  /**\n   * Get string representation\n   * @param {Object} options\n   * @return {string} str\n   * @override\n   */\n\n\n  ObjectNode.prototype._toString = function (options) {\n    var entries = [];\n\n    for (var key in this.properties) {\n      if (hasOwnProperty(this.properties, key)) {\n        entries.push(stringify(key) + ': ' + this.properties[key].toString(options));\n      }\n    }\n\n    return '{' + entries.join(', ') + '}';\n  };\n  /**\n   * Get a JSON representation of the node\n   * @returns {Object}\n   */\n\n\n  ObjectNode.prototype.toJSON = function () {\n    return {\n      mathjs: 'ObjectNode',\n      properties: this.properties\n    };\n  };\n  /**\n   * Instantiate an OperatorNode from its JSON representation\n   * @param {Object} json  An object structured like\n   *                       `{\"mathjs\": \"ObjectNode\", \"properties\": {...}}`,\n   *                       where mathjs is optional\n   * @returns {ObjectNode}\n   */\n\n\n  ObjectNode.fromJSON = function (json) {\n    return new ObjectNode(json.properties);\n  };\n  /**\n   * Get HTML representation\n   * @param {Object} options\n   * @return {string} str\n   * @override\n   */\n\n\n  ObjectNode.prototype.toHTML = function (options) {\n    var entries = [];\n\n    for (var key in this.properties) {\n      if (hasOwnProperty(this.properties, key)) {\n        entries.push('<span class=\"math-symbol math-property\">' + escape(key) + '</span>' + '<span class=\"math-operator math-assignment-operator math-property-assignment-operator math-binary-operator\">:</span>' + this.properties[key].toHTML(options));\n      }\n    }\n\n    return '<span class=\"math-parenthesis math-curly-parenthesis\">{</span>' + entries.join('<span class=\"math-separator\">,</span>') + '<span class=\"math-parenthesis math-curly-parenthesis\">}</span>';\n  };\n  /**\n   * Get LaTeX representation\n   * @param {Object} options\n   * @return {string} str\n   */\n\n\n  ObjectNode.prototype._toTex = function (options) {\n    var entries = [];\n\n    for (var key in this.properties) {\n      if (hasOwnProperty(this.properties, key)) {\n        entries.push('\\\\mathbf{' + key + ':} & ' + this.properties[key].toTex(options) + '\\\\\\\\');\n      }\n    }\n\n    return \"\\\\left\\\\{\\\\begin{array}{ll}\".concat(entries.join('\\n'), \"\\\\end{array}\\\\right\\\\}\");\n  };\n\n  return ObjectNode;\n}, {\n  isClass: true,\n  isNode: true\n});","import { isNode } from '../../utils/is.js';\nimport { map } from '../../utils/array.js';\nimport { escape } from '../../utils/string.js';\nimport { getSafeProperty, isSafeMethod } from '../../utils/customs.js';\nimport { getAssociativity, getPrecedence, isAssociativeWith, properties } from '../operators.js';\nimport { latexOperators } from '../../utils/latex.js';\nimport { factory } from '../../utils/factory.js';\nvar name = 'OperatorNode';\nvar dependencies = ['Node'];\nexport var createOperatorNode = /* #__PURE__ */factory(name, dependencies, (_ref) => {\n  var {\n    Node\n  } = _ref;\n\n  /**\n   * @constructor OperatorNode\n   * @extends {Node}\n   * An operator with two arguments, like 2+3\n   *\n   * @param {string} op           Operator name, for example '+'\n   * @param {string} fn           Function name, for example 'add'\n   * @param {Node[]} args         Operator arguments\n   * @param {boolean} [implicit]  Is this an implicit multiplication?\n   */\n  function OperatorNode(op, fn, args, implicit) {\n    if (!(this instanceof OperatorNode)) {\n      throw new SyntaxError('Constructor must be called with the new operator');\n    } // validate input\n\n\n    if (typeof op !== 'string') {\n      throw new TypeError('string expected for parameter \"op\"');\n    }\n\n    if (typeof fn !== 'string') {\n      throw new TypeError('string expected for parameter \"fn\"');\n    }\n\n    if (!Array.isArray(args) || !args.every(isNode)) {\n      throw new TypeError('Array containing Nodes expected for parameter \"args\"');\n    }\n\n    this.implicit = implicit === true;\n    this.op = op;\n    this.fn = fn;\n    this.args = args || [];\n  }\n\n  OperatorNode.prototype = new Node();\n  OperatorNode.prototype.type = 'OperatorNode';\n  OperatorNode.prototype.isOperatorNode = true;\n  /**\n   * Compile a node into a JavaScript function.\n   * This basically pre-calculates as much as possible and only leaves open\n   * calculations which depend on a dynamic scope with variables.\n   * @param {Object} math     Math.js namespace with functions and constants.\n   * @param {Object} argNames An object with argument names as key and `true`\n   *                          as value. Used in the SymbolNode to optimize\n   *                          for arguments from user assigned functions\n   *                          (see FunctionAssignmentNode) or special symbols\n   *                          like `end` (see IndexNode).\n   * @return {function} Returns a function which can be called like:\n   *                        evalNode(scope: Object, args: Object, context: *)\n   */\n\n  OperatorNode.prototype._compile = function (math, argNames) {\n    // validate fn\n    if (typeof this.fn !== 'string' || !isSafeMethod(math, this.fn)) {\n      if (!math[this.fn]) {\n        throw new Error('Function ' + this.fn + ' missing in provided namespace \"math\"');\n      } else {\n        throw new Error('No access to function \"' + this.fn + '\"');\n      }\n    }\n\n    var fn = getSafeProperty(math, this.fn);\n    var evalArgs = map(this.args, function (arg) {\n      return arg._compile(math, argNames);\n    });\n\n    if (evalArgs.length === 1) {\n      var evalArg0 = evalArgs[0];\n      return function evalOperatorNode(scope, args, context) {\n        return fn(evalArg0(scope, args, context));\n      };\n    } else if (evalArgs.length === 2) {\n      var _evalArg = evalArgs[0];\n      var evalArg1 = evalArgs[1];\n      return function evalOperatorNode(scope, args, context) {\n        return fn(_evalArg(scope, args, context), evalArg1(scope, args, context));\n      };\n    } else {\n      return function evalOperatorNode(scope, args, context) {\n        return fn.apply(null, map(evalArgs, function (evalArg) {\n          return evalArg(scope, args, context);\n        }));\n      };\n    }\n  };\n  /**\n   * Execute a callback for each of the child nodes of this node\n   * @param {function(child: Node, path: string, parent: Node)} callback\n   */\n\n\n  OperatorNode.prototype.forEach = function (callback) {\n    for (var i = 0; i < this.args.length; i++) {\n      callback(this.args[i], 'args[' + i + ']', this);\n    }\n  };\n  /**\n   * Create a new OperatorNode having it's childs be the results of calling\n   * the provided callback function for each of the childs of the original node.\n   * @param {function(child: Node, path: string, parent: Node): Node} callback\n   * @returns {OperatorNode} Returns a transformed copy of the node\n   */\n\n\n  OperatorNode.prototype.map = function (callback) {\n    var args = [];\n\n    for (var i = 0; i < this.args.length; i++) {\n      args[i] = this._ifNode(callback(this.args[i], 'args[' + i + ']', this));\n    }\n\n    return new OperatorNode(this.op, this.fn, args, this.implicit);\n  };\n  /**\n   * Create a clone of this node, a shallow copy\n   * @return {OperatorNode}\n   */\n\n\n  OperatorNode.prototype.clone = function () {\n    return new OperatorNode(this.op, this.fn, this.args.slice(0), this.implicit);\n  };\n  /**\n   * Check whether this is an unary OperatorNode:\n   * has exactly one argument, like `-a`.\n   * @return {boolean} Returns true when an unary operator node, false otherwise.\n   */\n\n\n  OperatorNode.prototype.isUnary = function () {\n    return this.args.length === 1;\n  };\n  /**\n   * Check whether this is a binary OperatorNode:\n   * has exactly two arguments, like `a + b`.\n   * @return {boolean} Returns true when a binary operator node, false otherwise.\n   */\n\n\n  OperatorNode.prototype.isBinary = function () {\n    return this.args.length === 2;\n  };\n  /**\n   * Calculate which parentheses are necessary. Gets an OperatorNode\n   * (which is the root of the tree) and an Array of Nodes\n   * (this.args) and returns an array where 'true' means that an argument\n   * has to be enclosed in parentheses whereas 'false' means the opposite.\n   *\n   * @param {OperatorNode} root\n   * @param {string} parenthesis\n   * @param {Node[]} args\n   * @param {boolean} latex\n   * @return {boolean[]}\n   * @private\n   */\n\n\n  function calculateNecessaryParentheses(root, parenthesis, implicit, args, latex) {\n    // precedence of the root OperatorNode\n    var precedence = getPrecedence(root, parenthesis);\n    var associativity = getAssociativity(root, parenthesis);\n\n    if (parenthesis === 'all' || args.length > 2 && root.getIdentifier() !== 'OperatorNode:add' && root.getIdentifier() !== 'OperatorNode:multiply') {\n      return args.map(function (arg) {\n        switch (arg.getContent().type) {\n          // Nodes that don't need extra parentheses\n          case 'ArrayNode':\n          case 'ConstantNode':\n          case 'SymbolNode':\n          case 'ParenthesisNode':\n            return false;\n\n          default:\n            return true;\n        }\n      });\n    }\n\n    var result;\n\n    switch (args.length) {\n      case 0:\n        result = [];\n        break;\n\n      case 1:\n        // unary operators\n        {\n          // precedence of the operand\n          var operandPrecedence = getPrecedence(args[0], parenthesis); // handle special cases for LaTeX, where some of the parentheses aren't needed\n\n          if (latex && operandPrecedence !== null) {\n            var operandIdentifier;\n            var rootIdentifier;\n\n            if (parenthesis === 'keep') {\n              operandIdentifier = args[0].getIdentifier();\n              rootIdentifier = root.getIdentifier();\n            } else {\n              // Ignore Parenthesis Nodes when not in 'keep' mode\n              operandIdentifier = args[0].getContent().getIdentifier();\n              rootIdentifier = root.getContent().getIdentifier();\n            }\n\n            if (properties[precedence][rootIdentifier].latexLeftParens === false) {\n              result = [false];\n              break;\n            }\n\n            if (properties[operandPrecedence][operandIdentifier].latexParens === false) {\n              result = [false];\n              break;\n            }\n          }\n\n          if (operandPrecedence === null) {\n            // if the operand has no defined precedence, no parens are needed\n            result = [false];\n            break;\n          }\n\n          if (operandPrecedence <= precedence) {\n            // if the operands precedence is lower, parens are needed\n            result = [true];\n            break;\n          } // otherwise, no parens needed\n\n\n          result = [false];\n        }\n        break;\n\n      case 2:\n        // binary operators\n        {\n          var lhsParens; // left hand side needs parenthesis?\n          // precedence of the left hand side\n\n          var lhsPrecedence = getPrecedence(args[0], parenthesis); // is the root node associative with the left hand side\n\n          var assocWithLhs = isAssociativeWith(root, args[0], parenthesis);\n\n          if (lhsPrecedence === null) {\n            // if the left hand side has no defined precedence, no parens are needed\n            // FunctionNode for example\n            lhsParens = false;\n          } else if (lhsPrecedence === precedence && associativity === 'right' && !assocWithLhs) {\n            // In case of equal precedence, if the root node is left associative\n            // parens are **never** necessary for the left hand side.\n            // If it is right associative however, parens are necessary\n            // if the root node isn't associative with the left hand side\n            lhsParens = true;\n          } else if (lhsPrecedence < precedence) {\n            lhsParens = true;\n          } else {\n            lhsParens = false;\n          }\n\n          var rhsParens; // right hand side needs parenthesis?\n          // precedence of the right hand side\n\n          var rhsPrecedence = getPrecedence(args[1], parenthesis); // is the root node associative with the right hand side?\n\n          var assocWithRhs = isAssociativeWith(root, args[1], parenthesis);\n\n          if (rhsPrecedence === null) {\n            // if the right hand side has no defined precedence, no parens are needed\n            // FunctionNode for example\n            rhsParens = false;\n          } else if (rhsPrecedence === precedence && associativity === 'left' && !assocWithRhs) {\n            // In case of equal precedence, if the root node is right associative\n            // parens are **never** necessary for the right hand side.\n            // If it is left associative however, parens are necessary\n            // if the root node isn't associative with the right hand side\n            rhsParens = true;\n          } else if (rhsPrecedence < precedence) {\n            rhsParens = true;\n          } else {\n            rhsParens = false;\n          } // handle special cases for LaTeX, where some of the parentheses aren't needed\n\n\n          if (latex) {\n            var _rootIdentifier;\n\n            var lhsIdentifier;\n            var rhsIdentifier;\n\n            if (parenthesis === 'keep') {\n              _rootIdentifier = root.getIdentifier();\n              lhsIdentifier = root.args[0].getIdentifier();\n              rhsIdentifier = root.args[1].getIdentifier();\n            } else {\n              // Ignore ParenthesisNodes when not in 'keep' mode\n              _rootIdentifier = root.getContent().getIdentifier();\n              lhsIdentifier = root.args[0].getContent().getIdentifier();\n              rhsIdentifier = root.args[1].getContent().getIdentifier();\n            }\n\n            if (lhsPrecedence !== null) {\n              if (properties[precedence][_rootIdentifier].latexLeftParens === false) {\n                lhsParens = false;\n              }\n\n              if (properties[lhsPrecedence][lhsIdentifier].latexParens === false) {\n                lhsParens = false;\n              }\n            }\n\n            if (rhsPrecedence !== null) {\n              if (properties[precedence][_rootIdentifier].latexRightParens === false) {\n                rhsParens = false;\n              }\n\n              if (properties[rhsPrecedence][rhsIdentifier].latexParens === false) {\n                rhsParens = false;\n              }\n            }\n          }\n\n          result = [lhsParens, rhsParens];\n        }\n        break;\n\n      default:\n        if (root.getIdentifier() === 'OperatorNode:add' || root.getIdentifier() === 'OperatorNode:multiply') {\n          result = args.map(function (arg) {\n            var argPrecedence = getPrecedence(arg, parenthesis);\n            var assocWithArg = isAssociativeWith(root, arg, parenthesis);\n            var argAssociativity = getAssociativity(arg, parenthesis);\n\n            if (argPrecedence === null) {\n              // if the argument has no defined precedence, no parens are needed\n              return false;\n            } else if (precedence === argPrecedence && associativity === argAssociativity && !assocWithArg) {\n              return true;\n            } else if (argPrecedence < precedence) {\n              return true;\n            }\n\n            return false;\n          });\n        }\n\n        break;\n    } // handles an edge case of 'auto' parentheses with implicit multiplication of ConstantNode\n    // In that case print parentheses for ParenthesisNodes even though they normally wouldn't be\n    // printed.\n\n\n    if (args.length >= 2 && root.getIdentifier() === 'OperatorNode:multiply' && root.implicit && parenthesis === 'auto' && implicit === 'hide') {\n      result = args.map(function (arg, index) {\n        var isParenthesisNode = arg.getIdentifier() === 'ParenthesisNode';\n\n        if (result[index] || isParenthesisNode) {\n          // put in parenthesis?\n          return true;\n        }\n\n        return false;\n      });\n    }\n\n    return result;\n  }\n  /**\n   * Get string representation.\n   * @param {Object} options\n   * @return {string} str\n   */\n\n\n  OperatorNode.prototype._toString = function (options) {\n    var parenthesis = options && options.parenthesis ? options.parenthesis : 'keep';\n    var implicit = options && options.implicit ? options.implicit : 'hide';\n    var args = this.args;\n    var parens = calculateNecessaryParentheses(this, parenthesis, implicit, args, false);\n\n    if (args.length === 1) {\n      // unary operators\n      var assoc = getAssociativity(this, parenthesis);\n      var operand = args[0].toString(options);\n\n      if (parens[0]) {\n        operand = '(' + operand + ')';\n      } // for example for \"not\", we want a space between operand and argument\n\n\n      var opIsNamed = /[a-zA-Z]+/.test(this.op);\n\n      if (assoc === 'right') {\n        // prefix operator\n        return this.op + (opIsNamed ? ' ' : '') + operand;\n      } else if (assoc === 'left') {\n        // postfix\n        return operand + (opIsNamed ? ' ' : '') + this.op;\n      } // fall back to postfix\n\n\n      return operand + this.op;\n    } else if (args.length === 2) {\n      var lhs = args[0].toString(options); // left hand side\n\n      var rhs = args[1].toString(options); // right hand side\n\n      if (parens[0]) {\n        // left hand side in parenthesis?\n        lhs = '(' + lhs + ')';\n      }\n\n      if (parens[1]) {\n        // right hand side in parenthesis?\n        rhs = '(' + rhs + ')';\n      }\n\n      if (this.implicit && this.getIdentifier() === 'OperatorNode:multiply' && implicit === 'hide') {\n        return lhs + ' ' + rhs;\n      }\n\n      return lhs + ' ' + this.op + ' ' + rhs;\n    } else if (args.length > 2 && (this.getIdentifier() === 'OperatorNode:add' || this.getIdentifier() === 'OperatorNode:multiply')) {\n      var stringifiedArgs = args.map(function (arg, index) {\n        arg = arg.toString(options);\n\n        if (parens[index]) {\n          // put in parenthesis?\n          arg = '(' + arg + ')';\n        }\n\n        return arg;\n      });\n\n      if (this.implicit && this.getIdentifier() === 'OperatorNode:multiply' && implicit === 'hide') {\n        return stringifiedArgs.join(' ');\n      }\n\n      return stringifiedArgs.join(' ' + this.op + ' ');\n    } else {\n      // fallback to formatting as a function call\n      return this.fn + '(' + this.args.join(', ') + ')';\n    }\n  };\n  /**\n   * Get a JSON representation of the node\n   * @returns {Object}\n   */\n\n\n  OperatorNode.prototype.toJSON = function () {\n    return {\n      mathjs: 'OperatorNode',\n      op: this.op,\n      fn: this.fn,\n      args: this.args,\n      implicit: this.implicit\n    };\n  };\n  /**\n   * Instantiate an OperatorNode from its JSON representation\n   * @param {Object} json  An object structured like\n   *                       `{\"mathjs\": \"OperatorNode\", \"op\": \"+\", \"fn\": \"add\", \"args\": [...], \"implicit\": false}`,\n   *                       where mathjs is optional\n   * @returns {OperatorNode}\n   */\n\n\n  OperatorNode.fromJSON = function (json) {\n    return new OperatorNode(json.op, json.fn, json.args, json.implicit);\n  };\n  /**\n   * Get HTML representation.\n   * @param {Object} options\n   * @return {string} str\n   */\n\n\n  OperatorNode.prototype.toHTML = function (options) {\n    var parenthesis = options && options.parenthesis ? options.parenthesis : 'keep';\n    var implicit = options && options.implicit ? options.implicit : 'hide';\n    var args = this.args;\n    var parens = calculateNecessaryParentheses(this, parenthesis, implicit, args, false);\n\n    if (args.length === 1) {\n      // unary operators\n      var assoc = getAssociativity(this, parenthesis);\n      var operand = args[0].toHTML(options);\n\n      if (parens[0]) {\n        operand = '<span class=\"math-parenthesis math-round-parenthesis\">(</span>' + operand + '<span class=\"math-parenthesis math-round-parenthesis\">)</span>';\n      }\n\n      if (assoc === 'right') {\n        // prefix operator\n        return '<span class=\"math-operator math-unary-operator math-lefthand-unary-operator\">' + escape(this.op) + '</span>' + operand;\n      } else {\n        // postfix when assoc === 'left' or undefined\n        return operand + '<span class=\"math-operator math-unary-operator math-righthand-unary-operator\">' + escape(this.op) + '</span>';\n      }\n    } else if (args.length === 2) {\n      // binary operatoes\n      var lhs = args[0].toHTML(options); // left hand side\n\n      var rhs = args[1].toHTML(options); // right hand side\n\n      if (parens[0]) {\n        // left hand side in parenthesis?\n        lhs = '<span class=\"math-parenthesis math-round-parenthesis\">(</span>' + lhs + '<span class=\"math-parenthesis math-round-parenthesis\">)</span>';\n      }\n\n      if (parens[1]) {\n        // right hand side in parenthesis?\n        rhs = '<span class=\"math-parenthesis math-round-parenthesis\">(</span>' + rhs + '<span class=\"math-parenthesis math-round-parenthesis\">)</span>';\n      }\n\n      if (this.implicit && this.getIdentifier() === 'OperatorNode:multiply' && implicit === 'hide') {\n        return lhs + '<span class=\"math-operator math-binary-operator math-implicit-binary-operator\"></span>' + rhs;\n      }\n\n      return lhs + '<span class=\"math-operator math-binary-operator math-explicit-binary-operator\">' + escape(this.op) + '</span>' + rhs;\n    } else {\n      var stringifiedArgs = args.map(function (arg, index) {\n        arg = arg.toHTML(options);\n\n        if (parens[index]) {\n          // put in parenthesis?\n          arg = '<span class=\"math-parenthesis math-round-parenthesis\">(</span>' + arg + '<span class=\"math-parenthesis math-round-parenthesis\">)</span>';\n        }\n\n        return arg;\n      });\n\n      if (args.length > 2 && (this.getIdentifier() === 'OperatorNode:add' || this.getIdentifier() === 'OperatorNode:multiply')) {\n        if (this.implicit && this.getIdentifier() === 'OperatorNode:multiply' && implicit === 'hide') {\n          return stringifiedArgs.join('<span class=\"math-operator math-binary-operator math-implicit-binary-operator\"></span>');\n        }\n\n        return stringifiedArgs.join('<span class=\"math-operator math-binary-operator math-explicit-binary-operator\">' + escape(this.op) + '</span>');\n      } else {\n        // fallback to formatting as a function call\n        return '<span class=\"math-function\">' + escape(this.fn) + '</span><span class=\"math-paranthesis math-round-parenthesis\">(</span>' + stringifiedArgs.join('<span class=\"math-separator\">,</span>') + '<span class=\"math-paranthesis math-round-parenthesis\">)</span>';\n      }\n    }\n  };\n  /**\n   * Get LaTeX representation\n   * @param {Object} options\n   * @return {string} str\n   */\n\n\n  OperatorNode.prototype._toTex = function (options) {\n    var parenthesis = options && options.parenthesis ? options.parenthesis : 'keep';\n    var implicit = options && options.implicit ? options.implicit : 'hide';\n    var args = this.args;\n    var parens = calculateNecessaryParentheses(this, parenthesis, implicit, args, true);\n    var op = latexOperators[this.fn];\n    op = typeof op === 'undefined' ? this.op : op; // fall back to using this.op\n\n    if (args.length === 1) {\n      // unary operators\n      var assoc = getAssociativity(this, parenthesis);\n      var operand = args[0].toTex(options);\n\n      if (parens[0]) {\n        operand = \"\\\\left(\".concat(operand, \"\\\\right)\");\n      }\n\n      if (assoc === 'right') {\n        // prefix operator\n        return op + operand;\n      } else if (assoc === 'left') {\n        // postfix operator\n        return operand + op;\n      } // fall back to postfix\n\n\n      return operand + op;\n    } else if (args.length === 2) {\n      // binary operators\n      var lhs = args[0]; // left hand side\n\n      var lhsTex = lhs.toTex(options);\n\n      if (parens[0]) {\n        lhsTex = \"\\\\left(\".concat(lhsTex, \"\\\\right)\");\n      }\n\n      var rhs = args[1]; // right hand side\n\n      var rhsTex = rhs.toTex(options);\n\n      if (parens[1]) {\n        rhsTex = \"\\\\left(\".concat(rhsTex, \"\\\\right)\");\n      } // handle some exceptions (due to the way LaTeX works)\n\n\n      var lhsIdentifier;\n\n      if (parenthesis === 'keep') {\n        lhsIdentifier = lhs.getIdentifier();\n      } else {\n        // Ignore ParenthesisNodes if in 'keep' mode\n        lhsIdentifier = lhs.getContent().getIdentifier();\n      }\n\n      switch (this.getIdentifier()) {\n        case 'OperatorNode:divide':\n          // op contains '\\\\frac' at this point\n          return op + '{' + lhsTex + '}' + '{' + rhsTex + '}';\n\n        case 'OperatorNode:pow':\n          lhsTex = '{' + lhsTex + '}';\n          rhsTex = '{' + rhsTex + '}';\n\n          switch (lhsIdentifier) {\n            case 'ConditionalNode': //\n\n            case 'OperatorNode:divide':\n              lhsTex = \"\\\\left(\".concat(lhsTex, \"\\\\right)\");\n          }\n\n          break;\n\n        case 'OperatorNode:multiply':\n          if (this.implicit && implicit === 'hide') {\n            return lhsTex + '~' + rhsTex;\n          }\n\n      }\n\n      return lhsTex + op + rhsTex;\n    } else if (args.length > 2 && (this.getIdentifier() === 'OperatorNode:add' || this.getIdentifier() === 'OperatorNode:multiply')) {\n      var texifiedArgs = args.map(function (arg, index) {\n        arg = arg.toTex(options);\n\n        if (parens[index]) {\n          arg = \"\\\\left(\".concat(arg, \"\\\\right)\");\n        }\n\n        return arg;\n      });\n\n      if (this.getIdentifier() === 'OperatorNode:multiply' && this.implicit) {\n        return texifiedArgs.join('~');\n      }\n\n      return texifiedArgs.join(op);\n    } else {\n      // fall back to formatting as a function call\n      // as this is a fallback, it doesn't use\n      // fancy function names\n      return '\\\\mathrm{' + this.fn + '}\\\\left(' + args.map(function (arg) {\n        return arg.toTex(options);\n      }).join(',') + '\\\\right)';\n    }\n  };\n  /**\n   * Get identifier.\n   * @return {string}\n   */\n\n\n  OperatorNode.prototype.getIdentifier = function () {\n    return this.type + ':' + this.fn;\n  };\n\n  return OperatorNode;\n}, {\n  isClass: true,\n  isNode: true\n});","import { isNode } from '../../utils/is.js';\nimport { factory } from '../../utils/factory.js';\nvar name = 'ParenthesisNode';\nvar dependencies = ['Node'];\nexport var createParenthesisNode = /* #__PURE__ */factory(name, dependencies, (_ref) => {\n  var {\n    Node\n  } = _ref;\n\n  /**\n   * @constructor ParenthesisNode\n   * @extends {Node}\n   * A parenthesis node describes manual parenthesis from the user input\n   * @param {Node} content\n   * @extends {Node}\n   */\n  function ParenthesisNode(content) {\n    if (!(this instanceof ParenthesisNode)) {\n      throw new SyntaxError('Constructor must be called with the new operator');\n    } // validate input\n\n\n    if (!isNode(content)) {\n      throw new TypeError('Node expected for parameter \"content\"');\n    }\n\n    this.content = content;\n  }\n\n  ParenthesisNode.prototype = new Node();\n  ParenthesisNode.prototype.type = 'ParenthesisNode';\n  ParenthesisNode.prototype.isParenthesisNode = true;\n  /**\n   * Compile a node into a JavaScript function.\n   * This basically pre-calculates as much as possible and only leaves open\n   * calculations which depend on a dynamic scope with variables.\n   * @param {Object} math     Math.js namespace with functions and constants.\n   * @param {Object} argNames An object with argument names as key and `true`\n   *                          as value. Used in the SymbolNode to optimize\n   *                          for arguments from user assigned functions\n   *                          (see FunctionAssignmentNode) or special symbols\n   *                          like `end` (see IndexNode).\n   * @return {function} Returns a function which can be called like:\n   *                        evalNode(scope: Object, args: Object, context: *)\n   */\n\n  ParenthesisNode.prototype._compile = function (math, argNames) {\n    return this.content._compile(math, argNames);\n  };\n  /**\n   * Get the content of the current Node.\n   * @return {Node} content\n   * @override\n   **/\n\n\n  ParenthesisNode.prototype.getContent = function () {\n    return this.content.getContent();\n  };\n  /**\n   * Execute a callback for each of the child nodes of this node\n   * @param {function(child: Node, path: string, parent: Node)} callback\n   */\n\n\n  ParenthesisNode.prototype.forEach = function (callback) {\n    callback(this.content, 'content', this);\n  };\n  /**\n   * Create a new ParenthesisNode having it's childs be the results of calling\n   * the provided callback function for each of the childs of the original node.\n   * @param {function(child: Node, path: string, parent: Node) : Node} callback\n   * @returns {ParenthesisNode} Returns a clone of the node\n   */\n\n\n  ParenthesisNode.prototype.map = function (callback) {\n    var content = callback(this.content, 'content', this);\n    return new ParenthesisNode(content);\n  };\n  /**\n   * Create a clone of this node, a shallow copy\n   * @return {ParenthesisNode}\n   */\n\n\n  ParenthesisNode.prototype.clone = function () {\n    return new ParenthesisNode(this.content);\n  };\n  /**\n   * Get string representation\n   * @param {Object} options\n   * @return {string} str\n   * @override\n   */\n\n\n  ParenthesisNode.prototype._toString = function (options) {\n    if (!options || options && !options.parenthesis || options && options.parenthesis === 'keep') {\n      return '(' + this.content.toString(options) + ')';\n    }\n\n    return this.content.toString(options);\n  };\n  /**\n   * Get a JSON representation of the node\n   * @returns {Object}\n   */\n\n\n  ParenthesisNode.prototype.toJSON = function () {\n    return {\n      mathjs: 'ParenthesisNode',\n      content: this.content\n    };\n  };\n  /**\n   * Instantiate an ParenthesisNode from its JSON representation\n   * @param {Object} json  An object structured like\n   *                       `{\"mathjs\": \"ParenthesisNode\", \"content\": ...}`,\n   *                       where mathjs is optional\n   * @returns {ParenthesisNode}\n   */\n\n\n  ParenthesisNode.fromJSON = function (json) {\n    return new ParenthesisNode(json.content);\n  };\n  /**\n   * Get HTML representation\n   * @param {Object} options\n   * @return {string} str\n   * @override\n   */\n\n\n  ParenthesisNode.prototype.toHTML = function (options) {\n    if (!options || options && !options.parenthesis || options && options.parenthesis === 'keep') {\n      return '<span class=\"math-parenthesis math-round-parenthesis\">(</span>' + this.content.toHTML(options) + '<span class=\"math-parenthesis math-round-parenthesis\">)</span>';\n    }\n\n    return this.content.toHTML(options);\n  };\n  /**\n   * Get LaTeX representation\n   * @param {Object} options\n   * @return {string} str\n   * @override\n   */\n\n\n  ParenthesisNode.prototype._toTex = function (options) {\n    if (!options || options && !options.parenthesis || options && options.parenthesis === 'keep') {\n      return \"\\\\left(\".concat(this.content.toTex(options), \"\\\\right)\");\n    }\n\n    return this.content.toTex(options);\n  };\n\n  return ParenthesisNode;\n}, {\n  isClass: true,\n  isNode: true\n});","import { isNode, isSymbolNode } from '../../utils/is.js';\nimport { factory } from '../../utils/factory.js';\nimport { getPrecedence } from '../operators.js';\nvar name = 'RangeNode';\nvar dependencies = ['Node'];\nexport var createRangeNode = /* #__PURE__ */factory(name, dependencies, (_ref) => {\n  var {\n    Node\n  } = _ref;\n\n  /**\n   * @constructor RangeNode\n   * @extends {Node}\n   * create a range\n   * @param {Node} start  included lower-bound\n   * @param {Node} end    included upper-bound\n   * @param {Node} [step] optional step\n   */\n  function RangeNode(start, end, step) {\n    if (!(this instanceof RangeNode)) {\n      throw new SyntaxError('Constructor must be called with the new operator');\n    } // validate inputs\n\n\n    if (!isNode(start)) throw new TypeError('Node expected');\n    if (!isNode(end)) throw new TypeError('Node expected');\n    if (step && !isNode(step)) throw new TypeError('Node expected');\n    if (arguments.length > 3) throw new Error('Too many arguments');\n    this.start = start; // included lower-bound\n\n    this.end = end; // included upper-bound\n\n    this.step = step || null; // optional step\n  }\n\n  RangeNode.prototype = new Node();\n  RangeNode.prototype.type = 'RangeNode';\n  RangeNode.prototype.isRangeNode = true;\n  /**\n   * Check whether the RangeNode needs the `end` symbol to be defined.\n   * This end is the size of the Matrix in current dimension.\n   * @return {boolean}\n   */\n\n  RangeNode.prototype.needsEnd = function () {\n    // find all `end` symbols in this RangeNode\n    var endSymbols = this.filter(function (node) {\n      return isSymbolNode(node) && node.name === 'end';\n    });\n    return endSymbols.length > 0;\n  };\n  /**\n   * Compile a node into a JavaScript function.\n   * This basically pre-calculates as much as possible and only leaves open\n   * calculations which depend on a dynamic scope with variables.\n   * @param {Object} math     Math.js namespace with functions and constants.\n   * @param {Object} argNames An object with argument names as key and `true`\n   *                          as value. Used in the SymbolNode to optimize\n   *                          for arguments from user assigned functions\n   *                          (see FunctionAssignmentNode) or special symbols\n   *                          like `end` (see IndexNode).\n   * @return {function} Returns a function which can be called like:\n   *                        evalNode(scope: Object, args: Object, context: *)\n   */\n\n\n  RangeNode.prototype._compile = function (math, argNames) {\n    var range = math.range;\n\n    var evalStart = this.start._compile(math, argNames);\n\n    var evalEnd = this.end._compile(math, argNames);\n\n    if (this.step) {\n      var evalStep = this.step._compile(math, argNames);\n\n      return function evalRangeNode(scope, args, context) {\n        return range(evalStart(scope, args, context), evalEnd(scope, args, context), evalStep(scope, args, context));\n      };\n    } else {\n      return function evalRangeNode(scope, args, context) {\n        return range(evalStart(scope, args, context), evalEnd(scope, args, context));\n      };\n    }\n  };\n  /**\n   * Execute a callback for each of the child nodes of this node\n   * @param {function(child: Node, path: string, parent: Node)} callback\n   */\n\n\n  RangeNode.prototype.forEach = function (callback) {\n    callback(this.start, 'start', this);\n    callback(this.end, 'end', this);\n\n    if (this.step) {\n      callback(this.step, 'step', this);\n    }\n  };\n  /**\n   * Create a new RangeNode having it's childs be the results of calling\n   * the provided callback function for each of the childs of the original node.\n   * @param {function(child: Node, path: string, parent: Node): Node} callback\n   * @returns {RangeNode} Returns a transformed copy of the node\n   */\n\n\n  RangeNode.prototype.map = function (callback) {\n    return new RangeNode(this._ifNode(callback(this.start, 'start', this)), this._ifNode(callback(this.end, 'end', this)), this.step && this._ifNode(callback(this.step, 'step', this)));\n  };\n  /**\n   * Create a clone of this node, a shallow copy\n   * @return {RangeNode}\n   */\n\n\n  RangeNode.prototype.clone = function () {\n    return new RangeNode(this.start, this.end, this.step && this.step);\n  };\n  /**\n   * Calculate the necessary parentheses\n   * @param {Node} node\n   * @param {string} parenthesis\n   * @return {Object} parentheses\n   * @private\n   */\n\n\n  function calculateNecessaryParentheses(node, parenthesis) {\n    var precedence = getPrecedence(node, parenthesis);\n    var parens = {};\n    var startPrecedence = getPrecedence(node.start, parenthesis);\n    parens.start = startPrecedence !== null && startPrecedence <= precedence || parenthesis === 'all';\n\n    if (node.step) {\n      var stepPrecedence = getPrecedence(node.step, parenthesis);\n      parens.step = stepPrecedence !== null && stepPrecedence <= precedence || parenthesis === 'all';\n    }\n\n    var endPrecedence = getPrecedence(node.end, parenthesis);\n    parens.end = endPrecedence !== null && endPrecedence <= precedence || parenthesis === 'all';\n    return parens;\n  }\n  /**\n   * Get string representation\n   * @param {Object} options\n   * @return {string} str\n   */\n\n\n  RangeNode.prototype._toString = function (options) {\n    var parenthesis = options && options.parenthesis ? options.parenthesis : 'keep';\n    var parens = calculateNecessaryParentheses(this, parenthesis); // format string as start:step:stop\n\n    var str;\n    var start = this.start.toString(options);\n\n    if (parens.start) {\n      start = '(' + start + ')';\n    }\n\n    str = start;\n\n    if (this.step) {\n      var step = this.step.toString(options);\n\n      if (parens.step) {\n        step = '(' + step + ')';\n      }\n\n      str += ':' + step;\n    }\n\n    var end = this.end.toString(options);\n\n    if (parens.end) {\n      end = '(' + end + ')';\n    }\n\n    str += ':' + end;\n    return str;\n  };\n  /**\n   * Get a JSON representation of the node\n   * @returns {Object}\n   */\n\n\n  RangeNode.prototype.toJSON = function () {\n    return {\n      mathjs: 'RangeNode',\n      start: this.start,\n      end: this.end,\n      step: this.step\n    };\n  };\n  /**\n   * Instantiate an RangeNode from its JSON representation\n   * @param {Object} json  An object structured like\n   *                       `{\"mathjs\": \"RangeNode\", \"start\": ..., \"end\": ..., \"step\": ...}`,\n   *                       where mathjs is optional\n   * @returns {RangeNode}\n   */\n\n\n  RangeNode.fromJSON = function (json) {\n    return new RangeNode(json.start, json.end, json.step);\n  };\n  /**\n   * Get HTML representation\n   * @param {Object} options\n   * @return {string} str\n   */\n\n\n  RangeNode.prototype.toHTML = function (options) {\n    var parenthesis = options && options.parenthesis ? options.parenthesis : 'keep';\n    var parens = calculateNecessaryParentheses(this, parenthesis); // format string as start:step:stop\n\n    var str;\n    var start = this.start.toHTML(options);\n\n    if (parens.start) {\n      start = '<span class=\"math-parenthesis math-round-parenthesis\">(</span>' + start + '<span class=\"math-parenthesis math-round-parenthesis\">)</span>';\n    }\n\n    str = start;\n\n    if (this.step) {\n      var step = this.step.toHTML(options);\n\n      if (parens.step) {\n        step = '<span class=\"math-parenthesis math-round-parenthesis\">(</span>' + step + '<span class=\"math-parenthesis math-round-parenthesis\">)</span>';\n      }\n\n      str += '<span class=\"math-operator math-range-operator\">:</span>' + step;\n    }\n\n    var end = this.end.toHTML(options);\n\n    if (parens.end) {\n      end = '<span class=\"math-parenthesis math-round-parenthesis\">(</span>' + end + '<span class=\"math-parenthesis math-round-parenthesis\">)</span>';\n    }\n\n    str += '<span class=\"math-operator math-range-operator\">:</span>' + end;\n    return str;\n  };\n  /**\n   * Get LaTeX representation\n   * @params {Object} options\n   * @return {string} str\n   */\n\n\n  RangeNode.prototype._toTex = function (options) {\n    var parenthesis = options && options.parenthesis ? options.parenthesis : 'keep';\n    var parens = calculateNecessaryParentheses(this, parenthesis);\n    var str = this.start.toTex(options);\n\n    if (parens.start) {\n      str = \"\\\\left(\".concat(str, \"\\\\right)\");\n    }\n\n    if (this.step) {\n      var step = this.step.toTex(options);\n\n      if (parens.step) {\n        step = \"\\\\left(\".concat(step, \"\\\\right)\");\n      }\n\n      str += ':' + step;\n    }\n\n    var end = this.end.toTex(options);\n\n    if (parens.end) {\n      end = \"\\\\left(\".concat(end, \"\\\\right)\");\n    }\n\n    str += ':' + end;\n    return str;\n  };\n\n  return RangeNode;\n}, {\n  isClass: true,\n  isNode: true\n});","import { getPrecedence } from '../operators.js';\nimport { escape } from '../../utils/string.js';\nimport { getSafeProperty } from '../../utils/customs.js';\nimport { latexOperators } from '../../utils/latex.js';\nimport { factory } from '../../utils/factory.js';\nvar name = 'RelationalNode';\nvar dependencies = ['Node'];\nexport var createRelationalNode = /* #__PURE__ */factory(name, dependencies, (_ref) => {\n  var {\n    Node\n  } = _ref;\n\n  /**\n   * A node representing a chained conditional expression, such as 'x > y > z'\n   *\n   * @param {String[]} conditionals   An array of conditional operators used to compare the parameters\n   * @param {Node[]} params   The parameters that will be compared\n   *\n   * @constructor RelationalNode\n   * @extends {Node}\n   */\n  function RelationalNode(conditionals, params) {\n    if (!(this instanceof RelationalNode)) {\n      throw new SyntaxError('Constructor must be called with the new operator');\n    }\n\n    if (!Array.isArray(conditionals)) throw new TypeError('Parameter conditionals must be an array');\n    if (!Array.isArray(params)) throw new TypeError('Parameter params must be an array');\n    if (conditionals.length !== params.length - 1) throw new TypeError('Parameter params must contain exactly one more element than parameter conditionals');\n    this.conditionals = conditionals;\n    this.params = params;\n  }\n\n  RelationalNode.prototype = new Node();\n  RelationalNode.prototype.type = 'RelationalNode';\n  RelationalNode.prototype.isRelationalNode = true;\n  /**\n   * Compile a node into a JavaScript function.\n   * This basically pre-calculates as much as possible and only leaves open\n   * calculations which depend on a dynamic scope with variables.\n   * @param {Object} math     Math.js namespace with functions and constants.\n   * @param {Object} argNames An object with argument names as key and `true`\n   *                          as value. Used in the SymbolNode to optimize\n   *                          for arguments from user assigned functions\n   *                          (see FunctionAssignmentNode) or special symbols\n   *                          like `end` (see IndexNode).\n   * @return {function} Returns a function which can be called like:\n   *                        evalNode(scope: Object, args: Object, context: *)\n   */\n\n  RelationalNode.prototype._compile = function (math, argNames) {\n    var self = this;\n    var compiled = this.params.map(p => p._compile(math, argNames));\n    return function evalRelationalNode(scope, args, context) {\n      var evalLhs;\n      var evalRhs = compiled[0](scope, args, context);\n\n      for (var i = 0; i < self.conditionals.length; i++) {\n        evalLhs = evalRhs;\n        evalRhs = compiled[i + 1](scope, args, context);\n        var condFn = getSafeProperty(math, self.conditionals[i]);\n\n        if (!condFn(evalLhs, evalRhs)) {\n          return false;\n        }\n      }\n\n      return true;\n    };\n  };\n  /**\n   * Execute a callback for each of the child nodes of this node\n   * @param {function(child: Node, path: string, parent: Node)} callback\n   */\n\n\n  RelationalNode.prototype.forEach = function (callback) {\n    this.params.forEach((n, i) => callback(n, 'params[' + i + ']', this), this);\n  };\n  /**\n   * Create a new RelationalNode having its childs be the results of calling\n   * the provided callback function for each of the childs of the original node.\n   * @param {function(child: Node, path: string, parent: Node): Node} callback\n   * @returns {RelationalNode} Returns a transformed copy of the node\n   */\n\n\n  RelationalNode.prototype.map = function (callback) {\n    return new RelationalNode(this.conditionals.slice(), this.params.map((n, i) => this._ifNode(callback(n, 'params[' + i + ']', this)), this));\n  };\n  /**\n   * Create a clone of this node, a shallow copy\n   * @return {RelationalNode}\n   */\n\n\n  RelationalNode.prototype.clone = function () {\n    return new RelationalNode(this.conditionals, this.params);\n  };\n  /**\n   * Get string representation.\n   * @param {Object} options\n   * @return {string} str\n   */\n\n\n  RelationalNode.prototype._toString = function (options) {\n    var parenthesis = options && options.parenthesis ? options.parenthesis : 'keep';\n    var precedence = getPrecedence(this, parenthesis);\n    var paramStrings = this.params.map(function (p, index) {\n      var paramPrecedence = getPrecedence(p, parenthesis);\n      return parenthesis === 'all' || paramPrecedence !== null && paramPrecedence <= precedence ? '(' + p.toString(options) + ')' : p.toString(options);\n    });\n    var operatorMap = {\n      equal: '==',\n      unequal: '!=',\n      smaller: '<',\n      larger: '>',\n      smallerEq: '<=',\n      largerEq: '>='\n    };\n    var ret = paramStrings[0];\n\n    for (var i = 0; i < this.conditionals.length; i++) {\n      ret += ' ' + operatorMap[this.conditionals[i]] + ' ' + paramStrings[i + 1];\n    }\n\n    return ret;\n  };\n  /**\n   * Get a JSON representation of the node\n   * @returns {Object}\n   */\n\n\n  RelationalNode.prototype.toJSON = function () {\n    return {\n      mathjs: 'RelationalNode',\n      conditionals: this.conditionals,\n      params: this.params\n    };\n  };\n  /**\n   * Instantiate a RelationalNode from its JSON representation\n   * @param {Object} json  An object structured like\n   *                       `{\"mathjs\": \"RelationalNode\", \"condition\": ..., \"trueExpr\": ..., \"falseExpr\": ...}`,\n   *                       where mathjs is optional\n   * @returns {RelationalNode}\n   */\n\n\n  RelationalNode.fromJSON = function (json) {\n    return new RelationalNode(json.conditionals, json.params);\n  };\n  /**\n   * Get HTML representation\n   * @param {Object} options\n   * @return {string} str\n   */\n\n\n  RelationalNode.prototype.toHTML = function (options) {\n    var parenthesis = options && options.parenthesis ? options.parenthesis : 'keep';\n    var precedence = getPrecedence(this, parenthesis);\n    var paramStrings = this.params.map(function (p, index) {\n      var paramPrecedence = getPrecedence(p, parenthesis);\n      return parenthesis === 'all' || paramPrecedence !== null && paramPrecedence <= precedence ? '<span class=\"math-parenthesis math-round-parenthesis\">(</span>' + p.toHTML(options) + '<span class=\"math-parenthesis math-round-parenthesis\">)</span>' : p.toHTML(options);\n    });\n    var operatorMap = {\n      equal: '==',\n      unequal: '!=',\n      smaller: '<',\n      larger: '>',\n      smallerEq: '<=',\n      largerEq: '>='\n    };\n    var ret = paramStrings[0];\n\n    for (var i = 0; i < this.conditionals.length; i++) {\n      ret += '<span class=\"math-operator math-binary-operator math-explicit-binary-operator\">' + escape(operatorMap[this.conditionals[i]]) + '</span>' + paramStrings[i + 1];\n    }\n\n    return ret;\n  };\n  /**\n   * Get LaTeX representation\n   * @param {Object} options\n   * @return {string} str\n   */\n\n\n  RelationalNode.prototype._toTex = function (options) {\n    var parenthesis = options && options.parenthesis ? options.parenthesis : 'keep';\n    var precedence = getPrecedence(this, parenthesis);\n    var paramStrings = this.params.map(function (p, index) {\n      var paramPrecedence = getPrecedence(p, parenthesis);\n      return parenthesis === 'all' || paramPrecedence !== null && paramPrecedence <= precedence ? '\\\\left(' + p.toTex(options) + '\\right)' : p.toTex(options);\n    });\n    var ret = paramStrings[0];\n\n    for (var i = 0; i < this.conditionals.length; i++) {\n      ret += latexOperators[this.conditionals[i]] + paramStrings[i + 1];\n    }\n\n    return ret;\n  };\n\n  return RelationalNode;\n}, {\n  isClass: true,\n  isNode: true\n});","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { isAccessorNode, isFunctionAssignmentNode, isIndexNode, isNode, isSymbolNode } from '../../utils/is.js';\nimport { escape } from '../../utils/string.js';\nimport { hasOwnProperty } from '../../utils/object.js';\nimport { map } from '../../utils/array.js';\nimport { getSafeProperty, validateSafeMethod } from '../../utils/customs.js';\nimport { factory } from '../../utils/factory.js';\nimport { defaultTemplate, latexFunctions } from '../../utils/latex.js';\nvar name = 'FunctionNode';\nvar dependencies = ['math', 'Node', 'SymbolNode'];\nexport var createFunctionNode = /* #__PURE__ */factory(name, dependencies, (_ref) => {\n  var {\n    math,\n    Node,\n    SymbolNode\n  } = _ref;\n\n  /**\n   * @constructor FunctionNode\n   * @extends {./Node}\n   * invoke a list with arguments on a node\n   * @param {./Node | string} fn Node resolving with a function on which to invoke\n   *                             the arguments, typically a SymboNode or AccessorNode\n   * @param {./Node[]} args\n   */\n  function FunctionNode(fn, args) {\n    if (!(this instanceof FunctionNode)) {\n      throw new SyntaxError('Constructor must be called with the new operator');\n    }\n\n    if (typeof fn === 'string') {\n      fn = new SymbolNode(fn);\n    } // validate input\n\n\n    if (!isNode(fn)) throw new TypeError('Node expected as parameter \"fn\"');\n\n    if (!Array.isArray(args) || !args.every(isNode)) {\n      throw new TypeError('Array containing Nodes expected for parameter \"args\"');\n    }\n\n    this.fn = fn;\n    this.args = args || []; // readonly property name\n\n    Object.defineProperty(this, 'name', {\n      get: function () {\n        return this.fn.name || '';\n      }.bind(this),\n      set: function set() {\n        throw new Error('Cannot assign a new name, name is read-only');\n      }\n    });\n  }\n\n  FunctionNode.prototype = new Node();\n  FunctionNode.prototype.type = 'FunctionNode';\n  FunctionNode.prototype.isFunctionNode = true;\n  /**\n   * Compile a node into a JavaScript function.\n   * This basically pre-calculates as much as possible and only leaves open\n   * calculations which depend on a dynamic scope with variables.\n   * @param {Object} math     Math.js namespace with functions and constants.\n   * @param {Object} argNames An object with argument names as key and `true`\n   *                          as value. Used in the SymbolNode to optimize\n   *                          for arguments from user assigned functions\n   *                          (see FunctionAssignmentNode) or special symbols\n   *                          like `end` (see IndexNode).\n   * @return {function} Returns a function which can be called like:\n   *                        evalNode(scope: Object, args: Object, context: *)\n   */\n\n  FunctionNode.prototype._compile = function (math, argNames) {\n    if (!(this instanceof FunctionNode)) {\n      throw new TypeError('No valid FunctionNode');\n    } // compile arguments\n\n\n    var evalArgs = map(this.args, function (arg) {\n      return arg._compile(math, argNames);\n    });\n\n    if (isSymbolNode(this.fn)) {\n      // we can statically determine whether the function has an rawArgs property\n      var _name = this.fn.name;\n      var fn = _name in math ? getSafeProperty(math, _name) : undefined;\n      var isRaw = typeof fn === 'function' && fn.rawArgs === true;\n\n      if (isRaw) {\n        // pass unevaluated parameters (nodes) to the function\n        // \"raw\" evaluation\n        var rawArgs = this.args;\n        return function evalFunctionNode(scope, args, context) {\n          return (_name in scope ? getSafeProperty(scope, _name) : fn)(rawArgs, math, _extends({}, scope, args));\n        };\n      } else {\n        // \"regular\" evaluation\n        if (evalArgs.length === 1) {\n          var evalArg0 = evalArgs[0];\n          return function evalFunctionNode(scope, args, context) {\n            return (_name in scope ? getSafeProperty(scope, _name) : fn)(evalArg0(scope, args, context));\n          };\n        } else if (evalArgs.length === 2) {\n          var _evalArg = evalArgs[0];\n          var evalArg1 = evalArgs[1];\n          return function evalFunctionNode(scope, args, context) {\n            return (_name in scope ? getSafeProperty(scope, _name) : fn)(_evalArg(scope, args, context), evalArg1(scope, args, context));\n          };\n        } else {\n          return function evalFunctionNode(scope, args, context) {\n            return (_name in scope ? getSafeProperty(scope, _name) : fn).apply(null, map(evalArgs, function (evalArg) {\n              return evalArg(scope, args, context);\n            }));\n          };\n        }\n      }\n    } else if (isAccessorNode(this.fn) && isIndexNode(this.fn.index) && this.fn.index.isObjectProperty()) {\n      // execute the function with the right context: the object of the AccessorNode\n      var evalObject = this.fn.object._compile(math, argNames);\n\n      var prop = this.fn.index.getObjectProperty();\n      var _rawArgs = this.args;\n      return function evalFunctionNode(scope, args, context) {\n        var object = evalObject(scope, args, context);\n        validateSafeMethod(object, prop);\n        var isRaw = object[prop] && object[prop].rawArgs;\n        return isRaw ? object[prop](_rawArgs, math, _extends({}, scope, args)) // \"raw\" evaluation\n        : object[prop].apply(object, map(evalArgs, function (evalArg) {\n          // \"regular\" evaluation\n          return evalArg(scope, args, context);\n        }));\n      };\n    } else {\n      // node.fn.isAccessorNode && !node.fn.index.isObjectProperty()\n      // we have to dynamically determine whether the function has a rawArgs property\n      var evalFn = this.fn._compile(math, argNames);\n\n      var _rawArgs2 = this.args;\n      return function evalFunctionNode(scope, args, context) {\n        var fn = evalFn(scope, args, context);\n        var isRaw = fn && fn.rawArgs;\n        return isRaw ? fn(_rawArgs2, math, _extends({}, scope, args)) // \"raw\" evaluation\n        : fn.apply(fn, map(evalArgs, function (evalArg) {\n          // \"regular\" evaluation\n          return evalArg(scope, args, context);\n        }));\n      };\n    }\n  };\n  /**\n   * Execute a callback for each of the child nodes of this node\n   * @param {function(child: Node, path: string, parent: Node)} callback\n   */\n\n\n  FunctionNode.prototype.forEach = function (callback) {\n    callback(this.fn, 'fn', this);\n\n    for (var i = 0; i < this.args.length; i++) {\n      callback(this.args[i], 'args[' + i + ']', this);\n    }\n  };\n  /**\n   * Create a new FunctionNode having it's childs be the results of calling\n   * the provided callback function for each of the childs of the original node.\n   * @param {function(child: Node, path: string, parent: Node): Node} callback\n   * @returns {FunctionNode} Returns a transformed copy of the node\n   */\n\n\n  FunctionNode.prototype.map = function (callback) {\n    var fn = this._ifNode(callback(this.fn, 'fn', this));\n\n    var args = [];\n\n    for (var i = 0; i < this.args.length; i++) {\n      args[i] = this._ifNode(callback(this.args[i], 'args[' + i + ']', this));\n    }\n\n    return new FunctionNode(fn, args);\n  };\n  /**\n   * Create a clone of this node, a shallow copy\n   * @return {FunctionNode}\n   */\n\n\n  FunctionNode.prototype.clone = function () {\n    return new FunctionNode(this.fn, this.args.slice(0));\n  }; // backup Node's toString function\n  // @private\n\n\n  var nodeToString = FunctionNode.prototype.toString;\n  /**\n   * Get string representation. (wrapper function)\n   * This overrides parts of Node's toString function.\n   * If callback is an object containing callbacks, it\n   * calls the correct callback for the current node,\n   * otherwise it falls back to calling Node's toString\n   * function.\n   *\n   * @param {Object} options\n   * @return {string} str\n   * @override\n   */\n\n  FunctionNode.prototype.toString = function (options) {\n    var customString;\n    var name = this.fn.toString(options);\n\n    if (options && typeof options.handler === 'object' && hasOwnProperty(options.handler, name)) {\n      // callback is a map of callback functions\n      customString = options.handler[name](this, options);\n    }\n\n    if (typeof customString !== 'undefined') {\n      return customString;\n    } // fall back to Node's toString\n\n\n    return nodeToString.call(this, options);\n  };\n  /**\n   * Get string representation\n   * @param {Object} options\n   * @return {string} str\n   */\n\n\n  FunctionNode.prototype._toString = function (options) {\n    var args = this.args.map(function (arg) {\n      return arg.toString(options);\n    });\n    var fn = isFunctionAssignmentNode(this.fn) ? '(' + this.fn.toString(options) + ')' : this.fn.toString(options); // format the arguments like \"add(2, 4.2)\"\n\n    return fn + '(' + args.join(', ') + ')';\n  };\n  /**\n   * Get a JSON representation of the node\n   * @returns {Object}\n   */\n\n\n  FunctionNode.prototype.toJSON = function () {\n    return {\n      mathjs: 'FunctionNode',\n      fn: this.fn,\n      args: this.args\n    };\n  };\n  /**\n   * Instantiate an AssignmentNode from its JSON representation\n   * @param {Object} json  An object structured like\n   *                       `{\"mathjs\": \"FunctionNode\", fn: ..., args: ...}`,\n   *                       where mathjs is optional\n   * @returns {FunctionNode}\n   */\n\n\n  FunctionNode.fromJSON = function (json) {\n    return new FunctionNode(json.fn, json.args);\n  };\n  /**\n   * Get HTML representation\n   * @param {Object} options\n   * @return {string} str\n   */\n\n\n  FunctionNode.prototype.toHTML = function (options) {\n    var args = this.args.map(function (arg) {\n      return arg.toHTML(options);\n    }); // format the arguments like \"add(2, 4.2)\"\n\n    return '<span class=\"math-function\">' + escape(this.fn) + '</span><span class=\"math-paranthesis math-round-parenthesis\">(</span>' + args.join('<span class=\"math-separator\">,</span>') + '<span class=\"math-paranthesis math-round-parenthesis\">)</span>';\n  };\n  /*\n   * Expand a LaTeX template\n   *\n   * @param {string} template\n   * @param {Node} node\n   * @param {Object} options\n   * @private\n   **/\n\n\n  function expandTemplate(template, node, options) {\n    var latex = ''; // Match everything of the form ${identifier} or ${identifier[2]} or $$\n    // while submatching identifier and 2 (in the second case)\n\n    var regex = /\\$(?:\\{([a-z_][a-z_0-9]*)(?:\\[([0-9]+)\\])?\\}|\\$)/gi;\n    var inputPos = 0; // position in the input string\n\n    var match;\n\n    while ((match = regex.exec(template)) !== null) {\n      // go through all matches\n      // add everything in front of the match to the LaTeX string\n      latex += template.substring(inputPos, match.index);\n      inputPos = match.index;\n\n      if (match[0] === '$$') {\n        // escaped dollar sign\n        latex += '$';\n        inputPos++;\n      } else {\n        // template parameter\n        inputPos += match[0].length;\n        var property = node[match[1]];\n\n        if (!property) {\n          throw new ReferenceError('Template: Property ' + match[1] + ' does not exist.');\n        }\n\n        if (match[2] === undefined) {\n          // no square brackets\n          switch (typeof property) {\n            case 'string':\n              latex += property;\n              break;\n\n            case 'object':\n              if (isNode(property)) {\n                latex += property.toTex(options);\n              } else if (Array.isArray(property)) {\n                // make array of Nodes into comma separated list\n                latex += property.map(function (arg, index) {\n                  if (isNode(arg)) {\n                    return arg.toTex(options);\n                  }\n\n                  throw new TypeError('Template: ' + match[1] + '[' + index + '] is not a Node.');\n                }).join(',');\n              } else {\n                throw new TypeError('Template: ' + match[1] + ' has to be a Node, String or array of Nodes');\n              }\n\n              break;\n\n            default:\n              throw new TypeError('Template: ' + match[1] + ' has to be a Node, String or array of Nodes');\n          }\n        } else {\n          // with square brackets\n          if (isNode(property[match[2]] && property[match[2]])) {\n            latex += property[match[2]].toTex(options);\n          } else {\n            throw new TypeError('Template: ' + match[1] + '[' + match[2] + '] is not a Node.');\n          }\n        }\n      }\n    }\n\n    latex += template.slice(inputPos); // append rest of the template\n\n    return latex;\n  } // backup Node's toTex function\n  // @private\n\n\n  var nodeToTex = FunctionNode.prototype.toTex;\n  /**\n   * Get LaTeX representation. (wrapper function)\n   * This overrides parts of Node's toTex function.\n   * If callback is an object containing callbacks, it\n   * calls the correct callback for the current node,\n   * otherwise it falls back to calling Node's toTex\n   * function.\n   *\n   * @param {Object} options\n   * @return {string}\n   */\n\n  FunctionNode.prototype.toTex = function (options) {\n    var customTex;\n\n    if (options && typeof options.handler === 'object' && hasOwnProperty(options.handler, this.name)) {\n      // callback is a map of callback functions\n      customTex = options.handler[this.name](this, options);\n    }\n\n    if (typeof customTex !== 'undefined') {\n      return customTex;\n    } // fall back to Node's toTex\n\n\n    return nodeToTex.call(this, options);\n  };\n  /**\n   * Get LaTeX representation\n   * @param {Object} options\n   * @return {string} str\n   */\n\n\n  FunctionNode.prototype._toTex = function (options) {\n    var args = this.args.map(function (arg) {\n      // get LaTeX of the arguments\n      return arg.toTex(options);\n    });\n    var latexConverter;\n\n    if (latexFunctions[this.name]) {\n      latexConverter = latexFunctions[this.name];\n    } // toTex property on the function itself\n\n\n    if (math[this.name] && (typeof math[this.name].toTex === 'function' || typeof math[this.name].toTex === 'object' || typeof math[this.name].toTex === 'string')) {\n      // .toTex is a callback function\n      latexConverter = math[this.name].toTex;\n    }\n\n    var customToTex;\n\n    switch (typeof latexConverter) {\n      case 'function':\n        // a callback function\n        customToTex = latexConverter(this, options);\n        break;\n\n      case 'string':\n        // a template string\n        customToTex = expandTemplate(latexConverter, this, options);\n        break;\n\n      case 'object':\n        // an object with different \"converters\" for different numbers of arguments\n        switch (typeof latexConverter[args.length]) {\n          case 'function':\n            customToTex = latexConverter[args.length](this, options);\n            break;\n\n          case 'string':\n            customToTex = expandTemplate(latexConverter[args.length], this, options);\n            break;\n        }\n\n    }\n\n    if (typeof customToTex !== 'undefined') {\n      return customToTex;\n    }\n\n    return expandTemplate(defaultTemplate, this, options);\n  };\n  /**\n   * Get identifier.\n   * @return {string}\n   */\n\n\n  FunctionNode.prototype.getIdentifier = function () {\n    return this.type + ':' + this.name;\n  };\n\n  return FunctionNode;\n}, {\n  isClass: true,\n  isNode: true\n});","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { factory } from '../utils/factory.js';\nimport { isAccessorNode, isConstantNode, isFunctionNode, isOperatorNode, isSymbolNode } from '../utils/is.js';\nimport { deepMap } from '../utils/collection.js';\nimport { hasOwnProperty } from '../utils/object.js';\nvar name = 'parse';\nvar dependencies = ['typed', 'numeric', 'config', 'AccessorNode', 'ArrayNode', 'AssignmentNode', 'BlockNode', 'ConditionalNode', 'ConstantNode', 'FunctionAssignmentNode', 'FunctionNode', 'IndexNode', 'ObjectNode', 'OperatorNode', 'ParenthesisNode', 'RangeNode', 'RelationalNode', 'SymbolNode'];\nexport var createParse = /* #__PURE__ */factory(name, dependencies, (_ref) => {\n  var {\n    typed,\n    numeric,\n    config,\n    AccessorNode,\n    ArrayNode,\n    AssignmentNode,\n    BlockNode,\n    ConditionalNode,\n    ConstantNode,\n    FunctionAssignmentNode,\n    FunctionNode,\n    IndexNode,\n    ObjectNode,\n    OperatorNode,\n    ParenthesisNode,\n    RangeNode,\n    RelationalNode,\n    SymbolNode\n  } = _ref;\n\n  /**\n   * Parse an expression. Returns a node tree, which can be evaluated by\n   * invoking node.evaluate().\n   *\n   * Note the evaluating arbitrary expressions may involve security risks,\n   * see [https://mathjs.org/docs/expressions/security.html](https://mathjs.org/docs/expressions/security.html) for more information.\n   *\n   * Syntax:\n   *\n   *     math.parse(expr)\n   *     math.parse(expr, options)\n   *     math.parse([expr1, expr2, expr3, ...])\n   *     math.parse([expr1, expr2, expr3, ...], options)\n   *\n   * Example:\n   *\n   *     const node1 = math.parse('sqrt(3^2 + 4^2)')\n   *     node1.compile().evaluate() // 5\n   *\n   *     let scope = {a:3, b:4}\n   *     const node2 = math.parse('a * b') // 12\n   *     const code2 = node2.compile()\n   *     code2.evaluate(scope) // 12\n   *     scope.a = 5\n   *     code2.evaluate(scope) // 20\n   *\n   *     const nodes = math.parse(['a = 3', 'b = 4', 'a * b'])\n   *     nodes[2].compile().evaluate() // 12\n   *\n   * See also:\n   *\n   *     evaluate, compile\n   *\n   * @param {string | string[] | Matrix} expr          Expression to be parsed\n   * @param {{nodes: Object<string, Node>}} [options]  Available options:\n   *                                                   - `nodes` a set of custom nodes\n   * @return {Node | Node[]} node\n   * @throws {Error}\n   */\n  var parse = typed(name, {\n    string: function string(expression) {\n      return parseStart(expression, {});\n    },\n    'Array | Matrix': function ArrayMatrix(expressions) {\n      return parseMultiple(expressions, {});\n    },\n    'string, Object': function stringObject(expression, options) {\n      var extraNodes = options.nodes !== undefined ? options.nodes : {};\n      return parseStart(expression, extraNodes);\n    },\n    'Array | Matrix, Object': parseMultiple\n  });\n\n  function parseMultiple(expressions) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var extraNodes = options.nodes !== undefined ? options.nodes : {}; // parse an array or matrix with expressions\n\n    return deepMap(expressions, function (elem) {\n      if (typeof elem !== 'string') throw new TypeError('String expected');\n      return parseStart(elem, extraNodes);\n    });\n  } // token types enumeration\n\n\n  var TOKENTYPE = {\n    NULL: 0,\n    DELIMITER: 1,\n    NUMBER: 2,\n    SYMBOL: 3,\n    UNKNOWN: 4\n  }; // map with all delimiters\n\n  var DELIMITERS = {\n    ',': true,\n    '(': true,\n    ')': true,\n    '[': true,\n    ']': true,\n    '{': true,\n    '}': true,\n    '\"': true,\n    '\\'': true,\n    ';': true,\n    '+': true,\n    '-': true,\n    '*': true,\n    '.*': true,\n    '/': true,\n    './': true,\n    '%': true,\n    '^': true,\n    '.^': true,\n    '~': true,\n    '!': true,\n    '&': true,\n    '|': true,\n    '^|': true,\n    '=': true,\n    ':': true,\n    '?': true,\n    '==': true,\n    '!=': true,\n    '<': true,\n    '>': true,\n    '<=': true,\n    '>=': true,\n    '<<': true,\n    '>>': true,\n    '>>>': true\n  }; // map with all named delimiters\n\n  var NAMED_DELIMITERS = {\n    mod: true,\n    to: true,\n    in: true,\n    and: true,\n    xor: true,\n    or: true,\n    not: true\n  };\n  var CONSTANTS = {\n    true: true,\n    false: false,\n    null: null,\n    undefined: undefined\n  };\n  var NUMERIC_CONSTANTS = ['NaN', 'Infinity'];\n\n  function initialState() {\n    return {\n      extraNodes: {},\n      // current extra nodes, must be careful not to mutate\n      expression: '',\n      // current expression\n      comment: '',\n      // last parsed comment\n      index: 0,\n      // current index in expr\n      token: '',\n      // current token\n      tokenType: TOKENTYPE.NULL,\n      // type of the token\n      nestingLevel: 0,\n      // level of nesting inside parameters, used to ignore newline characters\n      conditionalLevel: null // when a conditional is being parsed, the level of the conditional is stored here\n\n    };\n  }\n  /**\n   * View upto `length` characters of the expression starting at the current character.\n   *\n   * @param {Object} state\n   * @param {number} [length=1] Number of characters to view\n   * @returns {string}\n   * @private\n   */\n\n\n  function currentString(state, length) {\n    return state.expression.substr(state.index, length);\n  }\n  /**\n   * View the current character. Returns '' if end of expression is reached.\n   *\n   * @param {Object} state\n   * @returns {string}\n   * @private\n   */\n\n\n  function currentCharacter(state) {\n    return currentString(state, 1);\n  }\n  /**\n   * Get the next character from the expression.\n   * The character is stored into the char c. If the end of the expression is\n   * reached, the function puts an empty string in c.\n   * @private\n   */\n\n\n  function next(state) {\n    state.index++;\n  }\n  /**\n   * Preview the previous character from the expression.\n   * @return {string} cNext\n   * @private\n   */\n\n\n  function prevCharacter(state) {\n    return state.expression.charAt(state.index - 1);\n  }\n  /**\n   * Preview the next character from the expression.\n   * @return {string} cNext\n   * @private\n   */\n\n\n  function nextCharacter(state) {\n    return state.expression.charAt(state.index + 1);\n  }\n  /**\n   * Get next token in the current string expr.\n   * The token and token type are available as token and tokenType\n   * @private\n   */\n\n\n  function getToken(state) {\n    state.tokenType = TOKENTYPE.NULL;\n    state.token = '';\n    state.comment = ''; // skip over whitespaces\n    // space, tab, and newline when inside parameters\n\n    while (parse.isWhitespace(currentCharacter(state), state.nestingLevel)) {\n      next(state);\n    } // skip comment\n\n\n    if (currentCharacter(state) === '#') {\n      while (currentCharacter(state) !== '\\n' && currentCharacter(state) !== '') {\n        state.comment += currentCharacter(state);\n        next(state);\n      }\n    } // check for end of expression\n\n\n    if (currentCharacter(state) === '') {\n      // token is still empty\n      state.tokenType = TOKENTYPE.DELIMITER;\n      return;\n    } // check for new line character\n\n\n    if (currentCharacter(state) === '\\n' && !state.nestingLevel) {\n      state.tokenType = TOKENTYPE.DELIMITER;\n      state.token = currentCharacter(state);\n      next(state);\n      return;\n    }\n\n    var c1 = currentCharacter(state);\n    var c2 = currentString(state, 2);\n    var c3 = currentString(state, 3);\n\n    if (c3.length === 3 && DELIMITERS[c3]) {\n      state.tokenType = TOKENTYPE.DELIMITER;\n      state.token = c3;\n      next(state);\n      next(state);\n      next(state);\n      return;\n    } // check for delimiters consisting of 2 characters\n\n\n    if (c2.length === 2 && DELIMITERS[c2]) {\n      state.tokenType = TOKENTYPE.DELIMITER;\n      state.token = c2;\n      next(state);\n      next(state);\n      return;\n    } // check for delimiters consisting of 1 character\n\n\n    if (DELIMITERS[c1]) {\n      state.tokenType = TOKENTYPE.DELIMITER;\n      state.token = c1;\n      next(state);\n      return;\n    } // check for a number\n\n\n    if (parse.isDigitDot(c1)) {\n      state.tokenType = TOKENTYPE.NUMBER; // check for binary, octal, or hex\n\n      var _c = currentString(state, 2);\n\n      if (_c === '0b' || _c === '0o' || _c === '0x') {\n        state.token += currentCharacter(state);\n        next(state);\n        state.token += currentCharacter(state);\n        next(state);\n\n        while (parse.isHexDigit(currentCharacter(state))) {\n          state.token += currentCharacter(state);\n          next(state);\n        }\n\n        return;\n      } // get number, can have a single dot\n\n\n      if (currentCharacter(state) === '.') {\n        state.token += currentCharacter(state);\n        next(state);\n\n        if (!parse.isDigit(currentCharacter(state))) {\n          // this is no number, it is just a dot (can be dot notation)\n          state.tokenType = TOKENTYPE.DELIMITER;\n        }\n      } else {\n        while (parse.isDigit(currentCharacter(state))) {\n          state.token += currentCharacter(state);\n          next(state);\n        }\n\n        if (parse.isDecimalMark(currentCharacter(state), nextCharacter(state))) {\n          state.token += currentCharacter(state);\n          next(state);\n        }\n      }\n\n      while (parse.isDigit(currentCharacter(state))) {\n        state.token += currentCharacter(state);\n        next(state);\n      } // check for exponential notation like \"2.3e-4\", \"1.23e50\" or \"2e+4\"\n\n\n      if (currentCharacter(state) === 'E' || currentCharacter(state) === 'e') {\n        if (parse.isDigit(nextCharacter(state)) || nextCharacter(state) === '-' || nextCharacter(state) === '+') {\n          state.token += currentCharacter(state);\n          next(state);\n\n          if (currentCharacter(state) === '+' || currentCharacter(state) === '-') {\n            state.token += currentCharacter(state);\n            next(state);\n          } // Scientific notation MUST be followed by an exponent\n\n\n          if (!parse.isDigit(currentCharacter(state))) {\n            throw createSyntaxError(state, 'Digit expected, got \"' + currentCharacter(state) + '\"');\n          }\n\n          while (parse.isDigit(currentCharacter(state))) {\n            state.token += currentCharacter(state);\n            next(state);\n          }\n\n          if (parse.isDecimalMark(currentCharacter(state), nextCharacter(state))) {\n            throw createSyntaxError(state, 'Digit expected, got \"' + currentCharacter(state) + '\"');\n          }\n        } else if (nextCharacter(state) === '.') {\n          next(state);\n          throw createSyntaxError(state, 'Digit expected, got \"' + currentCharacter(state) + '\"');\n        }\n      }\n\n      return;\n    } // check for variables, functions, named operators\n\n\n    if (parse.isAlpha(currentCharacter(state), prevCharacter(state), nextCharacter(state))) {\n      while (parse.isAlpha(currentCharacter(state), prevCharacter(state), nextCharacter(state)) || parse.isDigit(currentCharacter(state))) {\n        state.token += currentCharacter(state);\n        next(state);\n      }\n\n      if (hasOwnProperty(NAMED_DELIMITERS, state.token)) {\n        state.tokenType = TOKENTYPE.DELIMITER;\n      } else {\n        state.tokenType = TOKENTYPE.SYMBOL;\n      }\n\n      return;\n    } // something unknown is found, wrong characters -> a syntax error\n\n\n    state.tokenType = TOKENTYPE.UNKNOWN;\n\n    while (currentCharacter(state) !== '') {\n      state.token += currentCharacter(state);\n      next(state);\n    }\n\n    throw createSyntaxError(state, 'Syntax error in part \"' + state.token + '\"');\n  }\n  /**\n   * Get next token and skip newline tokens\n   */\n\n\n  function getTokenSkipNewline(state) {\n    do {\n      getToken(state);\n    } while (state.token === '\\n'); // eslint-disable-line no-unmodified-loop-condition\n\n  }\n  /**\n   * Open parameters.\n   * New line characters will be ignored until closeParams(state) is called\n   */\n\n\n  function openParams(state) {\n    state.nestingLevel++;\n  }\n  /**\n   * Close parameters.\n   * New line characters will no longer be ignored\n   */\n\n\n  function closeParams(state) {\n    state.nestingLevel--;\n  }\n  /**\n   * Checks whether the current character `c` is a valid alpha character:\n   *\n   * - A latin letter (upper or lower case) Ascii: a-z, A-Z\n   * - An underscore                        Ascii: _\n   * - A dollar sign                        Ascii: $\n   * - A latin letter with accents          Unicode: \\u00C0 - \\u02AF\n   * - A greek letter                       Unicode: \\u0370 - \\u03FF\n   * - A mathematical alphanumeric symbol   Unicode: \\u{1D400} - \\u{1D7FF} excluding invalid code points\n   *\n   * The previous and next characters are needed to determine whether\n   * this character is part of a unicode surrogate pair.\n   *\n   * @param {string} c      Current character in the expression\n   * @param {string} cPrev  Previous character\n   * @param {string} cNext  Next character\n   * @return {boolean}\n   */\n\n\n  parse.isAlpha = function isAlpha(c, cPrev, cNext) {\n    return parse.isValidLatinOrGreek(c) || parse.isValidMathSymbol(c, cNext) || parse.isValidMathSymbol(cPrev, c);\n  };\n  /**\n   * Test whether a character is a valid latin, greek, or letter-like character\n   * @param {string} c\n   * @return {boolean}\n   */\n\n\n  parse.isValidLatinOrGreek = function isValidLatinOrGreek(c) {\n    return /^[a-zA-Z_$\\u00C0-\\u02AF\\u0370-\\u03FF\\u2100-\\u214F]$/.test(c);\n  };\n  /**\n   * Test whether two given 16 bit characters form a surrogate pair of a\n   * unicode math symbol.\n   *\n   * https://unicode-table.com/en/\n   * https://www.wikiwand.com/en/Mathematical_operators_and_symbols_in_Unicode\n   *\n   * Note: In ES6 will be unicode aware:\n   * https://stackoverflow.com/questions/280712/javascript-unicode-regexes\n   * https://mathiasbynens.be/notes/es6-unicode-regex\n   *\n   * @param {string} high\n   * @param {string} low\n   * @return {boolean}\n   */\n\n\n  parse.isValidMathSymbol = function isValidMathSymbol(high, low) {\n    return /^[\\uD835]$/.test(high) && /^[\\uDC00-\\uDFFF]$/.test(low) && /^[^\\uDC55\\uDC9D\\uDCA0\\uDCA1\\uDCA3\\uDCA4\\uDCA7\\uDCA8\\uDCAD\\uDCBA\\uDCBC\\uDCC4\\uDD06\\uDD0B\\uDD0C\\uDD15\\uDD1D\\uDD3A\\uDD3F\\uDD45\\uDD47-\\uDD49\\uDD51\\uDEA6\\uDEA7\\uDFCC\\uDFCD]$/.test(low);\n  };\n  /**\n   * Check whether given character c is a white space character: space, tab, or enter\n   * @param {string} c\n   * @param {number} nestingLevel\n   * @return {boolean}\n   */\n\n\n  parse.isWhitespace = function isWhitespace(c, nestingLevel) {\n    // TODO: also take '\\r' carriage return as newline? Or does that give problems on mac?\n    return c === ' ' || c === '\\t' || c === '\\n' && nestingLevel > 0;\n  };\n  /**\n   * Test whether the character c is a decimal mark (dot).\n   * This is the case when it's not the start of a delimiter '.*', './', or '.^'\n   * @param {string} c\n   * @param {string} cNext\n   * @return {boolean}\n   */\n\n\n  parse.isDecimalMark = function isDecimalMark(c, cNext) {\n    return c === '.' && cNext !== '/' && cNext !== '*' && cNext !== '^';\n  };\n  /**\n   * checks if the given char c is a digit or dot\n   * @param {string} c   a string with one character\n   * @return {boolean}\n   */\n\n\n  parse.isDigitDot = function isDigitDot(c) {\n    return c >= '0' && c <= '9' || c === '.';\n  };\n  /**\n   * checks if the given char c is a digit\n   * @param {string} c   a string with one character\n   * @return {boolean}\n   */\n\n\n  parse.isDigit = function isDigit(c) {\n    return c >= '0' && c <= '9';\n  };\n  /**\n   * checks if the given char c is a hex digit\n   * @param {string} c   a string with one character\n   * @return {boolean}\n   */\n\n\n  parse.isHexDigit = function isHexDigit(c) {\n    return c >= '0' && c <= '9' || c >= 'a' && c <= 'f' || c >= 'A' && c <= 'F';\n  };\n  /**\n   * Start of the parse levels below, in order of precedence\n   * @return {Node} node\n   * @private\n   */\n\n\n  function parseStart(expression, extraNodes) {\n    var state = initialState();\n\n    _extends(state, {\n      expression,\n      extraNodes\n    });\n\n    getToken(state);\n    var node = parseBlock(state); // check for garbage at the end of the expression\n    // an expression ends with a empty character '' and tokenType DELIMITER\n\n    if (state.token !== '') {\n      if (state.tokenType === TOKENTYPE.DELIMITER) {\n        // user entered a not existing operator like \"//\"\n        // TODO: give hints for aliases, for example with \"<>\" give as hint \" did you mean !== ?\"\n        throw createError(state, 'Unexpected operator ' + state.token);\n      } else {\n        throw createSyntaxError(state, 'Unexpected part \"' + state.token + '\"');\n      }\n    }\n\n    return node;\n  }\n  /**\n   * Parse a block with expressions. Expressions can be separated by a newline\n   * character '\\n', or by a semicolon ';'. In case of a semicolon, no output\n   * of the preceding line is returned.\n   * @return {Node} node\n   * @private\n   */\n\n\n  function parseBlock(state) {\n    var node;\n    var blocks = [];\n    var visible;\n\n    if (state.token !== '' && state.token !== '\\n' && state.token !== ';') {\n      node = parseAssignment(state);\n      node.comment = state.comment;\n    } // TODO: simplify this loop\n\n\n    while (state.token === '\\n' || state.token === ';') {\n      // eslint-disable-line no-unmodified-loop-condition\n      if (blocks.length === 0 && node) {\n        visible = state.token !== ';';\n        blocks.push({\n          node: node,\n          visible: visible\n        });\n      }\n\n      getToken(state);\n\n      if (state.token !== '\\n' && state.token !== ';' && state.token !== '') {\n        node = parseAssignment(state);\n        node.comment = state.comment;\n        visible = state.token !== ';';\n        blocks.push({\n          node: node,\n          visible: visible\n        });\n      }\n    }\n\n    if (blocks.length > 0) {\n      return new BlockNode(blocks);\n    } else {\n      if (!node) {\n        node = new ConstantNode(undefined);\n        node.comment = state.comment;\n      }\n\n      return node;\n    }\n  }\n  /**\n   * Assignment of a function or variable,\n   * - can be a variable like 'a=2.3'\n   * - or a updating an existing variable like 'matrix(2,3:5)=[6,7,8]'\n   * - defining a function like 'f(x) = x^2'\n   * @return {Node} node\n   * @private\n   */\n\n\n  function parseAssignment(state) {\n    var name, args, value, valid;\n    var node = parseConditional(state);\n\n    if (state.token === '=') {\n      if (isSymbolNode(node)) {\n        // parse a variable assignment like 'a = 2/3'\n        name = node.name;\n        getTokenSkipNewline(state);\n        value = parseAssignment(state);\n        return new AssignmentNode(new SymbolNode(name), value);\n      } else if (isAccessorNode(node)) {\n        // parse a matrix subset assignment like 'A[1,2] = 4'\n        getTokenSkipNewline(state);\n        value = parseAssignment(state);\n        return new AssignmentNode(node.object, node.index, value);\n      } else if (isFunctionNode(node) && isSymbolNode(node.fn)) {\n        // parse function assignment like 'f(x) = x^2'\n        valid = true;\n        args = [];\n        name = node.name;\n        node.args.forEach(function (arg, index) {\n          if (isSymbolNode(arg)) {\n            args[index] = arg.name;\n          } else {\n            valid = false;\n          }\n        });\n\n        if (valid) {\n          getTokenSkipNewline(state);\n          value = parseAssignment(state);\n          return new FunctionAssignmentNode(name, args, value);\n        }\n      }\n\n      throw createSyntaxError(state, 'Invalid left hand side of assignment operator =');\n    }\n\n    return node;\n  }\n  /**\n   * conditional operation\n   *\n   *     condition ? truePart : falsePart\n   *\n   * Note: conditional operator is right-associative\n   *\n   * @return {Node} node\n   * @private\n   */\n\n\n  function parseConditional(state) {\n    var node = parseLogicalOr(state);\n\n    while (state.token === '?') {\n      // eslint-disable-line no-unmodified-loop-condition\n      // set a conditional level, the range operator will be ignored as long\n      // as conditionalLevel === state.nestingLevel.\n      var prev = state.conditionalLevel;\n      state.conditionalLevel = state.nestingLevel;\n      getTokenSkipNewline(state);\n      var condition = node;\n      var trueExpr = parseAssignment(state);\n      if (state.token !== ':') throw createSyntaxError(state, 'False part of conditional expression expected');\n      state.conditionalLevel = null;\n      getTokenSkipNewline(state);\n      var falseExpr = parseAssignment(state); // Note: check for conditional operator again, right associativity\n\n      node = new ConditionalNode(condition, trueExpr, falseExpr); // restore the previous conditional level\n\n      state.conditionalLevel = prev;\n    }\n\n    return node;\n  }\n  /**\n   * logical or, 'x or y'\n   * @return {Node} node\n   * @private\n   */\n\n\n  function parseLogicalOr(state) {\n    var node = parseLogicalXor(state);\n\n    while (state.token === 'or') {\n      // eslint-disable-line no-unmodified-loop-condition\n      getTokenSkipNewline(state);\n      node = new OperatorNode('or', 'or', [node, parseLogicalXor(state)]);\n    }\n\n    return node;\n  }\n  /**\n   * logical exclusive or, 'x xor y'\n   * @return {Node} node\n   * @private\n   */\n\n\n  function parseLogicalXor(state) {\n    var node = parseLogicalAnd(state);\n\n    while (state.token === 'xor') {\n      // eslint-disable-line no-unmodified-loop-condition\n      getTokenSkipNewline(state);\n      node = new OperatorNode('xor', 'xor', [node, parseLogicalAnd(state)]);\n    }\n\n    return node;\n  }\n  /**\n   * logical and, 'x and y'\n   * @return {Node} node\n   * @private\n   */\n\n\n  function parseLogicalAnd(state) {\n    var node = parseBitwiseOr(state);\n\n    while (state.token === 'and') {\n      // eslint-disable-line no-unmodified-loop-condition\n      getTokenSkipNewline(state);\n      node = new OperatorNode('and', 'and', [node, parseBitwiseOr(state)]);\n    }\n\n    return node;\n  }\n  /**\n   * bitwise or, 'x | y'\n   * @return {Node} node\n   * @private\n   */\n\n\n  function parseBitwiseOr(state) {\n    var node = parseBitwiseXor(state);\n\n    while (state.token === '|') {\n      // eslint-disable-line no-unmodified-loop-condition\n      getTokenSkipNewline(state);\n      node = new OperatorNode('|', 'bitOr', [node, parseBitwiseXor(state)]);\n    }\n\n    return node;\n  }\n  /**\n   * bitwise exclusive or (xor), 'x ^| y'\n   * @return {Node} node\n   * @private\n   */\n\n\n  function parseBitwiseXor(state) {\n    var node = parseBitwiseAnd(state);\n\n    while (state.token === '^|') {\n      // eslint-disable-line no-unmodified-loop-condition\n      getTokenSkipNewline(state);\n      node = new OperatorNode('^|', 'bitXor', [node, parseBitwiseAnd(state)]);\n    }\n\n    return node;\n  }\n  /**\n   * bitwise and, 'x & y'\n   * @return {Node} node\n   * @private\n   */\n\n\n  function parseBitwiseAnd(state) {\n    var node = parseRelational(state);\n\n    while (state.token === '&') {\n      // eslint-disable-line no-unmodified-loop-condition\n      getTokenSkipNewline(state);\n      node = new OperatorNode('&', 'bitAnd', [node, parseRelational(state)]);\n    }\n\n    return node;\n  }\n  /**\n   * Parse a chained conditional, like 'a > b >= c'\n   * @return {Node} node\n   */\n\n\n  function parseRelational(state) {\n    var params = [parseShift(state)];\n    var conditionals = [];\n    var operators = {\n      '==': 'equal',\n      '!=': 'unequal',\n      '<': 'smaller',\n      '>': 'larger',\n      '<=': 'smallerEq',\n      '>=': 'largerEq'\n    };\n\n    while (hasOwnProperty(operators, state.token)) {\n      // eslint-disable-line no-unmodified-loop-condition\n      var cond = {\n        name: state.token,\n        fn: operators[state.token]\n      };\n      conditionals.push(cond);\n      getTokenSkipNewline(state);\n      params.push(parseShift(state));\n    }\n\n    if (params.length === 1) {\n      return params[0];\n    } else if (params.length === 2) {\n      return new OperatorNode(conditionals[0].name, conditionals[0].fn, params);\n    } else {\n      return new RelationalNode(conditionals.map(c => c.fn), params);\n    }\n  }\n  /**\n   * Bitwise left shift, bitwise right arithmetic shift, bitwise right logical shift\n   * @return {Node} node\n   * @private\n   */\n\n\n  function parseShift(state) {\n    var node, name, fn, params;\n    node = parseConversion(state);\n    var operators = {\n      '<<': 'leftShift',\n      '>>': 'rightArithShift',\n      '>>>': 'rightLogShift'\n    };\n\n    while (hasOwnProperty(operators, state.token)) {\n      name = state.token;\n      fn = operators[name];\n      getTokenSkipNewline(state);\n      params = [node, parseConversion(state)];\n      node = new OperatorNode(name, fn, params);\n    }\n\n    return node;\n  }\n  /**\n   * conversion operators 'to' and 'in'\n   * @return {Node} node\n   * @private\n   */\n\n\n  function parseConversion(state) {\n    var node, name, fn, params;\n    node = parseRange(state);\n    var operators = {\n      to: 'to',\n      in: 'to' // alias of 'to'\n\n    };\n\n    while (hasOwnProperty(operators, state.token)) {\n      name = state.token;\n      fn = operators[name];\n      getTokenSkipNewline(state);\n\n      if (name === 'in' && state.token === '') {\n        // end of expression -> this is the unit 'in' ('inch')\n        node = new OperatorNode('*', 'multiply', [node, new SymbolNode('in')], true);\n      } else {\n        // operator 'a to b' or 'a in b'\n        params = [node, parseRange(state)];\n        node = new OperatorNode(name, fn, params);\n      }\n    }\n\n    return node;\n  }\n  /**\n   * parse range, \"start:end\", \"start:step:end\", \":\", \"start:\", \":end\", etc\n   * @return {Node} node\n   * @private\n   */\n\n\n  function parseRange(state) {\n    var node;\n    var params = [];\n\n    if (state.token === ':') {\n      // implicit start=1 (one-based)\n      node = new ConstantNode(1);\n    } else {\n      // explicit start\n      node = parseAddSubtract(state);\n    }\n\n    if (state.token === ':' && state.conditionalLevel !== state.nestingLevel) {\n      // we ignore the range operator when a conditional operator is being processed on the same level\n      params.push(node); // parse step and end\n\n      while (state.token === ':' && params.length < 3) {\n        // eslint-disable-line no-unmodified-loop-condition\n        getTokenSkipNewline(state);\n\n        if (state.token === ')' || state.token === ']' || state.token === ',' || state.token === '') {\n          // implicit end\n          params.push(new SymbolNode('end'));\n        } else {\n          // explicit end\n          params.push(parseAddSubtract(state));\n        }\n      }\n\n      if (params.length === 3) {\n        // params = [start, step, end]\n        node = new RangeNode(params[0], params[2], params[1]); // start, end, step\n      } else {\n        // length === 2\n        // params = [start, end]\n        node = new RangeNode(params[0], params[1]); // start, end\n      }\n    }\n\n    return node;\n  }\n  /**\n   * add or subtract\n   * @return {Node} node\n   * @private\n   */\n\n\n  function parseAddSubtract(state) {\n    var node, name, fn, params;\n    node = parseMultiplyDivide(state);\n    var operators = {\n      '+': 'add',\n      '-': 'subtract'\n    };\n\n    while (hasOwnProperty(operators, state.token)) {\n      name = state.token;\n      fn = operators[name];\n      getTokenSkipNewline(state);\n      params = [node, parseMultiplyDivide(state)];\n      node = new OperatorNode(name, fn, params);\n    }\n\n    return node;\n  }\n  /**\n   * multiply, divide, modulus\n   * @return {Node} node\n   * @private\n   */\n\n\n  function parseMultiplyDivide(state) {\n    var node, last, name, fn;\n    node = parseImplicitMultiplication(state);\n    last = node;\n    var operators = {\n      '*': 'multiply',\n      '.*': 'dotMultiply',\n      '/': 'divide',\n      './': 'dotDivide',\n      '%': 'mod',\n      mod: 'mod'\n    };\n\n    while (true) {\n      if (hasOwnProperty(operators, state.token)) {\n        // explicit operators\n        name = state.token;\n        fn = operators[name];\n        getTokenSkipNewline(state);\n        last = parseImplicitMultiplication(state);\n        node = new OperatorNode(name, fn, [node, last]);\n      } else {\n        break;\n      }\n    }\n\n    return node;\n  }\n  /**\n   * implicit multiplication\n   * @return {Node} node\n   * @private\n   */\n\n\n  function parseImplicitMultiplication(state) {\n    var node, last;\n    node = parseRule2(state);\n    last = node;\n\n    while (true) {\n      if (state.tokenType === TOKENTYPE.SYMBOL || state.token === 'in' && isConstantNode(node) || state.tokenType === TOKENTYPE.NUMBER && !isConstantNode(last) && (!isOperatorNode(last) || last.op === '!') || state.token === '(') {\n        // parse implicit multiplication\n        //\n        // symbol:      implicit multiplication like '2a', '(2+3)a', 'a b'\n        // number:      implicit multiplication like '(2+3)2'\n        // parenthesis: implicit multiplication like '2(3+4)', '(3+4)(1+2)'\n        last = parseRule2(state);\n        node = new OperatorNode('*', 'multiply', [node, last], true\n        /* implicit */\n        );\n      } else {\n        break;\n      }\n    }\n\n    return node;\n  }\n  /**\n   * Infamous \"rule 2\" as described in https://github.com/josdejong/mathjs/issues/792#issuecomment-361065370\n   * Explicit division gets higher precedence than implicit multiplication\n   * when the division matches this pattern: [number] / [number] [symbol]\n   * @return {Node} node\n   * @private\n   */\n\n\n  function parseRule2(state) {\n    var node = parseUnary(state);\n    var last = node;\n    var tokenStates = [];\n\n    while (true) {\n      // Match the \"number /\" part of the pattern \"number / number symbol\"\n      if (state.token === '/' && isConstantNode(last)) {\n        // Look ahead to see if the next token is a number\n        tokenStates.push(_extends({}, state));\n        getTokenSkipNewline(state); // Match the \"number / number\" part of the pattern\n\n        if (state.tokenType === TOKENTYPE.NUMBER) {\n          // Look ahead again\n          tokenStates.push(_extends({}, state));\n          getTokenSkipNewline(state); // Match the \"symbol\" part of the pattern, or a left parenthesis\n\n          if (state.tokenType === TOKENTYPE.SYMBOL || state.token === '(') {\n            // We've matched the pattern \"number / number symbol\".\n            // Rewind once and build the \"number / number\" node; the symbol will be consumed later\n            _extends(state, tokenStates.pop());\n\n            tokenStates.pop();\n            last = parseUnary(state);\n            node = new OperatorNode('/', 'divide', [node, last]);\n          } else {\n            // Not a match, so rewind\n            tokenStates.pop();\n\n            _extends(state, tokenStates.pop());\n\n            break;\n          }\n        } else {\n          // Not a match, so rewind\n          _extends(state, tokenStates.pop());\n\n          break;\n        }\n      } else {\n        break;\n      }\n    }\n\n    return node;\n  }\n  /**\n   * Unary plus and minus, and logical and bitwise not\n   * @return {Node} node\n   * @private\n   */\n\n\n  function parseUnary(state) {\n    var name, params, fn;\n    var operators = {\n      '-': 'unaryMinus',\n      '+': 'unaryPlus',\n      '~': 'bitNot',\n      not: 'not'\n    };\n\n    if (hasOwnProperty(operators, state.token)) {\n      fn = operators[state.token];\n      name = state.token;\n      getTokenSkipNewline(state);\n      params = [parseUnary(state)];\n      return new OperatorNode(name, fn, params);\n    }\n\n    return parsePow(state);\n  }\n  /**\n   * power\n   * Note: power operator is right associative\n   * @return {Node} node\n   * @private\n   */\n\n\n  function parsePow(state) {\n    var node, name, fn, params;\n    node = parseLeftHandOperators(state);\n\n    if (state.token === '^' || state.token === '.^') {\n      name = state.token;\n      fn = name === '^' ? 'pow' : 'dotPow';\n      getTokenSkipNewline(state);\n      params = [node, parseUnary(state)]; // Go back to unary, we can have '2^-3'\n\n      node = new OperatorNode(name, fn, params);\n    }\n\n    return node;\n  }\n  /**\n   * Left hand operators: factorial x!, ctranspose x'\n   * @return {Node} node\n   * @private\n   */\n\n\n  function parseLeftHandOperators(state) {\n    var node, name, fn, params;\n    node = parseCustomNodes(state);\n    var operators = {\n      '!': 'factorial',\n      '\\'': 'ctranspose'\n    };\n\n    while (hasOwnProperty(operators, state.token)) {\n      name = state.token;\n      fn = operators[name];\n      getToken(state);\n      params = [node];\n      node = new OperatorNode(name, fn, params);\n      node = parseAccessors(state, node);\n    }\n\n    return node;\n  }\n  /**\n   * Parse a custom node handler. A node handler can be used to process\n   * nodes in a custom way, for example for handling a plot.\n   *\n   * A handler must be passed as second argument of the parse function.\n   * - must extend math.Node\n   * - must contain a function _compile(defs: Object) : string\n   * - must contain a function find(filter: Object) : Node[]\n   * - must contain a function toString() : string\n   * - the constructor is called with a single argument containing all parameters\n   *\n   * For example:\n   *\n   *     nodes = {\n   *       'plot': PlotHandler\n   *     }\n   *\n   * The constructor of the handler is called as:\n   *\n   *     node = new PlotHandler(params)\n   *\n   * The handler will be invoked when evaluating an expression like:\n   *\n   *     node = math.parse('plot(sin(x), x)', nodes)\n   *\n   * @return {Node} node\n   * @private\n   */\n\n\n  function parseCustomNodes(state) {\n    var params = [];\n\n    if (state.tokenType === TOKENTYPE.SYMBOL && hasOwnProperty(state.extraNodes, state.token)) {\n      var CustomNode = state.extraNodes[state.token];\n      getToken(state); // parse parameters\n\n      if (state.token === '(') {\n        params = [];\n        openParams(state);\n        getToken(state);\n\n        if (state.token !== ')') {\n          params.push(parseAssignment(state)); // parse a list with parameters\n\n          while (state.token === ',') {\n            // eslint-disable-line no-unmodified-loop-condition\n            getToken(state);\n            params.push(parseAssignment(state));\n          }\n        }\n\n        if (state.token !== ')') {\n          throw createSyntaxError(state, 'Parenthesis ) expected');\n        }\n\n        closeParams(state);\n        getToken(state);\n      } // create a new custom node\n      // noinspection JSValidateTypes\n\n\n      return new CustomNode(params);\n    }\n\n    return parseSymbol(state);\n  }\n  /**\n   * parse symbols: functions, variables, constants, units\n   * @return {Node} node\n   * @private\n   */\n\n\n  function parseSymbol(state) {\n    var node, name;\n\n    if (state.tokenType === TOKENTYPE.SYMBOL || state.tokenType === TOKENTYPE.DELIMITER && state.token in NAMED_DELIMITERS) {\n      name = state.token;\n      getToken(state);\n\n      if (hasOwnProperty(CONSTANTS, name)) {\n        // true, false, null, ...\n        node = new ConstantNode(CONSTANTS[name]);\n      } else if (NUMERIC_CONSTANTS.indexOf(name) !== -1) {\n        // NaN, Infinity\n        node = new ConstantNode(numeric(name, 'number'));\n      } else {\n        node = new SymbolNode(name);\n      } // parse function parameters and matrix index\n\n\n      node = parseAccessors(state, node);\n      return node;\n    }\n\n    return parseDoubleQuotesString(state);\n  }\n  /**\n   * parse accessors:\n   * - function invocation in round brackets (...), for example sqrt(2)\n   * - index enclosed in square brackets [...], for example A[2,3]\n   * - dot notation for properties, like foo.bar\n   * @param {Object} state\n   * @param {Node} node    Node on which to apply the parameters. If there\n   *                       are no parameters in the expression, the node\n   *                       itself is returned\n   * @param {string[]} [types]  Filter the types of notations\n   *                            can be ['(', '[', '.']\n   * @return {Node} node\n   * @private\n   */\n\n\n  function parseAccessors(state, node, types) {\n    var params;\n\n    while ((state.token === '(' || state.token === '[' || state.token === '.') && (!types || types.indexOf(state.token) !== -1)) {\n      // eslint-disable-line no-unmodified-loop-condition\n      params = [];\n\n      if (state.token === '(') {\n        if (isSymbolNode(node) || isAccessorNode(node)) {\n          // function invocation like fn(2, 3) or obj.fn(2, 3)\n          openParams(state);\n          getToken(state);\n\n          if (state.token !== ')') {\n            params.push(parseAssignment(state)); // parse a list with parameters\n\n            while (state.token === ',') {\n              // eslint-disable-line no-unmodified-loop-condition\n              getToken(state);\n              params.push(parseAssignment(state));\n            }\n          }\n\n          if (state.token !== ')') {\n            throw createSyntaxError(state, 'Parenthesis ) expected');\n          }\n\n          closeParams(state);\n          getToken(state);\n          node = new FunctionNode(node, params);\n        } else {\n          // implicit multiplication like (2+3)(4+5) or sqrt(2)(1+2)\n          // don't parse it here but let it be handled by parseImplicitMultiplication\n          // with correct precedence\n          return node;\n        }\n      } else if (state.token === '[') {\n        // index notation like variable[2, 3]\n        openParams(state);\n        getToken(state);\n\n        if (state.token !== ']') {\n          params.push(parseAssignment(state)); // parse a list with parameters\n\n          while (state.token === ',') {\n            // eslint-disable-line no-unmodified-loop-condition\n            getToken(state);\n            params.push(parseAssignment(state));\n          }\n        }\n\n        if (state.token !== ']') {\n          throw createSyntaxError(state, 'Parenthesis ] expected');\n        }\n\n        closeParams(state);\n        getToken(state);\n        node = new AccessorNode(node, new IndexNode(params));\n      } else {\n        // dot notation like variable.prop\n        getToken(state);\n\n        if (state.tokenType !== TOKENTYPE.SYMBOL) {\n          throw createSyntaxError(state, 'Property name expected after dot');\n        }\n\n        params.push(new ConstantNode(state.token));\n        getToken(state);\n        var dotNotation = true;\n        node = new AccessorNode(node, new IndexNode(params, dotNotation));\n      }\n    }\n\n    return node;\n  }\n  /**\n   * Parse a double quotes string.\n   * @return {Node} node\n   * @private\n   */\n\n\n  function parseDoubleQuotesString(state) {\n    var node, str;\n\n    if (state.token === '\"') {\n      str = parseDoubleQuotesStringToken(state); // create constant\n\n      node = new ConstantNode(str); // parse index parameters\n\n      node = parseAccessors(state, node);\n      return node;\n    }\n\n    return parseSingleQuotesString(state);\n  }\n  /**\n   * Parse a string surrounded by double quotes \"...\"\n   * @return {string}\n   */\n\n\n  function parseDoubleQuotesStringToken(state) {\n    var str = '';\n\n    while (currentCharacter(state) !== '' && currentCharacter(state) !== '\"') {\n      if (currentCharacter(state) === '\\\\') {\n        // escape character, immediately process the next\n        // character to prevent stopping at a next '\\\"'\n        str += currentCharacter(state);\n        next(state);\n      }\n\n      str += currentCharacter(state);\n      next(state);\n    }\n\n    getToken(state);\n\n    if (state.token !== '\"') {\n      throw createSyntaxError(state, 'End of string \" expected');\n    }\n\n    getToken(state);\n    return JSON.parse('\"' + str + '\"'); // unescape escaped characters\n  }\n  /**\n   * Parse a single quotes string.\n   * @return {Node} node\n   * @private\n   */\n\n\n  function parseSingleQuotesString(state) {\n    var node, str;\n\n    if (state.token === '\\'') {\n      str = parseSingleQuotesStringToken(state); // create constant\n\n      node = new ConstantNode(str); // parse index parameters\n\n      node = parseAccessors(state, node);\n      return node;\n    }\n\n    return parseMatrix(state);\n  }\n  /**\n   * Parse a string surrounded by single quotes '...'\n   * @return {string}\n   */\n\n\n  function parseSingleQuotesStringToken(state) {\n    var str = '';\n\n    while (currentCharacter(state) !== '' && currentCharacter(state) !== '\\'') {\n      if (currentCharacter(state) === '\\\\') {\n        // escape character, immediately process the next\n        // character to prevent stopping at a next '\\''\n        str += currentCharacter(state);\n        next(state);\n      }\n\n      str += currentCharacter(state);\n      next(state);\n    }\n\n    getToken(state);\n\n    if (state.token !== '\\'') {\n      throw createSyntaxError(state, 'End of string \\' expected');\n    }\n\n    getToken(state);\n    return JSON.parse('\"' + str + '\"'); // unescape escaped characters\n  }\n  /**\n   * parse the matrix\n   * @return {Node} node\n   * @private\n   */\n\n\n  function parseMatrix(state) {\n    var array, params, rows, cols;\n\n    if (state.token === '[') {\n      // matrix [...]\n      openParams(state);\n      getToken(state);\n\n      if (state.token !== ']') {\n        // this is a non-empty matrix\n        var row = parseRow(state);\n\n        if (state.token === ';') {\n          // 2 dimensional array\n          rows = 1;\n          params = [row]; // the rows of the matrix are separated by dot-comma's\n\n          while (state.token === ';') {\n            // eslint-disable-line no-unmodified-loop-condition\n            getToken(state);\n            params[rows] = parseRow(state);\n            rows++;\n          }\n\n          if (state.token !== ']') {\n            throw createSyntaxError(state, 'End of matrix ] expected');\n          }\n\n          closeParams(state);\n          getToken(state); // check if the number of columns matches in all rows\n\n          cols = params[0].items.length;\n\n          for (var r = 1; r < rows; r++) {\n            if (params[r].items.length !== cols) {\n              throw createError(state, 'Column dimensions mismatch ' + '(' + params[r].items.length + ' !== ' + cols + ')');\n            }\n          }\n\n          array = new ArrayNode(params);\n        } else {\n          // 1 dimensional vector\n          if (state.token !== ']') {\n            throw createSyntaxError(state, 'End of matrix ] expected');\n          }\n\n          closeParams(state);\n          getToken(state);\n          array = row;\n        }\n      } else {\n        // this is an empty matrix \"[ ]\"\n        closeParams(state);\n        getToken(state);\n        array = new ArrayNode([]);\n      }\n\n      return parseAccessors(state, array);\n    }\n\n    return parseObject(state);\n  }\n  /**\n   * Parse a single comma-separated row from a matrix, like 'a, b, c'\n   * @return {ArrayNode} node\n   */\n\n\n  function parseRow(state) {\n    var params = [parseAssignment(state)];\n    var len = 1;\n\n    while (state.token === ',') {\n      // eslint-disable-line no-unmodified-loop-condition\n      getToken(state); // parse expression\n\n      params[len] = parseAssignment(state);\n      len++;\n    }\n\n    return new ArrayNode(params);\n  }\n  /**\n   * parse an object, enclosed in angle brackets{...}, for example {value: 2}\n   * @return {Node} node\n   * @private\n   */\n\n\n  function parseObject(state) {\n    if (state.token === '{') {\n      openParams(state);\n      var key;\n      var properties = {};\n\n      do {\n        getToken(state);\n\n        if (state.token !== '}') {\n          // parse key\n          if (state.token === '\"') {\n            key = parseDoubleQuotesStringToken(state);\n          } else if (state.token === '\\'') {\n            key = parseSingleQuotesStringToken(state);\n          } else if (state.tokenType === TOKENTYPE.SYMBOL || state.tokenType === TOKENTYPE.DELIMITER && state.token in NAMED_DELIMITERS) {\n            key = state.token;\n            getToken(state);\n          } else {\n            throw createSyntaxError(state, 'Symbol or string expected as object key');\n          } // parse key/value separator\n\n\n          if (state.token !== ':') {\n            throw createSyntaxError(state, 'Colon : expected after object key');\n          }\n\n          getToken(state); // parse key\n\n          properties[key] = parseAssignment(state);\n        }\n      } while (state.token === ','); // eslint-disable-line no-unmodified-loop-condition\n\n\n      if (state.token !== '}') {\n        throw createSyntaxError(state, 'Comma , or bracket } expected after object value');\n      }\n\n      closeParams(state);\n      getToken(state);\n      var node = new ObjectNode(properties); // parse index parameters\n\n      node = parseAccessors(state, node);\n      return node;\n    }\n\n    return parseNumber(state);\n  }\n  /**\n   * parse a number\n   * @return {Node} node\n   * @private\n   */\n\n\n  function parseNumber(state) {\n    var numberStr;\n\n    if (state.tokenType === TOKENTYPE.NUMBER) {\n      // this is a number\n      numberStr = state.token;\n      getToken(state);\n      return new ConstantNode(numeric(numberStr, config.number));\n    }\n\n    return parseParentheses(state);\n  }\n  /**\n   * parentheses\n   * @return {Node} node\n   * @private\n   */\n\n\n  function parseParentheses(state) {\n    var node; // check if it is a parenthesized expression\n\n    if (state.token === '(') {\n      // parentheses (...)\n      openParams(state);\n      getToken(state);\n      node = parseAssignment(state); // start again\n\n      if (state.token !== ')') {\n        throw createSyntaxError(state, 'Parenthesis ) expected');\n      }\n\n      closeParams(state);\n      getToken(state);\n      node = new ParenthesisNode(node);\n      node = parseAccessors(state, node);\n      return node;\n    }\n\n    return parseEnd(state);\n  }\n  /**\n   * Evaluated when the expression is not yet ended but expected to end\n   * @return {Node} res\n   * @private\n   */\n\n\n  function parseEnd(state) {\n    if (state.token === '') {\n      // syntax error or unexpected end of expression\n      throw createSyntaxError(state, 'Unexpected end of expression');\n    } else {\n      throw createSyntaxError(state, 'Value expected');\n    }\n  }\n  /**\n   * Shortcut for getting the current row value (one based)\n   * Returns the line of the currently handled expression\n   * @private\n   */\n\n  /* TODO: implement keeping track on the row number\n  function row () {\n    return null\n  }\n  */\n\n  /**\n   * Shortcut for getting the current col value (one based)\n   * Returns the column (position) where the last state.token starts\n   * @private\n   */\n\n\n  function col(state) {\n    return state.index - state.token.length + 1;\n  }\n  /**\n   * Create an error\n   * @param {Object} state\n   * @param {string} message\n   * @return {SyntaxError} instantiated error\n   * @private\n   */\n\n\n  function createSyntaxError(state, message) {\n    var c = col(state);\n    var error = new SyntaxError(message + ' (char ' + c + ')');\n    error.char = c;\n    return error;\n  }\n  /**\n   * Create an error\n   * @param {Object} state\n   * @param {string} message\n   * @return {Error} instantiated error\n   * @private\n   */\n\n\n  function createError(state, message) {\n    var c = col(state);\n    var error = new SyntaxError(message + ' (char ' + c + ')');\n    error.char = c;\n    return error;\n  }\n\n  return parse;\n});","/**\n * THIS FILE IS AUTO-GENERATED\n * DON'T MAKE CHANGES HERE\n */\nimport { createBigNumberClass } from '../../factoriesAny.js';\nexport var BigNumberDependencies = {\n  createBigNumberClass\n};","/**\n * THIS FILE IS AUTO-GENERATED\n * DON'T MAKE CHANGES HERE\n */\nimport { createComplexClass } from '../../factoriesAny.js';\nexport var ComplexDependencies = {\n  createComplexClass\n};","/**\n * THIS FILE IS AUTO-GENERATED\n * DON'T MAKE CHANGES HERE\n */\nimport { createMatrixClass } from '../../factoriesAny.js';\nexport var MatrixDependencies = {\n  createMatrixClass\n};","/**\n * THIS FILE IS AUTO-GENERATED\n * DON'T MAKE CHANGES HERE\n */\nimport { MatrixDependencies } from './dependenciesMatrixClass.generated.js';\nimport { createDenseMatrixClass } from '../../factoriesAny.js';\nexport var DenseMatrixDependencies = {\n  MatrixDependencies,\n  createDenseMatrixClass\n};","/**\n * THIS FILE IS AUTO-GENERATED\n * DON'T MAKE CHANGES HERE\n */\nimport { createFractionClass } from '../../factoriesAny.js';\nexport var FractionDependencies = {\n  createFractionClass\n};","/**\n * THIS FILE IS AUTO-GENERATED\n * DON'T MAKE CHANGES HERE\n */\nimport { BigNumberDependencies } from './dependenciesBigNumberClass.generated.js';\nimport { ComplexDependencies } from './dependenciesComplexClass.generated.js';\nimport { DenseMatrixDependencies } from './dependenciesDenseMatrixClass.generated.js';\nimport { FractionDependencies } from './dependenciesFractionClass.generated.js';\nimport { createTyped } from '../../factoriesAny.js';\nexport var typedDependencies = {\n  BigNumberDependencies,\n  ComplexDependencies,\n  DenseMatrixDependencies,\n  FractionDependencies,\n  createTyped\n};","/**\n * THIS FILE IS AUTO-GENERATED\n * DON'T MAKE CHANGES HERE\n */\nimport { typedDependencies } from './dependenciesTyped.generated.js';\nimport { createEqualScalar } from '../../factoriesAny.js';\nexport var equalScalarDependencies = {\n  typedDependencies,\n  createEqualScalar\n};","/**\n * THIS FILE IS AUTO-GENERATED\n * DON'T MAKE CHANGES HERE\n */\nimport { MatrixDependencies } from './dependenciesMatrixClass.generated.js';\nimport { equalScalarDependencies } from './dependenciesEqualScalar.generated.js';\nimport { typedDependencies } from './dependenciesTyped.generated.js';\nimport { createSparseMatrixClass } from '../../factoriesAny.js';\nexport var SparseMatrixDependencies = {\n  MatrixDependencies,\n  equalScalarDependencies,\n  typedDependencies,\n  createSparseMatrixClass\n};","/**\n * THIS FILE IS AUTO-GENERATED\n * DON'T MAKE CHANGES HERE\n */\nimport { typedDependencies } from './dependenciesTyped.generated.js';\nimport { createNumber } from '../../factoriesAny.js';\nexport var numberDependencies = {\n  typedDependencies,\n  createNumber\n};","/**\n * THIS FILE IS AUTO-GENERATED\n * DON'T MAKE CHANGES HERE\n */\nimport { FractionDependencies } from './dependenciesFractionClass.generated.js';\nimport { typedDependencies } from './dependenciesTyped.generated.js';\nimport { createFraction } from '../../factoriesAny.js';\nexport var fractionDependencies = {\n  FractionDependencies,\n  typedDependencies,\n  createFraction\n};","/**\n * THIS FILE IS AUTO-GENERATED\n * DON'T MAKE CHANGES HERE\n */\nimport { DenseMatrixDependencies } from './dependenciesDenseMatrixClass.generated.js';\nimport { MatrixDependencies } from './dependenciesMatrixClass.generated.js';\nimport { SparseMatrixDependencies } from './dependenciesSparseMatrixClass.generated.js';\nimport { typedDependencies } from './dependenciesTyped.generated.js';\nimport { createMatrix } from '../../factoriesAny.js';\nexport var matrixDependencies = {\n  DenseMatrixDependencies,\n  MatrixDependencies,\n  SparseMatrixDependencies,\n  typedDependencies,\n  createMatrix\n};","/**\n * THIS FILE IS AUTO-GENERATED\n * DON'T MAKE CHANGES HERE\n */\nimport { typedDependencies } from './dependenciesTyped.generated.js';\nimport { createUnaryMinus } from '../../factoriesAny.js';\nexport var unaryMinusDependencies = {\n  typedDependencies,\n  createUnaryMinus\n};","/**\n * THIS FILE IS AUTO-GENERATED\n * DON'T MAKE CHANGES HERE\n */\nimport { typedDependencies } from './dependenciesTyped.generated.js';\nimport { createAbs } from '../../factoriesAny.js';\nexport var absDependencies = {\n  typedDependencies,\n  createAbs\n};","/**\n * THIS FILE IS AUTO-GENERATED\n * DON'T MAKE CHANGES HERE\n */\nimport { typedDependencies } from './dependenciesTyped.generated.js';\nimport { createAddScalar } from '../../factoriesAny.js';\nexport var addScalarDependencies = {\n  typedDependencies,\n  createAddScalar\n};","/**\n * THIS FILE IS AUTO-GENERATED\n * DON'T MAKE CHANGES HERE\n */\nimport { BigNumberDependencies } from './dependenciesBigNumberClass.generated.js';\nimport { DenseMatrixDependencies } from './dependenciesDenseMatrixClass.generated.js';\nimport { equalScalarDependencies } from './dependenciesEqualScalar.generated.js';\nimport { matrixDependencies } from './dependenciesMatrix.generated.js';\nimport { typedDependencies } from './dependenciesTyped.generated.js';\nimport { zerosDependencies } from './dependenciesZeros.generated.js';\nimport { createRound } from '../../factoriesAny.js';\nexport var roundDependencies = {\n  BigNumberDependencies,\n  DenseMatrixDependencies,\n  equalScalarDependencies,\n  matrixDependencies,\n  typedDependencies,\n  zerosDependencies,\n  createRound\n};","/**\n * THIS FILE IS AUTO-GENERATED\n * DON'T MAKE CHANGES HERE\n */\nimport { BigNumberDependencies } from './dependenciesBigNumberClass.generated.js';\nimport { matrixDependencies } from './dependenciesMatrix.generated.js';\nimport { typedDependencies } from './dependenciesTyped.generated.js';\nimport { createZeros } from '../../factoriesAny.js';\nexport var zerosDependencies = {\n  BigNumberDependencies,\n  matrixDependencies,\n  typedDependencies,\n  createZeros\n};","/**\n * THIS FILE IS AUTO-GENERATED\n * DON'T MAKE CHANGES HERE\n */\nimport { DenseMatrixDependencies } from './dependenciesDenseMatrixClass.generated.js';\nimport { equalScalarDependencies } from './dependenciesEqualScalar.generated.js';\nimport { matrixDependencies } from './dependenciesMatrix.generated.js';\nimport { typedDependencies } from './dependenciesTyped.generated.js';\nimport { createMod } from '../../factoriesAny.js';\nexport var modDependencies = {\n  DenseMatrixDependencies,\n  equalScalarDependencies,\n  matrixDependencies,\n  typedDependencies,\n  createMod\n};","/**\n * THIS FILE IS AUTO-GENERATED\n * DON'T MAKE CHANGES HERE\n */\nimport { typedDependencies } from './dependenciesTyped.generated.js';\nimport { createMultiplyScalar } from '../../factoriesAny.js';\nexport var multiplyScalarDependencies = {\n  typedDependencies,\n  createMultiplyScalar\n};","/**\n * THIS FILE IS AUTO-GENERATED\n * DON'T MAKE CHANGES HERE\n */\nimport { matrixDependencies } from './dependenciesMatrix.generated.js';\nimport { typedDependencies } from './dependenciesTyped.generated.js';\nimport { createSize } from '../../factoriesAny.js';\nexport var sizeDependencies = {\n  matrixDependencies,\n  typedDependencies,\n  createSize\n};","/**\n * THIS FILE IS AUTO-GENERATED\n * DON'T MAKE CHANGES HERE\n */\nimport { addScalarDependencies } from './dependenciesAddScalar.generated.js';\nimport { dotDependencies } from './dependenciesDot.generated.js';\nimport { equalScalarDependencies } from './dependenciesEqualScalar.generated.js';\nimport { matrixDependencies } from './dependenciesMatrix.generated.js';\nimport { multiplyScalarDependencies } from './dependenciesMultiplyScalar.generated.js';\nimport { typedDependencies } from './dependenciesTyped.generated.js';\nimport { createMultiply } from '../../factoriesAny.js';\nexport var multiplyDependencies = {\n  addScalarDependencies,\n  dotDependencies,\n  equalScalarDependencies,\n  matrixDependencies,\n  multiplyScalarDependencies,\n  typedDependencies,\n  createMultiply\n};","/**\n * THIS FILE IS AUTO-GENERATED\n * DON'T MAKE CHANGES HERE\n */\nimport { addScalarDependencies } from './dependenciesAddScalar.generated.js';\nimport { conjDependencies } from './dependenciesConj.generated.js';\nimport { multiplyScalarDependencies } from './dependenciesMultiplyScalar.generated.js';\nimport { sizeDependencies } from './dependenciesSize.generated.js';\nimport { typedDependencies } from './dependenciesTyped.generated.js';\nimport { createDot } from '../../factoriesAny.js';\nexport var dotDependencies = {\n  addScalarDependencies,\n  conjDependencies,\n  multiplyScalarDependencies,\n  sizeDependencies,\n  typedDependencies,\n  createDot\n};","/**\n * THIS FILE IS AUTO-GENERATED\n * DON'T MAKE CHANGES HERE\n */\nimport { typedDependencies } from './dependenciesTyped.generated.js';\nimport { createConj } from '../../factoriesAny.js';\nexport var conjDependencies = {\n  typedDependencies,\n  createConj\n};","/**\n * THIS FILE IS AUTO-GENERATED\n * DON'T MAKE CHANGES HERE\n */\nimport { DenseMatrixDependencies } from './dependenciesDenseMatrixClass.generated.js';\nimport { addScalarDependencies } from './dependenciesAddScalar.generated.js';\nimport { equalScalarDependencies } from './dependenciesEqualScalar.generated.js';\nimport { matrixDependencies } from './dependenciesMatrix.generated.js';\nimport { typedDependencies } from './dependenciesTyped.generated.js';\nimport { unaryMinusDependencies } from './dependenciesUnaryMinus.generated.js';\nimport { createSubtract } from '../../factoriesAny.js';\nexport var subtractDependencies = {\n  DenseMatrixDependencies,\n  addScalarDependencies,\n  equalScalarDependencies,\n  matrixDependencies,\n  typedDependencies,\n  unaryMinusDependencies,\n  createSubtract\n};","/**\n * THIS FILE IS AUTO-GENERATED\n * DON'T MAKE CHANGES HERE\n */\nimport { DenseMatrixDependencies } from './dependenciesDenseMatrixClass.generated.js';\nimport { matrixDependencies } from './dependenciesMatrix.generated.js';\nimport { typedDependencies } from './dependenciesTyped.generated.js';\nimport { createLarger } from '../../factoriesAny.js';\nexport var largerDependencies = {\n  DenseMatrixDependencies,\n  matrixDependencies,\n  typedDependencies,\n  createLarger\n};","/**\n * THIS FILE IS AUTO-GENERATED\n * DON'T MAKE CHANGES HERE\n */\nimport { BigNumberDependencies } from './dependenciesBigNumberClass.generated.js';\nimport { DenseMatrixDependencies } from './dependenciesDenseMatrixClass.generated.js';\nimport { SparseMatrixDependencies } from './dependenciesSparseMatrixClass.generated.js';\nimport { matrixDependencies } from './dependenciesMatrix.generated.js';\nimport { typedDependencies } from './dependenciesTyped.generated.js';\nimport { createIdentity } from '../../factoriesAny.js';\nexport var identityDependencies = {\n  BigNumberDependencies,\n  DenseMatrixDependencies,\n  SparseMatrixDependencies,\n  matrixDependencies,\n  typedDependencies,\n  createIdentity\n};","/**\n * THIS FILE IS AUTO-GENERATED\n * DON'T MAKE CHANGES HERE\n */\nimport { DenseMatrixDependencies } from './dependenciesDenseMatrixClass.generated.js';\nimport { SparseMatrixDependencies } from './dependenciesSparseMatrixClass.generated.js';\nimport { addScalarDependencies } from './dependenciesAddScalar.generated.js';\nimport { equalScalarDependencies } from './dependenciesEqualScalar.generated.js';\nimport { matrixDependencies } from './dependenciesMatrix.generated.js';\nimport { typedDependencies } from './dependenciesTyped.generated.js';\nimport { createAdd } from '../../factoriesAny.js';\nexport var addDependencies = {\n  DenseMatrixDependencies,\n  SparseMatrixDependencies,\n  addScalarDependencies,\n  equalScalarDependencies,\n  matrixDependencies,\n  typedDependencies,\n  createAdd\n};","/**\n * THIS FILE IS AUTO-GENERATED\n * DON'T MAKE CHANGES HERE\n */\nimport { bignumberDependencies } from './dependenciesBignumber.generated.js';\nimport { fractionDependencies } from './dependenciesFraction.generated.js';\nimport { numberDependencies } from './dependenciesNumber.generated.js';\nimport { createNumeric } from '../../factoriesAny.js';\nexport var numericDependencies = {\n  bignumberDependencies,\n  fractionDependencies,\n  numberDependencies,\n  createNumeric\n};","/**\n * THIS FILE IS AUTO-GENERATED\n * DON'T MAKE CHANGES HERE\n */\nimport { BigNumberDependencies } from './dependenciesBigNumberClass.generated.js';\nimport { typedDependencies } from './dependenciesTyped.generated.js';\nimport { createBignumber } from '../../factoriesAny.js';\nexport var bignumberDependencies = {\n  BigNumberDependencies,\n  typedDependencies,\n  createBignumber\n};","/**\n * THIS FILE IS AUTO-GENERATED\n * DON'T MAKE CHANGES HERE\n */\nimport { numericDependencies } from './dependenciesNumeric.generated.js';\nimport { typedDependencies } from './dependenciesTyped.generated.js';\nimport { createDivideScalar } from '../../factoriesAny.js';\nexport var divideScalarDependencies = {\n  numericDependencies,\n  typedDependencies,\n  createDivideScalar\n};","/**\n * THIS FILE IS AUTO-GENERATED\n * DON'T MAKE CHANGES HERE\n */\nimport { matrixDependencies } from './dependenciesMatrix.generated.js';\nimport { typedDependencies } from './dependenciesTyped.generated.js';\nimport { createSubset } from '../../factoriesAny.js';\nexport var subsetDependencies = {\n  matrixDependencies,\n  typedDependencies,\n  createSubset\n};","/**\n * THIS FILE IS AUTO-GENERATED\n * DON'T MAKE CHANGES HERE\n */\nimport { BigNumberDependencies } from './dependenciesBigNumberClass.generated.js';\nimport { ComplexDependencies } from './dependenciesComplexClass.generated.js';\nimport { FractionDependencies } from './dependenciesFractionClass.generated.js';\nimport { absDependencies } from './dependenciesAbs.generated.js';\nimport { addScalarDependencies } from './dependenciesAddScalar.generated.js';\nimport { divideScalarDependencies } from './dependenciesDivideScalar.generated.js';\nimport { equalDependencies } from './dependenciesEqual.generated.js';\nimport { fixDependencies } from './dependenciesFix.generated.js';\nimport { formatDependencies } from './dependenciesFormat.generated.js';\nimport { isNumericDependencies } from './dependenciesIsNumeric.generated.js';\nimport { multiplyScalarDependencies } from './dependenciesMultiplyScalar.generated.js';\nimport { numberDependencies } from './dependenciesNumber.generated.js';\nimport { powDependencies } from './dependenciesPow.generated.js';\nimport { roundDependencies } from './dependenciesRound.generated.js';\nimport { subtractDependencies } from './dependenciesSubtract.generated.js';\nimport { createUnitClass } from '../../factoriesAny.js';\nexport var UnitDependencies = {\n  BigNumberDependencies,\n  ComplexDependencies,\n  FractionDependencies,\n  absDependencies,\n  addScalarDependencies,\n  divideScalarDependencies,\n  equalDependencies,\n  fixDependencies,\n  formatDependencies,\n  isNumericDependencies,\n  multiplyScalarDependencies,\n  numberDependencies,\n  powDependencies,\n  roundDependencies,\n  subtractDependencies,\n  createUnitClass\n};","/**\n * THIS FILE IS AUTO-GENERATED\n * DON'T MAKE CHANGES HERE\n */\nimport { DenseMatrixDependencies } from './dependenciesDenseMatrixClass.generated.js';\nimport { equalScalarDependencies } from './dependenciesEqualScalar.generated.js';\nimport { matrixDependencies } from './dependenciesMatrix.generated.js';\nimport { typedDependencies } from './dependenciesTyped.generated.js';\nimport { createEqual } from '../../factoriesAny.js';\nexport var equalDependencies = {\n  DenseMatrixDependencies,\n  equalScalarDependencies,\n  matrixDependencies,\n  typedDependencies,\n  createEqual\n};","/**\n * THIS FILE IS AUTO-GENERATED\n * DON'T MAKE CHANGES HERE\n */\nimport { ComplexDependencies } from './dependenciesComplexClass.generated.js';\nimport { ceilDependencies } from './dependenciesCeil.generated.js';\nimport { floorDependencies } from './dependenciesFloor.generated.js';\nimport { matrixDependencies } from './dependenciesMatrix.generated.js';\nimport { typedDependencies } from './dependenciesTyped.generated.js';\nimport { createFix } from '../../factoriesAny.js';\nexport var fixDependencies = {\n  ComplexDependencies,\n  ceilDependencies,\n  floorDependencies,\n  matrixDependencies,\n  typedDependencies,\n  createFix\n};","/**\n * THIS FILE IS AUTO-GENERATED\n * DON'T MAKE CHANGES HERE\n */\nimport { equalScalarDependencies } from './dependenciesEqualScalar.generated.js';\nimport { matrixDependencies } from './dependenciesMatrix.generated.js';\nimport { roundDependencies } from './dependenciesRound.generated.js';\nimport { typedDependencies } from './dependenciesTyped.generated.js';\nimport { createCeil } from '../../factoriesAny.js';\nexport var ceilDependencies = {\n  equalScalarDependencies,\n  matrixDependencies,\n  roundDependencies,\n  typedDependencies,\n  createCeil\n};","/**\n * THIS FILE IS AUTO-GENERATED\n * DON'T MAKE CHANGES HERE\n */\nimport { equalScalarDependencies } from './dependenciesEqualScalar.generated.js';\nimport { matrixDependencies } from './dependenciesMatrix.generated.js';\nimport { roundDependencies } from './dependenciesRound.generated.js';\nimport { typedDependencies } from './dependenciesTyped.generated.js';\nimport { createFloor } from '../../factoriesAny.js';\nexport var floorDependencies = {\n  equalScalarDependencies,\n  matrixDependencies,\n  roundDependencies,\n  typedDependencies,\n  createFloor\n};","/**\n * THIS FILE IS AUTO-GENERATED\n * DON'T MAKE CHANGES HERE\n */\nimport { typedDependencies } from './dependenciesTyped.generated.js';\nimport { createFormat } from '../../factoriesAny.js';\nexport var formatDependencies = {\n  typedDependencies,\n  createFormat\n};","/**\n * THIS FILE IS AUTO-GENERATED\n * DON'T MAKE CHANGES HERE\n */\nimport { typedDependencies } from './dependenciesTyped.generated.js';\nimport { createIsNumeric } from '../../factoriesAny.js';\nexport var isNumericDependencies = {\n  typedDependencies,\n  createIsNumeric\n};","/**\n * THIS FILE IS AUTO-GENERATED\n * DON'T MAKE CHANGES HERE\n */\nimport { ComplexDependencies } from './dependenciesComplexClass.generated.js';\nimport { fractionDependencies } from './dependenciesFraction.generated.js';\nimport { identityDependencies } from './dependenciesIdentity.generated.js';\nimport { matrixDependencies } from './dependenciesMatrix.generated.js';\nimport { multiplyDependencies } from './dependenciesMultiply.generated.js';\nimport { numberDependencies } from './dependenciesNumber.generated.js';\nimport { typedDependencies } from './dependenciesTyped.generated.js';\nimport { createPow } from '../../factoriesAny.js';\nexport var powDependencies = {\n  ComplexDependencies,\n  fractionDependencies,\n  identityDependencies,\n  matrixDependencies,\n  multiplyDependencies,\n  numberDependencies,\n  typedDependencies,\n  createPow\n};","/**\n * THIS FILE IS AUTO-GENERATED\n * DON'T MAKE CHANGES HERE\n */\nimport { UnitDependencies } from './dependenciesUnitClass.generated.js';\nimport { typedDependencies } from './dependenciesTyped.generated.js';\nimport { createUnitFunction } from '../../factoriesAny.js';\nexport var unitDependencies = {\n  UnitDependencies,\n  typedDependencies,\n  createUnitFunction\n};","/**\n * THIS FILE IS AUTO-GENERATED\n * DON'T MAKE CHANGES HERE\n */\nimport { UnitDependencies } from './dependenciesUnitClass.generated.js';\nimport { typedDependencies } from './dependenciesTyped.generated.js';\nimport { createCreateUnit } from '../../factoriesAny.js';\nexport var createUnitDependencies = {\n  UnitDependencies,\n  typedDependencies,\n  createCreateUnit\n};","/**\n * THIS FILE IS AUTO-GENERATED\n * DON'T MAKE CHANGES HERE\n */\nimport { createNode } from '../../factoriesAny.js';\nexport var NodeDependencies = {\n  createNode\n};","/**\n * THIS FILE IS AUTO-GENERATED\n * DON'T MAKE CHANGES HERE\n */\nimport { UnitDependencies } from './dependenciesUnitClass.generated.js';\nimport { NodeDependencies } from './dependenciesNode.generated.js';\nimport { createSymbolNode } from '../../factoriesAny.js';\nexport var SymbolNodeDependencies = {\n  UnitDependencies,\n  NodeDependencies,\n  createSymbolNode\n};","import { escape } from '../../utils/string.js';\nimport { getSafeProperty } from '../../utils/customs.js';\nimport { factory } from '../../utils/factory.js';\nimport { toSymbol } from '../../utils/latex.js';\nvar name = 'SymbolNode';\nvar dependencies = ['math', '?Unit', 'Node'];\nexport var createSymbolNode = /* #__PURE__ */factory(name, dependencies, (_ref) => {\n  var {\n    math,\n    Unit,\n    Node\n  } = _ref;\n\n  /**\n   * Check whether some name is a valueless unit like \"inch\".\n   * @param {string} name\n   * @return {boolean}\n   */\n  function isValuelessUnit(name) {\n    return Unit ? Unit.isValuelessUnit(name) : false;\n  }\n  /**\n   * @constructor SymbolNode\n   * @extends {Node}\n   * A symbol node can hold and resolve a symbol\n   * @param {string} name\n   * @extends {Node}\n   */\n\n\n  function SymbolNode(name) {\n    if (!(this instanceof SymbolNode)) {\n      throw new SyntaxError('Constructor must be called with the new operator');\n    } // validate input\n\n\n    if (typeof name !== 'string') throw new TypeError('String expected for parameter \"name\"');\n    this.name = name;\n  }\n\n  SymbolNode.prototype = new Node();\n  SymbolNode.prototype.type = 'SymbolNode';\n  SymbolNode.prototype.isSymbolNode = true;\n  /**\n   * Compile a node into a JavaScript function.\n   * This basically pre-calculates as much as possible and only leaves open\n   * calculations which depend on a dynamic scope with variables.\n   * @param {Object} math     Math.js namespace with functions and constants.\n   * @param {Object} argNames An object with argument names as key and `true`\n   *                          as value. Used in the SymbolNode to optimize\n   *                          for arguments from user assigned functions\n   *                          (see FunctionAssignmentNode) or special symbols\n   *                          like `end` (see IndexNode).\n   * @return {function} Returns a function which can be called like:\n   *                        evalNode(scope: Object, args: Object, context: *)\n   */\n\n  SymbolNode.prototype._compile = function (math, argNames) {\n    var name = this.name;\n\n    if (argNames[name] === true) {\n      // this is a FunctionAssignment argument\n      // (like an x when inside the expression of a function assignment `f(x) = ...`)\n      return function (scope, args, context) {\n        return args[name];\n      };\n    } else if (name in math) {\n      return function (scope, args, context) {\n        return name in scope ? getSafeProperty(scope, name) : getSafeProperty(math, name);\n      };\n    } else {\n      var isUnit = isValuelessUnit(name);\n      return function (scope, args, context) {\n        return name in scope ? getSafeProperty(scope, name) : isUnit ? new Unit(null, name) : undef(name);\n      };\n    }\n  };\n  /**\n   * Execute a callback for each of the child nodes of this node\n   * @param {function(child: Node, path: string, parent: Node)} callback\n   */\n\n\n  SymbolNode.prototype.forEach = function (callback) {// nothing to do, we don't have childs\n  };\n  /**\n   * Create a new SymbolNode having it's childs be the results of calling\n   * the provided callback function for each of the childs of the original node.\n   * @param {function(child: Node, path: string, parent: Node) : Node} callback\n   * @returns {SymbolNode} Returns a clone of the node\n   */\n\n\n  SymbolNode.prototype.map = function (callback) {\n    return this.clone();\n  };\n  /**\n   * Throws an error 'Undefined symbol {name}'\n   * @param {string} name\n   */\n\n\n  function undef(name) {\n    throw new Error('Undefined symbol ' + name);\n  }\n  /**\n   * Create a clone of this node, a shallow copy\n   * @return {SymbolNode}\n   */\n\n\n  SymbolNode.prototype.clone = function () {\n    return new SymbolNode(this.name);\n  };\n  /**\n   * Get string representation\n   * @param {Object} options\n   * @return {string} str\n   * @override\n   */\n\n\n  SymbolNode.prototype._toString = function (options) {\n    return this.name;\n  };\n  /**\n   * Get HTML representation\n   * @param {Object} options\n   * @return {string} str\n   * @override\n   */\n\n\n  SymbolNode.prototype.toHTML = function (options) {\n    var name = escape(this.name);\n\n    if (name === 'true' || name === 'false') {\n      return '<span class=\"math-symbol math-boolean\">' + name + '</span>';\n    } else if (name === 'i') {\n      return '<span class=\"math-symbol math-imaginary-symbol\">' + name + '</span>';\n    } else if (name === 'Infinity') {\n      return '<span class=\"math-symbol math-infinity-symbol\">' + name + '</span>';\n    } else if (name === 'NaN') {\n      return '<span class=\"math-symbol math-nan-symbol\">' + name + '</span>';\n    } else if (name === 'null') {\n      return '<span class=\"math-symbol math-null-symbol\">' + name + '</span>';\n    } else if (name === 'undefined') {\n      return '<span class=\"math-symbol math-undefined-symbol\">' + name + '</span>';\n    }\n\n    return '<span class=\"math-symbol\">' + name + '</span>';\n  };\n  /**\n   * Get a JSON representation of the node\n   * @returns {Object}\n   */\n\n\n  SymbolNode.prototype.toJSON = function () {\n    return {\n      mathjs: 'SymbolNode',\n      name: this.name\n    };\n  };\n  /**\n   * Instantiate a SymbolNode from its JSON representation\n   * @param {Object} json  An object structured like\n   *                       `{\"mathjs\": \"SymbolNode\", name: \"x\"}`,\n   *                       where mathjs is optional\n   * @returns {SymbolNode}\n   */\n\n\n  SymbolNode.fromJSON = function (json) {\n    return new SymbolNode(json.name);\n  };\n  /**\n   * Get LaTeX representation\n   * @param {Object} options\n   * @return {string} str\n   * @override\n   */\n\n\n  SymbolNode.prototype._toTex = function (options) {\n    var isUnit = false;\n\n    if (typeof math[this.name] === 'undefined' && isValuelessUnit(this.name)) {\n      isUnit = true;\n    }\n\n    var symbol = toSymbol(this.name, isUnit);\n\n    if (symbol[0] === '\\\\') {\n      // no space needed if the symbol starts with '\\'\n      return symbol;\n    } // the space prevents symbols from breaking stuff like '\\cdot' if it's written right before the symbol\n\n\n    return ' ' + symbol;\n  };\n\n  return SymbolNode;\n}, {\n  isClass: true,\n  isNode: true\n});","/**\n * THIS FILE IS AUTO-GENERATED\n * DON'T MAKE CHANGES HERE\n */\nimport { parseDependencies } from './dependenciesParse.generated.js';\nimport { typedDependencies } from './dependenciesTyped.generated.js';\nimport { createEvaluate } from '../../factoriesAny.js';\nexport var evaluateDependencies = {\n  parseDependencies,\n  typedDependencies,\n  createEvaluate\n};","/**\n * THIS FILE IS AUTO-GENERATED\n * DON'T MAKE CHANGES HERE\n */\nimport { AccessorNodeDependencies } from './dependenciesAccessorNode.generated.js';\nimport { ArrayNodeDependencies } from './dependenciesArrayNode.generated.js';\nimport { AssignmentNodeDependencies } from './dependenciesAssignmentNode.generated.js';\nimport { BlockNodeDependencies } from './dependenciesBlockNode.generated.js';\nimport { ConditionalNodeDependencies } from './dependenciesConditionalNode.generated.js';\nimport { ConstantNodeDependencies } from './dependenciesConstantNode.generated.js';\nimport { FunctionAssignmentNodeDependencies } from './dependenciesFunctionAssignmentNode.generated.js';\nimport { FunctionNodeDependencies } from './dependenciesFunctionNode.generated.js';\nimport { IndexNodeDependencies } from './dependenciesIndexNode.generated.js';\nimport { ObjectNodeDependencies } from './dependenciesObjectNode.generated.js';\nimport { OperatorNodeDependencies } from './dependenciesOperatorNode.generated.js';\nimport { ParenthesisNodeDependencies } from './dependenciesParenthesisNode.generated.js';\nimport { RangeNodeDependencies } from './dependenciesRangeNode.generated.js';\nimport { RelationalNodeDependencies } from './dependenciesRelationalNode.generated.js';\nimport { SymbolNodeDependencies } from './dependenciesSymbolNode.generated.js';\nimport { numericDependencies } from './dependenciesNumeric.generated.js';\nimport { typedDependencies } from './dependenciesTyped.generated.js';\nimport { createParse } from '../../factoriesAny.js';\nexport var parseDependencies = {\n  AccessorNodeDependencies,\n  ArrayNodeDependencies,\n  AssignmentNodeDependencies,\n  BlockNodeDependencies,\n  ConditionalNodeDependencies,\n  ConstantNodeDependencies,\n  FunctionAssignmentNodeDependencies,\n  FunctionNodeDependencies,\n  IndexNodeDependencies,\n  ObjectNodeDependencies,\n  OperatorNodeDependencies,\n  ParenthesisNodeDependencies,\n  RangeNodeDependencies,\n  RelationalNodeDependencies,\n  SymbolNodeDependencies,\n  numericDependencies,\n  typedDependencies,\n  createParse\n};","/**\n * THIS FILE IS AUTO-GENERATED\n * DON'T MAKE CHANGES HERE\n */\nimport { NodeDependencies } from './dependenciesNode.generated.js';\nimport { subsetDependencies } from './dependenciesSubset.generated.js';\nimport { createAccessorNode } from '../../factoriesAny.js';\nexport var AccessorNodeDependencies = {\n  NodeDependencies,\n  subsetDependencies,\n  createAccessorNode\n};","/**\n * THIS FILE IS AUTO-GENERATED\n * DON'T MAKE CHANGES HERE\n */\nimport { NodeDependencies } from './dependenciesNode.generated.js';\nimport { createArrayNode } from '../../factoriesAny.js';\nexport var ArrayNodeDependencies = {\n  NodeDependencies,\n  createArrayNode\n};","/**\n * THIS FILE IS AUTO-GENERATED\n * DON'T MAKE CHANGES HERE\n */\nimport { matrixDependencies } from './dependenciesMatrix.generated.js';\nimport { NodeDependencies } from './dependenciesNode.generated.js';\nimport { subsetDependencies } from './dependenciesSubset.generated.js';\nimport { createAssignmentNode } from '../../factoriesAny.js';\nexport var AssignmentNodeDependencies = {\n  matrixDependencies,\n  NodeDependencies,\n  subsetDependencies,\n  createAssignmentNode\n};","/**\n * THIS FILE IS AUTO-GENERATED\n * DON'T MAKE CHANGES HERE\n */\nimport { NodeDependencies } from './dependenciesNode.generated.js';\nimport { ResultSetDependencies } from './dependenciesResultSet.generated.js';\nimport { createBlockNode } from '../../factoriesAny.js';\nexport var BlockNodeDependencies = {\n  NodeDependencies,\n  ResultSetDependencies,\n  createBlockNode\n};","/**\n * THIS FILE IS AUTO-GENERATED\n * DON'T MAKE CHANGES HERE\n */\nimport { createResultSet } from '../../factoriesAny.js';\nexport var ResultSetDependencies = {\n  createResultSet\n};","/**\n * THIS FILE IS AUTO-GENERATED\n * DON'T MAKE CHANGES HERE\n */\nimport { NodeDependencies } from './dependenciesNode.generated.js';\nimport { createConditionalNode } from '../../factoriesAny.js';\nexport var ConditionalNodeDependencies = {\n  NodeDependencies,\n  createConditionalNode\n};","/**\n * THIS FILE IS AUTO-GENERATED\n * DON'T MAKE CHANGES HERE\n */\nimport { NodeDependencies } from './dependenciesNode.generated.js';\nimport { createConstantNode } from '../../factoriesAny.js';\nexport var ConstantNodeDependencies = {\n  NodeDependencies,\n  createConstantNode\n};","/**\n * THIS FILE IS AUTO-GENERATED\n * DON'T MAKE CHANGES HERE\n */\nimport { NodeDependencies } from './dependenciesNode.generated.js';\nimport { typedDependencies } from './dependenciesTyped.generated.js';\nimport { createFunctionAssignmentNode } from '../../factoriesAny.js';\nexport var FunctionAssignmentNodeDependencies = {\n  NodeDependencies,\n  typedDependencies,\n  createFunctionAssignmentNode\n};","/**\n * THIS FILE IS AUTO-GENERATED\n * DON'T MAKE CHANGES HERE\n */\nimport { NodeDependencies } from './dependenciesNode.generated.js';\nimport { SymbolNodeDependencies } from './dependenciesSymbolNode.generated.js';\nimport { createFunctionNode } from '../../factoriesAny.js';\nexport var FunctionNodeDependencies = {\n  NodeDependencies,\n  SymbolNodeDependencies,\n  createFunctionNode\n};","/**\n * THIS FILE IS AUTO-GENERATED\n * DON'T MAKE CHANGES HERE\n */\nimport { NodeDependencies } from './dependenciesNode.generated.js';\nimport { RangeDependencies } from './dependenciesRangeClass.generated.js';\nimport { sizeDependencies } from './dependenciesSize.generated.js';\nimport { createIndexNode } from '../../factoriesAny.js';\nexport var IndexNodeDependencies = {\n  NodeDependencies,\n  RangeDependencies,\n  sizeDependencies,\n  createIndexNode\n};","/**\n * THIS FILE IS AUTO-GENERATED\n * DON'T MAKE CHANGES HERE\n */\nimport { createRangeClass } from '../../factoriesAny.js';\nexport var RangeDependencies = {\n  createRangeClass\n};","/**\n * THIS FILE IS AUTO-GENERATED\n * DON'T MAKE CHANGES HERE\n */\nimport { NodeDependencies } from './dependenciesNode.generated.js';\nimport { createObjectNode } from '../../factoriesAny.js';\nexport var ObjectNodeDependencies = {\n  NodeDependencies,\n  createObjectNode\n};","/**\n * THIS FILE IS AUTO-GENERATED\n * DON'T MAKE CHANGES HERE\n */\nimport { NodeDependencies } from './dependenciesNode.generated.js';\nimport { createOperatorNode } from '../../factoriesAny.js';\nexport var OperatorNodeDependencies = {\n  NodeDependencies,\n  createOperatorNode\n};","/**\n * THIS FILE IS AUTO-GENERATED\n * DON'T MAKE CHANGES HERE\n */\nimport { NodeDependencies } from './dependenciesNode.generated.js';\nimport { createParenthesisNode } from '../../factoriesAny.js';\nexport var ParenthesisNodeDependencies = {\n  NodeDependencies,\n  createParenthesisNode\n};","/**\n * THIS FILE IS AUTO-GENERATED\n * DON'T MAKE CHANGES HERE\n */\nimport { NodeDependencies } from './dependenciesNode.generated.js';\nimport { createRangeNode } from '../../factoriesAny.js';\nexport var RangeNodeDependencies = {\n  NodeDependencies,\n  createRangeNode\n};","/**\n * THIS FILE IS AUTO-GENERATED\n * DON'T MAKE CHANGES HERE\n */\nimport { NodeDependencies } from './dependenciesNode.generated.js';\nimport { createRelationalNode } from '../../factoriesAny.js';\nexport var RelationalNodeDependencies = {\n  NodeDependencies,\n  createRelationalNode\n};","import { deepMap } from '../../utils/collection.js';\nimport { factory } from '../../utils/factory.js';\nvar name = 'evaluate';\nvar dependencies = ['typed', 'parse'];\nexport var createEvaluate = /* #__PURE__ */factory(name, dependencies, (_ref) => {\n  var {\n    typed,\n    parse\n  } = _ref;\n\n  /**\n   * Evaluate an expression.\n   *\n   * Note the evaluating arbitrary expressions may involve security risks,\n   * see [https://mathjs.org/docs/expressions/security.html](https://mathjs.org/docs/expressions/security.html) for more information.\n   *\n   * Syntax:\n   *\n   *     math.evaluate(expr)\n   *     math.evaluate(expr, scope)\n   *     math.evaluate([expr1, expr2, expr3, ...])\n   *     math.evaluate([expr1, expr2, expr3, ...], scope)\n   *\n   * Example:\n   *\n   *     math.evaluate('(2+3)/4')                // 1.25\n   *     math.evaluate('sqrt(3^2 + 4^2)')        // 5\n   *     math.evaluate('sqrt(-4)')               // 2i\n   *     math.evaluate(['a=3', 'b=4', 'a*b'])    // [3, 4, 12]\n   *\n   *     let scope = {a:3, b:4}\n   *     math.evaluate('a * b', scope)           // 12\n   *\n   * See also:\n   *\n   *    parse, compile\n   *\n   * @param {string | string[] | Matrix} expr   The expression to be evaluated\n   * @param {Object} [scope]                    Scope to read/write variables\n   * @return {*} The result of the expression\n   * @throws {Error}\n   */\n  return typed(name, {\n    string: function string(expr) {\n      var scope = {};\n      return parse(expr).compile().evaluate(scope);\n    },\n    'string, Object': function stringObject(expr, scope) {\n      return parse(expr).compile().evaluate(scope);\n    },\n    'Array | Matrix': function ArrayMatrix(expr) {\n      var scope = {};\n      return deepMap(expr, function (entry) {\n        return parse(entry).compile().evaluate(scope);\n      });\n    },\n    'Array | Matrix, Object': function ArrayMatrixObject(expr, scope) {\n      return deepMap(expr, function (entry) {\n        return parse(entry).compile().evaluate(scope);\n      });\n    }\n  });\n});","/**\n * THIS FILE IS AUTO-GENERATED\n * DON'T MAKE CHANGES HERE\n */\nimport { divideScalarDependencies } from './dependenciesDivideScalar.generated.js';\nimport { equalScalarDependencies } from './dependenciesEqualScalar.generated.js';\nimport { invDependencies } from './dependenciesInv.generated.js';\nimport { matrixDependencies } from './dependenciesMatrix.generated.js';\nimport { multiplyDependencies } from './dependenciesMultiply.generated.js';\nimport { typedDependencies } from './dependenciesTyped.generated.js';\nimport { createDivide } from '../../factoriesAny.js';\nexport var divideDependencies = {\n  divideScalarDependencies,\n  equalScalarDependencies,\n  invDependencies,\n  matrixDependencies,\n  multiplyDependencies,\n  typedDependencies,\n  createDivide\n};","/**\n * THIS FILE IS AUTO-GENERATED\n * DON'T MAKE CHANGES HERE\n */\nimport { absDependencies } from './dependenciesAbs.generated.js';\nimport { addScalarDependencies } from './dependenciesAddScalar.generated.js';\nimport { detDependencies } from './dependenciesDet.generated.js';\nimport { divideScalarDependencies } from './dependenciesDivideScalar.generated.js';\nimport { identityDependencies } from './dependenciesIdentity.generated.js';\nimport { matrixDependencies } from './dependenciesMatrix.generated.js';\nimport { multiplyDependencies } from './dependenciesMultiply.generated.js';\nimport { typedDependencies } from './dependenciesTyped.generated.js';\nimport { unaryMinusDependencies } from './dependenciesUnaryMinus.generated.js';\nimport { createInv } from '../../factoriesAny.js';\nexport var invDependencies = {\n  absDependencies,\n  addScalarDependencies,\n  detDependencies,\n  divideScalarDependencies,\n  identityDependencies,\n  matrixDependencies,\n  multiplyDependencies,\n  typedDependencies,\n  unaryMinusDependencies,\n  createInv\n};","/**\n * THIS FILE IS AUTO-GENERATED\n * DON'T MAKE CHANGES HERE\n */\nimport { lupDependencies } from './dependenciesLup.generated.js';\nimport { matrixDependencies } from './dependenciesMatrix.generated.js';\nimport { multiplyDependencies } from './dependenciesMultiply.generated.js';\nimport { subtractDependencies } from './dependenciesSubtract.generated.js';\nimport { typedDependencies } from './dependenciesTyped.generated.js';\nimport { unaryMinusDependencies } from './dependenciesUnaryMinus.generated.js';\nimport { createDet } from '../../factoriesAny.js';\nexport var detDependencies = {\n  lupDependencies,\n  matrixDependencies,\n  multiplyDependencies,\n  subtractDependencies,\n  typedDependencies,\n  unaryMinusDependencies,\n  createDet\n};","/**\n * THIS FILE IS AUTO-GENERATED\n * DON'T MAKE CHANGES HERE\n */\nimport { DenseMatrixDependencies } from './dependenciesDenseMatrixClass.generated.js';\nimport { SpaDependencies } from './dependenciesSpaClass.generated.js';\nimport { SparseMatrixDependencies } from './dependenciesSparseMatrixClass.generated.js';\nimport { absDependencies } from './dependenciesAbs.generated.js';\nimport { addScalarDependencies } from './dependenciesAddScalar.generated.js';\nimport { divideScalarDependencies } from './dependenciesDivideScalar.generated.js';\nimport { equalScalarDependencies } from './dependenciesEqualScalar.generated.js';\nimport { largerDependencies } from './dependenciesLarger.generated.js';\nimport { matrixDependencies } from './dependenciesMatrix.generated.js';\nimport { multiplyScalarDependencies } from './dependenciesMultiplyScalar.generated.js';\nimport { subtractDependencies } from './dependenciesSubtract.generated.js';\nimport { typedDependencies } from './dependenciesTyped.generated.js';\nimport { unaryMinusDependencies } from './dependenciesUnaryMinus.generated.js';\nimport { createLup } from '../../factoriesAny.js';\nexport var lupDependencies = {\n  DenseMatrixDependencies,\n  SpaDependencies,\n  SparseMatrixDependencies,\n  absDependencies,\n  addScalarDependencies,\n  divideScalarDependencies,\n  equalScalarDependencies,\n  largerDependencies,\n  matrixDependencies,\n  multiplyScalarDependencies,\n  subtractDependencies,\n  typedDependencies,\n  unaryMinusDependencies,\n  createLup\n};","/**\n * THIS FILE IS AUTO-GENERATED\n * DON'T MAKE CHANGES HERE\n */\nimport { FibonacciHeapDependencies } from './dependenciesFibonacciHeapClass.generated.js';\nimport { addScalarDependencies } from './dependenciesAddScalar.generated.js';\nimport { equalScalarDependencies } from './dependenciesEqualScalar.generated.js';\nimport { createSpaClass } from '../../factoriesAny.js';\nexport var SpaDependencies = {\n  FibonacciHeapDependencies,\n  addScalarDependencies,\n  equalScalarDependencies,\n  createSpaClass\n};","/**\n * THIS FILE IS AUTO-GENERATED\n * DON'T MAKE CHANGES HERE\n */\nimport { largerDependencies } from './dependenciesLarger.generated.js';\nimport { smallerDependencies } from './dependenciesSmaller.generated.js';\nimport { createFibonacciHeapClass } from '../../factoriesAny.js';\nexport var FibonacciHeapDependencies = {\n  largerDependencies,\n  smallerDependencies,\n  createFibonacciHeapClass\n};","/**\n * THIS FILE IS AUTO-GENERATED\n * DON'T MAKE CHANGES HERE\n */\nimport { DenseMatrixDependencies } from './dependenciesDenseMatrixClass.generated.js';\nimport { matrixDependencies } from './dependenciesMatrix.generated.js';\nimport { typedDependencies } from './dependenciesTyped.generated.js';\nimport { createSmaller } from '../../factoriesAny.js';\nexport var smallerDependencies = {\n  DenseMatrixDependencies,\n  matrixDependencies,\n  typedDependencies,\n  createSmaller\n};","import { clone } from '../../../utils/object.js';\nimport { factory } from '../../../utils/factory.js';\nvar name = 'lup';\nvar dependencies = ['typed', 'matrix', 'abs', 'addScalar', 'divideScalar', 'multiplyScalar', 'subtract', 'larger', 'equalScalar', 'unaryMinus', 'DenseMatrix', 'SparseMatrix', 'Spa'];\nexport var createLup = /* #__PURE__ */factory(name, dependencies, (_ref) => {\n  var {\n    typed,\n    matrix,\n    abs,\n    addScalar,\n    divideScalar,\n    multiplyScalar,\n    subtract,\n    larger,\n    equalScalar,\n    unaryMinus,\n    DenseMatrix,\n    SparseMatrix,\n    Spa\n  } = _ref;\n\n  /**\n   * Calculate the Matrix LU decomposition with partial pivoting. Matrix `A` is decomposed in two matrices (`L`, `U`) and a\n   * row permutation vector `p` where `A[p,:] = L * U`\n   *\n   * Syntax:\n   *\n   *    math.lup(A)\n   *\n   * Example:\n   *\n   *    const m = [[2, 1], [1, 4]]\n   *    const r = math.lup(m)\n   *    // r = {\n   *    //   L: [[1, 0], [0.5, 1]],\n   *    //   U: [[2, 1], [0, 3.5]],\n   *    //   P: [0, 1]\n   *    // }\n   *\n   * See also:\n   *\n   *    slu, lsolve, lusolve, usolve\n   *\n   * @param {Matrix | Array} A    A two dimensional matrix or array for which to get the LUP decomposition.\n   *\n   * @return {{L: Array | Matrix, U: Array | Matrix, P: Array.<number>}} The lower triangular matrix, the upper triangular matrix and the permutation matrix.\n   */\n  return typed(name, {\n    DenseMatrix: function DenseMatrix(m) {\n      return _denseLUP(m);\n    },\n    SparseMatrix: function SparseMatrix(m) {\n      return _sparseLUP(m);\n    },\n    Array: function Array(a) {\n      // create dense matrix from array\n      var m = matrix(a); // lup, use matrix implementation\n\n      var r = _denseLUP(m); // result\n\n\n      return {\n        L: r.L.valueOf(),\n        U: r.U.valueOf(),\n        p: r.p\n      };\n    }\n  });\n\n  function _denseLUP(m) {\n    // rows & columns\n    var rows = m._size[0];\n    var columns = m._size[1]; // minimum rows and columns\n\n    var n = Math.min(rows, columns); // matrix array, clone original data\n\n    var data = clone(m._data); // l matrix arrays\n\n    var ldata = [];\n    var lsize = [rows, n]; // u matrix arrays\n\n    var udata = [];\n    var usize = [n, columns]; // vars\n\n    var i, j, k; // permutation vector\n\n    var p = [];\n\n    for (i = 0; i < rows; i++) {\n      p[i] = i;\n    } // loop columns\n\n\n    for (j = 0; j < columns; j++) {\n      // skip first column in upper triangular matrix\n      if (j > 0) {\n        // loop rows\n        for (i = 0; i < rows; i++) {\n          // min i,j\n          var min = Math.min(i, j); // v[i, j]\n\n          var s = 0; // loop up to min\n\n          for (k = 0; k < min; k++) {\n            // s = l[i, k] - data[k, j]\n            s = addScalar(s, multiplyScalar(data[i][k], data[k][j]));\n          }\n\n          data[i][j] = subtract(data[i][j], s);\n        }\n      } // row with larger value in cvector, row >= j\n\n\n      var pi = j;\n      var pabsv = 0;\n      var vjj = 0; // loop rows\n\n      for (i = j; i < rows; i++) {\n        // data @ i, j\n        var v = data[i][j]; // absolute value\n\n        var absv = abs(v); // value is greater than pivote value\n\n        if (larger(absv, pabsv)) {\n          // store row\n          pi = i; // update max value\n\n          pabsv = absv; // value @ [j, j]\n\n          vjj = v;\n        }\n      } // swap rows (j <-> pi)\n\n\n      if (j !== pi) {\n        // swap values j <-> pi in p\n        p[j] = [p[pi], p[pi] = p[j]][0]; // swap j <-> pi in data\n\n        DenseMatrix._swapRows(j, pi, data);\n      } // check column is in lower triangular matrix\n\n\n      if (j < rows) {\n        // loop rows (lower triangular matrix)\n        for (i = j + 1; i < rows; i++) {\n          // value @ i, j\n          var vij = data[i][j];\n\n          if (!equalScalar(vij, 0)) {\n            // update data\n            data[i][j] = divideScalar(data[i][j], vjj);\n          }\n        }\n      }\n    } // loop columns\n\n\n    for (j = 0; j < columns; j++) {\n      // loop rows\n      for (i = 0; i < rows; i++) {\n        // initialize row in arrays\n        if (j === 0) {\n          // check row exists in upper triangular matrix\n          if (i < columns) {\n            // U\n            udata[i] = [];\n          } // L\n\n\n          ldata[i] = [];\n        } // check we are in the upper triangular matrix\n\n\n        if (i < j) {\n          // check row exists in upper triangular matrix\n          if (i < columns) {\n            // U\n            udata[i][j] = data[i][j];\n          } // check column exists in lower triangular matrix\n\n\n          if (j < rows) {\n            // L\n            ldata[i][j] = 0;\n          }\n\n          continue;\n        } // diagonal value\n\n\n        if (i === j) {\n          // check row exists in upper triangular matrix\n          if (i < columns) {\n            // U\n            udata[i][j] = data[i][j];\n          } // check column exists in lower triangular matrix\n\n\n          if (j < rows) {\n            // L\n            ldata[i][j] = 1;\n          }\n\n          continue;\n        } // check row exists in upper triangular matrix\n\n\n        if (i < columns) {\n          // U\n          udata[i][j] = 0;\n        } // check column exists in lower triangular matrix\n\n\n        if (j < rows) {\n          // L\n          ldata[i][j] = data[i][j];\n        }\n      }\n    } // l matrix\n\n\n    var l = new DenseMatrix({\n      data: ldata,\n      size: lsize\n    }); // u matrix\n\n    var u = new DenseMatrix({\n      data: udata,\n      size: usize\n    }); // p vector\n\n    var pv = [];\n\n    for (i = 0, n = p.length; i < n; i++) {\n      pv[p[i]] = i;\n    } // return matrices\n\n\n    return {\n      L: l,\n      U: u,\n      p: pv,\n      toString: function toString() {\n        return 'L: ' + this.L.toString() + '\\nU: ' + this.U.toString() + '\\nP: ' + this.p;\n      }\n    };\n  }\n\n  function _sparseLUP(m) {\n    // rows & columns\n    var rows = m._size[0];\n    var columns = m._size[1]; // minimum rows and columns\n\n    var n = Math.min(rows, columns); // matrix arrays (will not be modified, thanks to permutation vector)\n\n    var values = m._values;\n    var index = m._index;\n    var ptr = m._ptr; // l matrix arrays\n\n    var lvalues = [];\n    var lindex = [];\n    var lptr = [];\n    var lsize = [rows, n]; // u matrix arrays\n\n    var uvalues = [];\n    var uindex = [];\n    var uptr = [];\n    var usize = [n, columns]; // vars\n\n    var i, j, k; // permutation vectors, (current index -> original index) and (original index -> current index)\n\n    var pvCo = [];\n    var pvOc = [];\n\n    for (i = 0; i < rows; i++) {\n      pvCo[i] = i;\n      pvOc[i] = i;\n    } // swap indices in permutation vectors (condition x < y)!\n\n\n    var swapIndeces = function swapIndeces(x, y) {\n      // find pv indeces getting data from x and y\n      var kx = pvOc[x];\n      var ky = pvOc[y]; // update permutation vector current -> original\n\n      pvCo[kx] = y;\n      pvCo[ky] = x; // update permutation vector original -> current\n\n      pvOc[x] = ky;\n      pvOc[y] = kx;\n    }; // loop columns\n\n\n    var _loop = function _loop() {\n      // sparse accumulator\n      var spa = new Spa(); // check lower triangular matrix has a value @ column j\n\n      if (j < rows) {\n        // update ptr\n        lptr.push(lvalues.length); // first value in j column for lower triangular matrix\n\n        lvalues.push(1);\n        lindex.push(j);\n      } // update ptr\n\n\n      uptr.push(uvalues.length); // k0 <= k < k1 where k0 = _ptr[j] && k1 = _ptr[j+1]\n\n      var k0 = ptr[j];\n      var k1 = ptr[j + 1]; // copy column j into sparse accumulator\n\n      for (k = k0; k < k1; k++) {\n        // row\n        i = index[k]; // copy column values into sparse accumulator (use permutation vector)\n\n        spa.set(pvCo[i], values[k]);\n      } // skip first column in upper triangular matrix\n\n\n      if (j > 0) {\n        // loop rows in column j (above diagonal)\n        spa.forEach(0, j - 1, function (k, vkj) {\n          // loop rows in column k (L)\n          SparseMatrix._forEachRow(k, lvalues, lindex, lptr, function (i, vik) {\n            // check row is below k\n            if (i > k) {\n              // update spa value\n              spa.accumulate(i, unaryMinus(multiplyScalar(vik, vkj)));\n            }\n          });\n        });\n      } // row with larger value in spa, row >= j\n\n\n      var pi = j;\n      var vjj = spa.get(j);\n      var pabsv = abs(vjj); // loop values in spa (order by row, below diagonal)\n\n      spa.forEach(j + 1, rows - 1, function (x, v) {\n        // absolute value\n        var absv = abs(v); // value is greater than pivote value\n\n        if (larger(absv, pabsv)) {\n          // store row\n          pi = x; // update max value\n\n          pabsv = absv; // value @ [j, j]\n\n          vjj = v;\n        }\n      }); // swap rows (j <-> pi)\n\n      if (j !== pi) {\n        // swap values j <-> pi in L\n        SparseMatrix._swapRows(j, pi, lsize[1], lvalues, lindex, lptr); // swap values j <-> pi in U\n\n\n        SparseMatrix._swapRows(j, pi, usize[1], uvalues, uindex, uptr); // swap values in spa\n\n\n        spa.swap(j, pi); // update permutation vector (swap values @ j, pi)\n\n        swapIndeces(j, pi);\n      } // loop values in spa (order by row)\n\n\n      spa.forEach(0, rows - 1, function (x, v) {\n        // check we are above diagonal\n        if (x <= j) {\n          // update upper triangular matrix\n          uvalues.push(v);\n          uindex.push(x);\n        } else {\n          // update value\n          v = divideScalar(v, vjj); // check value is non zero\n\n          if (!equalScalar(v, 0)) {\n            // update lower triangular matrix\n            lvalues.push(v);\n            lindex.push(x);\n          }\n        }\n      });\n    };\n\n    for (j = 0; j < columns; j++) {\n      _loop();\n    } // update ptrs\n\n\n    uptr.push(uvalues.length);\n    lptr.push(lvalues.length); // return matrices\n\n    return {\n      L: new SparseMatrix({\n        values: lvalues,\n        index: lindex,\n        ptr: lptr,\n        size: lsize\n      }),\n      U: new SparseMatrix({\n        values: uvalues,\n        index: uindex,\n        ptr: uptr,\n        size: usize\n      }),\n      p: pvCo,\n      toString: function toString() {\n        return 'L: ' + this.L.toString() + '\\nU: ' + this.U.toString() + '\\nP: ' + this.p;\n      }\n    };\n  }\n});","import { isMatrix } from '../../utils/is.js';\nimport { clone } from '../../utils/object.js';\nimport { format } from '../../utils/string.js';\nimport { factory } from '../../utils/factory.js';\nvar name = 'det';\nvar dependencies = ['typed', 'matrix', 'subtract', 'multiply', 'unaryMinus', 'lup'];\nexport var createDet = /* #__PURE__ */factory(name, dependencies, (_ref) => {\n  var {\n    typed,\n    matrix,\n    subtract,\n    multiply,\n    unaryMinus,\n    lup\n  } = _ref;\n\n  /**\n   * Calculate the determinant of a matrix.\n   *\n   * Syntax:\n   *\n   *    math.det(x)\n   *\n   * Examples:\n   *\n   *    math.det([[1, 2], [3, 4]]) // returns -2\n   *\n   *    const A = [\n   *      [-2, 2, 3],\n   *      [-1, 1, 3],\n   *      [2, 0, -1]\n   *    ]\n   *    math.det(A) // returns 6\n   *\n   * See also:\n   *\n   *    inv\n   *\n   * @param {Array | Matrix} x  A matrix\n   * @return {number} The determinant of `x`\n   */\n  return typed(name, {\n    any: function any(x) {\n      return clone(x);\n    },\n    'Array | Matrix': function det(x) {\n      var size;\n\n      if (isMatrix(x)) {\n        size = x.size();\n      } else if (Array.isArray(x)) {\n        x = matrix(x);\n        size = x.size();\n      } else {\n        // a scalar\n        size = [];\n      }\n\n      switch (size.length) {\n        case 0:\n          // scalar\n          return clone(x);\n\n        case 1:\n          // vector\n          if (size[0] === 1) {\n            return clone(x.valueOf()[0]);\n          } else {\n            throw new RangeError('Matrix must be square ' + '(size: ' + format(size) + ')');\n          }\n\n        case 2:\n          {\n            // two dimensional array\n            var rows = size[0];\n            var cols = size[1];\n\n            if (rows === cols) {\n              return _det(x.clone().valueOf(), rows, cols);\n            } else {\n              throw new RangeError('Matrix must be square ' + '(size: ' + format(size) + ')');\n            }\n          }\n\n        default:\n          // multi dimensional array\n          throw new RangeError('Matrix must be two dimensional ' + '(size: ' + format(size) + ')');\n      }\n    }\n  });\n  /**\n   * Calculate the determinant of a matrix\n   * @param {Array[]} matrix  A square, two dimensional matrix\n   * @param {number} rows     Number of rows of the matrix (zero-based)\n   * @param {number} cols     Number of columns of the matrix (zero-based)\n   * @returns {number} det\n   * @private\n   */\n\n  function _det(matrix, rows, cols) {\n    if (rows === 1) {\n      // this is a 1 x 1 matrix\n      return clone(matrix[0][0]);\n    } else if (rows === 2) {\n      // this is a 2 x 2 matrix\n      // the determinant of [a11,a12;a21,a22] is det = a11*a22-a21*a12\n      return subtract(multiply(matrix[0][0], matrix[1][1]), multiply(matrix[1][0], matrix[0][1]));\n    } else {\n      // Compute the LU decomposition\n      var decomp = lup(matrix); // The determinant is the product of the diagonal entries of U (and those of L, but they are all 1)\n\n      var det = decomp.U[0][0];\n\n      for (var _i = 1; _i < rows; _i++) {\n        det = multiply(det, decomp.U[_i][_i]);\n      } // The determinant will be multiplied by 1 or -1 depending on the parity of the permutation matrix.\n      // This can be determined by counting the cycles. This is roughly a linear time algorithm.\n\n\n      var evenCycles = 0;\n      var i = 0;\n      var visited = [];\n\n      while (true) {\n        while (visited[i]) {\n          i++;\n        }\n\n        if (i >= rows) break;\n        var j = i;\n        var cycleLen = 0;\n\n        while (!visited[decomp.p[j]]) {\n          visited[decomp.p[j]] = true;\n          j = decomp.p[j];\n          cycleLen++;\n        }\n\n        if (cycleLen % 2 === 0) {\n          evenCycles++;\n        }\n      }\n\n      return evenCycles % 2 === 0 ? det : unaryMinus(det);\n    }\n  }\n});","import { isMatrix } from '../../utils/is.js';\nimport { arraySize } from '../../utils/array.js';\nimport { factory } from '../../utils/factory.js';\nimport { format } from '../../utils/string.js';\nvar name = 'inv';\nvar dependencies = ['typed', 'matrix', 'divideScalar', 'addScalar', 'multiply', 'unaryMinus', 'det', 'identity', 'abs'];\nexport var createInv = /* #__PURE__ */factory(name, dependencies, (_ref) => {\n  var {\n    typed,\n    matrix,\n    divideScalar,\n    addScalar,\n    multiply,\n    unaryMinus,\n    det,\n    identity,\n    abs\n  } = _ref;\n\n  /**\n   * Calculate the inverse of a square matrix.\n   *\n   * Syntax:\n   *\n   *     math.inv(x)\n   *\n   * Examples:\n   *\n   *     math.inv([[1, 2], [3, 4]])  // returns [[-2, 1], [1.5, -0.5]]\n   *     math.inv(4)                 // returns 0.25\n   *     1 / 4                       // returns 0.25\n   *\n   * See also:\n   *\n   *     det, transpose\n   *\n   * @param {number | Complex | Array | Matrix} x     Matrix to be inversed\n   * @return {number | Complex | Array | Matrix} The inverse of `x`.\n   */\n  return typed(name, {\n    'Array | Matrix': function ArrayMatrix(x) {\n      var size = isMatrix(x) ? x.size() : arraySize(x);\n\n      switch (size.length) {\n        case 1:\n          // vector\n          if (size[0] === 1) {\n            if (isMatrix(x)) {\n              return matrix([divideScalar(1, x.valueOf()[0])]);\n            } else {\n              return [divideScalar(1, x[0])];\n            }\n          } else {\n            throw new RangeError('Matrix must be square ' + '(size: ' + format(size) + ')');\n          }\n\n        case 2:\n          // two dimensional array\n          {\n            var rows = size[0];\n            var cols = size[1];\n\n            if (rows === cols) {\n              if (isMatrix(x)) {\n                return matrix(_inv(x.valueOf(), rows, cols), x.storage());\n              } else {\n                // return an Array\n                return _inv(x, rows, cols);\n              }\n            } else {\n              throw new RangeError('Matrix must be square ' + '(size: ' + format(size) + ')');\n            }\n          }\n\n        default:\n          // multi dimensional array\n          throw new RangeError('Matrix must be two dimensional ' + '(size: ' + format(size) + ')');\n      }\n    },\n    any: function any(x) {\n      // scalar\n      return divideScalar(1, x); // FIXME: create a BigNumber one when configured for bignumbers\n    }\n  });\n  /**\n   * Calculate the inverse of a square matrix\n   * @param {Array[]} mat     A square matrix\n   * @param {number} rows     Number of rows\n   * @param {number} cols     Number of columns, must equal rows\n   * @return {Array[]} inv    Inverse matrix\n   * @private\n   */\n\n  function _inv(mat, rows, cols) {\n    var r, s, f, value, temp;\n\n    if (rows === 1) {\n      // this is a 1 x 1 matrix\n      value = mat[0][0];\n\n      if (value === 0) {\n        throw Error('Cannot calculate inverse, determinant is zero');\n      }\n\n      return [[divideScalar(1, value)]];\n    } else if (rows === 2) {\n      // this is a 2 x 2 matrix\n      var d = det(mat);\n\n      if (d === 0) {\n        throw Error('Cannot calculate inverse, determinant is zero');\n      }\n\n      return [[divideScalar(mat[1][1], d), divideScalar(unaryMinus(mat[0][1]), d)], [divideScalar(unaryMinus(mat[1][0]), d), divideScalar(mat[0][0], d)]];\n    } else {\n      // this is a matrix of 3 x 3 or larger\n      // calculate inverse using gauss-jordan elimination\n      //      https://en.wikipedia.org/wiki/Gaussian_elimination\n      //      http://mathworld.wolfram.com/MatrixInverse.html\n      //      http://math.uww.edu/~mcfarlat/inverse.htm\n      // make a copy of the matrix (only the arrays, not of the elements)\n      var A = mat.concat();\n\n      for (r = 0; r < rows; r++) {\n        A[r] = A[r].concat();\n      } // create an identity matrix which in the end will contain the\n      // matrix inverse\n\n\n      var B = identity(rows).valueOf(); // loop over all columns, and perform row reductions\n\n      for (var c = 0; c < cols; c++) {\n        // Pivoting: Swap row c with row r, where row r contains the largest element A[r][c]\n        var ABig = abs(A[c][c]);\n        var rBig = c;\n        r = c + 1;\n\n        while (r < rows) {\n          if (abs(A[r][c]) > ABig) {\n            ABig = abs(A[r][c]);\n            rBig = r;\n          }\n\n          r++;\n        }\n\n        if (ABig === 0) {\n          throw Error('Cannot calculate inverse, determinant is zero');\n        }\n\n        r = rBig;\n\n        if (r !== c) {\n          temp = A[c];\n          A[c] = A[r];\n          A[r] = temp;\n          temp = B[c];\n          B[c] = B[r];\n          B[r] = temp;\n        } // eliminate non-zero values on the other rows at column c\n\n\n        var Ac = A[c];\n        var Bc = B[c];\n\n        for (r = 0; r < rows; r++) {\n          var Ar = A[r];\n          var Br = B[r];\n\n          if (r !== c) {\n            // eliminate value at column c and row r\n            if (Ar[c] !== 0) {\n              f = divideScalar(unaryMinus(Ar[c]), Ac[c]); // add (f * row c) to row r to eliminate the value\n              // at column c\n\n              for (s = c; s < cols; s++) {\n                Ar[s] = addScalar(Ar[s], multiply(f, Ac[s]));\n              }\n\n              for (s = 0; s < cols; s++) {\n                Br[s] = addScalar(Br[s], multiply(f, Bc[s]));\n              }\n            }\n          } else {\n            // normalize value at Acc to 1,\n            // divide each value on row r with the value at Acc\n            f = Ac[c];\n\n            for (s = c; s < cols; s++) {\n              Ar[s] = divideScalar(Ar[s], f);\n            }\n\n            for (s = 0; s < cols; s++) {\n              Br[s] = divideScalar(Br[s], f);\n            }\n          }\n        }\n      }\n\n      return B;\n    }\n  }\n});","import { factory } from '../../utils/factory.js';\nimport { extend } from '../../utils/object.js';\nimport { createAlgorithm11 } from '../../type/matrix/utils/algorithm11.js';\nimport { createAlgorithm14 } from '../../type/matrix/utils/algorithm14.js';\nvar name = 'divide';\nvar dependencies = ['typed', 'matrix', 'multiply', 'equalScalar', 'divideScalar', 'inv'];\nexport var createDivide = /* #__PURE__ */factory(name, dependencies, (_ref) => {\n  var {\n    typed,\n    matrix,\n    multiply,\n    equalScalar,\n    divideScalar,\n    inv\n  } = _ref;\n  var algorithm11 = createAlgorithm11({\n    typed,\n    equalScalar\n  });\n  var algorithm14 = createAlgorithm14({\n    typed\n  });\n  /**\n   * Divide two values, `x / y`.\n   * To divide matrices, `x` is multiplied with the inverse of `y`: `x * inv(y)`.\n   *\n   * Syntax:\n   *\n   *    math.divide(x, y)\n   *\n   * Examples:\n   *\n   *    math.divide(2, 3)            // returns number 0.6666666666666666\n   *\n   *    const a = math.complex(5, 14)\n   *    const b = math.complex(4, 1)\n   *    math.divide(a, b)            // returns Complex 2 + 3i\n   *\n   *    const c = [[7, -6], [13, -4]]\n   *    const d = [[1, 2], [4, 3]]\n   *    math.divide(c, d)            // returns Array [[-9, 4], [-11, 6]]\n   *\n   *    const e = math.unit('18 km')\n   *    math.divide(e, 4.5)          // returns Unit 4 km\n   *\n   * See also:\n   *\n   *    multiply\n   *\n   * @param  {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} x   Numerator\n   * @param  {number | BigNumber | Fraction | Complex | Array | Matrix} y          Denominator\n   * @return {number | BigNumber | Fraction | Complex | Unit | Array | Matrix}                      Quotient, `x / y`\n   */\n\n  return typed('divide', extend({\n    // we extend the signatures of divideScalar with signatures dealing with matrices\n    'Array | Matrix, Array | Matrix': function ArrayMatrixArrayMatrix(x, y) {\n      // TODO: implement matrix right division using pseudo inverse\n      // https://www.mathworks.nl/help/matlab/ref/mrdivide.html\n      // https://www.gnu.org/software/octave/doc/interpreter/Arithmetic-Ops.html\n      // https://stackoverflow.com/questions/12263932/how-does-gnu-octave-matrix-division-work-getting-unexpected-behaviour\n      return multiply(x, inv(y));\n    },\n    'DenseMatrix, any': function DenseMatrixAny(x, y) {\n      return algorithm14(x, y, divideScalar, false);\n    },\n    'SparseMatrix, any': function SparseMatrixAny(x, y) {\n      return algorithm11(x, y, divideScalar, false);\n    },\n    'Array, any': function ArrayAny(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(x), y, divideScalar, false).valueOf();\n    },\n    'any, Array | Matrix': function anyArrayMatrix(x, y) {\n      return multiply(x, inv(y));\n    }\n  }, divideScalar.signatures));\n});","function E () {\n  // Keep this empty so it's easier to inherit from\n  // (via https://github.com/lipsmack from https://github.com/scottcorgan/tiny-emitter/issues/3)\n}\n\nE.prototype = {\n  on: function (name, callback, ctx) {\n    var e = this.e || (this.e = {});\n\n    (e[name] || (e[name] = [])).push({\n      fn: callback,\n      ctx: ctx\n    });\n\n    return this;\n  },\n\n  once: function (name, callback, ctx) {\n    var self = this;\n    function listener () {\n      self.off(name, listener);\n      callback.apply(ctx, arguments);\n    };\n\n    listener._ = callback\n    return this.on(name, listener, ctx);\n  },\n\n  emit: function (name) {\n    var data = [].slice.call(arguments, 1);\n    var evtArr = ((this.e || (this.e = {}))[name] || []).slice();\n    var i = 0;\n    var len = evtArr.length;\n\n    for (i; i < len; i++) {\n      evtArr[i].fn.apply(evtArr[i].ctx, data);\n    }\n\n    return this;\n  },\n\n  off: function (name, callback) {\n    var e = this.e || (this.e = {});\n    var evts = e[name];\n    var liveEvents = [];\n\n    if (evts && callback) {\n      for (var i = 0, len = evts.length; i < len; i++) {\n        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\n          liveEvents.push(evts[i]);\n      }\n    }\n\n    // Remove event from queue to prevent memory leak\n    // Suggested by https://github.com/lazd\n    // Ref: https://github.com/scottcorgan/tiny-emitter/commit/c6ebfaa9bc973b33d110a84a307742b7cf94c953#commitcomment-5024910\n\n    (liveEvents.length)\n      ? e[name] = liveEvents\n      : delete e[name];\n\n    return this;\n  }\n};\n\nmodule.exports = E;\nmodule.exports.TinyEmitter = E;\n","import { isBigNumber, isComplex, isFraction, isMatrix, isUnit } from '../../utils/is.js';\nimport { isFactory, stripOptionalNotation } from '../../utils/factory.js';\nimport { hasOwnProperty, lazy } from '../../utils/object.js';\nimport { contains } from '../../utils/array.js';\nimport { ArgumentsError } from '../../error/ArgumentsError.js';\nexport function importFactory(typed, load, math, importedFactories) {\n  /**\n   * Import functions from an object or a module.\n   *\n   * This function is only available on a mathjs instance created using `create`.\n   *\n   * Syntax:\n   *\n   *    math.import(functions)\n   *    math.import(functions, options)\n   *\n   * Where:\n   *\n   * - `functions: Object`\n   *   An object with functions or factories to be imported.\n   * - `options: Object` An object with import options. Available options:\n   *   - `override: boolean`\n   *     If true, existing functions will be overwritten. False by default.\n   *   - `silent: boolean`\n   *     If true, the function will not throw errors on duplicates or invalid\n   *     types. False by default.\n   *   - `wrap: boolean`\n   *     If true, the functions will be wrapped in a wrapper function\n   *     which converts data types like Matrix to primitive data types like Array.\n   *     The wrapper is needed when extending math.js with libraries which do not\n   *     support these data type. False by default.\n   *\n   * Examples:\n   *\n   *    import { create, all } from 'mathjs'\n   *    import * as numbers from 'numbers'\n   *\n   *    // create a mathjs instance\n   *    const math = create(all)\n   *\n   *    // define new functions and variables\n   *    math.import({\n   *      myvalue: 42,\n   *      hello: function (name) {\n   *        return 'hello, ' + name + '!'\n   *      }\n   *    })\n   *\n   *    // use the imported function and variable\n   *    math.myvalue * 2               // 84\n   *    math.hello('user')             // 'hello, user!'\n   *\n   *    // import the npm module 'numbers'\n   *    // (must be installed first with `npm install numbers`)\n   *    math.import(numbers, {wrap: true})\n   *\n   *    math.fibonacci(7) // returns 13\n   *\n   * @param {Object | Array} functions  Object with functions to be imported.\n   * @param {Object} [options]          Import options.\n   */\n  function mathImport(functions, options) {\n    var num = arguments.length;\n\n    if (num !== 1 && num !== 2) {\n      throw new ArgumentsError('import', num, 1, 2);\n    }\n\n    if (!options) {\n      options = {};\n    }\n\n    function flattenImports(flatValues, value, name) {\n      if (Array.isArray(value)) {\n        value.forEach(item => flattenImports(flatValues, item));\n      } else if (typeof value === 'object') {\n        for (var _name in value) {\n          if (hasOwnProperty(value, _name)) {\n            flattenImports(flatValues, value[_name], _name);\n          }\n        }\n      } else if (isFactory(value) || name !== undefined) {\n        var flatName = isFactory(value) ? isTransformFunctionFactory(value) ? value.fn + '.transform' : // TODO: this is ugly\n        value.fn : name; // we allow importing the same function twice if it points to the same implementation\n\n        if (hasOwnProperty(flatValues, flatName) && flatValues[flatName] !== value && !options.silent) {\n          throw new Error('Cannot import \"' + flatName + '\" twice');\n        }\n\n        flatValues[flatName] = value;\n      } else {\n        if (!options.silent) {\n          throw new TypeError('Factory, Object, or Array expected');\n        }\n      }\n    }\n\n    var flatValues = {};\n    flattenImports(flatValues, functions);\n\n    for (var name in flatValues) {\n      if (hasOwnProperty(flatValues, name)) {\n        // console.log('import', name)\n        var value = flatValues[name];\n\n        if (isFactory(value)) {\n          // we ignore name here and enforce the name of the factory\n          // maybe at some point we do want to allow overriding it\n          // in that case we can implement an option overrideFactoryNames: true\n          _importFactory(value, options);\n        } else if (isSupportedType(value)) {\n          _import(name, value, options);\n        } else {\n          if (!options.silent) {\n            throw new TypeError('Factory, Object, or Array expected');\n          }\n        }\n      }\n    }\n  }\n  /**\n   * Add a property to the math namespace\n   * @param {string} name\n   * @param {*} value\n   * @param {Object} options  See import for a description of the options\n   * @private\n   */\n\n\n  function _import(name, value, options) {\n    // TODO: refactor this function, it's to complicated and contains duplicate code\n    if (options.wrap && typeof value === 'function') {\n      // create a wrapper around the function\n      value = _wrap(value);\n    } // turn a plain function with a typed-function signature into a typed-function\n\n\n    if (hasTypedFunctionSignature(value)) {\n      value = typed(name, {\n        [value.signature]: value\n      });\n    }\n\n    if (isTypedFunction(math[name]) && isTypedFunction(value)) {\n      if (options.override) {\n        // give the typed function the right name\n        value = typed(name, value.signatures);\n      } else {\n        // merge the existing and typed function\n        value = typed(math[name], value);\n      }\n\n      math[name] = value;\n      delete importedFactories[name];\n\n      _importTransform(name, value);\n\n      math.emit('import', name, function resolver() {\n        return value;\n      });\n      return;\n    }\n\n    if (math[name] === undefined || options.override) {\n      math[name] = value;\n      delete importedFactories[name];\n\n      _importTransform(name, value);\n\n      math.emit('import', name, function resolver() {\n        return value;\n      });\n      return;\n    }\n\n    if (!options.silent) {\n      throw new Error('Cannot import \"' + name + '\": already exists');\n    }\n  }\n\n  function _importTransform(name, value) {\n    if (value && typeof value.transform === 'function') {\n      math.expression.transform[name] = value.transform;\n\n      if (allowedInExpressions(name)) {\n        math.expression.mathWithTransform[name] = value.transform;\n      }\n    } else {\n      // remove existing transform\n      delete math.expression.transform[name];\n\n      if (allowedInExpressions(name)) {\n        math.expression.mathWithTransform[name] = value;\n      }\n    }\n  }\n\n  function _deleteTransform(name) {\n    delete math.expression.transform[name];\n\n    if (allowedInExpressions(name)) {\n      math.expression.mathWithTransform[name] = math[name];\n    } else {\n      delete math.expression.mathWithTransform[name];\n    }\n  }\n  /**\n   * Create a wrapper a round an function which converts the arguments\n   * to their primitive values (like convert a Matrix to Array)\n   * @param {Function} fn\n   * @return {Function} Returns the wrapped function\n   * @private\n   */\n\n\n  function _wrap(fn) {\n    var wrapper = function wrapper() {\n      var args = [];\n\n      for (var i = 0, len = arguments.length; i < len; i++) {\n        var arg = arguments[i];\n        args[i] = arg && arg.valueOf();\n      }\n\n      return fn.apply(math, args);\n    };\n\n    if (fn.transform) {\n      wrapper.transform = fn.transform;\n    }\n\n    return wrapper;\n  }\n  /**\n   * Import an instance of a factory into math.js\n   * @param {function(scope: object)} factory\n   * @param {Object} options  See import for a description of the options\n   * @param {string} [name=factory.name] Optional custom name\n   * @private\n   */\n\n\n  function _importFactory(factory, options) {\n    var name = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : factory.fn;\n\n    if (contains(name, '.')) {\n      throw new Error('Factory name should not contain a nested path. ' + 'Name: ' + JSON.stringify(name));\n    }\n\n    var namespace = isTransformFunctionFactory(factory) ? math.expression.transform : math;\n    var existingTransform = (name in math.expression.transform);\n    var existing = hasOwnProperty(namespace, name) ? namespace[name] : undefined;\n\n    var resolver = function resolver() {\n      // collect all dependencies, handle finding both functions and classes and other special cases\n      var dependencies = {};\n      factory.dependencies.map(stripOptionalNotation).forEach(dependency => {\n        if (contains(dependency, '.')) {\n          throw new Error('Factory dependency should not contain a nested path. ' + 'Name: ' + JSON.stringify(dependency));\n        }\n\n        if (dependency === 'math') {\n          dependencies.math = math;\n        } else if (dependency === 'mathWithTransform') {\n          dependencies.mathWithTransform = math.expression.mathWithTransform;\n        } else if (dependency === 'classes') {\n          // special case for json reviver\n          dependencies.classes = math;\n        } else {\n          dependencies[dependency] = math[dependency];\n        }\n      });\n      var instance = /* #__PURE__ */factory(dependencies);\n\n      if (instance && typeof instance.transform === 'function') {\n        throw new Error('Transforms cannot be attached to factory functions. ' + 'Please create a separate function for it with exports.path=\"expression.transform\"');\n      }\n\n      if (existing === undefined || options.override) {\n        return instance;\n      }\n\n      if (isTypedFunction(existing) && isTypedFunction(instance)) {\n        // merge the existing and new typed function\n        return typed(existing, instance);\n      }\n\n      if (options.silent) {\n        // keep existing, ignore imported function\n        return existing;\n      } else {\n        throw new Error('Cannot import \"' + name + '\": already exists');\n      }\n    }; // TODO: add unit test with non-lazy factory\n\n\n    if (!factory.meta || factory.meta.lazy !== false) {\n      lazy(namespace, name, resolver); // FIXME: remove the `if (existing &&` condition again. Can we make sure subset is loaded before subset.transform? (Name collision, and no dependencies between the two)\n\n      if (existing && existingTransform) {\n        _deleteTransform(name);\n      } else {\n        if (isTransformFunctionFactory(factory) || factoryAllowedInExpressions(factory)) {\n          lazy(math.expression.mathWithTransform, name, () => namespace[name]);\n        }\n      }\n    } else {\n      namespace[name] = resolver(); // FIXME: remove the `if (existing &&` condition again. Can we make sure subset is loaded before subset.transform? (Name collision, and no dependencies between the two)\n\n      if (existing && existingTransform) {\n        _deleteTransform(name);\n      } else {\n        if (isTransformFunctionFactory(factory) || factoryAllowedInExpressions(factory)) {\n          lazy(math.expression.mathWithTransform, name, () => namespace[name]);\n        }\n      }\n    } // TODO: improve factories, store a list with imports instead which can be re-played\n\n\n    importedFactories[name] = factory;\n    math.emit('import', name, resolver);\n  }\n  /**\n   * Check whether given object is a type which can be imported\n   * @param {Function | number | string | boolean | null | Unit | Complex} object\n   * @return {boolean}\n   * @private\n   */\n\n\n  function isSupportedType(object) {\n    return typeof object === 'function' || typeof object === 'number' || typeof object === 'string' || typeof object === 'boolean' || object === null || isUnit(object) || isComplex(object) || isBigNumber(object) || isFraction(object) || isMatrix(object) || Array.isArray(object);\n  }\n  /**\n   * Test whether a given thing is a typed-function\n   * @param {*} fn\n   * @return {boolean} Returns true when `fn` is a typed-function\n   */\n\n\n  function isTypedFunction(fn) {\n    return typeof fn === 'function' && typeof fn.signatures === 'object';\n  }\n\n  function hasTypedFunctionSignature(fn) {\n    return typeof fn === 'function' && typeof fn.signature === 'string';\n  }\n\n  function allowedInExpressions(name) {\n    return !hasOwnProperty(unsafe, name);\n  }\n\n  function factoryAllowedInExpressions(factory) {\n    return factory.fn.indexOf('.') === -1 && // FIXME: make checking on path redundant, check on meta data instead\n    !hasOwnProperty(unsafe, factory.fn) && (!factory.meta || !factory.meta.isClass);\n  }\n\n  function isTransformFunctionFactory(factory) {\n    return factory !== undefined && factory.meta !== undefined && factory.meta.isTransformFunction === true || false;\n  } // namespaces and functions not available in the parser for safety reasons\n\n\n  var unsafe = {\n    expression: true,\n    type: true,\n    docs: true,\n    error: true,\n    json: true,\n    chain: true // chain method not supported. Note that there is a unit chain too.\n\n  };\n  return mathImport;\n}","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport './../utils/polyfills.js';\nimport { deepFlatten, isLegacyFactory, values } from '../utils/object.js';\nimport * as emitter from './../utils/emitter.js';\nimport { importFactory } from './function/import.js';\nimport { configFactory } from './function/config.js';\nimport { factory, isFactory } from '../utils/factory.js';\nimport { isAccessorNode, isArray, isArrayNode, isAssignmentNode, isBigNumber, isBlockNode, isBoolean, isChain, isCollection, isComplex, isConditionalNode, isConstantNode, isDate, isDenseMatrix, isFraction, isFunction, isFunctionAssignmentNode, isFunctionNode, isHelp, isIndex, isIndexNode, isMatrix, isNode, isNull, isNumber, isObject, isObjectNode, isOperatorNode, isParenthesisNode, isRange, isRangeNode, isRegExp, isResultSet, isSparseMatrix, isString, isSymbolNode, isUndefined, isUnit } from '../utils/is.js';\nimport { ArgumentsError } from '../error/ArgumentsError.js';\nimport { DimensionError } from '../error/DimensionError.js';\nimport { IndexError } from '../error/IndexError.js';\nimport { DEFAULT_CONFIG } from './config.js';\n/**\n * Create a mathjs instance from given factory functions and optionally config\n *\n * Usage:\n *\n *     const mathjs1 = create({ createAdd, createMultiply, ...})\n *     const config = { number: 'BigNumber' }\n *     const mathjs2 = create(all, config)\n *\n * @param {Object} [factories] An object with factory functions\n *                             The object can contain nested objects,\n *                             all nested objects will be flattened.\n * @param {Object} [config]    Available options:\n *                            {number} epsilon\n *                              Minimum relative difference between two\n *                              compared values, used by all comparison functions.\n *                            {string} matrix\n *                              A string 'Matrix' (default) or 'Array'.\n *                            {string} number\n *                              A string 'number' (default), 'BigNumber', or 'Fraction'\n *                            {number} precision\n *                              The number of significant digits for BigNumbers.\n *                              Not applicable for Numbers.\n *                            {boolean} predictable\n *                              Predictable output type of functions. When true,\n *                              output type depends only on the input types. When\n *                              false (default), output type can vary depending\n *                              on input values. For example `math.sqrt(-4)`\n *                              returns `complex('2i')` when predictable is false, and\n *                              returns `NaN` when true.\n *                            {string} randomSeed\n *                              Random seed for seeded pseudo random number generator.\n *                              Set to null to randomly seed.\n * @returns {Object} Returns a bare-bone math.js instance containing\n *                   functions:\n *                   - `import` to add new functions\n *                   - `config` to change configuration\n *                   - `on`, `off`, `once`, `emit` for events\n */\n\nexport function create(factories, config) {\n  var configInternal = _extends({}, DEFAULT_CONFIG, config); // simple test for ES5 support\n\n\n  if (typeof Object.create !== 'function') {\n    throw new Error('ES5 not supported by this JavaScript engine. ' + 'Please load the es5-shim and es5-sham library for compatibility.');\n  } // create the mathjs instance\n\n\n  var math = emitter.mixin({\n    // only here for backward compatibility for legacy factory functions\n    isNumber,\n    isComplex,\n    isBigNumber,\n    isFraction,\n    isUnit,\n    isString,\n    isArray,\n    isMatrix,\n    isCollection,\n    isDenseMatrix,\n    isSparseMatrix,\n    isRange,\n    isIndex,\n    isBoolean,\n    isResultSet,\n    isHelp,\n    isFunction,\n    isDate,\n    isRegExp,\n    isObject,\n    isNull,\n    isUndefined,\n    isAccessorNode,\n    isArrayNode,\n    isAssignmentNode,\n    isBlockNode,\n    isConditionalNode,\n    isConstantNode,\n    isFunctionAssignmentNode,\n    isFunctionNode,\n    isIndexNode,\n    isNode,\n    isObjectNode,\n    isOperatorNode,\n    isParenthesisNode,\n    isRangeNode,\n    isSymbolNode,\n    isChain\n  }); // load config function and apply provided config\n\n  math.config = configFactory(configInternal, math.emit);\n  math.expression = {\n    transform: {},\n    mathWithTransform: {\n      config: math.config\n    }\n  }; // cached factories and instances used by function load\n\n  var legacyFactories = [];\n  var legacyInstances = [];\n  /**\n   * Load a function or data type from a factory.\n   * If the function or data type already exists, the existing instance is\n   * returned.\n   * @param {Function} factory\n   * @returns {*}\n   */\n\n  function load(factory) {\n    if (isFactory(factory)) {\n      return factory(math);\n    }\n\n    var firstProperty = factory[Object.keys(factory)[0]];\n\n    if (isFactory(firstProperty)) {\n      return firstProperty(math);\n    }\n\n    if (!isLegacyFactory(factory)) {\n      console.warn('Factory object with properties `type`, `name`, and `factory` expected', factory);\n      throw new Error('Factory object with properties `type`, `name`, and `factory` expected');\n    }\n\n    var index = legacyFactories.indexOf(factory);\n    var instance;\n\n    if (index === -1) {\n      // doesn't yet exist\n      if (factory.math === true) {\n        // pass with math namespace\n        instance = factory.factory(math.type, configInternal, load, math.typed, math);\n      } else {\n        instance = factory.factory(math.type, configInternal, load, math.typed);\n      } // append to the cache\n\n\n      legacyFactories.push(factory);\n      legacyInstances.push(instance);\n    } else {\n      // already existing function, return the cached instance\n      instance = legacyInstances[index];\n    }\n\n    return instance;\n  }\n\n  var importedFactories = {}; // load the import function\n\n  function lazyTyped() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return math.typed.apply(math.typed, args);\n  }\n\n  var internalImport = importFactory(lazyTyped, load, math, importedFactories);\n  math.import = internalImport; // listen for changes in config, import all functions again when changed\n  // TODO: move this listener into the import function?\n\n  math.on('config', () => {\n    values(importedFactories).forEach(factory => {\n      if (factory && factory.meta && factory.meta.recreateOnConfigChange) {\n        // FIXME: only re-create when the current instance is the same as was initially created\n        // FIXME: delete the functions/constants before importing them again?\n        internalImport(factory, {\n          override: true\n        });\n      }\n    });\n  }); // the create function exposed on the mathjs instance is bound to\n  // the factory functions passed before\n\n  math.create = create.bind(null, factories); // export factory function\n\n  math.factory = factory; // import the factory functions like createAdd as an array instead of object,\n  // else they will get a different naming (`createAdd` instead of `add`).\n\n  math.import(values(deepFlatten(factories)));\n  math.ArgumentsError = ArgumentsError;\n  math.DimensionError = DimensionError;\n  math.IndexError = IndexError;\n  return math;\n}","import Emitter from 'tiny-emitter';\n/**\n * Extend given object with emitter functions `on`, `off`, `once`, `emit`\n * @param {Object} obj\n * @return {Object} obj\n */\n\nexport function mixin(obj) {\n  // create event emitter\n  var emitter = new Emitter(); // bind methods to obj (we don't want to expose the emitter.e Array...)\n\n  obj.on = emitter.on.bind(emitter);\n  obj.off = emitter.off.bind(emitter);\n  obj.once = emitter.once.bind(emitter);\n  obj.emit = emitter.emit.bind(emitter);\n  return obj;\n}","import { SpatialMetrics, NodeState } from './SpatialMetrics'\nimport { SpatialAdapter } from './SpatialAdapter'\nimport { Box3, MathType, Vector2 } from './math-utils'\nimport { SpatialOptimizer, OptimizerConfig } from './SpatialOptimizer'\nimport { Transitionable, TransitionConfig, easing } from './Transitionable'\nimport { LayoutFrustum } from './LayoutFrustum'\nimport { \n    create, \n    evaluateDependencies, \n    addDependencies, \n    subtractDependencies,\n    multiplyDependencies,\n    divideDependencies,\n    numberDependencies,\n    modDependencies,\n    createUnitDependencies,\n    unitDependencies \n} from 'mathjs'\n\n/**\n * A third-party scenegraph node instance (e.g., THREE.Object3D)\n */\nexport type Node3D = { __isSceneGraphNode: true }\n\n/**\n * Bindings for a scenegraph node instance (glue layer)\n */\nexport interface NodeBindings<N extends Node3D> {\n    getChildren(metrics:SpatialMetrics<N>, children:Node3D[]) : void\n    getState(metrics:SpatialMetrics<N>, state:NodeState<N>) : void\n    getIntrinsicBounds(metrics:SpatialMetrics<N>, bounds:Box3) : void\n    apply(metrics:SpatialMetrics<N>, state:Readonly<NodeState<N>>) : void\n}\n\n/**\n * Manages spatial adaptivity within an entire scene graph\n */\nexport class EtherealLayoutSystem<N extends Node3D = Node3D> {\n\n    constructor(public viewNode:N, public bindings:NodeBindings<N>) {}\n\n    math = create({ \n        evaluateDependencies, \n        addDependencies, \n        subtractDependencies,\n        multiplyDependencies,\n        divideDependencies,\n        modDependencies,\n        numberDependencies,\n        createUnitDependencies,\n        unitDependencies }, <any>{\n        predictable: true\n    }) as math.MathJsStatic\n\n    mathCompiledExpressions = new Map<string,math.EvalFunction>() \n\n    mathScope = {\n        ratio: undefined,\n        degree: this.math.unit('degree'),\n        meter: this.math.unit('meter'),\n        pixel: this.math.createUnit('pixel',{aliases:['pixels','px']}),\n        percent: undefined as math.Unit|undefined,\n        vdeg: undefined as math.Unit|undefined,\n        vw: undefined as math.Unit|undefined,\n        vh: undefined as math.Unit|undefined\n    }\n\n    epsillonMeters = 1e-10\n    epsillonRadians = 1e-10\n    epsillonRatio = 1e-10\n\n    transition = new TransitionConfig({\n        multiplier: 1,\n        duration: 0,\n        easing: easing.easeInOut,\n        threshold: 0,\n        delay: 0,\n        debounce: 0,\n        maxWait: 10,\n        blend: true\n    }) as Required<TransitionConfig>\n\n    optimize = new OptimizerConfig({\n        minFeasibleTime: 2,\n        maxInfeasibleTime: Infinity,\n        relativeTolerance: 0.3, \n        maxIterationsPerFrame: 30, // iterations per frame per layout\n        swarmSize: 8, // solutions per layout\n        pulseFrequencyMin: 0, // minimal exploitation pulse\n        pulseFrequencyMax: 1, // maximal exploitation pulse\n        pulseRate: 0.1, // The ratio of directed exploitation vs random exploration,\n        stepSizeMin: 0.000001,\n        stepSizeMax: 4,\n        stepSizeStart: 1.5\n    }) as Required<OptimizerConfig>\n\n    /**\n     * \n     */\n    optimizer = new SpatialOptimizer<N>(this)\n\n    /**\n     * The view layout frustum\n     */\n    viewFrustum = new LayoutFrustum\n\n    /**\n     * The view size in pixels\n     */\n    viewResolution = new Vector2(1000,1000)\n\n    /**\n     * The deltaTime for the current frame (seconds)\n     * @readonly\n     */\n    deltaTime = 1/60\n\n    /**\n     * \n     */\n    time = 0\n    \n    /**\n     * The maximum delta time value\n     */\n    maxDeltaTime = 1/60\n\n    /** \n     * SpatialMetrics for Node3D\n     */\n    nodeMetrics = new Map<N, SpatialMetrics<N>>()\n\n    /** \n     * SpatialAdapter for Node3D\n     */\n    nodeAdapters = new Map<N, SpatialAdapter<N>>()\n\n    /**\n     * \n     */\n    readonly transitionables = [] as Transitionable[]\n\n    /**\n     * \n     */\n    get viewMetrics() {\n        if (!this.viewNode) throw new Error('EtherealSystem.viewNode must be defined')\n        return this.getMetrics(this.viewNode!)\n    }\n\n    /**\n     * Get or create a SpatialMetrics instance which wraps a third-party node instance (e.g., THREE.Object3D instance)\n     */\n    getMetrics = (node:N) => {\n        if (!node) throw new Error('node must be defined')\n        let metrics = this.nodeMetrics.get(node) as SpatialMetrics<N>\n        if (!metrics) {\n            metrics = new SpatialMetrics<N>(this, node)\n            this.nodeMetrics.set(node, metrics)\n        }\n        return metrics \n    }\n\n    /**\n     * \n     */\n    getState = (node:N) => {\n        if (!node) throw new Error('node must be defined')\n        return this.getMetrics(node).target\n    }\n\n    /**\n     * Get or create a SpatialAdapter instance which wraps a third-party node instance (e.g., THREE.Object3D instance)\n     * @param node \n     */\n    getAdapter = (node:N) => {\n        let adapter = this.nodeAdapters.get(node) as SpatialAdapter<N>\n        if (!adapter) {\n            adapter = new SpatialAdapter(this, node)\n            this.nodeAdapters.set(node, adapter)\n        }\n        return adapter\n    }\n\n    /**\n     * Create a Transitionable instance\n     */\n    createTransitionable = <T extends MathType> (value:T, config?:TransitionConfig) => {\n        const t = new Transitionable(this, value, config, this.transition)\n        this.transitionables.push(t)\n        return t as any as Transitionable<T>\n    }\n\n\n    private _prevResolution = new Vector2\n    private _prevSize = new Vector2\n\n    /**\n     * Call this each frame, after updating `viewNode`, `viewFrustum`, \n     * and `viewResolution`\n     * \n     * @param deltaTime\n     */\n    update(deltaTime:number, time:number) {\n\n        this.deltaTime = Math.max(deltaTime, this.maxDeltaTime)\n        this.time = time\n        \n        if (!this._prevResolution.equals(this.viewResolution) || !this._prevSize.equals(this.viewFrustum.sizeDegrees)) {\n            this.mathScope.vdeg = this.math.unit(this.viewResolution.y/this.viewFrustum.sizeDegrees.y,'px')\n            this.mathScope.vw = this.math.unit(this.viewResolution.x/100,'px')\n            this.mathScope.vh = this.math.unit(this.viewResolution.y/100,'px')\n            this.measureNumberCache = {}\n        }\n        this._prevResolution.copy(this.viewResolution)\n        this._prevSize.copy(this.viewFrustum.sizeDegrees)\n\n        for (const metrics of this.nodeMetrics.values()) {\n            metrics.needsUpdate = true\n            const adapter = this.nodeAdapters.get(metrics.node)\n            if (adapter) {\n                adapter.opacity.needsUpdate = true\n                adapter.orientation.needsUpdate = true\n                adapter.bounds.needsUpdate = true\n                adapter.outerOrigin.needsUpdate = true\n                adapter.outerOrientation.needsUpdate = true\n                adapter.outerBounds.needsUpdate = true\n                adapter.outerVisualBounds.needsUpdate = true\n            }\n        }\n\n        for (const transitionable of this.transitionables) {\n            transitionable.needsUpdate = true\n        }\n\n        for (const transitionable of this.transitionables) {\n            transitionable.update()\n        }\n\n        this.viewMetrics.update()\n        \n        for (const adapter of this.nodeAdapters.values()) {\n            adapter.metrics.update()\n        }\n\n    }\n\n    private measureNumberCache = {} as {[measure:string]:number}\n\n    measureNumber(measure:string|number, unit?:string|math.Unit) {\n        if (typeof measure === 'number') return measure\n        if (measure in this.measureNumberCache) return this.measureNumberCache[measure]\n\n        if (!this.mathCompiledExpressions.has(measure)) {\n            const node = this.math.parse(measure)\n            const code = node.compile()\n            this.mathCompiledExpressions.set(measure, code)\n        }\n        const code = this.mathCompiledExpressions.get(measure)!\n        const result = code.evaluate(this.mathScope)\n        const value = typeof result === 'number' ? result :\n            this.math.number(code.evaluate(this.mathScope), unit!)\n        this.measureNumberCache[measure] = value\n        return value\n    }\n}","\n\nimport {Vector3, MathUtils} from './math-utils'\n\nconst scratchVector3 = new Vector3\n\nexport class SphericalCoordinate {\n\n    constructor(\n        public horizontalRadians:number = 0,\n        public verticalRadians:number = 0,\n        public distance:number = 0\n    ){}\n\n    get horizontalDegrees() {\n        return this.horizontalRadians * MathUtils.RAD2DEG\n    }\n\n    set horizontalDegrees(h:number) {\n        this.horizontalRadians = h * MathUtils.DEG2RAD\n    }\n\n    get verticalDegrees() {\n        return this.verticalRadians * MathUtils.RAD2DEG\n    }\n\n    set verticalDegrees(h:number) {\n        this.verticalRadians = h * MathUtils.DEG2RAD\n    }\n\n    setWithRadians(horizontal:number, vertical:number, distance:number) {\n        this.horizontalRadians = horizontal\n        this.verticalRadians = vertical\n        this.distance = distance\n        return this\n    }\n\n    setWithDegrees(horizontal:number, vertical:number, distance:number) {\n        this.horizontalDegrees = horizontal\n        this.verticalDegrees = vertical\n        this.distance = distance\n        return this\n    }\n\n    fromCartesianDirection(cartesian: Vector3) {\n        const direction = scratchVector3.copy(cartesian).normalize()\n        this.verticalRadians = Math.asin(direction.y) * MathUtils.RAD2DEG\n        this.horizontalRadians = Math.atan2(direction.x, -direction.z) * MathUtils.RAD2DEG\n        this.distance = 0\n        return this\n    }\n\n    fromCartesianPosition(cartesian: Vector3) {\n        this.fromCartesianDirection(cartesian)\n        this.distance = cartesian.length()\n        return this\n    }\n\n    toCartesianDirection(out: Vector3) { \n        const visualElevationRadians = this.verticalRadians\n        const visualAzimuthRadians = - Math.PI - this.horizontalRadians\n        const y = Math.sin(visualElevationRadians)\n        const x = Math.cos(visualElevationRadians) * Math.sin(visualAzimuthRadians)\n        const z = - Math.cos(visualElevationRadians) * Math.cos(visualAzimuthRadians)\n        return out.set(x, y, z).normalize()\n    }\n\n    toCartesianPosition(out: Vector3) {\n        return this.toCartesianDirection(out).multiplyScalar(this.distance)\n    }\n\n}","function id(element: HTMLElement) {\n  return element.id ? `#${element.id}` : ''\n}\n\nfunction classes(element: HTMLElement) {\n  let classSelector = ''\n  const classList = element.classList\n  for (const c of classList) {\n    classSelector += '.' + c\n  }\n  return classSelector\n}\n\nfunction nthChild(element: HTMLElement) {\n  let childNumber = 0\n  const childNodes = element.parentNode!.childNodes\n  for (const node of childNodes) {\n    if (node.nodeType === Node.ELEMENT_NODE) ++childNumber\n    if (node === element) return `:nth-child('${childNumber}')`\n  }\n}\n\nfunction attributes(element: HTMLElement) {\n  let attributes = ''\n  for (const attr of element.attributes) {\n    attributes += `[${attr.name}=\"${attr.value}\"]`\n  }\n  return attributes\n}\n\nexport function path(el: HTMLElement, rootNode = document.documentElement) : string {\n  const selector = el.tagName.toLowerCase() + id(el) + classes(el) + attributes(el) + nthChild(el)\n  const hasParent = el.parentNode && el.parentNode !== rootNode && (el.parentNode as any).tagName\n  return hasParent ? path(el.parentNode as HTMLElement, rootNode) + ' > ' + selector : selector\n}\n\nexport function hash(el: HTMLElement) {\n  const cssPath = path(el)\n  const type = (el as HTMLInputElement).type\n  const checked = (el as HTMLInputElement).checked\n  const value = (el as HTMLInputElement).value\n  const textContent = (el as HTMLInputElement).textContent\n}\n\nexport function traverseChildElements(\n  element: Element,\n  each: (element: Element, level: number) => boolean,\n  bind?: any,\n  level = 0\n) {\n  level++\n  element = (element.shadowRoot || element) as Element\n  for (let child: Element | null = element.firstElementChild; child; child = child.nextElementSibling) {\n    if ((child as HTMLElement).assignedSlot) continue\n    const assignedElements = (child as HTMLSlotElement).assignedElements?.({flatten:true})\n    if (assignedElements) for (const assigned of assignedElements) {\n      if (each.call(bind, assigned, level)) {\n        traverseChildElements(child, each, bind, level)\n      }\n    }\n    if (each.call(bind, child, level)) {\n      traverseChildElements(child, each, bind, level)\n    }\n  }\n}\n\nexport function addCSSRule(sheet:any, selector:string, rules:string, index:number) : void {\n  if ('insertRule' in sheet) {\n    sheet.insertRule(selector + '{' + rules + '}', index)\n  } else if ('addRule' in sheet) {\n    sheet.addRule(selector, rules, index)\n  }\n}\n\nexport class Bounds {\n  left = 0\n  top = 0\n  width = 0\n  height = 0\n  copy(rect: Bounds) {\n    this.top = rect.top\n    this.left = rect.left\n    this.width = rect.width\n    this.height = rect.height\n    return this\n  }\n}\n\nexport class Edges {\n  left = 0\n  top = 0\n  right = 0\n  bottom = 0\n  copy(rect: Edges) {\n    this.top = rect.top\n    this.left = rect.left\n    this.right = rect.right\n    this.bottom = rect.bottom\n    return this\n  }\n}\n\nexport function getBounds(\n  element: Element,\n  bounds: Bounds = new Bounds(),\n  referenceElement?: Element\n) {\n  const doc = element.ownerDocument!\n  const docEl = doc.documentElement\n  const body = doc.body\n\n  if (element === docEl) {\n    return getDocumentBounds(doc, bounds)\n  }\n\n  if (referenceElement === element) {\n    bounds.left = 0\n    bounds.top = 0\n    bounds.width = (element as HTMLElement).offsetWidth\n    bounds.height = (element as HTMLElement).offsetHeight\n    return\n  }\n\n  const defaultView = element.ownerDocument!.defaultView!\n  let el: HTMLElement | null = element as HTMLElement\n\n  let computedStyle\n  let offsetParent = el.offsetParent as HTMLElement\n  let prevComputedStyle = defaultView.getComputedStyle(el, null)\n  let top = el.offsetTop\n  let left = el.offsetLeft\n\n  if (\n    offsetParent &&\n    referenceElement &&\n    offsetParent.contains(referenceElement) &&\n    offsetParent !== referenceElement\n  ) {\n    getBounds(referenceElement, bounds, offsetParent)\n    left -= bounds.left\n    top -= bounds.top\n  }\n\n  while (\n    (el = el.parentElement) &&\n    el !== body &&\n    el !== docEl &&\n    el !== referenceElement\n  ) {\n    if (prevComputedStyle.position === 'fixed') {\n      break\n    }\n\n    computedStyle = defaultView.getComputedStyle(el, null)\n    top -= el.scrollTop\n    left -= el.scrollLeft\n\n    if (el === offsetParent) {\n      top += el.offsetTop\n      left += el.offsetLeft\n      top += parseFloat(computedStyle.borderTopWidth) || 0\n      left += parseFloat(computedStyle.borderLeftWidth) || 0\n      offsetParent = el.offsetParent as HTMLElement\n    }\n\n    prevComputedStyle = computedStyle\n  }\n\n  // if (prevComputedStyle.position === 'relative' || prevComputedStyle.position === 'static') {\n  //   getDocumentBounds(doc, bounds)\n  //   top += bounds.top\n  //   left += bounds.left\n  // }\n\n  if (prevComputedStyle.position === 'fixed') {\n    top += Math.max(docEl.scrollTop, body.scrollTop)\n    left += Math.max(docEl.scrollLeft, body.scrollLeft)\n  }\n\n  // let el = element\n  // let left = el.offsetLeft\n  // let top = el.offsetTop\n  // let offsetParent = el.offsetParent\n  // while (el && el.nodeType !== Node.DOCUMENT_NODE) {\n  //   left -= el.scrollLeft\n  //   top -= el.scrollTop\n  //   if (el === offsetParent) {\n  //     const style = window.getComputedStyle(el)\n  //     left += el.offsetLeft + parseFloat(style.borderLeftWidth!) || 0\n  //     top += el.offsetTop + parseFloat(style.borderTopWidth!) || 0\n  //     offsetParent = el.offsetParent\n  //   }\n  //   el = el.offsetParent as any\n  // }\n\n  bounds.left = left\n  bounds.top = top\n  bounds.width = (element as HTMLElement).offsetWidth\n  bounds.height = (element as HTMLElement).offsetHeight\n  return bounds\n}\n\nexport function getMargin(element: Element, margin: Edges) {\n  if ((element as HTMLElement).offsetParent === null) {\n    margin.left = margin.right = margin.top = margin.bottom = 0\n    return \n  }\n  let style = getComputedStyle(element)\n  margin.left = parseFloat(style.marginLeft) || 0\n  margin.right = parseFloat(style.marginRight) || 0\n  margin.top = parseFloat(style.marginTop) || 0\n  margin.bottom = parseFloat(style.marginBottom) || 0\n}\n\nexport function getBorder(element: Element, border: Edges) {\n  let style = getComputedStyle(element)\n  border.left = parseFloat(style.borderLeftWidth) || 0\n  border.right = parseFloat(style.borderRightWidth) || 0\n  border.top = parseFloat(style.borderTopWidth) || 0\n  border.bottom = parseFloat(style.borderBottomWidth) || 0\n}\n\nexport function getPadding(element: Element, padding: Edges) {\n  let style = getComputedStyle(element)\n  padding.left = parseFloat(style.paddingLeft) || 0\n  padding.right = parseFloat(style.paddingRight) || 0\n  padding.top = parseFloat(style.paddingTop) || 0\n  padding.bottom = parseFloat(style.paddingBottom) || 0\n}\n\n/*\n * On some mobile browsers, the value reported by window.innerHeight\n * is not the true viewport height. This method returns\n * the actual viewport.\n */\nexport function getViewportBounds(bounds: Bounds) {\n  if (!viewportTester.parentNode) document.documentElement.append(viewportTester)\n  bounds.left = pageXOffset\n  bounds.top = pageYOffset\n  bounds.width = viewportTester.offsetWidth\n  bounds.height = viewportTester.offsetHeight\n  return bounds\n}\nconst viewportTester = document.createElement('div')\nviewportTester.id = 'VIEWPORT'\nviewportTester.style.position = 'fixed'\nviewportTester.style.width = '100vw'\nviewportTester.style.height = '100vh'\nviewportTester.style.visibility = 'hidden'\nviewportTester.style.pointerEvents = 'none'\n\nexport function getDocumentBounds(document: Document, bounds: Bounds) {\n  const documentElement = document.documentElement\n  const body = document.body\n  const documentElementStyle = getComputedStyle(documentElement)\n  const bodyStyle = getComputedStyle(body)\n  bounds.top =\n    body.offsetTop + parseFloat(documentElementStyle.marginTop as '') ||\n    0 + parseFloat(bodyStyle.marginTop as '') ||\n    0\n  bounds.left =\n    body.offsetLeft + parseFloat(documentElementStyle.marginLeft as '') ||\n    0 + parseFloat(bodyStyle.marginLeft as '') ||\n    0\n  bounds.width = Math.max(\n    Math.max(body.scrollWidth, documentElement.scrollWidth),\n    Math.max(body.offsetWidth, documentElement.offsetWidth),\n    Math.max(body.clientWidth, documentElement.clientWidth)\n  )\n  bounds.height = Math.max(\n    Math.max(body.scrollHeight, documentElement.scrollHeight),\n    Math.max(body.offsetHeight, documentElement.offsetHeight),\n    Math.max(body.clientHeight, documentElement.clientHeight)\n  )\n  return bounds\n}\n\n\nexport function DOM(html:string) {\n  const wrapper = document.createElement('div')\n  wrapper.innerHTML = html\n  const el = wrapper.firstElementChild!\n  wrapper.removeChild(el)\n  return el\n}","(function(l){function m(){}function k(a,c){a=void 0===a?\"utf-8\":a;c=void 0===c?{fatal:!1}:c;if(-1===r.indexOf(a.toLowerCase()))throw new RangeError(\"Failed to construct 'TextDecoder': The encoding label provided ('\"+a+\"') is invalid.\");if(c.fatal)throw Error(\"Failed to construct 'TextDecoder': the 'fatal' option is unsupported.\");}function t(a){return Buffer.from(a.buffer,a.byteOffset,a.byteLength).toString(\"utf-8\")}function u(a){var c=URL.createObjectURL(new Blob([a],{type:\"text/plain;charset=UTF-8\"}));\ntry{var f=new XMLHttpRequest;f.open(\"GET\",c,!1);f.send();return f.responseText}catch(e){return q(a)}finally{URL.revokeObjectURL(c)}}function q(a){for(var c=0,f=Math.min(65536,a.length+1),e=new Uint16Array(f),h=[],d=0;;){var b=c<a.length;if(!b||d>=f-1){h.push(String.fromCharCode.apply(null,e.subarray(0,d)));if(!b)return h.join(\"\");a=a.subarray(c);d=c=0}b=a[c++];if(0===(b&128))e[d++]=b;else if(192===(b&224)){var g=a[c++]&63;e[d++]=(b&31)<<6|g}else if(224===(b&240)){g=a[c++]&63;var n=a[c++]&63;e[d++]=\n(b&31)<<12|g<<6|n}else if(240===(b&248)){g=a[c++]&63;n=a[c++]&63;var v=a[c++]&63;b=(b&7)<<18|g<<12|n<<6|v;65535<b&&(b-=65536,e[d++]=b>>>10&1023|55296,b=56320|b&1023);e[d++]=b}}}if(l.TextEncoder&&l.TextDecoder)return!1;var r=[\"utf-8\",\"utf8\",\"unicode-1-1-utf-8\"];Object.defineProperty(m.prototype,\"encoding\",{value:\"utf-8\"});m.prototype.encode=function(a,c){c=void 0===c?{stream:!1}:c;if(c.stream)throw Error(\"Failed to encode: the 'stream' option is unsupported.\");c=0;for(var f=a.length,e=0,h=Math.max(32,\nf+(f>>>1)+7),d=new Uint8Array(h>>>3<<3);c<f;){var b=a.charCodeAt(c++);if(55296<=b&&56319>=b){if(c<f){var g=a.charCodeAt(c);56320===(g&64512)&&(++c,b=((b&1023)<<10)+(g&1023)+65536)}if(55296<=b&&56319>=b)continue}e+4>d.length&&(h+=8,h*=1+c/a.length*2,h=h>>>3<<3,g=new Uint8Array(h),g.set(d),d=g);if(0===(b&4294967168))d[e++]=b;else{if(0===(b&4294965248))d[e++]=b>>>6&31|192;else if(0===(b&4294901760))d[e++]=b>>>12&15|224,d[e++]=b>>>6&63|128;else if(0===(b&4292870144))d[e++]=b>>>18&7|240,d[e++]=b>>>12&\n63|128,d[e++]=b>>>6&63|128;else continue;d[e++]=b&63|128}}return d.slice?d.slice(0,e):d.subarray(0,e)};Object.defineProperty(k.prototype,\"encoding\",{value:\"utf-8\"});Object.defineProperty(k.prototype,\"fatal\",{value:!1});Object.defineProperty(k.prototype,\"ignoreBOM\",{value:!1});var p=q;\"function\"===typeof Buffer&&Buffer.from?p=t:\"function\"===typeof Blob&&\"function\"===typeof URL&&\"function\"===typeof URL.createObjectURL&&(p=u);k.prototype.decode=function(a,c){c=void 0===c?{stream:!1}:c;if(c.stream)throw Error(\"Failed to decode: the 'stream' option is unsupported.\");\na=a instanceof Uint8Array?a:a.buffer instanceof ArrayBuffer?new Uint8Array(a.buffer):new Uint8Array(a);return p(a)};l.TextEncoder=m;l.TextDecoder=k})(\"undefined\"!==typeof window?window:\"undefined\"!==typeof global?global:this);\n","/**\n * A doubly linked list-based Least Recently Used (LRU) cache. Will keep most\n * recently used items while discarding least recently used items when its limit\n * is reached.\n *\n * Licensed under MIT. Copyright (c) 2010 Rasmus Andersson <http://hunch.se/>\n * See README.md for details.\n *\n * Illustration of the design:\n *\n *       entry             entry             entry             entry\n *       ______            ______            ______            ______\n *      | head |.newer => |      |.newer => |      |.newer => | tail |\n *      |  A   |          |  B   |          |  C   |          |  D   |\n *      |______| <= older.|______| <= older.|______| <= older.|______|\n *\n *  removed  <--  <--  <--  <--  <--  <--  <--  <--  <--  <--  <--  added\n */\n(function(g,f){\n  const e = typeof exports == 'object' ? exports : typeof g == 'object' ? g : {};\n  f(e);\n  if (typeof define == 'function' && define.amd) { define('lru', e); }\n})(this, function(exports) {\n\nconst NEWER = Symbol('newer');\nconst OLDER = Symbol('older');\n\nfunction LRUMap(limit, entries) {\n  if (typeof limit !== 'number') {\n    // called as (entries)\n    entries = limit;\n    limit = 0;\n  }\n\n  this.size = 0;\n  this.limit = limit;\n  this.oldest = this.newest = undefined;\n  this._keymap = new Map();\n\n  if (entries) {\n    this.assign(entries);\n    if (limit < 1) {\n      this.limit = this.size;\n    }\n  }\n}\n\nexports.LRUMap = LRUMap;\n\nfunction Entry(key, value) {\n  this.key = key;\n  this.value = value;\n  this[NEWER] = undefined;\n  this[OLDER] = undefined;\n}\n\n\nLRUMap.prototype._markEntryAsUsed = function(entry) {\n  if (entry === this.newest) {\n    // Already the most recenlty used entry, so no need to update the list\n    return;\n  }\n  // HEAD--------------TAIL\n  //   <.older   .newer>\n  //  <--- add direction --\n  //   A  B  C  <D>  E\n  if (entry[NEWER]) {\n    if (entry === this.oldest) {\n      this.oldest = entry[NEWER];\n    }\n    entry[NEWER][OLDER] = entry[OLDER]; // C <-- E.\n  }\n  if (entry[OLDER]) {\n    entry[OLDER][NEWER] = entry[NEWER]; // C. --> E\n  }\n  entry[NEWER] = undefined; // D --x\n  entry[OLDER] = this.newest; // D. --> E\n  if (this.newest) {\n    this.newest[NEWER] = entry; // E. <-- D\n  }\n  this.newest = entry;\n};\n\nLRUMap.prototype.assign = function(entries) {\n  let entry, limit = this.limit || Number.MAX_VALUE;\n  this._keymap.clear();\n  let it = entries[Symbol.iterator]();\n  for (let itv = it.next(); !itv.done; itv = it.next()) {\n    let e = new Entry(itv.value[0], itv.value[1]);\n    this._keymap.set(e.key, e);\n    if (!entry) {\n      this.oldest = e;\n    } else {\n      entry[NEWER] = e;\n      e[OLDER] = entry;\n    }\n    entry = e;\n    if (limit-- == 0) {\n      throw new Error('overflow');\n    }\n  }\n  this.newest = entry;\n  this.size = this._keymap.size;\n};\n\nLRUMap.prototype.get = function(key) {\n  // First, find our cache entry\n  var entry = this._keymap.get(key);\n  if (!entry) return; // Not cached. Sorry.\n  // As <key> was found in the cache, register it as being requested recently\n  this._markEntryAsUsed(entry);\n  return entry.value;\n};\n\nLRUMap.prototype.set = function(key, value) {\n  var entry = this._keymap.get(key);\n\n  if (entry) {\n    // update existing\n    entry.value = value;\n    this._markEntryAsUsed(entry);\n    return this;\n  }\n\n  // new entry\n  this._keymap.set(key, (entry = new Entry(key, value)));\n\n  if (this.newest) {\n    // link previous tail to the new tail (entry)\n    this.newest[NEWER] = entry;\n    entry[OLDER] = this.newest;\n  } else {\n    // we're first in -- yay\n    this.oldest = entry;\n  }\n\n  // add new entry to the end of the linked list -- it's now the freshest entry.\n  this.newest = entry;\n  ++this.size;\n  if (this.size > this.limit) {\n    // we hit the limit -- remove the head\n    this.shift();\n  }\n\n  return this;\n};\n\nLRUMap.prototype.shift = function() {\n  // todo: handle special case when limit == 1\n  var entry = this.oldest;\n  if (entry) {\n    if (this.oldest[NEWER]) {\n      // advance the list\n      this.oldest = this.oldest[NEWER];\n      this.oldest[OLDER] = undefined;\n    } else {\n      // the cache is exhausted\n      this.oldest = undefined;\n      this.newest = undefined;\n    }\n    // Remove last strong reference to <entry> and remove links from the purged\n    // entry being returned:\n    entry[NEWER] = entry[OLDER] = undefined;\n    this._keymap.delete(entry.key);\n    --this.size;\n    return [entry.key, entry.value];\n  }\n};\n\n// ----------------------------------------------------------------------------\n// Following code is optional and can be removed without breaking the core\n// functionality.\n\nLRUMap.prototype.find = function(key) {\n  let e = this._keymap.get(key);\n  return e ? e.value : undefined;\n};\n\nLRUMap.prototype.has = function(key) {\n  return this._keymap.has(key);\n};\n\nLRUMap.prototype['delete'] = function(key) {\n  var entry = this._keymap.get(key);\n  if (!entry) return;\n  this._keymap.delete(entry.key);\n  if (entry[NEWER] && entry[OLDER]) {\n    // relink the older entry with the newer entry\n    entry[OLDER][NEWER] = entry[NEWER];\n    entry[NEWER][OLDER] = entry[OLDER];\n  } else if (entry[NEWER]) {\n    // remove the link to us\n    entry[NEWER][OLDER] = undefined;\n    // link the newer entry to head\n    this.oldest = entry[NEWER];\n  } else if (entry[OLDER]) {\n    // remove the link to us\n    entry[OLDER][NEWER] = undefined;\n    // link the newer entry to head\n    this.newest = entry[OLDER];\n  } else {// if(entry[OLDER] === undefined && entry.newer === undefined) {\n    this.oldest = this.newest = undefined;\n  }\n\n  this.size--;\n  return entry.value;\n};\n\nLRUMap.prototype.clear = function() {\n  // Not clearing links should be safe, as we don't expose live links to user\n  this.oldest = this.newest = undefined;\n  this.size = 0;\n  this._keymap.clear();\n};\n\n\nfunction EntryIterator(oldestEntry) { this.entry = oldestEntry; }\nEntryIterator.prototype[Symbol.iterator] = function() { return this; }\nEntryIterator.prototype.next = function() {\n  let ent = this.entry;\n  if (ent) {\n    this.entry = ent[NEWER];\n    return { done: false, value: [ent.key, ent.value] };\n  } else {\n    return { done: true, value: undefined };\n  }\n};\n\n\nfunction KeyIterator(oldestEntry) { this.entry = oldestEntry; }\nKeyIterator.prototype[Symbol.iterator] = function() { return this; }\nKeyIterator.prototype.next = function() {\n  let ent = this.entry;\n  if (ent) {\n    this.entry = ent[NEWER];\n    return { done: false, value: ent.key };\n  } else {\n    return { done: true, value: undefined };\n  }\n};\n\nfunction ValueIterator(oldestEntry) { this.entry = oldestEntry; }\nValueIterator.prototype[Symbol.iterator] = function() { return this; }\nValueIterator.prototype.next = function() {\n  let ent = this.entry;\n  if (ent) {\n    this.entry = ent[NEWER];\n    return { done: false, value: ent.value };\n  } else {\n    return { done: true, value: undefined };\n  }\n};\n\n\nLRUMap.prototype.keys = function() {\n  return new KeyIterator(this.oldest);\n};\n\nLRUMap.prototype.values = function() {\n  return new ValueIterator(this.oldest);\n};\n\nLRUMap.prototype.entries = function() {\n  return this;\n};\n\nLRUMap.prototype[Symbol.iterator] = function() {\n  return new EntryIterator(this.oldest);\n};\n\nLRUMap.prototype.forEach = function(fun, thisObj) {\n  if (typeof thisObj !== 'object') {\n    thisObj = this;\n  }\n  let entry = this.oldest;\n  while (entry) {\n    fun.call(thisObj, entry.value, entry.key, this);\n    entry = entry[NEWER];\n  }\n};\n\n/** Returns a JSON (array) representation */\nLRUMap.prototype.toJSON = function() {\n  var s = new Array(this.size), i = 0, entry = this.oldest;\n  while (entry) {\n    s[i++] = { key: entry.key, value: entry.value };\n    entry = entry[NEWER];\n  }\n  return s;\n};\n\n/** Returns a String representation */\nLRUMap.prototype.toString = function() {\n  var s = '', entry = this.oldest;\n  while (entry) {\n    s += String(entry.key)+':'+entry.value;\n    entry = entry[NEWER];\n    if (entry) {\n      s += ' < ';\n    }\n  }\n  return s;\n};\n\n});\n","// Based on https://github.com/cburgmer/xmlserializer \n\nimport { WebRenderer } from \"./WebRenderer\";\n\nfunction removeInvalidCharacters(content:string) {\n    // See http://www.w3.org/TR/xml/#NT-Char for valid XML 1.0 characters\n    return content.replace(/[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F]/g, '');\n}\n\nfunction serializeAttributeValue (value:string) {\n    return value\n        .replace(/&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;')\n        .replace(/\"/g, '&quot;')\n        .replace(/'/g, '&apos;')\n}\n\nfunction serializeTextContent (content:string) {\n    return content\n        .replace(/&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;')\n}\n\nexport function serializeAttribute (name:string, value:string) {\n    return ' ' + name + '=\"' + serializeAttributeValue(value) + '\"'\n}\n\nfunction getTagName(node:Element) {\n    var tagName = node.tagName\n    // Aid in serializing of original HTML documents\n    if (node.namespaceURI === 'http://www.w3.org/1999/xhtml') {\n        tagName = tagName.toLowerCase()\n    }\n    return tagName\n}\n\nfunction serializeNamespace(node:Element, isRootNode:boolean) {\n    const nodeHasXmlnsAttr = node.hasAttribute('xmlns')\n    // Serialize the namespace as an xmlns attribute whenever the element\n    // doesn't already have one and the inherited namespace does not match\n    // the element's namespace.\n    if (!nodeHasXmlnsAttr &&\n        (isRootNode ||\n            node.namespaceURI !== node.parentElement!.namespaceURI)) {\n        return ' xmlns=\"' + node.namespaceURI + '\"'\n    } else {\n        return ''\n    }\n}\n\nasync function serializeChildren(node:Element, options:Options) {\n    let output = []\n    for (const n of node.childNodes) output.push(nodeTreeToXHTML(n, options))\n    return Promise.all(output).then(output => output.join(''))\n}\n\nasync function serializeTag(node:Element, options:Options) {\n    const tagName = getTagName(node)\n    let output = '<' + tagName\n    output += serializeNamespace(node, options.depth === 0)\n\n    const childrenHTML = serializeChildren(node, options)\n\n    const isImg = tagName === 'img'\n    \n    for (const attr of node.attributes) {\n        if (isImg && attr.name === 'src') {\n            output += serializeAttribute(attr.name, await WebRenderer.getDataURL(attr.value))\n        } else {\n            output += serializeAttribute(attr.name, attr.value)\n        }\n    }\n\n    if (node.childNodes.length > 0) {\n        options.depth++\n        output += '>'\n        output += await childrenHTML\n        output += '</' + tagName + '>'\n        options.depth--\n    } else {\n        output += '/>'\n    }\n    return output\n}\n\nfunction serializeText(node:Text) {\n    var text = node.nodeValue || ''\n    return serializeTextContent(text)\n}\n\nfunction serializeComment(node:Comment) {\n    return '<!--' +\n        node.data\n        .replace(/-/g, '&#45;') +\n        '-->'\n}\n\nfunction serializeCDATA(node:Node) {\n    return '<![CDATA[' + node.nodeValue + ']]>'\n}\n\nasync function nodeTreeToXHTML(node:Node, options:Options) : Promise<string> {\n    const replaced = options.replacer?.(node)\n    if (typeof replaced === 'string') {\n        return replaced\n    } else if (node.nodeName === '#document' ||\n        node.nodeName === '#document-fragment') {\n        return serializeChildren(node as Element, options)\n    } else if ((node as Element).tagName) {\n        return serializeTag(node as Element, options)\n    } else if (node.nodeName === '#text') {\n        return serializeText(node as Text)\n    } else if (node.nodeName === '#comment') {\n        // return serializeComment(node as Comment)\n    } else if (node.nodeName === '#cdata-section') {\n        return serializeCDATA(node)\n    }\n    return ''\n}\n\ninterface Options {\n    depth:number,\n    replacer?:(node:Node)=>string|void\n}\n\nexport async function serializeToString(node:Element, replacer:Options['replacer']) {\n    return removeInvalidCharacters(await nodeTreeToXHTML(node, {depth: 0, replacer}))\n}","(function (root, factory) {\n    // Hack to make all exports of this module sha256 function object properties.\n    var exports = {};\n    factory(exports);\n    var sha256 = exports[\"default\"];\n    for (var k in exports) {\n        sha256[k] = exports[k];\n    }\n        \n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        module.exports = sha256;\n    } else if (typeof define === 'function' && define.amd) {\n        define(function() { return sha256; }); \n    } else {\n        root.sha256 = sha256;\n    }\n})(this, function(exports) {\n\"use strict\";\nexports.__esModule = true;\n// SHA-256 (+ HMAC and PBKDF2) for JavaScript.\n//\n// Written in 2014-2016 by Dmitry Chestnykh.\n// Public domain, no warranty.\n//\n// Functions (accept and return Uint8Arrays):\n//\n//   sha256(message) -> hash\n//   sha256.hmac(key, message) -> mac\n//   sha256.pbkdf2(password, salt, rounds, dkLen) -> dk\n//\n//  Classes:\n//\n//   new sha256.Hash()\n//   new sha256.HMAC(key)\n//\nexports.digestLength = 32;\nexports.blockSize = 64;\n// SHA-256 constants\nvar K = new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b,\n    0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01,\n    0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7,\n    0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n    0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152,\n    0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147,\n    0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc,\n    0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819,\n    0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08,\n    0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f,\n    0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n    0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\nfunction hashBlocks(w, v, p, pos, len) {\n    var a, b, c, d, e, f, g, h, u, i, j, t1, t2;\n    while (len >= 64) {\n        a = v[0];\n        b = v[1];\n        c = v[2];\n        d = v[3];\n        e = v[4];\n        f = v[5];\n        g = v[6];\n        h = v[7];\n        for (i = 0; i < 16; i++) {\n            j = pos + i * 4;\n            w[i] = (((p[j] & 0xff) << 24) | ((p[j + 1] & 0xff) << 16) |\n                ((p[j + 2] & 0xff) << 8) | (p[j + 3] & 0xff));\n        }\n        for (i = 16; i < 64; i++) {\n            u = w[i - 2];\n            t1 = (u >>> 17 | u << (32 - 17)) ^ (u >>> 19 | u << (32 - 19)) ^ (u >>> 10);\n            u = w[i - 15];\n            t2 = (u >>> 7 | u << (32 - 7)) ^ (u >>> 18 | u << (32 - 18)) ^ (u >>> 3);\n            w[i] = (t1 + w[i - 7] | 0) + (t2 + w[i - 16] | 0);\n        }\n        for (i = 0; i < 64; i++) {\n            t1 = (((((e >>> 6 | e << (32 - 6)) ^ (e >>> 11 | e << (32 - 11)) ^\n                (e >>> 25 | e << (32 - 25))) + ((e & f) ^ (~e & g))) | 0) +\n                ((h + ((K[i] + w[i]) | 0)) | 0)) | 0;\n            t2 = (((a >>> 2 | a << (32 - 2)) ^ (a >>> 13 | a << (32 - 13)) ^\n                (a >>> 22 | a << (32 - 22))) + ((a & b) ^ (a & c) ^ (b & c))) | 0;\n            h = g;\n            g = f;\n            f = e;\n            e = (d + t1) | 0;\n            d = c;\n            c = b;\n            b = a;\n            a = (t1 + t2) | 0;\n        }\n        v[0] += a;\n        v[1] += b;\n        v[2] += c;\n        v[3] += d;\n        v[4] += e;\n        v[5] += f;\n        v[6] += g;\n        v[7] += h;\n        pos += 64;\n        len -= 64;\n    }\n    return pos;\n}\n// Hash implements SHA256 hash algorithm.\nvar Hash = /** @class */ (function () {\n    function Hash() {\n        this.digestLength = exports.digestLength;\n        this.blockSize = exports.blockSize;\n        // Note: Int32Array is used instead of Uint32Array for performance reasons.\n        this.state = new Int32Array(8); // hash state\n        this.temp = new Int32Array(64); // temporary state\n        this.buffer = new Uint8Array(128); // buffer for data to hash\n        this.bufferLength = 0; // number of bytes in buffer\n        this.bytesHashed = 0; // number of total bytes hashed\n        this.finished = false; // indicates whether the hash was finalized\n        this.reset();\n    }\n    // Resets hash state making it possible\n    // to re-use this instance to hash other data.\n    Hash.prototype.reset = function () {\n        this.state[0] = 0x6a09e667;\n        this.state[1] = 0xbb67ae85;\n        this.state[2] = 0x3c6ef372;\n        this.state[3] = 0xa54ff53a;\n        this.state[4] = 0x510e527f;\n        this.state[5] = 0x9b05688c;\n        this.state[6] = 0x1f83d9ab;\n        this.state[7] = 0x5be0cd19;\n        this.bufferLength = 0;\n        this.bytesHashed = 0;\n        this.finished = false;\n        return this;\n    };\n    // Cleans internal buffers and re-initializes hash state.\n    Hash.prototype.clean = function () {\n        for (var i = 0; i < this.buffer.length; i++) {\n            this.buffer[i] = 0;\n        }\n        for (var i = 0; i < this.temp.length; i++) {\n            this.temp[i] = 0;\n        }\n        this.reset();\n    };\n    // Updates hash state with the given data.\n    //\n    // Optionally, length of the data can be specified to hash\n    // fewer bytes than data.length.\n    //\n    // Throws error when trying to update already finalized hash:\n    // instance must be reset to use it again.\n    Hash.prototype.update = function (data, dataLength) {\n        if (dataLength === void 0) { dataLength = data.length; }\n        if (this.finished) {\n            throw new Error(\"SHA256: can't update because hash was finished.\");\n        }\n        var dataPos = 0;\n        this.bytesHashed += dataLength;\n        if (this.bufferLength > 0) {\n            while (this.bufferLength < 64 && dataLength > 0) {\n                this.buffer[this.bufferLength++] = data[dataPos++];\n                dataLength--;\n            }\n            if (this.bufferLength === 64) {\n                hashBlocks(this.temp, this.state, this.buffer, 0, 64);\n                this.bufferLength = 0;\n            }\n        }\n        if (dataLength >= 64) {\n            dataPos = hashBlocks(this.temp, this.state, data, dataPos, dataLength);\n            dataLength %= 64;\n        }\n        while (dataLength > 0) {\n            this.buffer[this.bufferLength++] = data[dataPos++];\n            dataLength--;\n        }\n        return this;\n    };\n    // Finalizes hash state and puts hash into out.\n    //\n    // If hash was already finalized, puts the same value.\n    Hash.prototype.finish = function (out) {\n        if (!this.finished) {\n            var bytesHashed = this.bytesHashed;\n            var left = this.bufferLength;\n            var bitLenHi = (bytesHashed / 0x20000000) | 0;\n            var bitLenLo = bytesHashed << 3;\n            var padLength = (bytesHashed % 64 < 56) ? 64 : 128;\n            this.buffer[left] = 0x80;\n            for (var i = left + 1; i < padLength - 8; i++) {\n                this.buffer[i] = 0;\n            }\n            this.buffer[padLength - 8] = (bitLenHi >>> 24) & 0xff;\n            this.buffer[padLength - 7] = (bitLenHi >>> 16) & 0xff;\n            this.buffer[padLength - 6] = (bitLenHi >>> 8) & 0xff;\n            this.buffer[padLength - 5] = (bitLenHi >>> 0) & 0xff;\n            this.buffer[padLength - 4] = (bitLenLo >>> 24) & 0xff;\n            this.buffer[padLength - 3] = (bitLenLo >>> 16) & 0xff;\n            this.buffer[padLength - 2] = (bitLenLo >>> 8) & 0xff;\n            this.buffer[padLength - 1] = (bitLenLo >>> 0) & 0xff;\n            hashBlocks(this.temp, this.state, this.buffer, 0, padLength);\n            this.finished = true;\n        }\n        for (var i = 0; i < 8; i++) {\n            out[i * 4 + 0] = (this.state[i] >>> 24) & 0xff;\n            out[i * 4 + 1] = (this.state[i] >>> 16) & 0xff;\n            out[i * 4 + 2] = (this.state[i] >>> 8) & 0xff;\n            out[i * 4 + 3] = (this.state[i] >>> 0) & 0xff;\n        }\n        return this;\n    };\n    // Returns the final hash digest.\n    Hash.prototype.digest = function () {\n        var out = new Uint8Array(this.digestLength);\n        this.finish(out);\n        return out;\n    };\n    // Internal function for use in HMAC for optimization.\n    Hash.prototype._saveState = function (out) {\n        for (var i = 0; i < this.state.length; i++) {\n            out[i] = this.state[i];\n        }\n    };\n    // Internal function for use in HMAC for optimization.\n    Hash.prototype._restoreState = function (from, bytesHashed) {\n        for (var i = 0; i < this.state.length; i++) {\n            this.state[i] = from[i];\n        }\n        this.bytesHashed = bytesHashed;\n        this.finished = false;\n        this.bufferLength = 0;\n    };\n    return Hash;\n}());\nexports.Hash = Hash;\n// HMAC implements HMAC-SHA256 message authentication algorithm.\nvar HMAC = /** @class */ (function () {\n    function HMAC(key) {\n        this.inner = new Hash();\n        this.outer = new Hash();\n        this.blockSize = this.inner.blockSize;\n        this.digestLength = this.inner.digestLength;\n        var pad = new Uint8Array(this.blockSize);\n        if (key.length > this.blockSize) {\n            (new Hash()).update(key).finish(pad).clean();\n        }\n        else {\n            for (var i = 0; i < key.length; i++) {\n                pad[i] = key[i];\n            }\n        }\n        for (var i = 0; i < pad.length; i++) {\n            pad[i] ^= 0x36;\n        }\n        this.inner.update(pad);\n        for (var i = 0; i < pad.length; i++) {\n            pad[i] ^= 0x36 ^ 0x5c;\n        }\n        this.outer.update(pad);\n        this.istate = new Uint32Array(8);\n        this.ostate = new Uint32Array(8);\n        this.inner._saveState(this.istate);\n        this.outer._saveState(this.ostate);\n        for (var i = 0; i < pad.length; i++) {\n            pad[i] = 0;\n        }\n    }\n    // Returns HMAC state to the state initialized with key\n    // to make it possible to run HMAC over the other data with the same\n    // key without creating a new instance.\n    HMAC.prototype.reset = function () {\n        this.inner._restoreState(this.istate, this.inner.blockSize);\n        this.outer._restoreState(this.ostate, this.outer.blockSize);\n        return this;\n    };\n    // Cleans HMAC state.\n    HMAC.prototype.clean = function () {\n        for (var i = 0; i < this.istate.length; i++) {\n            this.ostate[i] = this.istate[i] = 0;\n        }\n        this.inner.clean();\n        this.outer.clean();\n    };\n    // Updates state with provided data.\n    HMAC.prototype.update = function (data) {\n        this.inner.update(data);\n        return this;\n    };\n    // Finalizes HMAC and puts the result in out.\n    HMAC.prototype.finish = function (out) {\n        if (this.outer.finished) {\n            this.outer.finish(out);\n        }\n        else {\n            this.inner.finish(out);\n            this.outer.update(out, this.digestLength).finish(out);\n        }\n        return this;\n    };\n    // Returns message authentication code.\n    HMAC.prototype.digest = function () {\n        var out = new Uint8Array(this.digestLength);\n        this.finish(out);\n        return out;\n    };\n    return HMAC;\n}());\nexports.HMAC = HMAC;\n// Returns SHA256 hash of data.\nfunction hash(data) {\n    var h = (new Hash()).update(data);\n    var digest = h.digest();\n    h.clean();\n    return digest;\n}\nexports.hash = hash;\n// Function hash is both available as module.hash and as default export.\nexports[\"default\"] = hash;\n// Returns HMAC-SHA256 of data under the key.\nfunction hmac(key, data) {\n    var h = (new HMAC(key)).update(data);\n    var digest = h.digest();\n    h.clean();\n    return digest;\n}\nexports.hmac = hmac;\n// Fills hkdf buffer like this:\n// T(1) = HMAC-Hash(PRK, T(0) | info | 0x01)\nfunction fillBuffer(buffer, hmac, info, counter) {\n    // Counter is a byte value: check if it overflowed.\n    var num = counter[0];\n    if (num === 0) {\n        throw new Error(\"hkdf: cannot expand more\");\n    }\n    // Prepare HMAC instance for new data with old key.\n    hmac.reset();\n    // Hash in previous output if it was generated\n    // (i.e. counter is greater than 1).\n    if (num > 1) {\n        hmac.update(buffer);\n    }\n    // Hash in info if it exists.\n    if (info) {\n        hmac.update(info);\n    }\n    // Hash in the counter.\n    hmac.update(counter);\n    // Output result to buffer and clean HMAC instance.\n    hmac.finish(buffer);\n    // Increment counter inside typed array, this works properly.\n    counter[0]++;\n}\nvar hkdfSalt = new Uint8Array(exports.digestLength); // Filled with zeroes.\nfunction hkdf(key, salt, info, length) {\n    if (salt === void 0) { salt = hkdfSalt; }\n    if (length === void 0) { length = 32; }\n    var counter = new Uint8Array([1]);\n    // HKDF-Extract uses salt as HMAC key, and key as data.\n    var okm = hmac(salt, key);\n    // Initialize HMAC for expanding with extracted key.\n    // Ensure no collisions with `hmac` function.\n    var hmac_ = new HMAC(okm);\n    // Allocate buffer.\n    var buffer = new Uint8Array(hmac_.digestLength);\n    var bufpos = buffer.length;\n    var out = new Uint8Array(length);\n    for (var i = 0; i < length; i++) {\n        if (bufpos === buffer.length) {\n            fillBuffer(buffer, hmac_, info, counter);\n            bufpos = 0;\n        }\n        out[i] = buffer[bufpos++];\n    }\n    hmac_.clean();\n    buffer.fill(0);\n    counter.fill(0);\n    return out;\n}\nexports.hkdf = hkdf;\n// Derives a key from password and salt using PBKDF2-HMAC-SHA256\n// with the given number of iterations.\n//\n// The number of bytes returned is equal to dkLen.\n//\n// (For better security, avoid dkLen greater than hash length - 32 bytes).\nfunction pbkdf2(password, salt, iterations, dkLen) {\n    var prf = new HMAC(password);\n    var len = prf.digestLength;\n    var ctr = new Uint8Array(4);\n    var t = new Uint8Array(len);\n    var u = new Uint8Array(len);\n    var dk = new Uint8Array(dkLen);\n    for (var i = 0; i * len < dkLen; i++) {\n        var c = i + 1;\n        ctr[0] = (c >>> 24) & 0xff;\n        ctr[1] = (c >>> 16) & 0xff;\n        ctr[2] = (c >>> 8) & 0xff;\n        ctr[3] = (c >>> 0) & 0xff;\n        prf.reset();\n        prf.update(salt);\n        prf.update(ctr);\n        prf.finish(u);\n        for (var j = 0; j < len; j++) {\n            t[j] = u[j];\n        }\n        for (var j = 2; j <= iterations; j++) {\n            prf.reset();\n            prf.update(u).finish(u);\n            for (var k = 0; k < len; k++) {\n                t[k] ^= u[k];\n            }\n        }\n        for (var j = 0; j < len && i * len + j < dkLen; j++) {\n            dk[i * len + j] = t[j];\n        }\n    }\n    for (var i = 0; i < len; i++) {\n        t[i] = u[i] = 0;\n    }\n    for (var i = 0; i < 4; i++) {\n        ctr[i] = 0;\n    }\n    prf.clean();\n    return dk;\n}\nexports.pbkdf2 = pbkdf2;\n});\n","import {WebRenderer} from './WebRenderer'\nimport \"fast-text-encoding\"\nimport {\n  addCSSRule,\n  traverseChildElements,\n  getBounds,\n  getPadding,\n  getMargin,\n  getBorder,\n  Bounds,\n  Edges\n} from './dom-utils'\nimport { LRUMap } from 'lru_map'\nimport * as sha256 from 'fast-sha256'\n\nimport {serializeToString, serializeAttribute} from './xml-serializer'\n\nexport type EventCallback = (\n  event:\n    | 'layerchanged'\n    | 'layerresized'\n    | 'layercreated'\n    | 'layermoved'\n    | 'removalrequired'\n    | 'inputrequired',\n  data: { target: Element }\n) => void\n\nconst encoder = new TextEncoder();\n\ntype SVGHash = string\ntype CanvasHash = string\n\nexport class WebLayer {\n  static DEFAULT_CACHE_SIZE = 4\n  private static svgRetryCount: Map<SVGHash, number> = new Map\n  private static svgCanvasHash: LRUMap<SVGHash, CanvasHash> = new LRUMap(1000)\n  private static cachedCanvases: LRUMap<CanvasHash, HTMLCanvasElement> = new LRUMap(WebLayer.DEFAULT_CACHE_SIZE)\n\n  id:string\n\n  constructor(public element: Element, public eventCallback: EventCallback) {\n    WebRenderer.layers.set(element, this)\n    this.id = element.getAttribute(WebRenderer.ELEMENT_UID_ATTRIBUTE) ||  WebRenderer.generateElementUID()\n    element.setAttribute(WebRenderer.ELEMENT_UID_ATTRIBUTE, this.id)\n    element.setAttribute(WebRenderer.LAYER_ATTRIBUTE,'')\n    this.parentLayer = WebRenderer.getClosestLayer(this.element, false)\n    this.eventCallback('layercreated', { target: element })\n    WebLayer.cachedCanvases.limit = WebRenderer.layers.size * WebLayer.DEFAULT_CACHE_SIZE\n    this._hashingCanvas.width = 20\n    this._hashingCanvas.height = 20\n  }\n\n  needsRefresh = true\n  needsRemoval = false\n\n  pseudoStates = {\n    hover: false,\n    active: false,\n    focus: false,\n    target: false\n  }\n\n  svgImage: HTMLImageElement = new Image()\n  \n  private bounds = new Bounds()\n  private padding = new Edges()\n  private margin = new Edges()\n  private border = new Edges()\n  \n  parentLayer?: WebLayer\n  childLayers = [] as WebLayer[]\n  pixelRatio?: number\n\n  rasterizationCount: Map<string, number> = new Map()\n  cachedBounds: Map<string, Bounds> = new Map()\n  cachedMargin: Map<string, Edges> = new Map()\n\n  private _dynamicAttributes = ''\n  private _svgHash = ''\n  private _svgDocument = ''\n  private _svgHashRasterizing = ''\n  private _svgSrc = ''\n  private _hashingCanvas = document.createElement('canvas')\n\n  _currentSVGHash?: string\n  _currentCanvas?: HTMLCanvasElement\n  _currentBounds!: Bounds\n  _currentMargin!: Edges\n\n  trySetFromSVGHash(svgHash:SVGHash) {\n    const bounds = this.cachedBounds.get(svgHash)\n    const margin = this.cachedMargin.get(svgHash)\n    if (svgHash == this._currentSVGHash) {\n      if (bounds && margin) {\n        this._currentBounds = bounds\n        this._currentMargin = margin\n      }\n      return true \n    } else {\n      const previousCanvasHash = WebLayer.svgCanvasHash.get(this._currentSVGHash!)\n      const canvasHash = WebLayer.svgCanvasHash.get(svgHash)!\n      const canvas = WebLayer.cachedCanvases.get(canvasHash)\n      if (canvas && bounds && margin) {\n        this._currentSVGHash = svgHash\n        this._currentCanvas = canvas\n        this._currentBounds = bounds\n        this._currentMargin = margin\n        if (previousCanvasHash !== canvasHash && this.eventCallback) this.eventCallback('layerchanged', { target: this.element })\n        return true\n      }\n    }\n    return false\n  }\n\n  get currentCanvas() {\n    return this._currentCanvas\n  }\n\n  get currentBounds() {\n    return this._currentBounds\n  }\n\n  get currentMargin() {\n    return this._currentMargin\n  }\n\n  get depth() {\n    let depth = 0\n    let layer = this as WebLayer\n    while (layer.parentLayer) {\n      layer = layer.parentLayer\n      depth++\n    }\n    return depth\n  }\n\n  get rootLayer() {\n    let rootLayer = this as WebLayer\n    while (rootLayer.parentLayer) rootLayer = rootLayer.parentLayer\n    return rootLayer\n  }\n\n  traverseParentLayers(\n    each: (layer: WebLayer) => void\n  ) {\n    const parentLayer = this.parentLayer\n    if (parentLayer) {\n      parentLayer.traverseParentLayers(each)\n      each(parentLayer)\n    }\n  }\n\n  traverseLayers(each: (layer: WebLayer) => void) {\n    each(this)\n    this.traverseChildLayers(each)\n  }\n\n  traverseChildLayers(\n    each: (layer: WebLayer) => void\n  ) {\n    for (const child of this.childLayers) {\n      child.traverseLayers(each)\n    }\n  }\n\n  refresh() {\n    if (!this._currentSVGHash) {\n      getBounds(this.element, this.bounds, this.parentLayer && this.parentLayer.element)\n      getMargin(this.element, this.margin)\n      this._currentBounds = this.bounds\n      this._currentMargin = this.margin\n    }\n    this.needsRefresh = false\n    this._updateParentAndChildLayers()\n    WebRenderer.addToSerializeQueue(this)\n  }\n\n  private _updateParentAndChildLayers() {\n    const element = this.element\n    const childLayers = this.childLayers\n    const oldChildLayers = childLayers.slice()\n\n    const previousParentLayer = this.parentLayer\n    this.parentLayer = WebRenderer.getClosestLayer(this.element, false)\n    if (previousParentLayer !== this.parentLayer) {\n      this.parentLayer && this.parentLayer.childLayers.push(this)\n      this.eventCallback('layermoved', { target: element })\n    }\n\n    childLayers.length = 0\n    traverseChildElements(element, this._tryConvertElementToWebLayer, this)\n\n    for (const child of oldChildLayers) {\n      const parentLayer = WebRenderer.getClosestLayer(child.element, false)\n      if (!parentLayer) {\n        child.needsRemoval = true\n        childLayers.push(child)\n      }\n    }\n  }\n\n  private _tryConvertElementToWebLayer(n: Node) {\n    if (this.needsRemoval) return false\n    const el = n as HTMLElement\n    const styles = getComputedStyle(el)\n    const id = el.getAttribute(WebRenderer.ELEMENT_UID_ATTRIBUTE)\n    if (!id) {\n        el.setAttribute(WebRenderer.ELEMENT_UID_ATTRIBUTE, WebRenderer.generateElementUID())\n    }\n    const isLayer = el.hasAttribute(WebRenderer.LAYER_ATTRIBUTE)\n    if (isLayer || el.nodeName === 'VIDEO' || styles.transform !== 'none') {\n      let child = WebRenderer.layers.get(el)\n      if (!child) {\n        child = new WebLayer(el, this.eventCallback)\n      }\n      this.childLayers.push(child)\n      return false // stop traversing this subtree\n    }\n    return true\n  }\n\n  serializationReplacer = (node:Node) => {\n    if (this.element === node) return\n    const element = node as Element\n    const layer = WebRenderer.layers.get(element)\n    if (layer) {      \n      const bounds = layer.bounds\n      let attributes = ''\n      const extraStyle = `max-width:${bounds.width+1}px;max-height:${bounds.height+1}px;min-width:${bounds.width}px;min-height:${bounds.height}px;visibility:hidden`\n      let addedStyle = false\n      for (const attr of layer.element.attributes) {\n        if (attr.name === 'src') continue\n        if (attr.name == 'style') {\n          attributes += serializeAttribute(attr.name, attr.value + ';' + extraStyle)\n          addedStyle = true\n        } else {\n          attributes += serializeAttribute(attr.name, attr.value)\n        }\n      }\n      if (!addedStyle) {\n        attributes += serializeAttribute('style', extraStyle)\n      }\n      const tag = element.tagName.toLowerCase()\n      return `<${tag} ${attributes}></${tag}>`\n    }\n  }\n\n  async serialize() {      \n    const layerElement = this.element as HTMLElement\n    if (layerElement.nodeName === 'VIDEO') return\n    \n    getBounds(layerElement, this.bounds, this.parentLayer?.element)\n    getMargin(layerElement, this.margin)\n    let { width, height } = this.bounds\n    // add margins\n    width += Math.max(this.margin.left, 0) + Math.max(this.margin.right, 0)\n    height += Math.max(this.margin.top, 0) + Math.max(this.margin.bottom, 0)\n\n    if (width * height > 0) {\n      getPadding(layerElement, this.padding)\n      getBorder(layerElement, this.border)\n\n      // create svg markup\n      const elementAttribute = WebRenderer.attributeHTML(WebRenderer.ELEMENT_UID_ATTRIBUTE,''+this.id)\n      const computedStyle = getComputedStyle(layerElement)\n      const needsInlineBlock = computedStyle.display === 'inline'\n      WebRenderer.updateInputAttributes(layerElement)\n      const parentsHTML = this._getParentsHTML(layerElement)\n      parentsHTML[0] = parentsHTML[0].replace(\n        'html',\n        'html ' + WebRenderer.RENDERING_DOCUMENT_ATTRIBUTE + '=\"\" '\n      )\n\n      let [svgCSS, layerHTML] = await Promise.all([\n        WebRenderer.getRenderingCSS(layerElement),\n        serializeToString(layerElement, this.serializationReplacer)\n      ])\n      layerHTML = layerHTML.replace(elementAttribute,\n            `${elementAttribute} ${WebRenderer.RENDERING_ATTRIBUTE}=\"\" ` +\n            `${needsInlineBlock ? `${WebRenderer.RENDERING_INLINE_ATTRIBUTE}=\"\" ` : ' '} ` +\n            WebRenderer.getPsuedoAttributes(this.pseudoStates))\n      const docString =\n        '<svg width=\"' +\n        width +\n        '\" height=\"' +\n        height +\n        '\" xmlns=\"http://www.w3.org/2000/svg\"><defs><style type=\"text/css\"><![CDATA[\\n' +\n        svgCSS.join('\\n') +\n        ']]></style></defs><foreignObject x=\"0\" y=\"0\" width=\"' +\n        (width+1) +\n        '\" height=\"' +\n        (height+1) +\n        '\">' +\n        parentsHTML[0] +\n        layerHTML +\n        parentsHTML[1] +\n        '</foreignObject></svg>'\n      const svgDoc = this._svgDocument = docString\n      const svgHash = this._svgHash = WebRenderer.arrayBufferToBase64(sha256.hash(encoder.encode(svgDoc))) +\n        '?w=' + width +\n        ';h=' + height\n\n      this.cachedBounds.set(svgHash, new Bounds().copy(this.bounds))\n      this.cachedMargin.set(svgHash, new Edges().copy(this.margin))\n      \n      // try setting from cache\n      if (this.trySetFromSVGHash(svgHash)) return\n\n      // rasterize the svg document if no existing canvas matches\n      WebRenderer.addToRasterizeQueue(this)\n    } else {\n      this._currentBounds.copy(this.bounds)\n      this._currentMargin.copy(this.margin)\n    }\n  }\n\n  async rasterize() {\n    return new Promise<void>( (resolve, reject) => {\n      const render = () => {\n        WebRenderer.addToRenderQueue(this)\n        this.svgImage.onload = null\n        resolve()\n      }\n      this.svgImage.onload = () => {\n        setTimeout(render, 10) // delay to make sure internal SVG images/resources are fully loaded \n      }\n      this.svgImage.onerror = (error) => {\n        reject(error)\n      }\n      this._svgHashRasterizing = this._svgHash\n      this.svgImage.src = (this._svgSrc = 'data:image/svg+xml;utf8,' + encodeURIComponent(this._svgDocument))\n    })\n  }\n\n  render() {\n\n    if (!this.svgImage.complete || this.svgImage.currentSrc !== this.svgImage.src) {\n      setTimeout(() => WebRenderer.addToRenderQueue(this),100)\n      return\n    }\n\n    const svgHash = this._svgHashRasterizing\n\n    if (!this.cachedBounds.has(svgHash) || !this.cachedMargin.has(svgHash)) {\n      this.needsRefresh = true\n      return\n    }\n\n    let { width, height } = this.cachedBounds.get(svgHash)!\n    let { left, top, right, bottom } = this.cachedMargin.get(svgHash)!\n\n    const fullWidth = width + left + right\n    const fullHeight = height + top + bottom\n\n    const hashingCanvas = this._hashingCanvas\n    let hw = hashingCanvas.width\n    let hh = hashingCanvas.height\n    const hctx = hashingCanvas.getContext('2d')!\n    hctx.clearRect(0, 0, hw, hh)\n    hctx.imageSmoothingEnabled = false\n    hctx.drawImage(this.svgImage, 0, 0, fullWidth, fullHeight, 0, 0, hw, hh)\n    const hashData = hctx.getImageData(0, 0, hw, hh).data\n    const canvasHash =\n      WebRenderer.arrayBufferToBase64(sha256.hash(new Uint8Array(hashData)))\n    \n    const previousCanvasHash = WebLayer.svgCanvasHash.get(svgHash)\n    WebLayer.svgCanvasHash.set(svgHash, canvasHash)\n    if (previousCanvasHash !== canvasHash) {\n      WebLayer.svgRetryCount.set(svgHash, 0)\n    }\n\n    const retryCount = WebLayer.svgRetryCount.get(svgHash)||0\n    WebLayer.svgRetryCount.set(svgHash, retryCount+1)\n\n    if (retryCount > 3 && WebLayer.cachedCanvases.has(canvasHash)) {\n      if (this._svgHash === this._svgHashRasterizing)\n        this.trySetFromSVGHash(this._svgHash)\n      return\n    }\n\n    setTimeout(() => WebRenderer.addToRenderQueue(this), (500 + Math.random() * 1000) * 2^retryCount)\n\n    if (previousCanvasHash === canvasHash) return\n\n    const pixelRatio =\n      this.pixelRatio ||\n      parseFloat(this.element.getAttribute(WebRenderer.PIXEL_RATIO_ATTRIBUTE)!) ||\n      window.devicePixelRatio\n    const newCanvas =\n      WebLayer.cachedCanvases.size === WebLayer.cachedCanvases.limit\n        ? WebLayer.cachedCanvases.shift()![1]\n        : document.createElement('canvas')\n    let w = (newCanvas.width = fullWidth * pixelRatio)\n    let h = (newCanvas.height = fullHeight * pixelRatio)\n    const ctx = newCanvas.getContext('2d')!\n    ctx.imageSmoothingEnabled = false\n    ctx.clearRect(0, 0, w, h)\n    ctx.drawImage(this.svgImage, 0, 0, fullWidth, fullHeight, 0, 0, w, h)\n    WebLayer.cachedCanvases.set(canvasHash, newCanvas)\n    console.log('layer painted ' + 'x'+retryCount, this.element)\n\n    if (this._svgHash === this._svgHashRasterizing)\n      this.trySetFromSVGHash(svgHash)\n  }\n\n  // Get all parents of the embeded html as these can effect the resulting styles\n  private _getParentsHTML(element: Element) {\n    const opens = []\n    const closes = []\n    let parent = element.parentElement\n    if (!parent) parent = document.documentElement\n    do {\n      let tag = parent.tagName.toLowerCase()\n      let attributes = ' '\n      for (const a of parent.attributes) {\n        if (a.name === 'style') continue\n\n        attributes += `${a.name}=\"${a.value}\" `\n      }\n      const open =\n        '<' +\n        tag +\n        (tag === 'html'\n          ? ` xmlns=\"http://www.w3.org/1999/xhtml\" style=\"--x-width:${\n              this.bounds.width}px;--x-height:${this.bounds.height}px;--x-inline-top:${\n              this.border.top + this.margin.top + this.padding.top}px\" `\n          : '') +\n        attributes +\n        `${WebRenderer.RENDERING_PARENT_ATTRIBUTE}=\"\" ` +\n        // WebRenderer.getPsuedoAttributes(parent) +\n        ' >'\n      opens.unshift(open)\n      const close = '</' + tag + '>'\n      closes.push(close)\n      if (tag == 'html') break\n    } while ((parent = parent !== document.documentElement ? parent.parentElement || document.documentElement : null))\n    return [opens.join(''), closes.join('')]\n  }\n}","var resizeObservers = [];\nexport { resizeObservers };\n","var ResizeObserverBoxOptions;\n(function (ResizeObserverBoxOptions) {\n    ResizeObserverBoxOptions[\"BORDER_BOX\"] = \"border-box\";\n    ResizeObserverBoxOptions[\"CONTENT_BOX\"] = \"content-box\";\n    ResizeObserverBoxOptions[\"DEVICE_PIXEL_CONTENT_BOX\"] = \"device-pixel-content-box\";\n})(ResizeObserverBoxOptions || (ResizeObserverBoxOptions = {}));\nexport { ResizeObserverBoxOptions };\n","var msg = 'ResizeObserver loop completed with undelivered notifications.';\nvar deliverResizeLoopError = function () {\n    var event;\n    if (typeof ErrorEvent === 'function') {\n        event = new ErrorEvent('error', {\n            message: msg\n        });\n    }\n    else {\n        event = document.createEvent('Event');\n        event.initEvent('error', false, false);\n        event.message = msg;\n    }\n    window.dispatchEvent(event);\n};\nexport { deliverResizeLoopError };\n","export var freeze = function (obj) { return Object.freeze(obj); };\n","var trigger;\nvar callbacks = [];\nvar notify = function () { return callbacks.splice(0).forEach(function (cb) { return cb(); }); };\nvar queueMicroTask = function (callback) {\n    if (!trigger) {\n        var toggle_1 = 0;\n        var el_1 = document.createTextNode('');\n        var config = { characterData: true };\n        new MutationObserver(function () { return notify(); }).observe(el_1, config);\n        trigger = function () { el_1.textContent = \"\" + (toggle_1 ? toggle_1-- : toggle_1++); };\n    }\n    callbacks.push(callback);\n    trigger();\n};\nexport { queueMicroTask };\n","import { freeze } from './utils/freeze';\nvar ResizeObserverSize = (function () {\n    function ResizeObserverSize(inlineSize, blockSize) {\n        this.inlineSize = inlineSize;\n        this.blockSize = blockSize;\n        freeze(this);\n    }\n    return ResizeObserverSize;\n}());\nexport { ResizeObserverSize };\n","import { freeze } from './utils/freeze';\nvar DOMRectReadOnly = (function () {\n    function DOMRectReadOnly(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.top = this.y;\n        this.left = this.x;\n        this.bottom = this.top + this.height;\n        this.right = this.left + this.width;\n        return freeze(this);\n    }\n    DOMRectReadOnly.prototype.toJSON = function () {\n        var _a = this, x = _a.x, y = _a.y, top = _a.top, right = _a.right, bottom = _a.bottom, left = _a.left, width = _a.width, height = _a.height;\n        return { x: x, y: y, top: top, right: right, bottom: bottom, left: left, width: width, height: height };\n    };\n    DOMRectReadOnly.fromRect = function (rectangle) {\n        return new DOMRectReadOnly(rectangle.x, rectangle.y, rectangle.width, rectangle.height);\n    };\n    return DOMRectReadOnly;\n}());\nexport { DOMRectReadOnly };\n","var isSVG = function (target) { return target instanceof SVGElement && 'getBBox' in target; };\nvar isHidden = function (target) {\n    if (isSVG(target)) {\n        var _a = target.getBBox(), width = _a.width, height = _a.height;\n        return !width && !height;\n    }\n    var _b = target, offsetWidth = _b.offsetWidth, offsetHeight = _b.offsetHeight;\n    return !(offsetWidth || offsetHeight || target.getClientRects().length);\n};\nvar isElement = function (obj) {\n    var _a, _b;\n    if (obj instanceof Element) {\n        return true;\n    }\n    var scope = (_b = (_a = obj) === null || _a === void 0 ? void 0 : _a.ownerDocument) === null || _b === void 0 ? void 0 : _b.defaultView;\n    return !!(scope && obj instanceof scope.Element);\n};\nvar isReplacedElement = function (target) {\n    switch (target.tagName) {\n        case 'INPUT':\n            if (target.type !== 'image') {\n                break;\n            }\n        case 'VIDEO':\n        case 'AUDIO':\n        case 'EMBED':\n        case 'OBJECT':\n        case 'CANVAS':\n        case 'IFRAME':\n        case 'IMG':\n            return true;\n    }\n    return false;\n};\nexport { isSVG, isHidden, isElement, isReplacedElement };\n","export var global = typeof window !== 'undefined' ? window : {};\n","import { ResizeObserverBoxOptions } from '../ResizeObserverBoxOptions';\nimport { ResizeObserverSize } from '../ResizeObserverSize';\nimport { DOMRectReadOnly } from '../DOMRectReadOnly';\nimport { isSVG, isHidden } from '../utils/element';\nimport { freeze } from '../utils/freeze';\nimport { global } from '../utils/global';\nvar cache = new WeakMap();\nvar scrollRegexp = /auto|scroll/;\nvar verticalRegexp = /^tb|vertical/;\nvar IE = (/msie|trident/i).test(global.navigator && global.navigator.userAgent);\nvar parseDimension = function (pixel) { return parseFloat(pixel || '0'); };\nvar size = function (inlineSize, blockSize, switchSizes) {\n    if (inlineSize === void 0) { inlineSize = 0; }\n    if (blockSize === void 0) { blockSize = 0; }\n    if (switchSizes === void 0) { switchSizes = false; }\n    return new ResizeObserverSize((switchSizes ? blockSize : inlineSize) || 0, (switchSizes ? inlineSize : blockSize) || 0);\n};\nvar zeroBoxes = freeze({\n    devicePixelContentBoxSize: size(),\n    borderBoxSize: size(),\n    contentBoxSize: size(),\n    contentRect: new DOMRectReadOnly(0, 0, 0, 0)\n});\nvar calculateBoxSizes = function (target, forceRecalculation) {\n    if (forceRecalculation === void 0) { forceRecalculation = false; }\n    if (cache.has(target) && !forceRecalculation) {\n        return cache.get(target);\n    }\n    if (isHidden(target)) {\n        cache.set(target, zeroBoxes);\n        return zeroBoxes;\n    }\n    var cs = getComputedStyle(target);\n    var svg = isSVG(target) && target.ownerSVGElement && target.getBBox();\n    var removePadding = !IE && cs.boxSizing === 'border-box';\n    var switchSizes = verticalRegexp.test(cs.writingMode || '');\n    var canScrollVertically = !svg && scrollRegexp.test(cs.overflowY || '');\n    var canScrollHorizontally = !svg && scrollRegexp.test(cs.overflowX || '');\n    var paddingTop = svg ? 0 : parseDimension(cs.paddingTop);\n    var paddingRight = svg ? 0 : parseDimension(cs.paddingRight);\n    var paddingBottom = svg ? 0 : parseDimension(cs.paddingBottom);\n    var paddingLeft = svg ? 0 : parseDimension(cs.paddingLeft);\n    var borderTop = svg ? 0 : parseDimension(cs.borderTopWidth);\n    var borderRight = svg ? 0 : parseDimension(cs.borderRightWidth);\n    var borderBottom = svg ? 0 : parseDimension(cs.borderBottomWidth);\n    var borderLeft = svg ? 0 : parseDimension(cs.borderLeftWidth);\n    var horizontalPadding = paddingLeft + paddingRight;\n    var verticalPadding = paddingTop + paddingBottom;\n    var horizontalBorderArea = borderLeft + borderRight;\n    var verticalBorderArea = borderTop + borderBottom;\n    var horizontalScrollbarThickness = !canScrollHorizontally ? 0 : target.offsetHeight - verticalBorderArea - target.clientHeight;\n    var verticalScrollbarThickness = !canScrollVertically ? 0 : target.offsetWidth - horizontalBorderArea - target.clientWidth;\n    var widthReduction = removePadding ? horizontalPadding + horizontalBorderArea : 0;\n    var heightReduction = removePadding ? verticalPadding + verticalBorderArea : 0;\n    var contentWidth = svg ? svg.width : parseDimension(cs.width) - widthReduction - verticalScrollbarThickness;\n    var contentHeight = svg ? svg.height : parseDimension(cs.height) - heightReduction - horizontalScrollbarThickness;\n    var borderBoxWidth = contentWidth + horizontalPadding + verticalScrollbarThickness + horizontalBorderArea;\n    var borderBoxHeight = contentHeight + verticalPadding + horizontalScrollbarThickness + verticalBorderArea;\n    var boxes = freeze({\n        devicePixelContentBoxSize: size(Math.round(contentWidth * devicePixelRatio), Math.round(contentHeight * devicePixelRatio), switchSizes),\n        borderBoxSize: size(borderBoxWidth, borderBoxHeight, switchSizes),\n        contentBoxSize: size(contentWidth, contentHeight, switchSizes),\n        contentRect: new DOMRectReadOnly(paddingLeft, paddingTop, contentWidth, contentHeight)\n    });\n    cache.set(target, boxes);\n    return boxes;\n};\nvar calculateBoxSize = function (target, observedBox, forceRecalculation) {\n    var _a = calculateBoxSizes(target, forceRecalculation), borderBoxSize = _a.borderBoxSize, contentBoxSize = _a.contentBoxSize, devicePixelContentBoxSize = _a.devicePixelContentBoxSize;\n    switch (observedBox) {\n        case ResizeObserverBoxOptions.DEVICE_PIXEL_CONTENT_BOX:\n            return devicePixelContentBoxSize;\n        case ResizeObserverBoxOptions.BORDER_BOX:\n            return borderBoxSize;\n        default:\n            return contentBoxSize;\n    }\n};\nexport { calculateBoxSize, calculateBoxSizes };\n","import { calculateBoxSizes } from './algorithms/calculateBoxSize';\nimport { freeze } from './utils/freeze';\nvar ResizeObserverEntry = (function () {\n    function ResizeObserverEntry(target) {\n        var boxes = calculateBoxSizes(target);\n        this.target = target;\n        this.contentRect = boxes.contentRect;\n        this.borderBoxSize = freeze([boxes.borderBoxSize]);\n        this.contentBoxSize = freeze([boxes.contentBoxSize]);\n        this.devicePixelContentBoxSize = freeze([boxes.devicePixelContentBoxSize]);\n    }\n    return ResizeObserverEntry;\n}());\nexport { ResizeObserverEntry };\n","import { isHidden } from '../utils/element';\nvar calculateDepthForNode = function (node) {\n    if (isHidden(node)) {\n        return Infinity;\n    }\n    var depth = 0;\n    var parent = node.parentNode;\n    while (parent) {\n        depth += 1;\n        parent = parent.parentNode;\n    }\n    return depth;\n};\nexport { calculateDepthForNode };\n","import { resizeObservers } from '../utils/resizeObservers';\nimport { ResizeObserverEntry } from '../ResizeObserverEntry';\nimport { calculateDepthForNode } from './calculateDepthForNode';\nimport { calculateBoxSize } from './calculateBoxSize';\nvar broadcastActiveObservations = function () {\n    var shallowestDepth = Infinity;\n    var callbacks = [];\n    resizeObservers.forEach(function processObserver(ro) {\n        if (ro.activeTargets.length === 0) {\n            return;\n        }\n        var entries = [];\n        ro.activeTargets.forEach(function processTarget(ot) {\n            var entry = new ResizeObserverEntry(ot.target);\n            var targetDepth = calculateDepthForNode(ot.target);\n            entries.push(entry);\n            ot.lastReportedSize = calculateBoxSize(ot.target, ot.observedBox);\n            if (targetDepth < shallowestDepth) {\n                shallowestDepth = targetDepth;\n            }\n        });\n        callbacks.push(function resizeObserverCallback() {\n            ro.callback.call(ro.observer, entries, ro.observer);\n        });\n        ro.activeTargets.splice(0, ro.activeTargets.length);\n    });\n    for (var _i = 0, callbacks_1 = callbacks; _i < callbacks_1.length; _i++) {\n        var callback = callbacks_1[_i];\n        callback();\n    }\n    return shallowestDepth;\n};\nexport { broadcastActiveObservations };\n","import { resizeObservers } from '../utils/resizeObservers';\nimport { calculateDepthForNode } from './calculateDepthForNode';\nvar gatherActiveObservationsAtDepth = function (depth) {\n    resizeObservers.forEach(function processObserver(ro) {\n        ro.activeTargets.splice(0, ro.activeTargets.length);\n        ro.skippedTargets.splice(0, ro.skippedTargets.length);\n        ro.observationTargets.forEach(function processTarget(ot) {\n            if (ot.isActive()) {\n                if (calculateDepthForNode(ot.target) > depth) {\n                    ro.activeTargets.push(ot);\n                }\n                else {\n                    ro.skippedTargets.push(ot);\n                }\n            }\n        });\n    });\n};\nexport { gatherActiveObservationsAtDepth };\n","import { hasActiveObservations } from '../algorithms/hasActiveObservations';\nimport { hasSkippedObservations } from '../algorithms/hasSkippedObservations';\nimport { deliverResizeLoopError } from '../algorithms/deliverResizeLoopError';\nimport { broadcastActiveObservations } from '../algorithms/broadcastActiveObservations';\nimport { gatherActiveObservationsAtDepth } from '../algorithms/gatherActiveObservationsAtDepth';\nvar process = function () {\n    var depth = 0;\n    gatherActiveObservationsAtDepth(depth);\n    while (hasActiveObservations()) {\n        depth = broadcastActiveObservations();\n        gatherActiveObservationsAtDepth(depth);\n    }\n    if (hasSkippedObservations()) {\n        deliverResizeLoopError();\n    }\n    return depth > 0;\n};\nexport { process };\n","import { resizeObservers } from '../utils/resizeObservers';\nvar hasActiveObservations = function () {\n    return resizeObservers.some(function (ro) { return ro.activeTargets.length > 0; });\n};\nexport { hasActiveObservations };\n","import { resizeObservers } from '../utils/resizeObservers';\nvar hasSkippedObservations = function () {\n    return resizeObservers.some(function (ro) { return ro.skippedTargets.length > 0; });\n};\nexport { hasSkippedObservations };\n","import { process } from './process';\nimport { global } from './global';\nimport { queueResizeObserver } from './queueResizeObserver';\nvar watching = 0;\nvar isWatching = function () { return !!watching; };\nvar CATCH_PERIOD = 250;\nvar observerConfig = { attributes: true, characterData: true, childList: true, subtree: true };\nvar events = [\n    'resize',\n    'load',\n    'transitionend',\n    'animationend',\n    'animationstart',\n    'animationiteration',\n    'keyup',\n    'keydown',\n    'mouseup',\n    'mousedown',\n    'mouseover',\n    'mouseout',\n    'blur',\n    'focus'\n];\nvar time = function (timeout) {\n    if (timeout === void 0) { timeout = 0; }\n    return Date.now() + timeout;\n};\nvar scheduled = false;\nvar Scheduler = (function () {\n    function Scheduler() {\n        var _this = this;\n        this.stopped = true;\n        this.listener = function () { return _this.schedule(); };\n    }\n    Scheduler.prototype.run = function (timeout) {\n        var _this = this;\n        if (timeout === void 0) { timeout = CATCH_PERIOD; }\n        if (scheduled) {\n            return;\n        }\n        scheduled = true;\n        var until = time(timeout);\n        queueResizeObserver(function () {\n            var elementsHaveResized = false;\n            try {\n                elementsHaveResized = process();\n            }\n            finally {\n                scheduled = false;\n                timeout = until - time();\n                if (!isWatching()) {\n                    return;\n                }\n                if (elementsHaveResized) {\n                    _this.run(1000);\n                }\n                else if (timeout > 0) {\n                    _this.run(timeout);\n                }\n                else {\n                    _this.start();\n                }\n            }\n        });\n    };\n    Scheduler.prototype.schedule = function () {\n        this.stop();\n        this.run();\n    };\n    Scheduler.prototype.observe = function () {\n        var _this = this;\n        var cb = function () { return _this.observer && _this.observer.observe(document.body, observerConfig); };\n        document.body ? cb() : global.addEventListener('DOMContentLoaded', cb);\n    };\n    Scheduler.prototype.start = function () {\n        var _this = this;\n        if (this.stopped) {\n            this.stopped = false;\n            this.observer = new MutationObserver(this.listener);\n            this.observe();\n            events.forEach(function (name) { return global.addEventListener(name, _this.listener, true); });\n        }\n    };\n    Scheduler.prototype.stop = function () {\n        var _this = this;\n        if (!this.stopped) {\n            this.observer && this.observer.disconnect();\n            events.forEach(function (name) { return global.removeEventListener(name, _this.listener, true); });\n            this.stopped = true;\n        }\n    };\n    return Scheduler;\n}());\nvar scheduler = new Scheduler();\nvar updateCount = function (n) {\n    !watching && n > 0 && scheduler.start();\n    watching += n;\n    !watching && scheduler.stop();\n};\nexport { scheduler, updateCount };\n","import { queueMicroTask } from './queueMicroTask';\nvar queueResizeObserver = function (cb) {\n    queueMicroTask(function ResizeObserver() {\n        requestAnimationFrame(cb);\n    });\n};\nexport { queueResizeObserver };\n","import { ResizeObserverBoxOptions } from './ResizeObserverBoxOptions';\nimport { calculateBoxSize } from './algorithms/calculateBoxSize';\nimport { isSVG, isReplacedElement } from './utils/element';\nvar skipNotifyOnElement = function (target) {\n    return !isSVG(target)\n        && !isReplacedElement(target)\n        && getComputedStyle(target).display === 'inline';\n};\nvar ResizeObservation = (function () {\n    function ResizeObservation(target, observedBox) {\n        this.target = target;\n        this.observedBox = observedBox || ResizeObserverBoxOptions.CONTENT_BOX;\n        this.lastReportedSize = {\n            inlineSize: 0,\n            blockSize: 0\n        };\n    }\n    ResizeObservation.prototype.isActive = function () {\n        var size = calculateBoxSize(this.target, this.observedBox, true);\n        if (skipNotifyOnElement(this.target)) {\n            this.lastReportedSize = size;\n        }\n        if (this.lastReportedSize.inlineSize !== size.inlineSize\n            || this.lastReportedSize.blockSize !== size.blockSize) {\n            return true;\n        }\n        return false;\n    };\n    return ResizeObservation;\n}());\nexport { ResizeObservation };\n","var ResizeObserverDetail = (function () {\n    function ResizeObserverDetail(resizeObserver, callback) {\n        this.activeTargets = [];\n        this.skippedTargets = [];\n        this.observationTargets = [];\n        this.observer = resizeObserver;\n        this.callback = callback;\n    }\n    return ResizeObserverDetail;\n}());\nexport { ResizeObserverDetail };\n","import { scheduler, updateCount } from './utils/scheduler';\nimport { ResizeObservation } from './ResizeObservation';\nimport { ResizeObserverDetail } from './ResizeObserverDetail';\nimport { resizeObservers } from './utils/resizeObservers';\nvar observerMap = new WeakMap();\nvar getObservationIndex = function (observationTargets, target) {\n    for (var i = 0; i < observationTargets.length; i += 1) {\n        if (observationTargets[i].target === target) {\n            return i;\n        }\n    }\n    return -1;\n};\nvar ResizeObserverController = (function () {\n    function ResizeObserverController() {\n    }\n    ResizeObserverController.connect = function (resizeObserver, callback) {\n        var detail = new ResizeObserverDetail(resizeObserver, callback);\n        observerMap.set(resizeObserver, detail);\n    };\n    ResizeObserverController.observe = function (resizeObserver, target, options) {\n        var detail = observerMap.get(resizeObserver);\n        var firstObservation = detail.observationTargets.length === 0;\n        if (getObservationIndex(detail.observationTargets, target) < 0) {\n            firstObservation && resizeObservers.push(detail);\n            detail.observationTargets.push(new ResizeObservation(target, options && options.box));\n            updateCount(1);\n            scheduler.schedule();\n        }\n    };\n    ResizeObserverController.unobserve = function (resizeObserver, target) {\n        var detail = observerMap.get(resizeObserver);\n        var index = getObservationIndex(detail.observationTargets, target);\n        var lastObservation = detail.observationTargets.length === 1;\n        if (index >= 0) {\n            lastObservation && resizeObservers.splice(resizeObservers.indexOf(detail), 1);\n            detail.observationTargets.splice(index, 1);\n            updateCount(-1);\n        }\n    };\n    ResizeObserverController.disconnect = function (resizeObserver) {\n        var _this = this;\n        var detail = observerMap.get(resizeObserver);\n        detail.observationTargets.slice().forEach(function (ot) { return _this.unobserve(resizeObserver, ot.target); });\n        detail.activeTargets.splice(0, detail.activeTargets.length);\n    };\n    return ResizeObserverController;\n}());\nexport { ResizeObserverController };\n","import { ResizeObserverController } from './ResizeObserverController';\nimport { isElement } from './utils/element';\nvar ResizeObserver = (function () {\n    function ResizeObserver(callback) {\n        if (arguments.length === 0) {\n            throw new TypeError(\"Failed to construct 'ResizeObserver': 1 argument required, but only 0 present.\");\n        }\n        if (typeof callback !== 'function') {\n            throw new TypeError(\"Failed to construct 'ResizeObserver': The callback provided as parameter 1 is not a function.\");\n        }\n        ResizeObserverController.connect(this, callback);\n    }\n    ResizeObserver.prototype.observe = function (target, options) {\n        if (arguments.length === 0) {\n            throw new TypeError(\"Failed to execute 'observe' on 'ResizeObserver': 1 argument required, but only 0 present.\");\n        }\n        if (!isElement(target)) {\n            throw new TypeError(\"Failed to execute 'observe' on 'ResizeObserver': parameter 1 is not of type 'Element\");\n        }\n        ResizeObserverController.observe(this, target, options);\n    };\n    ResizeObserver.prototype.unobserve = function (target) {\n        if (arguments.length === 0) {\n            throw new TypeError(\"Failed to execute 'unobserve' on 'ResizeObserver': 1 argument required, but only 0 present.\");\n        }\n        if (!isElement(target)) {\n            throw new TypeError(\"Failed to execute 'unobserve' on 'ResizeObserver': parameter 1 is not of type 'Element\");\n        }\n        ResizeObserverController.unobserve(this, target);\n    };\n    ResizeObserver.prototype.disconnect = function () {\n        ResizeObserverController.disconnect(this);\n    };\n    ResizeObserver.toString = function () {\n        return 'function ResizeObserver () { [polyfill code] }';\n    };\n    return ResizeObserver;\n}());\nexport { ResizeObserver };\n","import {EventCallback, WebLayer} from './WebLayer'\nimport { addCSSRule } from './dom-utils'\nimport { Matrix4 } from 'three/src/math/Matrix4'\nimport { ResizeObserver as Polyfill } from '@juggle/resize-observer'\nconst ResizeObserver:typeof Polyfill = (self as any).ResizeObserver || Polyfill\n\nexport interface WebLayerOptions {\n  /**\n   * Inject and apply only these stylesheets.\n   * This only has an effect when passing a detached DOM element\n   * as the root of the Layer tree. This dom element will be\n   * hosted inside an iframe, along with the provided stylesheets,\n   * for style isolation.\n   */\n  styleSheetURLs?: string[]\n}\n\ntype RequestIdleCallbackHandle = any\ntype RequestIdleCallbackOptions = {\n  timeout: number\n}\nexport type RequestIdleCallbackDeadline = {\n  readonly didTimeout: boolean\n  timeRemaining: () => number\n}\n\ndeclare function requestIdleCallback (\n  callback: (deadline: RequestIdleCallbackDeadline) => void,\n  opts?: RequestIdleCallbackOptions\n) : RequestIdleCallbackHandle\n\ndeclare function cancelIdleCallback(handle: RequestIdleCallbackHandle) : void\n\n\nfunction ensureElementIsInDocument(element: Element, options:WebLayerOptions): Element {\n  if (document.contains(element)) {\n    return element\n  }\n  const container = document.createElement('div')\n  container.setAttribute(WebRenderer.RENDERING_CONTAINER_ATTRIBUTE, '')\n  container.style.visibility = 'hidden'\n  container.style.pointerEvents = 'none'\n  container.style.touchAction = 'none'\n  const containerShadow = container.attachShadow({mode: 'open'})\n  containerShadow.appendChild(element)\n  document.documentElement.appendChild(container)\n  return element\n}\n\nconst scratchMat1 = new Matrix4()\nconst scratchMat2 = new Matrix4()\nconst textDecoder = new TextDecoder()\nconst microtask = Promise.resolve()\n\nexport class WebRenderer {\n  static ATTRIBUTE_PREFIX = 'xr'\n  static get ELEMENT_UID_ATTRIBUTE() { return this.ATTRIBUTE_PREFIX + '-uid' }\n  static get HOVER_ATTRIBUTE() { return this.ATTRIBUTE_PREFIX + '-hover'}\n  static get ACTIVE_ATTRIBUTE() { return this.ATTRIBUTE_PREFIX + '-active'}\n  static get FOCUS_ATTRIBUTE() { return this.ATTRIBUTE_PREFIX + '-focus'}\n  static get TARGET_ATTRIBUTE() { return this.ATTRIBUTE_PREFIX + '-target'}\n  static get LAYER_ATTRIBUTE() { return this.ATTRIBUTE_PREFIX + '-layer'}\n  static get PIXEL_RATIO_ATTRIBUTE() { return this.ATTRIBUTE_PREFIX + '-pixel-ratio' }\n\n  static get RENDERING_ATTRIBUTE() { return this.ATTRIBUTE_PREFIX + '-rendering' }\n  static get RENDERING_PARENT_ATTRIBUTE() { return this.ATTRIBUTE_PREFIX + '-rendering-parent' }\n  static get RENDERING_CONTAINER_ATTRIBUTE() { return this.ATTRIBUTE_PREFIX + '-rendering-container' }\n  static get RENDERING_INLINE_ATTRIBUTE() { return this.ATTRIBUTE_PREFIX + '-rendering-inline' }\n  static get RENDERING_DOCUMENT_ATTRIBUTE() { return this.ATTRIBUTE_PREFIX + '-rendering-document' }\n\n  private static _nextUID = 0\n  static generateElementUID() { return '' + (this._nextUID ++) }\n\n  static serializer = new XMLSerializer()\n\n  static rootLayers: Map<Element, WebLayer> = new Map()\n  static layers: Map<Element, WebLayer> = new Map()\n  private static mutationObservers: Map<Element, MutationObserver> = new Map()\n  private static resizeObservers: Map<Element, Polyfill> = new Map()\n  static serializeQueue = [] as WebLayer[]\n  static rasterizeQueue = [] as WebLayer[]\n  static renderQueue = [] as WebLayer[]\n\n  // static readonly virtualHoverElements = new Set<Element>()\n  static readonly focusElement:HTMLElement|null = null // i.e., element is ready to receive input\n  static readonly activeElement:Element|null = null // i.e., button element is being \"pressed down\"\n  static readonly targetElement:Element|null = null // i.e., the element whose ID matches the url #hash\n\n  // static containsHover(element: Element) {\n  //   for (const t of this.virtualHoverElements) {\n  //     if (element.contains(t)) return true\n  //   }\n  //   return false\n  // }\n\n  static getPsuedoAttributes(states: typeof WebLayer.prototype.pseudoStates) {\n    return (\n      `${states.hover ? `${this.HOVER_ATTRIBUTE}=\"\" ` : ' '}` +\n      `${states.focus ? `${this.FOCUS_ATTRIBUTE}=\"\" ` : ' '}` +\n      `${states.active ? `${this.ACTIVE_ATTRIBUTE}=\"\" ` : ' '}` +\n      `${states.target ? `${this.TARGET_ATTRIBUTE}=\"\" ` : ' '}`\n    )\n  }\n\n  static rootNodeObservers = new Map<Document|ShadowRoot, MutationObserver>()\n  static containerStyleElement : HTMLStyleElement\n  static renderingStyleElement : HTMLStyleElement\n\n  static initRootNodeObservation(element:Element) {\n    const document = element.ownerDocument\n    const rootNode = element.getRootNode() as ShadowRoot|Document\n    const styleRoot = 'head' in rootNode ? rootNode.head : rootNode\n    if (this.rootNodeObservers.get(rootNode)) return\n\n    const containerStyle = this.containerStyleElement = document.createElement('style')\n    document.head.appendChild(containerStyle)\n    containerStyle.innerHTML = `\n      [${WebRenderer.RENDERING_CONTAINER_ATTRIBUTE}] {\n        all: initial;\n        position: fixed;\n        width: 100%;\n        height: 100%;\n        top: 0px;\n      }\n    `\n    \n    \n    const style = this.renderingStyleElement = document.createElement('style')\n    styleRoot.append(style) // otherwise stylesheet is not created\n    const sheet = style.sheet as CSSStyleSheet\n    let i = 0\n    addCSSRule(\n      sheet,\n      `[${WebRenderer.RENDERING_DOCUMENT_ATTRIBUTE}] *`,\n      'transform: none !important;',\n      i++\n    )\n    addCSSRule(\n      sheet,\n      `[${WebRenderer.RENDERING_ATTRIBUTE}], [${WebRenderer.RENDERING_ATTRIBUTE}] *`,\n      'visibility: visible !important;',\n      i++\n    )\n    addCSSRule(\n      sheet,\n      `[${WebRenderer.RENDERING_ATTRIBUTE}] [${WebRenderer.LAYER_ATTRIBUTE}], [${\n        WebRenderer.RENDERING_ATTRIBUTE}] [${WebRenderer.LAYER_ATTRIBUTE}] *`,\n      'visibility: hidden !important;',\n      i++\n    )\n    addCSSRule(\n      sheet,\n      `[${WebRenderer.RENDERING_ATTRIBUTE}]`,\n      'position: relative; top: 0 !important; left: 0 !important; float: none; box-sizing:border-box; min-width:var(--x-width); min-height:var(--x-height); display:block !important;',\n      i++\n    )\n    addCSSRule(\n      sheet,\n      `[${WebRenderer.RENDERING_INLINE_ATTRIBUTE}]`,\n      'top: var(--x-inline-top) !important; width:auto !important',\n      i++\n    )\n    addCSSRule(\n      sheet,\n      `[${WebRenderer.RENDERING_PARENT_ATTRIBUTE}]`,\n      'transform: none !important; left: 0 !important; top: 0 !important; margin: 0 !important; border:0 !important; border-radius:0 !important; height:100% !important; padding:0 !important; background: rgba(0,0,0,0) none !important; box-shadow:none !important',\n      i++\n    )\n    addCSSRule(\n      sheet,\n      `[${WebRenderer.RENDERING_PARENT_ATTRIBUTE}]::before, [${WebRenderer.RENDERING_PARENT_ATTRIBUTE}]::after`,\n      'content:none !important; box-shadow:none !important;',\n      i++\n    )\n    \n    if (rootNode === document) {\n      let previousHash = ''\n      const onHashChange = () => {\n        if (previousHash != window.location.hash) {\n          if (window.location.hash) {\n            try {\n              // @ts-ignore()\n              this.targetElement = rootNode.querySelector(window.location.hash)\n            } catch {}\n          }\n        }\n        previousHash = window.location.hash\n      }\n      \n      window.addEventListener('hashchange', onHashChange, false)\n      onHashChange()\n  \n      window.addEventListener('focusin', (evt) => {\n        // @ts-ignore\n        this.focusElement = evt.target\n      }, false)\n  \n      window.addEventListener('focusout', (evt) => {\n        // @ts-ignore\n        this.focusElement = null\n      }, false)\n      \n      window.addEventListener('load', (event) => {\n        setNeedsRefreshOnAllLayers()\n      })\n    }\n\n    const setNeedsRefreshOnAllLayers = () => {\n      for (const [e,l] of this.layers) l.needsRefresh = true\n    }\n\n    const setNeedsRefreshOnStyleLoad = (node:Node) => {\n      var nodeName = node.nodeName.toUpperCase()\n      if (STYLE_NODES.indexOf(nodeName) !== -1)\n        node.addEventListener(\"load\", setNeedsRefreshOnAllLayers)\n    }\n\n    const STYLE_NODES = [\"STYLE\", \"LINK\"];\n    const observer = new MutationObserver((mutations) => {\n      for (const m of mutations) {\n        if (STYLE_NODES.indexOf(m.target.nodeName.toUpperCase()) !== -1) {\n          setNeedsRefreshOnAllLayers()\n          this.embeddedCSS.get(document)?.delete(m.target as Element)\n        }\n        for (const node of m.addedNodes) setNeedsRefreshOnStyleLoad(node)\n      }\n    })\n    observer.observe(document, {\n      childList: true,\n      attributes: true,\n      characterData: true,\n      subtree: true,\n      attributeOldValue: true,\n      characterDataOldValue: true\n    })\n\n    this.rootNodeObservers.set(rootNode, observer)\n  }\n\n  static addToSerializeQueue(layer: WebLayer) {\n    if (this.serializeQueue.indexOf(layer) === -1) this.serializeQueue.push(layer)\n  }\n\n  static addToRasterizeQueue(layer: WebLayer) {\n    if (this.rasterizeQueue.indexOf(layer) === -1) this.rasterizeQueue.push(layer)\n  }\n\n  static addToRenderQueue(layer: WebLayer) {\n    if (this.renderQueue.indexOf(layer) === -1) this.renderQueue.push(layer)\n  }\n\n  static TASK_ASYNC_MAX_COUNT = 2 // since rasterization is async, limit simultaneous rasterizations\n  static TASK_SYNC_MAX_TIME = 200\n  static rasterizeTaskCount = 0\n  private static _runTasks() {\n    WebRenderer.tasksPending = false\n    const serializeQueue = WebRenderer.serializeQueue\n    const rasterizeQueue = WebRenderer.rasterizeQueue\n    const renderQueue = WebRenderer.renderQueue\n    const maxSyncTime = WebRenderer.TASK_SYNC_MAX_TIME / 2\n    let startTime = performance.now()\n    while (renderQueue.length && performance.now() - startTime < maxSyncTime) {\n      renderQueue.shift()!.render()\n    }\n    startTime = performance.now()\n    while (serializeQueue.length && performance.now() - startTime < maxSyncTime) {\n      serializeQueue.shift()!.serialize()\n    }\n    if (\n      rasterizeQueue.length &&\n      WebRenderer.rasterizeTaskCount < WebRenderer.TASK_ASYNC_MAX_COUNT\n    ) {\n      WebRenderer.rasterizeTaskCount++\n      rasterizeQueue\n        .shift()!\n        .rasterize()\n        .finally(() => {\n          WebRenderer.rasterizeTaskCount--\n        })\n    }\n  }\n\n  static tasksPending = false\n  \n  static scheduleTasksIfNeeded() {\n    if (this.tasksPending ||\n        (WebRenderer.serializeQueue.length === 0 &&\n        WebRenderer.renderQueue.length === 0 && \n        (WebRenderer.rasterizeQueue.length === 0 || \n        WebRenderer.rasterizeTaskCount === WebRenderer.TASK_ASYNC_MAX_COUNT))) return\n    this.tasksPending = true\n    WebRenderer.scheduleIdle(WebRenderer._runTasks)\n  }\n\n  static scheduleIdle(cb:(deadline?:RequestIdleCallbackDeadline)=>any) {\n    // if (\"requestIdleCallback\" in self) {\n    //   requestIdleCallback(cb)\n    // } else {\n      setTimeout(cb,1)\n    // }\n  }\n\n  static setLayerNeedsRefresh(layer: WebLayer) {\n    layer.needsRefresh = true\n  }\n\n  static createLayerTree(element: Element, hostingOptions:WebLayerOptions, eventCallback: EventCallback) {\n    if (WebRenderer.getClosestLayer(element))\n      throw new Error('A root WebLayer for the given element already exists')\n\n    ensureElementIsInDocument(element, hostingOptions)\n    WebRenderer.initRootNodeObservation(element)\n\n    const observer = new MutationObserver(WebRenderer._handleMutations)\n    this.mutationObservers.set(element, observer)\n    this.startMutationObserver(element)\n\n    const resizeObserver = new ResizeObserver(records => {\n      for (const record of records) {\n        const layer = this.getClosestLayer(record.target)!\n        layer.traverseLayers(WebRenderer.setLayerNeedsRefresh)\n        layer.traverseParentLayers(WebRenderer.setLayerNeedsRefresh)\n      }\n    })\n    resizeObserver.observe(element)\n    this.resizeObservers.set(element, resizeObserver)\n\n    element.addEventListener('input', this._triggerRefresh, { capture: true })\n    element.addEventListener('keydown', this._triggerRefresh, { capture: true })\n    element.addEventListener('submit', this._triggerRefresh, { capture: true })\n    element.addEventListener('change', this._triggerRefresh, { capture: true })\n    element.addEventListener('focus', this._triggerRefresh, { capture: true })\n    element.addEventListener('blur', this._triggerRefresh, { capture: true })\n    element.addEventListener('transitionend', this._triggerRefresh, { capture: true })\n\n    const layer = new WebLayer(element, eventCallback)\n    this.rootLayers.set(element, layer)\n    return layer\n  }\n\n  static disposeLayer(layer: WebLayer) {\n    if (this.rootLayers.has(layer.element)) {\n      this.rootLayers.delete(layer.element)\n      const observer = this.mutationObservers.get(layer.element)!\n      observer.disconnect()\n      this.mutationObservers.delete(layer.element)\n      const resizeObserver = this.resizeObservers.get(layer.element)!\n      resizeObserver.disconnect()\n      this.resizeObservers.delete(layer.element)\n      layer.element.removeEventListener('input', this._triggerRefresh, { capture: true })\n      layer.element.removeEventListener('keydown', this._triggerRefresh, { capture: true })\n      layer.element.removeEventListener('submit', this._triggerRefresh, { capture: true })\n      layer.element.removeEventListener('change', this._triggerRefresh, { capture: true })\n      layer.element.removeEventListener('focus', this._triggerRefresh, { capture: true })\n      layer.element.removeEventListener('blur', this._triggerRefresh, { capture: true })\n      layer.element.removeEventListener('transitionend', this._triggerRefresh, { capture: true })\n    }\n  }\n\n  static getClosestLayer(element: Element, inclusive=true): WebLayer | undefined {\n    let targetElement = inclusive ? element : element.parentElement\n    const closestLayerElement = targetElement?.closest(`[${WebRenderer.LAYER_ATTRIBUTE}]`) as HTMLElement\n    if (!closestLayerElement) {\n      const host = (element?.getRootNode() as ShadowRoot).host\n      if (host) {\n        return this.getClosestLayer(host, inclusive)\n      }\n    }\n    return this.layers.get(closestLayerElement!)\n  }\n\n  static parseCSSTransform(computedStyle:CSSStyleDeclaration, width:number, height:number, pixelSize:number, out = new Matrix4()) {\n    const transform = computedStyle.transform\n    const transformOrigin = computedStyle.transformOrigin\n\n    if (transform.indexOf('matrix(') == 0) {\n      out.identity()\n      var mat = transform\n        .substring(7, transform.length - 1)\n        .split(', ')\n        .map(parseFloat)\n      out.elements[0] = mat[0]\n      out.elements[1] = mat[1]\n      out.elements[4] = mat[2]\n      out.elements[5] = mat[3]\n      out.elements[12] = mat[4]\n      out.elements[13] = mat[5]\n    } else if (transform.indexOf('matrix3d(') == 0) {\n      var mat = transform\n        .substring(9, transform.length - 1)\n        .split(', ')\n        .map(parseFloat)\n      out.fromArray(mat)\n    } else {\n      return null\n    }\n\n    if (out.elements[0] === 0) out.elements[0] = 1e-15\n    if (out.elements[5] === 0) out.elements[5] = 1e-15\n    if (out.elements[10] === 0) out.elements[10] = 1e-15\n    out.elements[12] *= pixelSize\n    out.elements[13] *= pixelSize * -1\n\n    var origin = transformOrigin.split(' ').map(parseFloat)\n\n    var ox = (origin[0] - width/2) * pixelSize\n    var oy = (origin[1] - height/2) * pixelSize * -1\n    var oz = origin[2] || 0\n\n    var T1 = scratchMat1.identity().makeTranslation(-ox, -oy, -oz)\n    var T2 = scratchMat2.identity().makeTranslation(ox, oy, oz)\n\n    for (const e of out.elements) {\n      if (isNaN(e)) return null\n    }\n\n    return out.premultiply(T2).multiply(T1)\n  }\n\n  static async embedExternalResources(element: Element) {\n    const promises = []\n    const elements = element.querySelectorAll('*')\n    // TODO: just save the serialized resources without modifying the original elements\n    for (const element of elements) {\n      const link = element.getAttributeNS('http://www.w3.org/1999/xlink', 'href')\n      if (link) {\n        promises.push(\n          WebRenderer.getDataURL(link).then(dataURL => {\n            element.removeAttributeNS('http://www.w3.org/1999/xlink', 'href')\n            element.setAttribute('href', dataURL)\n          })\n        )\n      }\n      const imgElement = element as HTMLImageElement\n      if (element.tagName == 'IMG' && imgElement.src.substr(0, 4) != 'data') {\n        promises.push(\n          WebRenderer.getDataURL(imgElement.src).then(dataURL => {\n            element.setAttribute('src', dataURL)\n          })\n        )\n      }\n      if (element.namespaceURI == 'http://www.w3.org/1999/xhtml' && element.hasAttribute('style')) {\n        const style = element.getAttribute('style') || ''\n        promises.push(\n          WebRenderer.generateEmbeddedCSS(window.location.href, style).then(css => {\n            if (style != css) element.setAttribute('style', css)\n          })\n        )\n      }\n    }\n    const styles = element.querySelectorAll('style')\n    for (const style of styles) {\n      promises.push(\n        WebRenderer.generateEmbeddedCSS(window.location.href, style.innerHTML).then(css => {\n          if (style.innerHTML != css) style.innerHTML = css\n        })\n      )\n    }\n    return Promise.all(promises)\n  }\n\n  static pauseMutationObservers() {\n    const mutationObservers = WebRenderer.mutationObservers.values()\n    for (const m of mutationObservers) {\n      WebRenderer._handleMutations(m.takeRecords())\n      m.disconnect()\n    }\n  }\n\n  static resumeMutationObservers() {\n    for (const [e] of WebRenderer.mutationObservers) {\n      this.startMutationObserver(e)\n    }\n  }\n\n  private static startMutationObserver(element: Element) {\n    const observer = WebRenderer.mutationObservers.get(element)!\n    observer.observe(element, {\n      attributes: true,\n      childList: true,\n      subtree: true,\n      characterData: true,\n      characterDataOldValue: true,\n      attributeOldValue: true\n    })\n  }\n\n  private static _handleMutations = (records: MutationRecord[]) => {\n    for (const record of records) {\n      if (record.type === 'attributes') {\n        const target = record.target as HTMLElement\n        if (target.getAttribute(record.attributeName!) === record.oldValue) {\n          continue\n        }\n      }\n      if (record.type === 'characterData') {\n        const target = record.target as CharacterData\n        if (target.data === record.oldValue) {\n          continue\n        }\n      }\n      const target =\n        record.target.nodeType === Node.ELEMENT_NODE\n          ? (record.target as HTMLElement)\n          : record.target.parentElement\n      if (!target) continue\n      const layer = WebRenderer.getClosestLayer(target)\n      if (!layer) continue\n      if (record.type === 'attributes' && record.attributeName === 'class') {\n        const oldClasses = record.oldValue ? record.oldValue : ''\n        const currentClasses = (record.target as HTMLElement).className\n        if (oldClasses === currentClasses) continue\n      }\n      // layer.traverseParentLayers(WebRenderer.setLayerNeedsRefresh) // may be needed to support :focus-within() and future :has() selector support\n      layer.parentLayer\n        ? layer.parentLayer.traverseChildLayers(WebRenderer.setLayerNeedsRefresh)\n        : layer.traverseLayers(WebRenderer.setLayerNeedsRefresh)\n    }\n  }\n\n  private static _triggerRefresh = async (e: Event) => {\n    const layer = WebRenderer.getClosestLayer(e.target as any)!\n    // WebRenderer.updateInputAttributes(e.target as any)\n    if (layer) {\n      // layer.traverseParentLayers(WebRenderer.setLayerNeedsRefresh) // may be needed to support :focus-within() and future :has() selector support\n      layer.parentLayer\n        ? layer.parentLayer.traverseChildLayers(WebRenderer.setLayerNeedsRefresh)\n        : layer.traverseLayers(WebRenderer.setLayerNeedsRefresh)\n    }\n  }\n\n  private static _addDynamicPseudoClassRules(doc:Document|ShadowRoot) {\n    const sheets = doc.styleSheets\n    for (let i = 0; i < sheets.length; i++) {\n      try {\n        const sheet = sheets[i] as CSSStyleSheet\n        const rules = sheet.cssRules\n        if (!rules) continue\n        const newRules = []\n        for (var j = 0; j < rules.length; j++) {\n          if (rules[j].cssText.indexOf(':hover') > -1) {\n            newRules.push(rules[j].cssText.replace(new RegExp(':hover', 'g'), `[${WebRenderer.HOVER_ATTRIBUTE}]`))\n          }\n          if (rules[j].cssText.indexOf(':active') > -1) {\n            newRules.push(\n              rules[j].cssText.replace(new RegExp(':active', 'g'), `[${WebRenderer.ACTIVE_ATTRIBUTE}]`)\n            )\n          }\n          if (rules[j].cssText.indexOf(':focus') > -1) {\n            newRules.push(rules[j].cssText.replace(new RegExp(':focus', 'g'), `[${WebRenderer.FOCUS_ATTRIBUTE}]`))\n          }\n          if (rules[j].cssText.indexOf(':target') > -1) {\n            newRules.push(\n              rules[j].cssText.replace(new RegExp(':target', 'g'), `[${WebRenderer.TARGET_ATTRIBUTE}]`)\n            )\n          }\n          var idx = newRules.indexOf(rules[j].cssText)\n          if (idx > -1) {\n            newRules.splice(idx, 1)\n          }\n        }\n        for (var j = 0; j < newRules.length; j++) {\n          sheet.insertRule(newRules[j])\n        }\n      } catch (e) {}\n    }\n  }\n\n  static arrayBufferToBase64(bytes:Uint8Array) {\n    var binary = ''\n    var len = bytes.byteLength\n    for (var i = 0; i < len; i++) {\n      binary += String.fromCharCode(bytes[i])\n    }\n    return window.btoa(binary)\n  }\n\n  static attributeCSS(name:string, value?:string) {\n    return value ? `[${name}]=${value}` : `[${name}]`\n  }\n\n  static attributeHTML(name:string, value?:string) {\n    return value ? `${name}=\"${value}\"` : `${name}=\"\"`\n  }\n\n  static async generateEmbeddedCSS(url:string, css:string): Promise<string> {\n    let found\n    const promises = []\n\n    // Add classes for psuedo-classes\n    css = css.replace(new RegExp(':hover', 'g'), this.attributeCSS(this.HOVER_ATTRIBUTE))\n    css = css.replace(new RegExp(':active', 'g'), this.attributeCSS(this.ACTIVE_ATTRIBUTE))\n    css = css.replace(new RegExp(':focus', 'g'), this.attributeCSS(this.FOCUS_ATTRIBUTE))\n    css = css.replace(new RegExp(':target', 'g'), this.attributeCSS(this.TARGET_ATTRIBUTE))\n\n    // Replace all urls in the css\n    const regEx = RegExp(/url\\((?!['\"]?(?:data):)['\"]?([^'\"\\)]*)['\"]?\\)/gi)\n    while ((found = regEx.exec(css))) {\n      const resourceURL = found[1]\n      promises.push(\n        this.getDataURL(new URL(resourceURL, url).href).then(dataURL => {\n          css = css.replace(resourceURL, dataURL)\n        })\n      )\n    }\n\n    await Promise.all(promises)\n    return css\n  }\n\n  static async getURL(url:string, accept?:string): Promise<XMLHttpRequest> {\n    url = new URL(url, window.location.href).href\n    return new Promise<XMLHttpRequest>(resolve => {\n      var xhr = new XMLHttpRequest()\n\n      xhr.open('GET', url, true)\n      if (accept) xhr.setRequestHeader('accept', accept)\n\n      xhr.responseType = 'arraybuffer'\n\n      xhr.onload = () => {\n        resolve(xhr)\n      }\n\n      xhr.onerror = () => {\n        resolve(xhr)\n      }\n\n      xhr.send()\n    })\n  }\n\n  private static embeddedCSS = new Map<ShadowRoot|Document, Map<Element, Promise<string>>>()\n\n  static async getRenderingCSS(el:Element) {\n    const rootNode = el.getRootNode() as ShadowRoot|Document\n    const embedded = this.embeddedCSS.get(rootNode) || new Map<Element, Promise<string>>()\n    this.embeddedCSS.set(rootNode, embedded)\n\n    const styleElements = Array.from(\n      rootNode.querySelectorAll(\"style, link[type='text/css'], link[rel='stylesheet']\")\n    ) as (HTMLStyleElement|HTMLLinkElement)[]\n    styleElements.push(this.renderingStyleElement)\n    \n    // if we are inside shadow dom, we have to clone the fonts into the light dom to load fonts in Chrome/Firefox\n    const inShadow = el.getRootNode() instanceof ShadowRoot\n\n    function processSheetRules(rules:CSSRuleList) {\n      let allRules = ''\n      let fontRules = ''\n      for (const rule of rules) {\n        if (rule.type === CSSRule.FONT_FACE_RULE) {\n          fontRules += '\\n\\n' + rule.cssText\n        }\n        allRules += '\\n\\n' + rule.cssText\n      }\n      return {allRules, fontRules}\n    }\n\n    let foundNewStyles = false\n    for (const element of styleElements) {\n      if (!embedded.has(element)) {\n        foundNewStyles = true\n        embedded.set(element, new Promise<string>(resolve => {\n          const loading = setInterval(() => {\n            if (element.sheet) {\n              clearInterval(loading)\n              const result = processSheetRules(element.sheet.rules)\n              if (inShadow && result.fontRules) {\n                const fontStyles = document.createElement('style')\n                fontStyles.innerHTML = result.fontRules\n                document.head.appendChild(fontStyles)\n                embedded.set(fontStyles, Promise.resolve(''))\n              }\n              this._addDynamicPseudoClassRules(rootNode)\n              resolve(result.allRules)\n            }\n          },10)\n        }).then((cssText) => this.generateEmbeddedCSS(window.location.href, cssText)))\n        //   embedded.set(\n        //     element,\n        //     this.getURL(element.getAttribute('href')!, 'text/css').then(xhr => {\n        //       if (!xhr.response) return ''\n        //       this._addDynamicPseudoClassRules(rootNode)\n        //       var css = textDecoder.decode(xhr.response)\n        //       return this.generateEmbeddedCSS(window.location.href, css)\n        //     })\n        //   )\n      }\n    }\n    // if (foundNewStyles) this._addDynamicPseudoClassRules(rootNode)\n    return Promise.all(embedded.values())\n  }\n\n  // Generate and returns a dataurl for the given url\n  static dataURLMap = new Map<string, Promise<string>>()\n  static async getDataURL(url:string): Promise<string> {\n    if (this.dataURLMap.has(url)) return this.dataURLMap.get(url)!\n    const dataURLPromise = new Promise<string>(async resolveDataURL => {\n      const xhr = await this.getURL(url)\n      const arr = new Uint8Array(xhr.response)\n      const contentType = xhr.getResponseHeader('Content-Type')?.split(';')[0]\n      let dataURL = ''\n      if (contentType == 'text/css') {\n        let css = textDecoder.decode(arr)\n        css = await this.generateEmbeddedCSS(url, css)\n        const base64 = window.btoa(css)\n        if (base64.length > 0) {\n          dataURL = 'data:' + contentType + ';base64,' + base64\n        }\n      } else {\n        dataURL = 'data:' + contentType + ';base64,' + this.arrayBufferToBase64(arr)\n      }\n      resolveDataURL(dataURL)\n    })\n    this.dataURLMap.set(url, dataURLPromise)\n    return dataURLPromise\n  }\n\n  static updateInputAttributes(element: Element) {\n    if (element.matches('input')) this._updateInputAttribute(element as HTMLInputElement)\n    for (const e of element.getElementsByTagName('input')) this._updateInputAttribute(e)\n  }\n\n  static _updateInputAttribute(inputElement: HTMLInputElement) {\n    if (inputElement.hasAttribute('checked')) {\n      if (!inputElement.checked) inputElement.removeAttribute('checked')\n    } else {\n      if (inputElement.checked) inputElement.setAttribute('checked', '')\n    }\n    if (inputElement.getAttribute('value') !== inputElement.value) {\n      inputElement.setAttribute('value', inputElement.value)\n    }\n  }\n\n  // static getPsuedoAttributes(element: Element) {\n  //   // const layer = this.layers.get(element)\n  //   return (\n  //     `${this.containsHover(element) ? `${this.HOVER_ATTRIBUTE}=\"\" ` : ' '}` +\n  //     `${element.contains(this.focusElement) ? `${this.FOCUS_ATTRIBUTE}=\"\" ` : ' '}` +\n  //     `${element.contains(this.activeElement) ? `${this.ACTIVE_ATTRIBUTE}=\"\" ` : ' '}` +\n  //     `${element.contains(this.targetElement) ? `${this.TARGET_ATTRIBUTE}=\"\" ` : ' '}`\n  //   )\n  // }\n\n  static isBlankImage(imageData:Uint8ClampedArray) {\n      const pixelBuffer = new Uint32Array(imageData.buffer)\n      return !pixelBuffer.some(color => color !== 0);\n  }\n}\n","import * as _THREE from 'three'\n\nif (self.THREE) {\n  var THREE = self.THREE\n} else {\n  var THREE = _THREE\n}\n\nimport { WebLayer} from '../WebLayer'\nimport { WebRenderer, WebLayerOptions } from '../WebRenderer'\n\nimport {Bounds, Edges, getBounds, getViewportBounds, traverseChildElements, DOM } from '../dom-utils'\n\nexport interface WebLayer3DOptions extends WebLayerOptions {\n  pixelRatio?: number\n  layerSeparation?: number\n  autoRefresh?: boolean\n  onLayerCreate?(layer: WebLayer3DContent): void\n  onAfterRasterize?(layer: WebLayer3DContent): void,\n  textureEncoding?: number,\n  renderOrderOffset?: number\n}\n\nexport {THREE}\n\ntype Intersection = THREE.Intersection & {groupOrder:number}\n\nexport type WebLayerHit = ReturnType<typeof WebLayer3D.prototype.hitTest> & {}\n\nconst scratchMatrix = new THREE.Matrix4\nconst scratchVector = new THREE.Vector3()\nconst scratchVector2 = new THREE.Vector3()\nconst scratchBounds = new Bounds()\nconst scratchBounds2 = new Bounds()\n\nconst ON_BEFORE_UPDATE = Symbol('ON_BEFORE_UPDATE')\n\nexport class WebLayer3DContent extends THREE.Object3D {\n\n  public isRoot = false\n\n  private _camera?:THREE.PerspectiveCamera\n\n  constructor(public element: Element, public options: WebLayer3DOptions = {}) {\n    super()\n    this.name = element.id\n    this._webLayer = WebRenderer.getClosestLayer(element)!\n    ;(element as any).layer = this\n\n    this.add(this.contentMesh)\n    this.add(this._boundsMesh)\n    this.cursor.visible = false\n    \n    this.matrixAutoUpdate = true\n\n    this.contentMesh.matrixAutoUpdate = true\n    this.contentMesh.visible = false\n    this.contentMesh['customDepthMaterial'] = this.depthMaterial\n    this.contentMesh.onBeforeRender = (renderer, scene, camera) => {\n      this._camera = camera as THREE.PerspectiveCamera\n    }\n\n    this._boundsMesh.matrixAutoUpdate = true\n\n    WebLayer3D.layersByElement.set(this.element, this)\n    WebLayer3D.layersByMesh.set(this.contentMesh, this)\n  }\n\n  protected _webLayer : WebLayer\n\n  private _localZ = 0\n  private _viewZ = 0\n  private _renderZ = 0\n\n  textures = new Map<HTMLCanvasElement | HTMLVideoElement, THREE.Texture>()\n\n  get currentTexture() {\n    if (this._webLayer.element.tagName === 'VIDEO') {\n      const video = this._webLayer.element as HTMLVideoElement\n      let t = this.textures.get(video)\n      if (!t) {\n        t = new THREE.VideoTexture(video)\n        t.wrapS = THREE.ClampToEdgeWrapping\n        t.wrapT = THREE.ClampToEdgeWrapping\n        t.minFilter = THREE.LinearFilter\n        if (this.options.textureEncoding) t.encoding = this.options.textureEncoding\n        this.textures.set(video, t)\n      }\n      return t\n    }\n\n    const canvas = this._webLayer.currentCanvas\n    let t = this.textures.get(canvas!)\n    if (canvas && !t) {\n      t = new THREE.Texture(canvas)\n      t.needsUpdate = true\n      t.wrapS = THREE.ClampToEdgeWrapping\n      t.wrapT = THREE.ClampToEdgeWrapping\n      t.minFilter = THREE.LinearFilter\n      if (this.options.textureEncoding) t.encoding = this.options.textureEncoding\n      this.textures.set(canvas, t)\n    }\n    return t\n  }\n\n  textureNeedsUpdate = false\n\n  contentMesh = new THREE.Mesh(\n    WebLayer3D.GEOMETRY,\n    new THREE.MeshBasicMaterial({\n      side: THREE.DoubleSide,\n      depthWrite: false,\n      transparent: true,\n      alphaTest: 0.001,\n      opacity: 1\n    })\n  )\n\n  /**\n   * This non-visible mesh ensures that an adapted layer retains\n   * its innerBounds, even if the content mesh is\n   * independently adapted.\n   */\n  private _boundsMesh = new THREE.Mesh(\n    WebLayer3D.GEOMETRY,\n    new THREE.MeshBasicMaterial({\n      visible: false\n    })\n  )\n\n  cursor = new THREE.Object3D()\n\n  /**\n   * Allows correct shadow maps\n   */\n  depthMaterial = new THREE.MeshDepthMaterial({\n    depthPacking: THREE.RGBADepthPacking,\n    alphaTest: 0.001\n  })\n\n  domLayout = new THREE.Object3D()\n  domSize = new THREE.Vector3(1,1,1)\n\n  /**\n   * Get the hover state\n   */\n  get pseudoStates() {\n    return this._webLayer.pseudoStates\n  }\n\n  /**\n   * Get the layer depth (distance from this layer's element and the parent layer's element)\n   */\n  get depth() {\n    return this._webLayer.depth\n  }\n\n  /**\n   *\n   */\n  get index() {\n    return this.parentWebLayer ? this.parentWebLayer.childWebLayers.indexOf(this) : 0\n  }\n\n  get needsRefresh() {\n    return this._webLayer.needsRefresh\n  }\n\n  setNeedsRefresh() {\n    this._webLayer.traverseLayers(WebRenderer.setLayerNeedsRefresh)\n  }\n\n  /** If true, this layer needs to be removed from the scene */\n  get needsRemoval() {\n    return this._webLayer.needsRemoval\n  }\n\n  bounds = new Bounds\n  margin = new Edges\n\n  get parentWebLayer(): WebLayer3DContent | undefined {\n    return (\n      this._webLayer.parentLayer &&\n      WebLayer3D.layersByElement.get(this._webLayer.parentLayer.element)\n    )\n  }\n\n  childWebLayers: WebLayer3DContent[] = []\n\n  /**\n   * Specifies whether or not the DOM layout should be applied.\n   *\n   * When set to `true`, the dom layout should always be applied.\n   * When set to `false`, the dom layout should never be applied.\n   * When set to `'auto'`, the dom layout should only be applied\n   * when the `parentLayer` is the same as the `parent` object.\n   *\n   * It is the responsibiltiy of the update callback\n   * to follow these rules.\n   *\n   * Defaults to `auto`\n   */\n  shouldApplyDOMLayout: true | false | 'auto' = 'auto'\n\n  /**\n   * Refresh from DOM\n   */\n  public refresh(recurse=false) {\n    this._webLayer.refresh()\n    this.childWebLayers.length = 0\n    for (const c of this._webLayer.childLayers) {\n      const child = WebLayer3D.layersByElement\n        .get(WebRenderer.getClosestLayer(c.element)?.element!)\n      if (!child) continue\n      this.childWebLayers.push(child)\n      if (recurse) child.refresh(recurse)\n    }\n    this._refreshVideoBounds()\n  }\n\n  private updateLayout() {\n\n    this._updateDOMLayout()\n\n    if (this._camera) {\n\n      this._localZ = Math.abs(\n        scratchVector.setFromMatrixPosition(this.matrix).z + \n        scratchVector.setFromMatrixPosition(this.contentMesh.matrix).z)\n      this._viewZ = Math.abs(this.contentMesh.getWorldPosition(scratchVector).applyMatrix4(this._camera.matrixWorldInverse).z)\n      \n      let parentRenderZ = this.parentWebLayer ? this.parentWebLayer._renderZ : this._viewZ\n      \n      if (this._localZ < 1e-3) { // coplanar? use parent renderZ\n        this._renderZ = parentRenderZ\n      } else {\n        this._renderZ = this._viewZ\n      }\n  \n      this.contentMesh.renderOrder = (this.options.renderOrderOffset || 0) + \n        (1 - Math.log(this._renderZ + 1) / Math.log(this._camera.far + 1))+\n        (this.depth + this.index * 0.001)*0.0000001\n  \n    }\n  }\n\n  private updateContent() {\n    const mesh = this.contentMesh\n    const texture = this.currentTexture\n    const material = mesh.material as THREE.MeshBasicMaterial\n    if (texture && (texture.image && material.map !== texture || this.textureNeedsUpdate)) {\n      const contentScale = this.contentMesh.scale\n      const aspect = Math.abs(contentScale.x * this.scale.x / contentScale.y * this.scale.y)\n      const targetAspect = this.domSize.x / this.domSize.y\n      if (Math.abs(targetAspect-aspect) < 1e3) {\n        material.map = texture\n        this.depthMaterial['map'] = texture\n        this.textureNeedsUpdate = false\n        material.needsUpdate = true\n        texture.needsUpdate = true\n        this.depthMaterial.needsUpdate = true\n      }\n    }\n    material.transparent = true\n\n    // handle layer visibiltiy or removal\n    const mat = mesh.material as THREE.MeshBasicMaterial\n    const isHidden = mat.opacity < 0.005\n    if (isHidden) mesh.visible = false\n    else if (mesh.material.map) mesh.visible = true\n    if (this.needsRemoval && isHidden) {\n      if (this.parent) this.parent.remove(this)\n      this.dispose()\n    }\n  }\n\n  get rootWebLayer() {\n    return WebLayer3D.layersByElement.get(this._webLayer.rootLayer.element)!\n  }\n\n  /** INTERNAL */\n  private [ON_BEFORE_UPDATE]() {}\n\n  protected _doUpdate() {\n    this[ON_BEFORE_UPDATE]()\n    // content must update before layout\n    this.updateContent()\n    this.updateLayout()\n\n    this.position.copy(this.domLayout.position)\n    this.quaternion.copy(this.domLayout.quaternion)\n    this.scale.copy(this.domLayout.scale)\n    this.contentMesh.position.set(0,0,0)\n    this.contentMesh.scale.copy(this.domSize)\n    this.contentMesh.quaternion.set(0,0,0,1)\n    this._boundsMesh.position.set(0,0,0)\n    this._boundsMesh.scale.copy(this.domSize)\n    this._boundsMesh.quaternion.set(0,0,0,1)\n\n    if (this.needsRefresh && this.options.autoRefresh !== false) \n      this.refresh()\n    WebRenderer.scheduleTasksIfNeeded()\n  }\n\n  update(recurse=false) {\n    if (recurse) this.traverseLayersPreOrder(this._doUpdate)\n    else this._doUpdate()\n  }\n\n  querySelector(selector: string): WebLayer3DContent | undefined {\n    const element = this.element.querySelector(selector) || \n                    this.element.shadowRoot?.querySelector(selector)\n    if (element) {\n      return WebLayer3D.layersByElement.get(element)\n    }\n    return undefined\n  }\n\n  traverseLayerAncestors(\n    each: (layer: WebLayer3DContent) => void\n  ) {\n    const parentLayer = this.parentWebLayer\n    if (parentLayer) {\n      parentLayer.traverseLayerAncestors(each)\n      each.call(this, parentLayer)\n    }\n  }\n\n  traverseLayersPreOrder(\n    each: (layer: WebLayer3DContent) => boolean|void\n  ) {\n    if (each.call(this, this) === false) return false\n    for (const child of this.childWebLayers) {\n      if (child.traverseLayersPreOrder(each) === false) return false\n    }\n    return true\n  }\n\n  traverseLayersPostOrder(\n    each: (layer: WebLayer3DContent) => boolean|void\n  ) : boolean {\n    for (const child of this.childWebLayers) {\n      if (child.traverseLayersPostOrder(each) === false) return false\n    }\n    return each.call(this, this) || true\n  }\n\n  dispose() {\n    for (const t of this.textures.values()) {\n      t.dispose()\n    }\n    this.contentMesh.geometry.dispose()\n    this._boundsMesh.geometry.dispose()\n    WebRenderer.disposeLayer(this._webLayer)\n    for (const child of this.childWebLayers) child.dispose()\n  }\n\n  private _refreshVideoBounds() {\n    if (this.element.nodeName === 'VIDEO') {\n      const video = this.element as HTMLVideoElement\n      const texture = this.currentTexture!\n      const computedStyle = getComputedStyle(this.element)\n      const { objectFit } = computedStyle\n      const { width: viewWidth, height: viewHeight } = this.bounds.copy(this._webLayer.currentBounds)\n      const { videoWidth, videoHeight } = video\n      const videoRatio = videoWidth / videoHeight\n      const viewRatio = viewWidth / viewHeight\n      texture.center.set(0.5, 0.5)\n      switch (objectFit) {\n        case 'none':\n          texture.repeat.set(viewWidth / videoWidth, viewHeight / videoHeight).clampScalar(0, 1)\n          break\n        case 'contain':\n        case 'scale-down':\n          texture.repeat.set(1, 1)\n          if (viewRatio > videoRatio) {\n            const width = this.bounds.height * videoRatio || 0\n            this.bounds.left += (this.bounds.width - width) / 2\n            this.bounds.width = width\n          } else {\n            const height = this.bounds.width / videoRatio || 0\n            this.bounds.top += (this.bounds.height - height) / 2\n            this.bounds.height = height\n          }\n          break\n        case 'cover':\n          texture.repeat.set(viewWidth / videoWidth, viewHeight / videoHeight)\n          if (viewRatio < videoRatio) {\n            const width = this.bounds.height * videoRatio || 0\n            this.bounds.left += (this.bounds.width - width) / 2\n            this.bounds.width = width\n          } else {\n            const height = this.bounds.width / videoRatio || 0\n            this.bounds.top += (this.bounds.height - height) / 2\n            this.bounds.height = height\n          }\n          break\n        default:\n        case 'fill':\n          texture.repeat.set(1, 1)\n          break\n      }\n    }\n  }\n\n  private _updateDOMLayout() {\n\n    if (this.needsRemoval) {\n      return\n    }\n\n    const {currentBounds, currentMargin} = this._webLayer\n\n    this.domLayout.position.set(0,0,0)\n    this.domLayout.scale.set(1, 1, 1)\n    this.domLayout.quaternion.set(0, 0, 0, 1)\n\n    const isVideo = this.element.nodeName === 'VIDEO'\n    const bounds = isVideo ? this.bounds : this.bounds.copy(currentBounds)\n    const margin = isVideo ? this.margin : this.margin.copy(currentMargin)\n\n    const fullWidth = bounds.width + margin.left + margin.right\n    const fullHeight = bounds.height + margin.top + margin.bottom\n    const width = bounds.width\n    const height = bounds.height\n    const pixelSize = 1 / WebLayer3D.DEFAULT_PIXELS_PER_UNIT\n\n    this.domSize.set(\n      Math.max(pixelSize * (width + margin.left + margin.right), 10e-6),\n      Math.max(pixelSize * (height + margin.top + margin.bottom), 10e-6),\n      1\n    )\n\n    if (!WebLayer3D.shouldApplyDOMLayout(this)) return\n\n    const parentLayer = this.parentWebLayer\n    if (!parentLayer) return\n\n    const parentBounds = parentLayer.bounds //|| getViewportBounds(scratchBounds)\n    const parentMargin = parentLayer.margin\n    const parentFullWidth = parentBounds.width + parentMargin.left + parentMargin.right\n    const parentFullHeight = parentBounds.height + parentMargin.bottom + parentMargin.bottom\n    const parentLeftEdge = - parentFullWidth / 2 + parentMargin.left\n    const parentTopEdge = parentFullHeight / 2 - parentMargin.top\n    \n    this.domLayout.position.set(\n      pixelSize * (parentLeftEdge + fullWidth/2 + bounds.left - margin.left),\n      pixelSize * (parentTopEdge - fullHeight/2 - bounds.top + margin.top),\n      0\n    )\n\n    const computedStyle = getComputedStyle(this.element)\n    const transform = computedStyle.transform\n    if (transform && transform !== 'none') {\n      const cssTransform = WebRenderer.parseCSSTransform(computedStyle, bounds.width, bounds.height, pixelSize, scratchMatrix)\n      if (cssTransform) {\n        this.domLayout.updateMatrix()\n        this.domLayout.matrix.multiply(cssTransform)\n        this.domLayout.matrix.decompose(this.domLayout.position, this.domLayout.quaternion, this.domLayout.scale)\n      }\n    }\n  }\n}\n\n/**\n * Transform a DOM tree into 3D layers.\n *\n * When an instance is created, a `xr-layer` is set on the\n * the passed DOM element to match this instance's Object3D id.\n * If the passed DOM element has an `id` attribute, this instance's Object3D name\n * will be set to match the element id.\n *\n * Child WebLayer3D instances can be specified with an `xr-layer` attribute,\n * which will be set when the child WebLayer3D instance is created automatically.\n * The attribute can be specified added in HTML or dynamically:\n *  - `<div xr-layer></div>`\n *\n * Additionally, the pixel ratio can be adjusted on each layer, individually:\n *  - `<div xr-layer xr-pixel-ratio=\"0.5\"></div>`\n *\n * Default dimensions: 1px = 0.001 world dimensions = 1mm (assuming meters)\n *     e.g., 500px width means 0.5meters\n */\nexport class WebLayer3D extends THREE.Object3D {\n\n  static layersByElement = new WeakMap<Element, WebLayer3DContent>()\n  static layersByMesh = new WeakMap<THREE.Mesh, WebLayer3DContent>()\n\n  static DEFAULT_LAYER_SEPARATION = 0.001\n  static DEFAULT_PIXELS_PER_UNIT = 1000\n  static GEOMETRY = new THREE.PlaneGeometry(1, 1, 2, 2)\n\n  // static computeNaturalDistance(\n  //   projection: THREE.Matrix4 | THREE.Camera,\n  //   renderer: THREE.WebGLRenderer\n  // ) {\n  //   let projectionMatrix = projection as  THREE.Matrix4\n  //   if ((projection as THREE.Camera).isCamera) {\n  //     projectionMatrix = (projection as THREE.Camera).projectionMatrix\n  //   }\n  //   const pixelRatio = renderer.getPixelRatio()\n  //   const widthPixels = renderer.domElement.width / pixelRatio\n  //   const width = WebLayer3D.DEFAULT_PIXELS_PER_UNIT * widthPixels\n  //   const horizontalFOV = getFovs(projectionMatrix).horizontal\n  //   const naturalDistance = width / 2 / Math.tan(horizontalFOV / 2)\n  //   return naturalDistance\n  // }\n  \n  static shouldApplyDOMLayout(layer: WebLayer3DContent) {\n    const should = layer.shouldApplyDOMLayout\n    if ((should as any) === 'always' || should === true) return true\n    if ((should as any) === 'never' || should === false) return false\n    if (should === 'auto' && layer.parentWebLayer && layer.parent === layer.parentWebLayer) return true\n    return false\n  }\n  \n  public rootLayer!:WebLayer3DContent\n\n  private _interactionRays = [] as Array<THREE.Ray | THREE.Object3D>\n  private _raycaster = new THREE.Raycaster()\n  private _hitIntersections = [] as Intersection[]\n\n  constructor(elementOrHTML: Element|string, public options: WebLayer3DOptions = {}) {\n    super()\n\n    const element = typeof elementOrHTML === 'string' ? DOM(elementOrHTML) : elementOrHTML\n\n    WebRenderer.createLayerTree(element, options, (event, { target }) => {\n      if (event === 'layercreated') {\n        const layer = new WebLayer3DContent(target, this.options)\n        if (target === element) {\n          layer[ON_BEFORE_UPDATE] = () => this._updateInteractions()\n          layer.isRoot = true\n          this.rootLayer = layer\n          this.add(layer)\n        } else layer.parentWebLayer?.add(layer)\n        if (this.options.onLayerCreate) this.options.onLayerCreate(layer)\n      } else if (event === 'layerchanged') {\n        const layer = WebRenderer.layers.get(target)!\n        const layer3D = WebLayer3D.layersByElement.get(layer.element)!\n        layer3D.textureNeedsUpdate = true\n        console.log('layerchanged', layer.element)\n      } else if (event === 'layermoved') {\n        const layer = WebLayer3D.layersByElement.get(target)!\n        layer.parentWebLayer?.add(layer)\n      }\n    })\n\n    this.refresh()\n    this.update()\n  }\n\n  /**\n   * A list of Rays to be used for interaction.\n   * Can only be set on a root WebLayer3D instance.\n   */\n  get interactionRays() {\n    return this._interactionRays\n  }\n  set interactionRays(rays: Array<THREE.Ray | THREE.Object3D>) {\n    this._interactionRays = rays\n  }\n\n  /**\n   * Run a query selector on the root layer\n   * @param selector \n   */\n  querySelector(selector:string) : WebLayer3DContent|undefined {\n    return this.rootLayer.querySelector(selector)\n  }\n\n  /**\n   * Refresh all layers, recursively\n   */\n  refresh() {\n    this.rootLayer.refresh(true)\n  }\n\n  /**\n   * Update all layers, recursively\n   */\n  update() {\n    this.rootLayer.update(true)\n  }\n\n  /** Get the content mesh of the root layer */\n  get contentMesh() {\n    return this.rootLayer.contentMesh\n  }\n\n  private _previousHoverLayers = new Set<WebLayer3DContent>()\n  private _contentMeshes = [] as THREE.Mesh[]\n\n  private _prepareHitTest = (layer:WebLayer3DContent) => {\n    if (layer.pseudoStates.hover) this._previousHoverLayers.add(layer)\n    layer.cursor.visible = false\n    layer.pseudoStates.hover = false\n    this._contentMeshes.push(layer.contentMesh)\n  }\n\n  // private _intersectionGetGroupOrder(i:Intersection) {\n  //   let o = i.object as THREE.Group&THREE.Object3D\n  //   while (o.parent && !o.isGroup) {\n  //     o = o.parent as THREE.Group&THREE.Object3D\n  //   }\n  //   i.groupOrder = o.renderOrder\n  // }\n\n  private _intersectionSort(a:Intersection,b:Intersection) {\n    const aLayer = a.object.parent as WebLayer3DContent\n    const bLayer = b.object.parent as WebLayer3DContent\n    if (aLayer.depth !== bLayer.depth) {\n      return bLayer.depth - aLayer.depth\n    }\n    return bLayer.index - aLayer.index\n  }\n\n  private _updateInteractions() {\n    // this.updateWorldMatrix(true, true)\n    \n    const prevHover = this._previousHoverLayers\n    prevHover.clear()\n    this._contentMeshes.length = 0\n    this.rootLayer.traverseLayersPreOrder(this._prepareHitTest)\n\n    for (const ray of this._interactionRays) {\n      if (ray instanceof THREE.Ray) this._raycaster.ray.copy(ray)\n      else\n        this._raycaster.ray.set(\n          ray.getWorldPosition(scratchVector),\n          ray.getWorldDirection(scratchVector2).negate()\n        )\n      this._hitIntersections.length = 0\n      const intersections = this._raycaster.intersectObjects(this._contentMeshes, false, this._hitIntersections) as Intersection[]\n      // intersections.forEach(this._intersectionGetGroupOrder)\n      intersections.sort(this._intersectionSort)\n      const intersection = intersections[0]\n      if (intersection) {\n        const layer = intersection.object.parent as WebLayer3DContent\n        layer.cursor.position.copy(intersection.point)\n        layer.cursor.visible = true\n        layer.pseudoStates.hover = true\n        if (!prevHover.has(layer)) {\n          layer.setNeedsRefresh()\n        }\n      }\n    }\n\n    for (const layer of prevHover) {\n      if (!layer.pseudoStates.hover) {\n        layer.setNeedsRefresh()\n      }\n    }\n  }\n\n  /**\n   * Perform hit test with ray, or with -Z direction of an Object3D\n   * @param ray \n   */\n  hitTest(ray: THREE.Ray|THREE.Object3D) {\n    const raycaster = this._raycaster\n    const intersections = this._hitIntersections\n    const meshMap = WebLayer3D.layersByMesh\n    if (ray instanceof THREE.Ray) \n      this._raycaster.ray.copy(ray)\n    else this._raycaster.ray.set(\n      ray.getWorldPosition(scratchVector),\n      ray.getWorldDirection(scratchVector2).negate()\n    )\n    intersections.length = 0\n    raycaster.intersectObject(this, true, intersections)\n    // intersections.forEach(this._intersectionGetGroupOrder)\n    intersections.sort(this._intersectionSort)\n    for (const intersection of intersections) {\n      const layer = meshMap!.get(intersection.object as any)\n      if (!layer) continue\n      const layerBoundingRect = getBounds(layer.element, scratchBounds)!\n      if (!layerBoundingRect.width || !layerBoundingRect.height) continue\n      let target = layer.element as HTMLElement\n      const clientX = intersection.uv!.x * layerBoundingRect.width\n      const clientY = (1 - intersection.uv!.y) * layerBoundingRect.height\n      traverseChildElements(layer.element, el => {\n        if (!target.contains(el)) return false\n        const elementBoundingRect = getBounds(el, scratchBounds2)!\n        const offsetLeft = elementBoundingRect.left - layerBoundingRect.left\n        const offsetTop = elementBoundingRect.top - layerBoundingRect.top\n        const { width, height } = elementBoundingRect\n        const offsetRight = offsetLeft + width\n        const offsetBottom = offsetTop + height\n        if (\n          clientX > offsetLeft &&\n          clientX < offsetRight &&\n          clientY > offsetTop &&\n          clientY < offsetBottom\n        ) {\n          target = el as HTMLElement\n          return true\n        }\n        return false // stop traversal down this path\n      })\n      return { layer, intersection, target }\n    }\n    return undefined\n  }\n\n}\n\n// class CameraFOVs {\n//   top = 0\n//   left = 0\n//   bottom = 0\n//   right = 0\n//   horizontal = 0\n//   vertical = 0\n// }\n\n// const _fovs = new CameraFOVs()\n// const _getFovsMatrix = new THREE.Matrix4()\n// const _getFovsVector = new THREE.Vector3()\n// const FORWARD = new THREE.Vector3(0, 0, -1)\n// function getFovs(projectionMatrix: THREE.Matrix4) {\n//   const out = _fovs\n//   const invProjection = _getFovsMatrix.getInverse(projectionMatrix) as THREE.Matrix4\n//   const vec = _getFovsVector\n//   out.left = vec\n//     .set(-1, 0, -1)\n//     .applyMatrix4(invProjection)\n//     .angleTo(FORWARD)\n//   out.right = vec\n//     .set(1, 0, -1)\n//     .applyMatrix4(invProjection)\n//     .angleTo(FORWARD)\n//   out.top = vec\n//     .set(0, 1, -1)\n//     .applyMatrix4(invProjection)\n//     .angleTo(FORWARD)\n//   out.bottom = vec\n//     .set(0, -1, -1)\n//     .applyMatrix4(invProjection)\n//     .angleTo(FORWARD)\n//   out.horizontal = out.right + out.left\n//   out.vertical = out.top + out.bottom\n//   return out\n// }\n","import {\n    EtherealLayoutSystem, \n    SpatialMetrics,\n    Node3D, \n    NodeState, \n    Box3\n} from \"@etherealjs/core/mod\"\n\nexport {WebLayer3D, WebLayer3DContent, WebRenderer, THREE, DOM as toDOM} from '@etherealjs/web-layer/mod'\nexport type {WebLayer3DOptions} from '@etherealjs/web-layer/mod'\n\ndeclare module 'three/src/core/Object3D' {\n    interface Object3D extends Node3D {}\n}\n\nexport const ThreeBindings = {\n    getChildren(metrics:SpatialMetrics, children:Node3D[]) {\n        const nodeObj = metrics.node as THREE.Object3D\n        if (!nodeObj.isObject3D) return\n        children.length = 0\n        for (let i = 0; i < nodeObj.children.length; i++) {\n            children[i] = nodeObj.children[i]\n        }\n    },\n    getState(metrics:SpatialMetrics, state:NodeState) {\n        if (metrics.system.viewNode === metrics.node) {\n            const cameraNode = metrics.node as THREE.Camera\n            cameraNode.updateMatrixWorld()\n            metrics.system.viewFrustum.setFromPerspectiveProjectionMatrix(cameraNode.projectionMatrix)\n        }\n\n        const node = metrics.node as THREE.Mesh\n        if (!node.isObject3D) return\n\n        node.updateMatrix()\n        state.localMatrix = node.matrix\n        state.parent = node.parent\n        state.opacity = getThreeOpacity(metrics) || 1\n    },\n    getIntrinsicBounds(metrics:SpatialMetrics, bounds:Box3) {\n        const node = metrics.node as THREE.Mesh\n        if (!node.isObject3D) return\n        if (node.geometry) {\n            if (!node.geometry.boundingBox) node.geometry.computeBoundingBox()\n            return bounds.copy(node.geometry.boundingBox as any)\n        }\n        return bounds\n    },\n    apply(metrics:SpatialMetrics, state:NodeState) {\n        const node = metrics.node as THREE.Mesh\n        if (!node.isObject3D) return\n        if (state.parent !== node.parent) {\n            const newParent = state.parent as THREE.Object3D\n            newParent.add(node)\n        }\n        node.quaternion.copy(state.localOrientation)\n        node.position.copy(state.localPosition)\n        node.scale.copy(state.localScale)\n        node.matrix.copy(state.localMatrix)\n        node.matrixWorld.copy(state.worldMatrix)\n        applyThreeOpacity(metrics, state.opacity)\n\n        if (isNaN(state.localPosition.x)) throw new Error\n        node.matrixAutoUpdate = false\n        node.matrixWorldNeedsUpdate = false\n    }\n}\n\nfunction getThreeOpacity(metrics:SpatialMetrics) : number|undefined {    \n    const node = metrics.node as THREE.Mesh\n    if (node.material) {\n        const materialList = node.material as THREE.MeshBasicMaterial[]\n        if (materialList.length) {\n            for (const m of materialList) {\n                if (m.opacity !== undefined) return m.opacity\n            }\n        } else {\n            if ('opacity' in node.material) return node.material.opacity\n        }\n    }\n    for (const child of metrics.boundingChildMetrics) {\n        const opacity = getThreeOpacity(child)\n        if (opacity !== undefined) return opacity\n    }\n    return undefined\n}\n\nfunction applyThreeOpacity(metrics:SpatialMetrics, opacity:number) {\n    const node = metrics.node as THREE.Mesh\n    if (node.material) {\n        const materialList = node.material as THREE.MeshBasicMaterial[]\n        if (materialList.length) {\n            for (const m of materialList) {\n                if ('opacity' in m) m.opacity = opacity\n            }\n        }\n        else (node.material as THREE.MeshBasicMaterial).opacity = opacity\n    }\n    for (const child of metrics.boundingChildMetrics) {\n        applyThreeOpacity(child, opacity)\n    }\n}\n\nexport const DefaultBindings = {\n    getChildren(metrics:SpatialMetrics, children:Node3D[]) {\n        if ((metrics.node as THREE.Object3D).isObject3D) {\n            ThreeBindings.getChildren(metrics, children)\n        }\n    },\n    getState(metrics:SpatialMetrics, state:NodeState) {\n        if ((metrics.node as THREE.Object3D).isObject3D) {\n            ThreeBindings.getState(metrics, state)\n        }\n    },\n    getIntrinsicBounds(metrics:SpatialMetrics, bounds:Box3) {\n        if ((metrics.node as THREE.Object3D).isObject3D) {\n            ThreeBindings.getIntrinsicBounds(metrics, bounds)\n        }\n        return bounds\n    },\n    apply(metrics:SpatialMetrics, state:NodeState) {\n        if ((metrics.node as THREE.Object3D).isObject3D) {\n             ThreeBindings.apply(metrics, state)\n        }\n    }\n}\n\nexport function createLayoutSystem<T extends Node3D>(viewNode:T, bindings=DefaultBindings) {\n    return new EtherealLayoutSystem(viewNode, bindings)\n}\n\nexport * from '@etherealjs/core/mod'\nexport type {Node3D} from '@etherealjs/core/mod'\n\n\n// import {WebLayer3D,WebLayer3DOptions} from '@etherealjs/web-layer/mod'\n\n// export class AdaptiveWebLayer extends WebLayer3D {\n//     constructor(elementOrHTML:Element|string, options:WebLayer3DOptions) {\n//         super(elementOrHTML, options)\n//         const oLC = options.onLayerCreate\n//         options.onLayerCreate = (layer) => {\n\n//             oLC?.(layer)\n//         }\n//     }\n// }"],"names":["[object Object]","x","y","this","value","scalar","index","Error","constructor","v","w","warn","addVectors","s","a2","b2","subVectors","multiplyScalar","m","e","elements","Math","min","max","min2","max2","minVal","maxVal","length","divideScalar","floor","ceil","round","sqrt","abs","atan2","PI","distanceToSquared","dx","dy","normalize","alpha","v1","v2","array","offset","attribute","getX","getY","center","angle","c2","cos","sin","random","Vector2","prototype","isVector2","_lut","i","toString","_seed","DEG2RAD","RAD2DEG","n","t","d0","d1","d2","d3","toUpperCase","a1","b1","lambda","dt","lerp","exp","euclideanModulo","low","high","range","degrees","radians","pow","log","LN2","q","order","cos2","sin2","c22","s2","c13","s13","c1_3","s1_3","c3_1","s3_1","set","z","_x","_y","_z","_w","qa","qb","qm","slerpQuaternions","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","dir","sqrSin","Number","EPSILON","len","tDir","f","_onChangeCallback","quaternion","euler","update","isEuler","_order","c1","c3","s1","s3","axis","halfAngle","te","m11","m12","m13","m21","m22","m23","m31","m32","m33","trace","vFrom","vTo","r","dot","acos","MathUtils.clamp","step","angleTo","slerp","conjugate","l","p","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","copy","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","getZ","getW","callback","Quaternion","isQuaternion","multiplyVectors","error","applyQuaternion","_quaternion","setFromEuler","setFromAxisAngle","applyMatrix3","qx","qy","qz","qw","ix","iy","iz","iw","camera","applyMatrix4","matrixWorldInverse","projectionMatrix","projectionMatrixInverse","matrixWorld","crossVectors","ax","ay","az","bx","by","bz","denominator","lengthSq","planeNormal","projectOnVector","sub","_vector","normal","theta","dz","setFromSphericalCoords","radius","phi","sinPhiRadius","setFromCylindricalCoords","sx","setFromMatrixColumn","sy","sz","fromArray","Vector3","isVector3","epsilon","epsilon2","xx","yy","zz","xy","xz","yz","Vector4","isVector4","arguments","n11","n12","n13","n14","n21","n22","n23","n24","n31","n32","n33","n34","n41","n42","n43","n44","Matrix4","me","xAxis","yAxis","zAxis","scaleX","_v1","scaleY","scaleZ","d","ae","af","be","bf","ce","cf","de","df","ac","ad","bc","bd","compose","_zero","_one","eye","target","up","multiplyMatrices","a11","a12","a13","a14","a21","a22","a23","a24","a31","a32","a33","a34","a41","a42","a43","a44","b11","b12","b13","b14","b21","b22","b23","b24","b31","b32","b33","b34","b41","b42","b43","b44","tmp","t11","t12","t13","t14","det","detInv","scaleXSq","scaleYSq","scaleZSq","tx","ty","yx","zx","zy","position","scale","x2","y2","z2","wx","wy","wz","determinant","invSX","invSY","invSZ","setFromRotationMatrix","_m1","left","right","top","bottom","near","far","h","matrix","isMatrix4","_matrix","Euler","DefaultOrder","asin","clamp","makeRotationFromQuaternion","newOrder","setFromQuaternion","optionalResult","RotationOrders","_colorKeywords","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","_hslA","_hslB","g","setRGB","isColor","setHex","setStyle","b","hex","MathUtils.euclideanModulo","hue2rgb","style","string","parseFloat","exec","color","name2","components","parseInt","setHSL","size2","charAt","setColorName","toLowerCase","gammaFactor","safeInverse","copyGammaToLinear","copyLinearToGamma","SRGBToLinear","LinearToSRGB","copySRGBToLinear","copyLinearToSRGB","getHex","slice","hue","saturation","lightness","delta","getHSL","color1","color2","MathUtils.lerp","normalized","Color","NAMES","Infinity","points","makeEmpty","il","expandByPoint","halfSize","add","box","isEmpty","point","vector","addScalar","equals","Box2","isBox2","minX","minY","minZ","maxX","maxY","maxZ","count","object","expandByObject","updateWorldMatrix","geometry","boundingBox","computeBoundingBox","union","_box","children","sphere","clampPoint","plane","constant","triangle","getCenter","_center","a","c","_v0","_v2","axes","_f0","_f1","_f2","satForAxes","_extents","_triangleNormal","getSize","setFromPoints","_points","Box3","isBox3","_testAxis","v0","extents","j","p0","p1","p2","_segCenter","_segDir","_diff","_edge1","_edge2","_normal","origin","direction","ray","at","directionDistance","distanceSqToPoint","optionalPointOnRay","optionalPointOnSegment","segExtent","distanceTo","a01","b0","s0","sqrDist","extDet","invDet","tca","radius2","thc","t0","t1","distanceToPoint","distanceToPlane","distToPoint","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectBox","backfaceCulling","sign2","DdN","DdQxE2","DdE1xQ","cross","QdN","matrix4","transformDirection","_startP","_startEnd","start","end","line","clampToLine","startEnd2","closestPointToPointParameter","setFromMatrix3Column","setFromMatrix4","invert","transpose","rotation","cx","cy","Matrix3","isMatrix3","_vector1","_vector2","_normalMatrix","setFromNormalAndCoplanarPoint","inverseNormalLength","negate","startSign","endSign","intersectsPlane","optionalNormalMatrix","normalMatrix","getNormalMatrix","referencePoint","coplanarPoint","Plane","isPlane","V_00","Object","freeze","V_11","V_000","V_100","V_010","V_001","V_111","Q_IDENTITY","DIRECTION","RIGHT","UP","NEAR","LEFT","DOWN","FAR","distance","avgAbsoluteValue","computedRelativeDifferenceNumber","avgMagnitude","computedRelativeDifferenceVector3","computedRelativeDifferenceVector2","scratchV3","minDist","maxDist","avgDistance","avgSizeMagnitude","computedRelativeDifferenceBox3","sqrt3","computedRelativeDifferenceColor","gaussian","standardDeviation","u","levy","stdDeviation","randomQuaternion","_2PI","V_0012","twist","swing","swingAxis","out","twistScale","swingScale","twistMagnitude","swingDirection","swingMagnitude","applyAxisAngle","arr","weights","total","threshold","extractRotationAboutAxis","vec","rot","rotAxis","dotProd","projection","cb2","caches","push","memoized","wrapped","needsUpdate","memoize","cache2","callbacks","callbacks2","InternalRawState","Symbol","InternalCurrentState","InternalTargetState","InternalPreviousTargetState","mode","metrics","MemoizationCache","_cache","_localMatrix","decompose","_localPosition","_localOrientation","_localScale","_localOrientationInverse","_localRotation","_localRotationInverse","_worldMatrix","localMatrix","parentState","premultiply","worldMatrix","_worldPosition","_worldOrientation","_worldScale","_worldMatrixInverse","_worldOrientationInverse","_worldRotation","_worldRotationInverse","_worldCenter","innerCenter","spatialMatrix","_spatialMatrix","outerOrigin","worldOrientation","_spatialMatrixInverse","_localFromSpatial","worldMatrixInverse","_spatialFromLocal","reference","referenceState","_spatialFromReference","_spatialBounds","innerBounds","bounds","spatialFromLocal","_spatialCenter","_spatialSize","_outerBounds","adapter","system","nodeAdapters","get","node","outerBounds","setFromCenterAndSize","spatialFromReference","_outerCenter","_outerSize","_outerVisualBounds","outerVisualBounds","visualBounds","_outerVisualCenter","_outerVisualSize","viewNode","_ndcBounds","setScalar","viewFrustum","perspectiveProjectionMatrix","viewFromWorld","viewProjectionFromWorld","_viewProjectionFromWorld","_ndcCenter","_ndcSize","isFinite","_viewState","inverseProjection","_inverseProjection","_visualBounds","ndcBounds","nearMeters","farMeters","viewResolution","_visualCenter","_visualSize","relativeViewMatrix","_relativeViewMatrix","relativeViewRotation","_relativeViewRotation","extractRotation","relativeViewOrientation","_relativeViewOrientation","forwardDirection","_relativeViewForward","upDirection","_relativeViewUp","closestForwardDirection","closestUpDirection","distForward","distUp","dist2","dist22","_orthogonalRotation","identity","lookAt","_orthogonalOrientation","_occludingPercent","_occludedPercent","metrics2","adapters","values","myBounds","myNear","_NodeState","_boxA","_boxB","myLength","_sizeA","otherMetrics","isAdaptive","containedByNode","otherBounds","current","overlapPercent","intersect","_sizeB","invalidateAll","_parent","val","invalidate","parentMetrics","referenceMetrics","isNaN","_localMatrixInverse","_cachedLocalMatrix","_cachedWorldMatrix","_cachedWorldCenter","_cachedSpatialMatrix","_cachedSpatialBounds","spatialBounds","_cachedOuterBounds","worldCenter","outerOrientation","_cachedOuterVisualBounds","viewMetrics","_viewFromWorld","_viewFromSpatial","_spatialFromView","viewFromSpatial","_cachedNDCBounds","_cachedVisualBounds","_viewPosition","worldPosition","_cachedViewAlignedOrientation","_computeOcclusion","NodeState","inner","_innerBounds","intrinsicBounds","childBounds","_childBounds","boundingChildMetrics","invalidateStates","raw","_innerCenter","_innerSize","sizeEpsillon","epsillonMeters","sign","bindings","getChildren","_nodeChildren","Array","localOrientation","localPosition","localScale","worldScale","spatialCenter","spatialSize","spatialOffset","innerOffset","state","useCurrent","_adapter","orientation","enabled","parent","innerSize","multiply","getState","_computeState","nodeChildren","_boundingChildren","child","getMetrics","parentNode","activeLayout","referenceNode","_update","invalidateInnerBounds","_cachedInnerBounds","_intrinsicBoundsNeedsUpdate","getIntrinsicBounds","_intrinsicBounds","_intrinsicCenter","_intrinsicSize","invalidateIntrinsicBounds","_cachedNodeChildren","_cachedBoundsChildren","includeRaw","_cachedRawState","_cachedCurrentState","_cachedTargetState","has","_a","_b","_c","_d","config2","assign","OptimizerConfig","LayoutSolution","defaultConfig","optimize","_config","minFeasibleTime","maxInfeasibleTime","pulseRate","maxIterationsPerFrame","swarmSize","pulseFrequencyMin","pulseFrequencyMax","stepSizeMax","stepSizeMin","stepSizeStart","layouts","prevOrientation","_prevOrientation","prevBounds","_prevBounds","layout","_setConfig","_updateLayout","bestLayout","bestSolution","solution","solutions","isFeasible","layoutFeasibleTime","deltaTime","layoutInfeasibleTime","apply","measureBoundsCache","clear","processObjectives","newSolution","_scratchSolution","_scratchBestSolution","iterations","_manageSolutionPopulation","iteration","changed","mutationStrategy","mutationStrategies","best","randomSolution","moveTowards","compareSolutions","perturb","success","stepSize","restartRate","randomize","sortSolutions","successRate","startStepSize","pop","spec","applyFn","score","diff","measureNumber","gt","lt","getNumberScore","magnitude","_quat","MathUtils.RAD2DEG","_euler","swingX","swingY","twistZ","deg","mathScope","degree","swingRangeX","swingRange","swingRangeY","swingScore","twistScore","twistRange","type","subType","measureBounds","scores","reduceFromOneOrManySpec","_getNumberScoreSingle","_getVector3ScoreSingle","_getQuaternionScoreSingle","boundsType","key","k","subSpec","subKey","VECTOR3_SPEC_KEYS","sk","getBoundsMeasureScore","visualCenter","visualSize","_getBoundsMeasureScoreSingle","penalty","acc","getComputedAbsoluteTolerance","vw","vh","viewSize","leftOffset","rightOffset","bottomOffset","topOffset","nearOffset","SpatialObjective","getQuaternionScore","getVector3Score","_scale","largest","aspectFill","getBoundsScore","attenuateVisualScore","absolute","visualArea","refVisualSize","refVisualArea","minAreaPercent","absoluteTolerance","meter","pixel","ratio","objectives","aFeasible","bFeasible","rank","bestScores","scoreA","scoreB","objective","oRelTol","computedRelativeTolerance","oAbsTol","computedAbsoluteTolerance","tolerance","sortBlame","opts","obj","maximizeObjective","MaximizeObjective","priority","relativeTolerance","addObjective","orientationConstraint","RelativeOrientationConstraint","keepAspectConstraint","AspectConstraint","scaleConstraint","WorldScaleConstraint","boundsConstraint","SpatialBoundsConstraint","meterConstraint","visualBoundsMeterConstraint","VisualBoundsConstraint","pixelConstraint","visualBoundsPixelConstraint","magnetizeObjective","MagnetizeObjective","minimizeOcclusionObjective","indexOf","sys","o","sort","strategies","_mutationWeights","aspectConstraint","orientationPenalty","aspectPenalty","randomSelect","sizeHint","_LayoutSolution","_scratchV1","viewState","worldOrientationInverse","_scratchV2","MathUtils.DEG2RAD","minFreq","maxFreq","_size","otherCenter","_otherCenter","otherSize","_otherSize","generatePulseFrequency","strategy","_selectStrategy","strategyType","orientationSpec","_direction","setLength","clampScalar","_swap","aValue","bValue","evaluate","reversed","easing2","mirrored","createReversedEasing","createMirroredEasing","createExpoIn","power","createBackIn","createAnticipateEasing","backEasing","easeIn","easeOut","easeInOut","circIn","circOut","circInOut","backIn","backOut","backInOut","anticipate","bounceOut","FLOAT_32_SUPPORTED","Float32Array","getSlope","calcBezier","easing","mX1","mY1","mX2","mY2","sampleValues","getTForX","aX","guessForT","initialSlope","intervalStart","currentSample","K_SPLINE_TABLE_SIZE","aGuessT","currentSlope","newtonRaphsonIterate","aA","aB","currentX","currentT","binarySubdivide","options","_scratchV3","_scratchQ","_scratchBox","_scratchColor","_blackColor","TransitionConfig","startValue","parentConfig","transition","reset","_previousTarget","_copy","to","from","result","clone","resultBox","resultSize","_start","_current","_target","queue","_reference","duration","elapsed","_forceCommit","lastTarget","computeRelativeDifference","_resolvedConfig","adapterConfig","systemConfig","multiplier","delay","debounce","maxWait","blend","_previousStatus","_status","_computeStatus","forceCommit","resolvedConfig","delayTime","debounceTime","relativeDifference","forceWait","referenceRelativeDifference","status","shift","previousTarget","_addTransitionToCurrent","Transition","amount","minAmount","maxAmount","force","_isEqual","syncGroup","_updateTransitionable","group","_syncGroup","delete","Map","_orientation","Transitionable","_bounds","_opacity","opacity","_outerOrigin","_outerOrientation","Set","measure","scope","math","unit","unitString","cacheKey","mathCompiledExpressions","code2","parse","replace","compile","code","referenceBounds","referenceCenter","outerCenter","outerVisualCenter","includes","outerSize","outerVisualSize","percent","number","_parentAdapter","nodeMetrics","_prevLayout","_activeLayout","_progress","progress","SpatialLayout","_hasValidContext","pAdapter","parentAdapter","hasValidContext","hasValidSolution","_computeParentAdapter","_computeHasValidContext","onUpdate","rawState","optimizer","targetOrientation","epsillonRadians","targetBounds","_computeProgress","onPostUpdate","leftDegrees","rightDegrees","topDegrees","bottomDegrees","_perspective","makePerspective","_leftDegrees","_rightDegrees","_bottomDegrees","_topDegrees","_nearMeters","_farMeters","sizeDegrees","centerDegrees","clampedX","clampedY","angleToTopLeft","angleToTopRight","angleToBottomLeft","angleToBottomRight","depth","_fullNDC","forward","_forwardDirection","_cachedPerspectiveProjectionMatrix","_overlapSize","DEFAULT_CONFIG","precision","predictable","randomSeed","isBigNumber","getPrototypeOf","isComplex","isFraction","isUnit","isArray","isMatrix","isDenseMatrix","isSparseMatrix","isRange","isIndex","isResultSet","isHelp","Date","RegExp","isAccessorNode","isNode","isArrayNode","isAssignmentNode","isBlockNode","isConditionalNode","isConstantNode","isFunctionAssignmentNode","isFunctionNode","isIndexNode","isObjectNode","isOperatorNode","isParenthesisNode","isRangeNode","isSymbolNode","isChain","map","valueOf","TypeError","mapObject","clone2","hasOwnProperty","prop","Function","deepStrictEqual","nestedObject","flattenedObject","valueResolver","_value","_uninitialized","defineProperty","configurable","enumerable","property","call","keys","MATRIX_OPTIONS","NUMBER_OPTIONS","emit","prev","curr","changes","forEach","values2","item","JSON","stringify","join","_types","name","test","anyType","ok","_ignore","_conversions","typed","types","conversions","ignore","typeName","entry","findInArray","entry2","hint","fn","signature","signatures","split","trim","str","match","findTypeName","conversion","convert","params","param","typeNames","getTypeName","restParam","filter","notEmpty","notIgnore","matchingConversions","filterConversions","exactTypes","findTypeByName","typeIndex","findTypeIndex","conversionIndex","convertibleTypes","concat","parsedParam","parseParam","SyntaxError","some","isInvalidParam","last","test0","test1","tests","hasRestParam","varIndex","initial","compileTest","lastTest","testRestParam","args","excludeConversions","getParamAtIndex","isExactType","uniq","flatMap","getExpectedTypeNames","err","expected","_name","matchingSignatures","nextMatchingDefs","mergeExpectedParams","actualType","data","category","actual","lengths","maxLength","expectedLength","param1","param2","hasConversions","getLowestTypeIndex","getLowestConversionIndex","signature1","signature2","compareParams","matches","fnConvert","compiledConversions","compileArgConversion","last2","fnPreprocess","conversion0","conversion1","arg","signaturesMap","stringifyParams","ignoreConversionTypes","params2","typeGroups","filteredTypes","typeGroup","_splitParams","ii","hasOverlap","len1","len2","restParam1","restParam2","parsedSignatures","parseSignature","notNull","parsedSignature","conflictingSignature","hasConflictingParams","splitParams","compareSignatures","ok0","ok1","ok2","ok3","ok4","ok5","allOk","compileTests","test00","notOk","test10","test20","test30","test40","test50","test01","test11","test21","test31","test41","test51","fns","compileArgsPreprocessing","fn0","undef","fn1","fn2","fn3","fn4","fn5","len0","len3","len4","len5","iStart","iEnd","generic","createError","arg0","arg1","fn6","createSignaturesMap","array1","array2","contains2","entries","_signature","_fn","createTypedFunction","string, Object","getName","...Function","extractSignatures","string, ...Function","create","create2","find","addType","beforeObjectTest","splice","addConversion","factory2","notation","isNumber","toFixed","toExponential","String","rounded","roundDigits","splitNumber","exponent","coefficients","newExp","missingZeros","expDiff","decimalIdx","decimals","decimalVal","toEngineering","lowerExp","upperExp","zeros","toPrecision","digits2","zeros2","splitValue","pp","first","unshift","DBL_EPSILON","valueWithoutExp","mul","valueStr","isZero","toSignificantDigits","exp2","text","search","substring","formatNumber","formatBigNumber","looksLikeFraction","fraction","formatArray","isString","syntax","format","escaped","relation","DimensionError","message","stack","IndexError","dim","dimNext","isInteger","defaultValue","elem","oldLen","newLen","minLen","sizes","newArray","flatArray","flat","flatten","reduce","product","arraySize","totalSize","sizeIndex","tmpArray2","tmpArray","_reshape","dims","outer","_unsqueeze","next","separator","typeOf2","isArray2","itemType","getArrayDataType","dependencies2","meta","deps","properties2","pickShallow","stripOptionalNotation","dependency","isOptionalDependency","every","missingDependencies","isFactory","dependencies","assertAndCreate","RangeError","isDimensionError","isIndexError","_createTyped2","typedFunction","createTyped","_ref","BigNumber","Complex","DenseMatrix","Fraction","isBoolean","isFunction","isDate","isRegExp","isNull","isUndefined","isObject","Complex2","toNumber","Fraction2","inexact","quadrant","createResultSet","ResultSet","toJSON","mathjs","fromJSON","json","isClass","EXP_LIMIT","NUMERALS","LN10","DEFAULTS","rounding","modulo","toExpNeg","toExpPos","minE","maxE","crypto","external","invalidArgument","decimalError","mathfloor","mathpow","isBinary","isHex","isOctal","isDecimal","BASE","LN10_PRECISION","PI_PRECISION","P","ws","indexOfLastWord","getZeroString","rm","repeating","di","rd","baseIn","baseOut","arrL","strL","reverse","absoluteValue","finalise","comparedTo","cmp","xdL","ydL","xd","yd","xs","ys","NaN","cosine","pr","Ctor","sd","tinyPow","taylorSeries","times","cos2x","minus","plus","toLessThanHalfPi","neg","cubeRoot","cbrt","rep","t3","t3plusx","digitsToString","divide","eq","decimalPlaces","dp","dividedBy","div","dividedToIntegerBy","divToInt","greaterThan","greaterThanOrEqualTo","gte","hyperbolicCosine","cosh","one","cosh2_x","d8","hyperbolicSine","sinh","sinh2_x","d5","d16","d20","hyperbolicTangent","tanh","inverseCosine","halfPi","isNeg","getPi","inverseHyperbolicCosine","acosh","lte","ln","inverseHyperbolicSine","asinh","inverseHyperbolicTangent","atanh","wpr","xsd","inverseSine","atan","inverseTangent","px","isInt","isNegative","isPositive","isPos","lessThan","lessThanOrEqualTo","logarithm","base","isBase10","inf","num","naturalLogarithm","getLn10","checkRoundingDigits","xe","xLTy","getBase10Exponent","mod","naturalExponential","negated","carry","getPrecision","sine","sin2_x","squareRoot","tangent","rL","toBinary","toStringBinary","toDecimalPlaces","toDP","finiteToString","toFraction","maxD","n0","toHexadecimal","toHex","toNearest","toOctal","toPower","yn","intPow","toSD","truncated","trunc","temp","aL","bL","logBase","more","prod","prodL","qd","rem","remL","rem0","xi","xL","yd0","yL","multiplyInteger","compare","isTruncated","roundUp","xdi","isExp","nonFiniteToString","zs","truncate","ltgt","guard","pow2","sum","c0","numerator","charCodeAt","isHyperbolic","pi","isOdd","convertBase","useDefaults","defaults","ps","getRandomValues","randomBytes","Decimal","maxOrMin","Uint32Array","for","toStringTag","i2","Decimal2","parseDecimal","divisor","isFloat","parseOther","ROUND_UP","ROUND_DOWN","ROUND_CEIL","ROUND_FLOOR","ROUND_HALF_UP","ROUND_HALF_DOWN","ROUND_HALF_EVEN","ROUND_HALF_CEIL","ROUND_HALF_FLOOR","EUCLID","config","isDecimalInstance","hypot","log10","log2","createBigNumberClass","on","root","cosh2","sinh2","parser_exit","_a2","_b2","re","im","tokens","abs2","loh","logHypot","expm1","limit","cosm1","cot","sec","csc","t2","acot","asec","acsc","coth","csch","sech","res","noIM","oneMinus","onePlus","acoth","acsch","asech","inverse","places","ret","toVector","isInfinite","E","createComplexClass","toPolar","strRe","strIm","fromPolar","hasBase","P2","IntermediateInheritor","errorConstructor","DivisionByZero","InvalidParameter","factors","M","A","B","C","D","N","gcd","lcm","factorize","simplify","eps","cont","rec","divisible","excludeWhole","whole","toLatex","toContinued","dec","cycLen","cycleLen","cycOff","rem1","rem2","modpow","cycleStart","createFractionClass","createRangeClass","Range","hasStart","hasEnd","hasStep","nums","size","toArray","createMatrixClass","Matrix","storage","datatype","subset","replacement","resize","reshape","skipZeros","createDenseMatrixClass","_data","_datatype","preprocess","typeOf","isScalar","_getSubmatrix","dimension","submatrix","sSize","iSize","unsqueeze","dataIndex","subIndex","newSize","createDenseMatrix","getDataType","_get","_set","indexI","isCollection","sizeArray","_resize2","recurse2","recurse","diagonal","kSuper","kSub","rows","columns","ms","swapRows","_swapRows","vi","deepMap","n1","n2","absNumber","addNumber","multiplyNumber","unaryMinusNumber","ceilNumber","modNumber","powNumber","roundNumber","createIsNumeric","number | BigNumber | Fraction | boolean","Complex | Unit | string | null | undefined | Node","Array | Matrix","createEqualScalar","boolean, boolean","number, number","nearlyEqual","BigNumber, BigNumber","bigNearlyEqual","Fraction, Fraction","Complex, Complex","complexEquals","Unit, Unit","equalBase","factory","_ref2","createSparseMatrixClass","equalScalar","SparseMatrix","source","_values","_index","_ptr","ptr","zero","row","idx","kk","mvalues","mindex","mptr","pv","ins","k0","k1","createSparseMatrix","density","_getsubset","_setsubset","_getValueIndex","colIndex","rowIndex","_i","r1","_i2","_i3","_j","minRow","maxRow","minColumn","maxColumn","invoke","_k","_i5","_map","_k2","_i7","_toArray","_forEachRow","kx","ky","vx","vy","createNumber","Unit","null","Unit, string | Unit","valuelessUnit","createBignumber","createFraction","createMatrix","_create","format2","string, string","Array | Matrix, string","Array | Matrix, string, string","createUnaryMinus","createAbs","createAddScalar","fixPrefix","createAlgorithm11","avalues","aindex","aptr","asize","adt","cvalues","cindex","cptr","createAlgorithm14","adata","cdata","_iterate","level","av","bv","cv","createCeil","algorithm11","algorithm14","round2","Complex, number","Fraction, number","Array | Matrix, number","SparseMatrix, number | BigNumber","DenseMatrix, number | BigNumber","number | Complex | BigNumber, Array","createFix","_Complex","floor2","ceil2","number, number | BigNumber","Complex, number | BigNumber","BigNumber, number | BigNumber","Fraction, number | BigNumber","Array | Matrix, number | BigNumber","createFloor","createAlgorithm01","denseMatrix","sparseMatrix","bvalues","bindex","bptr","bsize","bdt","mark","createAlgorithm04","xa","xb","wa","wb","createAlgorithm10","createAlgorithm13","bdata","csize","createAlgorithm02","cij","createAlgorithm03","createAlgorithm05","wai","wbi","vc","createAlgorithm12","createMod","algorithm02","algorithm03","algorithm05","algorithm12","algorithm13","SparseMatrix, SparseMatrix","SparseMatrix, DenseMatrix","DenseMatrix, SparseMatrix","DenseMatrix, DenseMatrix","Array, Array","Array, Matrix","Matrix, Array","SparseMatrix, any","DenseMatrix, any","any, SparseMatrix","any, DenseMatrix","Array, any","any, Array","createMultiplyScalar","number | Fraction | BigNumber | Complex, Unit","_normalize","Unit, number | Fraction | BigNumber | Complex","createMultiply","size1","alength","bcolumns","mf","_multiplyVectorDenseMatrix","_multiplyMatrixVector","arows","acolumns","brows","ib","vbi","ka0","ka1","ka","ia","ic","_multiplyMatrixMatrix","jb","kb0","kb1","kb","vbij","extend","Matrix, Matrix","xsize","ysize","_multiplyVectorVector","_multiplyVectorMatrix","any, any","any, any, ...any","rest","createSubtract","unaryMinus","algorithm01","algorithm10","createAlgorithm07","va","vb","createConj","map2","del","id","oldIndex","hit","nuIndex","hasher","POSITIVE_INFINITY","hasher2","memoize2","cache","lru","lruQueue","hash","newVal","createIdentity","number | BigNumber","_identity","number | BigNumber, string","number | BigNumber, number | BigNumber","cols","number | BigNumber, number | BigNumber, string","_identityVector","Array, string","Matrix, string","Big","minimum","ArgumentsError","isArgumentsError","createSize","number | Complex | BigNumber | Unit | boolean | null","noMatrix","isPlainObject","isSafeProperty","isSafeMethod","safeNativeProperties","method","safeNativeMethods","toLocaleString","createSubset","Array, Index","Matrix, Index","Object, Index","_getObjectProperty","string, Index","_getSubstring","Array, Index, any","Array, Index, any, any","Matrix, Index, any","Matrix, Index, any, any","string, Index, string","_setSubstring","string, Index, string, string","Object, Index, any","_setObjectProperty","strLen","substr","chars","_len","getSafeProperty","updated","createZeros","_zeros","...number | BigNumber | string","hasBigNumbers","createFormat","any","formatString","any, Object | function | number","createNumeric","_number","bignumber","validInputTypes","validOutputTypes","noBignumber","fraction2","noFraction","outputType","inputType","createDivideScalar","numeric","Unit, number | Fraction | BigNumber","numeric2","number | Fraction | BigNumber, Unit","createPow","_pow","Array, number","_powArray","Array, BigNumber","Matrix, number","_powMatrix","Matrix, BigNumber","Unit, number | BigNumber","yFrac","yNum","ex","enumerableOnly","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","getOwnPropertyDescriptors","defineProperties","writable","NO_INT","createRound","_objectSpread","roundNumberSignatures","Complex, BigNumber","_n","number, BigNumber","number | Complex | BigNumber, SparseMatrix","number | Complex | BigNumber, DenseMatrix","Array, number | BigNumber","createEqual","algorithm07","createSmaller","createLarger","createFibonacciHeapClass","smaller","larger","oneOverLogPhi","FibonacciHeap","_minimum","isFibonacciHeap","insert","extractMinimum","numberOfChildren","tempRight","arraySize2","numRoots","_findMinimumNode","remove","_decreaseKey","_linkNodes","createSpaClass","Spa","_heap","isSpa","accumulate","heap","nodes","swap","nodei","nodej","createBigNumberPi","createUnitClass","subtract","fix","equal","isNumeric","_BigNumber","_Fraction","units","dimensions","UNIT_NONE","prefix","PREFIXES","NONE","BASE_DIMENSIONS","skipAutomaticSimplification","number2","isDigit","tentativeNumber","tentativeIndex","unitName","isValidAlpha","firstC","toFind","unit2","powerMultiplierCurrent","expectingUnit","parseNumber","parseCharacter","powerMultiplierStack","powerMultiplierStackProduct","uStr","oldC","parseUnit","_findUnit","baseDim","auto","allowNoUnits","_isDerived","unitValue","unitOffset","unitPower","unitPrefixValue","_getNumberConverter","_denormalize","prefixValue","UNITS","prefixes","endsWith","_unit","prefixLen","prefixName","_prefix","BASE_UNITS","isValuelessUnit","other","inverted","valThis","valOther","getNumericIfUnitless","W","toNumeric","formatUnits","matchingBase","matchingUnit","proposedUnitList","key2","currentUnitSystem","missingBaseDim","toSI","UNIT_SYSTEMS","si","strNum","strDen","nNum","nDen","_i4","simp","isImaginary","VAR","VA","_bestPrefix","unitStr","absValue","absUnitValue","bestPrefix","bestDiff","scientific","splitUnit","parts","xNumeric","xRounded","testSum","SHORT","da","G","T","Z","Y","LONG","deca","hecto","kilo","mega","giga","tera","peta","exa","zetta","yotta","deci","centi","milli","micro","nano","pico","femto","atto","zepto","yocto","SQUARED","CUBIC","BINARY_SHORT_SI","BINARY_SHORT_IEC","Ki","Mi","Gi","Ti","Pi","Ei","Zi","Yi","BINARY_LONG_SI","BINARY_LONG_IEC","kibi","mebi","gibi","tebi","pebi","exi","zebi","yobi","BTU","MM","SHORTLONG","_extends","BINARY_SHORT","BINARY_LONG","MASS","LENGTH","TIME","CURRENT","TEMPERATURE","LUMINOUS_INTENSITY","AMOUNT_OF_SUBSTANCE","FORCE","SURFACE","VOLUME","ENERGY","POWER","PRESSURE","ELECTRIC_CHARGE","ELECTRIC_CAPACITANCE","ELECTRIC_POTENTIAL","ELECTRIC_RESISTANCE","ELECTRIC_INDUCTANCE","ELECTRIC_CONDUCTANCE","MAGNETIC_FLUX","MAGNETIC_FLUX_DENSITY","FREQUENCY","ANGLE","BIT","inch","foot","yard","mile","link","rod","chain","angstrom","in","ft","mi","li","ch","mil","m2","sqin","sqft","sqyd","sqmi","sqrd","sqch","sqmil","acre","hectare","m3","L","litre","cuin","cuft","cuyd","teaspoon","tablespoon","drop","gtt","minim","fluiddram","fluidounce","gill","cc","cup","pint","quart","gallon","beerbarrel","oilbarrel","hogshead","fldr","floz","gi","cp","pt","qt","gal","bbl","obl","gram","ton","tonne","grain","dram","ounce","poundmass","hundredweight","stick","stone","gr","dr","oz","lbm","cwt","second","minute","hour","day","week","month","year","decade","century","millennium","hertz","reciprocal","Hz","rad","radian","grad","gradian","cycle","arcsec","arcmin","ampere","K","degC","degF","degR","kelvin","celsius","fahrenheit","rankine","mol","mole","cd","candela","newton","dyn","dyne","lbf","poundforce","kip","kilogramforce","J","joule","erg","Wh","eV","electronvolt","watt","hp","I","Pa","psi","atm","bar","torr","mmHg","mmH2O","cmH2O","coulomb","farad","F","volt","V","ohm","henry","H","siemens","S","weber","Wb","tesla","bits","bytes","ALIASES","meters","inches","feet","yards","miles","links","rods","chains","angstroms","litres","liter","liters","teaspoons","tablespoons","minims","fluiddrams","fluidounces","gills","cups","pints","quarts","gallons","beerbarrels","oilbarrels","hogsheads","gtts","grams","tons","tonnes","grains","drams","ounces","poundmasses","hundredweights","sticks","lb","lbs","kips","kgf","acres","hectares","sqfeet","sqyard","sqmile","sqmiles","mmhg","mmh2o","cmh2o","seconds","secs","minutes","mins","hours","hr","hrs","days","weeks","months","years","decades","centuries","millennia","gradians","cycles","arcsecond","arcseconds","arcminute","arcminutes","BTUs","watts","joules","amperes","coulombs","volts","ohms","farads","webers","teslas","electronvolts","moles","bit","byte","config3","createPi","cgs","us","_key2","setUnitSystem","getUnitSystem","_key","typeConverters","_name2","_unit2","alias","_key3","createUnit","override","_key4","deleteUnit","aliases","lastUnit","_key5","createUnitSingle","definition","baseName","defUnit","newUnit","anyMatch","_newBaseUnit","newBaseUnit","_i6","_i8","aliasName","_alias","_key6","createUnitFunction","number | BigNumber | Fraction | Complex, string","createCreateUnit","Object, Object","string, Unit | string | Object, Object","def","string, Unit | string | Object","createAdd","algorithm04","createDot","conj","Array | DenseMatrix, Array | DenseMatrix","_validateDim","aIsColumn","bIsColumn","add2","mul2","_c2","_c22","_c3","xindex","xvalues","yindex","yvalues","xLen","yLen","xSize","ySize","keywords","createNode","mathWithTransform","Node2","comment","expr","_compile","symbol","argNames","_ifNode","traverse","callback2","path","transform","_transform","cloneDeep","customString","handler","_toString","toHTML","toTex","customTex","_toTex","getIdentifier","getContent","isObjectProperty","getObjectProperty","errorTransform","createAccessorNode","Node","access","accessFactory","AccessorNode","bind","evalObject","evalIndex","context","needParenthesis","createArrayNode","items","ArrayNode","evalItems","evalItem","childNode","properties","AssignmentNode","FunctionAssignmentNode","ConditionalNode","latexLeftParens","latexRightParens","latexParens","OperatorNode:or","associativity","associativeWith","OperatorNode:xor","OperatorNode:and","OperatorNode:bitOr","OperatorNode:bitXor","OperatorNode:bitAnd","OperatorNode:equal","OperatorNode:unequal","OperatorNode:smaller","OperatorNode:larger","OperatorNode:smallerEq","OperatorNode:largerEq","RelationalNode","OperatorNode:leftShift","OperatorNode:rightArithShift","OperatorNode:rightLogShift","OperatorNode:to","RangeNode","OperatorNode:add","OperatorNode:subtract","OperatorNode:multiply","OperatorNode:divide","OperatorNode:dotMultiply","OperatorNode:dotDivide","OperatorNode:mod","OperatorNode:unaryPlus","OperatorNode:unaryMinus","OperatorNode:bitNot","OperatorNode:not","OperatorNode:pow","OperatorNode:dotPow","OperatorNode:factorial","OperatorNode:transpose","_node","parenthesis","identifier","getPrecedence","nodeA","nodeB","identifierA","identifierB","createAssignmentNode","assignFactory","precedence","exprPrecedence","evalValue","setSafeProperty","childObject","evalParentObject","parentProp","evalParentIndex","parentIndex","createBlockNode","blocks","BlockNode","block","visible","evalBlocks","results","createConditionalNode","condition","trueExpr","falseExpr","evalCondition","evalTrueExpr","evalFalseExpr","testCondition","conditionPrecedence","truePrecedence","falsePrecedence","defaultEscapes","{","}","\\","#","$","%","&","^","_","~","formatEscapes","–","—"," ","\t","\r\n","\n","defaultEscapeMapFn","defaultEscapes2","formatEscapes2","latexSymbols","Alpha","Beta","beta","Gamma","gamma","Delta","Epsilon","varepsilon","Zeta","zeta","Eta","eta","Theta","vartheta","Iota","iota","Kappa","kappa","varkappa","Lambda","Mu","mu","Nu","nu","Xi","Omicron","omicron","varpi","Rho","rho","varrho","Sigma","sigma","varsigma","Tau","tau","Upsilon","upsilon","Phi","varphi","Chi","chi","Psi","Omega","omega","true","false","Inf","infinity","oo","lim","undefined","latexOperators","ctranspose","factorial","dotPow","unaryPlus","bitNot","not","dotMultiply","dotDivide","leftShift","rightArithShift","rightLogShift","unequal","smallerEq","largerEq","bitAnd","bitXor","bitOr","and","xor","or","latexFunctions","1","2","cube","log1p","norm","nthRoot","nthRoots","square","bellNumbers","catalan","stirlingS2","expm","inv","sqrtm","combinations","combinationsWithRep","erf","variance","0","complex","sparse","latexUnits","_ref$preserveFormatti","preserveFormatting","_ref$escapeMapFn","escapeMapFn","runningStr","escapes","escapeKeys","_loop","specialCharFound","escapeLatexLib","isUnit2","escapeLatex","createConstantNode","ConstantNode","createFunctionAssignmentNode","childArgNames","evalExpr","childArgs","escape","toSymbol","createIndexNode","dotNotation","IndexNode","evalDimensions","needsEnd","evalStart","evalEnd","evalStep","createRange","_evalStart","_evalEnd","_evalStep","_childArgNames","evalRange","_evalRange","evalDimension","createObjectNode","ObjectNode","evalEntries","stringifiedKey","parsedKey","createOperatorNode","op","implicit","OperatorNode","latex","getAssociativity","operandPrecedence","operandIdentifier","rootIdentifier","lhsParens","rhsParens","lhsPrecedence","assocWithLhs","isAssociativeWith","_rootIdentifier","lhsIdentifier","rhsIdentifier","rhsPrecedence","assocWithRhs","argPrecedence","assocWithArg","argAssociativity","isParenthesisNode2","evalArgs","evalArg0","_evalArg","evalArg1","evalArg","isUnary","parens","calculateNecessaryParentheses","assoc","operand","opIsNamed","lhs","rhs","stringifiedArgs","lhsTex","rhsTex","texifiedArgs","createParenthesisNode","content","ParenthesisNode","createRangeNode","startPrecedence","stepPrecedence","endPrecedence","createRelationalNode","conditionals","isRelationalNode","self2","compiled","evalLhs","evalRhs","condFn","paramStrings","paramPrecedence","operatorMap","BigNumberDependencies","ComplexDependencies","MatrixDependencies","DenseMatrixDependencies","FractionDependencies","typedDependencies","equalScalarDependencies","SparseMatrixDependencies","numberDependencies","fractionDependencies","matrixDependencies","unaryMinusDependencies","absDependencies","addScalarDependencies","roundDependencies","zerosDependencies","modDependencies","multiplyScalarDependencies","sizeDependencies","multiplyDependencies","dotDependencies","conjDependencies","subtractDependencies","largerDependencies","identityDependencies","addDependencies","numericDependencies","bignumberDependencies","divideScalarDependencies","subsetDependencies","UnitDependencies","equalDependencies","fixDependencies","ceilDependencies","floorDependencies","formatDependencies","isNumericDependencies","powDependencies","unitDependencies","createUnitDependencies","NodeDependencies","SymbolNodeDependencies","createSymbolNode","SymbolNode","math2","evaluateDependencies","parseDependencies","AccessorNodeDependencies","ArrayNodeDependencies","AssignmentNodeDependencies","BlockNodeDependencies","ResultSetDependencies","ConditionalNodeDependencies","ConstantNodeDependencies","FunctionAssignmentNodeDependencies","FunctionNodeDependencies","createFunctionNode","FunctionNode","rawArgs","_rawArgs","evalFn","_rawArgs2","nodeToString","template","regex","inputPos","ReferenceError","nodeToTex","latexConverter","customToTex","expandTemplate","IndexNodeDependencies","RangeDependencies","ObjectNodeDependencies","OperatorNodeDependencies","ParenthesisNodeDependencies","RangeNodeDependencies","RelationalNodeDependencies","createParse","expression","parseStart","expressions","parseMultiple","Array | Matrix, Object","extraNodes","TOKENTYPE","DELIMITERS",",","(",")","[","]","\"","'",";","+","-","*",".*","/","./",".^","!","|","^|","=",":","?","==","!=","<",">","<=",">=","<<",">>",">>>","NAMED_DELIMITERS","CONSTANTS","NUMERIC_CONSTANTS","currentString","tokenType","token","isWhitespace","currentCharacter","nestingLevel","isDigitDot","isHexDigit","isDecimalMark","nextCharacter","createSyntaxError","isAlpha","prevCharacter","conditionalLevel","parseAssignment","parseBlock","valid","parseLogicalXor","parseLogicalOr","parseConditional","parseLogicalAnd","parseBitwiseOr","parseBitwiseXor","parseBitwiseAnd","parseRelational","parseShift","operators","cond","parseConversion","parseRange","parseAddSubtract","parseMultiplyDivide","parseImplicitMultiplication","parseRule2","parseUnary","tokenStates","CustomNode","parseAccessors","parseDoubleQuotesStringToken","parseSingleQuotesStringToken","parseRow","numberStr","parseEnd","parseParentheses","parseObject","parseMatrix","parseSingleQuotesString","parseDoubleQuotesString","parseSymbol","parseCustomNodes","parseLeftHandOperators","parsePow","col","char","cPrev","cNext","isValidLatinOrGreek","isValidMathSymbol","createEvaluate","divideDependencies","invDependencies","detDependencies","lupDependencies","SpaDependencies","FibonacciHeapDependencies","smallerDependencies","createLup","_denseLUP","lvalues","lindex","lptr","lsize","uvalues","uindex","uptr","usize","pvCo","pvOc","swapIndeces","spa","k2","vkj","vik","vjj","pabsv","absv","U","_sparseLUP","ldata","udata","vij","createDet","lup","matrix2","decomp","evenCycles","visited","_det","createInv","_inv","mat","ABig","rBig","Ac","Bc","Ar","Br","createDivide","Array | Matrix, Array | Matrix","any, Array | Matrix","ctx","once","off","listener","evtArr","evts","liveEvents","tinyEmitterModule","load","importedFactories","wrap","wrapper","_wrap","isTypedFunction","silent","allowedInExpressions","contains","namespace","isTransformFunctionFactory","existingTransform","existing","resolver","classes","instance","lazy","factoryAllowedInExpressions","unsafe","isTransformFunction","docs","functions","flatValues2","value2","name3","flattenImports","flatName","flatValues","isSupportedType","factories","configInternal","emitter","Emitter","configFactory","internalImport","importFactory","import","recreateOnConfigChange","deepFlatten","vdeg","SpatialOptimizer","LayoutFrustum","SpatialMetrics","SpatialAdapter","transitionables","time2","maxDeltaTime","time","_prevResolution","_prevSize","measureNumberCache","transitionable","scratchVector3","horizontalRadians","verticalRadians","horizontal","vertical","horizontalDegrees","verticalDegrees","cartesian","fromCartesianDirection","visualElevationRadians","visualAzimuthRadians","toCartesianDirection","element","each","shadowRoot","firstElementChild","nextElementSibling","assignedSlot","assignedElements","assigned","sheet","selector","rules","insertRule","addRule","fatal","Uint16Array","fromCharCode","subarray","TextEncoder","TextDecoder","encode","stream","Uint8Array","Buffer","buffer","byteOffset","byteLength","Blob","URL","createObjectURL","XMLHttpRequest","open","send","responseText","revokeObjectURL","decode","ArrayBuffer","window","global","rect","width","height","Bounds","referenceElement","doc","ownerDocument","docEl","documentElement","body","document2","documentElementStyle","getComputedStyle","bodyStyle","offsetTop","marginTop","offsetLeft","marginLeft","scrollWidth","offsetWidth","clientWidth","scrollHeight","offsetHeight","clientHeight","getDocumentBounds","defaultView","computedStyle","el","offsetParent","prevComputedStyle","parentElement","scrollTop","scrollLeft","borderTopWidth","borderLeftWidth","margin","marginRight","marginBottom","viewportTester","document","createElement","html","innerHTML","removeChild","visibility","pointerEvents","exports2","NEWER","OLDER","oldest","newest","_keymap","oldestEntry","LRUMap","_markEntryAsUsed","MAX_VALUE","it","iterator","itv","done","Entry","ent","KeyIterator","ValueIterator","EntryIterator","fun","thisObj","serializeAttributeValue","async","output","childNodes","nodeTreeToXHTML","Promise","all","then","output2","replaced","replacer","nodeName","serializeChildren","tagName","namespaceURI","getTagName","isRootNode","hasAttribute","serializeNamespace","childrenHTML","isImg","attr","attributes","serializeAttribute","WebRenderer","getDataURL","serializeTag","nodeValue","serializeText","serializeCDATA","exports","__esModule","digestLength","blockSize","pos","Hash","Int32Array","bufferLength","bytesHashed","finished","clean","dataLength","dataPos","hashBlocks","finish","bitLenHi","bitLenLo","padLength","digest","_saveState","_restoreState","Hash2","HMAC","pad","istate","ostate","HMAC2","hmac2","info","counter","hmac","hkdfSalt","salt","okm","hmac_","bufpos","fill","password","dkLen","prf","ctr","dk","hkdf","pbkdf2","sha2562","encoder","eventCallback","hover","active","focus","Image","Edges","element2","layer","layers","extraStyle","addedStyle","tag","getAttribute","ELEMENT_UID_ATTRIBUTE","generateElementUID","setAttribute","LAYER_ATTRIBUTE","parentLayer","getClosestLayer","cachedCanvases","_WebLayer","DEFAULT_CACHE_SIZE","_hashingCanvas","svgHash","cachedBounds","cachedMargin","_currentSVGHash","_currentBounds","_currentMargin","previousCanvasHash","svgCanvasHash","canvasHash","canvas","_currentCanvas","rootLayer","traverseParentLayers","traverseChildLayers","childLayers","traverseLayers","needsRefresh","_updateParentAndChildLayers","addToSerializeQueue","oldChildLayers","previousParentLayer","_tryConvertElementToWebLayer","needsRemoval","styles","layerElement","padding","paddingLeft","paddingRight","paddingTop","paddingBottom","border","borderRightWidth","borderBottomWidth","elementAttribute","attributeHTML","needsInlineBlock","display","updateInputAttributes","parentsHTML","_getParentsHTML","RENDERING_DOCUMENT_ATTRIBUTE","svgCSS","layerHTML","getRenderingCSS","serializeToString","serializationReplacer","RENDERING_ATTRIBUTE","RENDERING_INLINE_ATTRIBUTE","getPsuedoAttributes","pseudoStates","docString","svgDoc","_svgDocument","_svgHash","arrayBufferToBase64","sha256.hash","trySetFromSVGHash","addToRasterizeQueue","resolve","reject","render","addToRenderQueue","svgImage","onload","onerror","_svgHashRasterizing","src","_svgSrc","encodeURIComponent","complete","currentSrc","fullWidth","fullHeight","hashingCanvas","hw","hh","hctx","getContext","clearRect","imageSmoothingEnabled","drawImage","hashData","getImageData","svgRetryCount","retryCount","pixelRatio","PIXEL_RATIO_ATTRIBUTE","devicePixelRatio","newCanvas","opens","closes","RENDERING_PARENT_ATTRIBUTE","close","WebLayer","ResizeObserverBoxOptions","ResizeObserverBoxOptions2","resizeObservers","msg","trigger","ResizeObserverSize","inlineSize","DOMRectReadOnly","fromRect","rectangle","DOMRectReadOnly2","isSVG","SVGElement","isHidden","getBBox","getClientRects","isElement","Element","WeakMap","scrollRegexp","verticalRegexp","IE","navigator","userAgent","parseDimension","switchSizes","zeroBoxes","devicePixelContentBoxSize","borderBoxSize","contentBoxSize","contentRect","calculateBoxSizes","forceRecalculation","cs","svg","ownerSVGElement","removePadding","boxSizing","writingMode","canScrollVertically","overflowY","canScrollHorizontally","overflowX","borderTop","borderRight","borderBottom","horizontalPadding","verticalPadding","horizontalBorderArea","verticalBorderArea","horizontalScrollbarThickness","verticalScrollbarThickness","widthReduction","heightReduction","contentWidth","contentHeight","borderBoxWidth","borderBoxHeight","boxes","calculateBoxSize","observedBox","DEVICE_PIXEL_CONTENT_BOX","BORDER_BOX","ResizeObserverEntry","calculateDepthForNode","broadcastActiveObservations","shallowestDepth","ro","activeTargets","ot","targetDepth","lastReportedSize","observer","callbacks_1","gatherActiveObservationsAtDepth","skippedTargets","observationTargets","isActive","process","event","ErrorEvent","createEvent","initEvent","dispatchEvent","queueMicroTask","toggle_1","el_1","createTextNode","MutationObserver","observe","characterData","textContent","watching","observerConfig","childList","subtree","events","timeout","now","scheduled","scheduler","_this","stopped","schedule","run","until","elementsHaveResized","stop","addEventListener","disconnect","removeEventListener","Scheduler2","updateCount","ResizeObservation","CONTENT_BOX","isReplacedElement","ResizeObservation2","ResizeObserverDetail","resizeObserver","observerMap","getObservationIndex","ResizeObserverController","connect","detail","firstObservation","unobserve","lastObservation","ResizeObserverController2","ResizeObserver","ResizeObserver2","self","Polyfill","scratchMat1","scratchMat2","textDecoder","ATTRIBUTE_PREFIX","_nextUID","states","HOVER_ATTRIBUTE","FOCUS_ATTRIBUTE","ACTIVE_ATTRIBUTE","TARGET_ATTRIBUTE","rootNode","getRootNode","styleRoot","head","rootNodeObservers","containerStyle","containerStyleElement","appendChild","_WebRenderer","RENDERING_CONTAINER_ATTRIBUTE","renderingStyleElement","append","previousHash","onHashChange","location","targetElement","querySelector","evt","focusElement","setNeedsRefreshOnAllLayers","setNeedsRefreshOnStyleLoad","STYLE_NODES","mutations","embeddedCSS","addedNodes","attributeOldValue","characterDataOldValue","serializeQueue","rasterizeQueue","renderQueue","tasksPending","maxSyncTime","TASK_SYNC_MAX_TIME","startTime","performance","serialize","rasterizeTaskCount","TASK_ASYNC_MAX_COUNT","rasterize","finally","scheduleIdle","_runTasks","hostingOptions","container","touchAction","attachShadow","initRootNodeObservation","_handleMutations","mutationObservers","startMutationObserver","record","records","layer2","setLayerNeedsRefresh","_triggerRefresh","capture","rootLayers","inclusive","closestLayerElement","closest","host","pixelSize","transformOrigin","ox","oy","T1","makeTranslation","T2","promises","querySelectorAll","getAttributeNS","removeAttributeNS","dataURL","imgElement","generateEmbeddedCSS","href","css","takeRecords","sheets","styleSheets","cssRules","newRules","cssText","binary","btoa","url","found","attributeCSS","regEx","resourceURL","accept","xhr","setRequestHeader","responseType","embedded","styleElements","inShadow","ShadowRoot","allRules","fontRules","rule","CSSRule","FONT_FACE_RULE","loading","setInterval","processSheetRules","fontStyles","_addDynamicPseudoClassRules","dataURLMap","dataURLPromise","resolveDataURL","getURL","response","contentType","getResponseHeader","base64","_updateInputAttribute","getElementsByTagName","inputElement","checked","removeAttribute","imageData","serializer","XMLSerializer","activeElement","attributeName","oldValue","nodeType","ELEMENT_NODE","className","THREE","_THREE","scratchMatrix","scratchVector","scratchVector2","scratchBounds","scratchBounds2","ON_BEFORE_UPDATE","Object3D","Mesh","WebLayer3D","GEOMETRY","MeshBasicMaterial","side","DoubleSide","depthWrite","transparent","alphaTest","MeshDepthMaterial","depthPacking","RGBADepthPacking","_webLayer","contentMesh","_boundsMesh","cursor","matrixAutoUpdate","depthMaterial","onBeforeRender","renderer","scene","_camera","layersByElement","layersByMesh","video","textures","VideoTexture","wrapS","ClampToEdgeWrapping","wrapT","minFilter","LinearFilter","textureEncoding","encoding","currentCanvas","Texture","parentWebLayer","childWebLayers","refresh","_refreshVideoBounds","_updateDOMLayout","_localZ","setFromMatrixPosition","_viewZ","getWorldPosition","parentRenderZ","_renderZ","renderOrder","renderOrderOffset","mesh","texture","currentTexture","material","image","textureNeedsUpdate","contentScale","aspect","targetAspect","domSize","isHidden2","dispose","updateContent","updateLayout","domLayout","autoRefresh","scheduleTasksIfNeeded","traverseLayersPreOrder","_doUpdate","traverseLayerAncestors","traverseLayersPostOrder","disposeLayer","objectFit","viewWidth","viewHeight","currentBounds","videoWidth","videoHeight","videoRatio","viewRatio","repeat","currentMargin","isVideo","DEFAULT_PIXELS_PER_UNIT","shouldApplyDOMLayout","parentBounds","parentMargin","parentFullWidth","parentFullHeight","parentLeftEdge","parentTopEdge","cssTransform","parseCSSTransform","updateMatrix","elementOrHTML","Raycaster","_previousHoverLayers","_contentMeshes","DOM","createLayerTree","WebLayer3DContent","_updateInteractions","isRoot","onLayerCreate","_WebLayer3D","should","_interactionRays","rays","aLayer","bLayer","prevHover","_prepareHitTest","Ray","_raycaster","getWorldDirection","_hitIntersections","intersections","intersectObjects","_intersectionSort","intersection","setNeedsRefresh","raycaster","meshMap","intersectObject","layerBoundingRect","getBounds","clientX","uv","clientY","elementBoundingRect","DEFAULT_LAYER_SEPARATION","PlaneGeometry","ThreeBindings","nodeObj","isObject3D","cameraNode","updateMatrixWorld","setFromPerspectiveProjectionMatrix","getThreeOpacity","matrixWorldNeedsUpdate","materialList","DefaultBindings","EtherealLayoutSystem"],"mappings":"wBAAA,QAECA,YAAaC,EAAI,EAAGC,EAAI,QAElBD,EAAIA,OACJC,EAAIA,qBAMFC,KAAKF,YAIFG,QAELH,EAAIG,sBAMFD,KAAKD,aAIDE,QAENF,EAAIE,EAIVJ,IAAKC,EAAGC,eAEFD,EAAIA,OACJC,EAAIA,EAEFC,KAIRH,UAAWK,eAELJ,EAAII,OACJH,EAAIG,EAEFF,KAIRH,KAAMC,eAEAA,EAAIA,EAEFE,KAIRH,KAAME,eAEAA,EAAIA,EAEFC,KAIRH,aAAcM,EAAOF,UAEXE,QAEH,OAAQL,EAAIG,aACZ,OAAQF,EAAIE,sBACF,IAAIG,MAAO,0BAA4BD,UAIhDH,KAIRH,aAAcM,UAEJA,QAEH,SAAUH,KAAKF,OACf,SAAUE,KAAKD,gBACL,IAAIK,MAAO,0BAA4BD,IAMxDN,eAEQ,IAAIG,KAAKK,YAAaL,KAAKF,EAAGE,KAAKD,GAI3CF,KAAMS,eAEAR,EAAIQ,EAAER,OACNC,EAAIO,EAAEP,EAEJC,KAIRH,IAAKS,EAAGC,eAEI,IAANA,WAEIC,KAAM,yFACPR,KAAKS,WAAYH,EAAGC,UAIvBT,GAAKQ,EAAER,OACPC,GAAKO,EAAEP,EAELC,MAIRH,UAAWa,eAELZ,GAAKY,OACLX,GAAKW,EAEHV,KAIRH,WAAYc,EAAGC,eAETd,EAAIa,EAAEb,EAAIc,EAAEd,OACZC,EAAIY,EAAEZ,EAAIa,EAAEb,EAEVC,KAIRH,gBAAiBS,EAAGI,eAEdZ,GAAKQ,EAAER,EAAIY,OACXX,GAAKO,EAAEP,EAAIW,EAETV,KAIRH,IAAKS,EAAGC,eAEI,IAANA,WAEIC,KAAM,yFACPR,KAAKa,WAAYP,EAAGC,UAIvBT,GAAKQ,EAAER,OACPC,GAAKO,EAAEP,EAELC,MAIRH,UAAWa,eAELZ,GAAKY,OACLX,GAAKW,EAEHV,KAIRH,WAAYc,EAAGC,eAETd,EAAIa,EAAEb,EAAIc,EAAEd,OACZC,EAAIY,EAAEZ,EAAIa,EAAEb,EAEVC,KAIRH,SAAUS,eAEJR,GAAKQ,EAAER,OACPC,GAAKO,EAAEP,EAELC,KAIRH,eAAgBK,eAEVJ,GAAKI,OACLH,GAAKG,EAEHF,KAIRH,OAAQS,eAEFR,GAAKQ,EAAER,OACPC,GAAKO,EAAEP,EAELC,KAIRH,aAAcK,UAENF,KAAKc,eAAgB,EAAIZ,GAIjCL,aAAckB,SAEPjB,EAAIE,KAAKF,EAAGC,EAAIC,KAAKD,EACrBiB,EAAID,EAAEE,qBAEPnB,EAAIkB,EAAG,GAAMlB,EAAIkB,EAAG,GAAMjB,EAAIiB,EAAG,QACjCjB,EAAIiB,EAAG,GAAMlB,EAAIkB,EAAG,GAAMjB,EAAIiB,EAAG,GAE/BhB,KAIRH,IAAKS,eAECR,EAAIoB,KAAKC,IAAKnB,KAAKF,EAAGQ,EAAER,QACxBC,EAAImB,KAAKC,IAAKnB,KAAKD,EAAGO,EAAEP,GAEtBC,KAIRH,IAAKS,eAECR,EAAIoB,KAAKE,IAAKpB,KAAKF,EAAGQ,EAAER,QACxBC,EAAImB,KAAKE,IAAKpB,KAAKD,EAAGO,EAAEP,GAEtBC,KAIRH,MAAOwB,EAAKC,eAINxB,EAAIoB,KAAKE,IAAKC,EAAIvB,EAAGoB,KAAKC,IAAKG,EAAIxB,EAAGE,KAAKF,SAC3CC,EAAImB,KAAKE,IAAKC,EAAItB,EAAGmB,KAAKC,IAAKG,EAAIvB,EAAGC,KAAKD,IAEzCC,KAIRH,YAAa0B,EAAQC,eAEf1B,EAAIoB,KAAKE,IAAKG,EAAQL,KAAKC,IAAKK,EAAQxB,KAAKF,SAC7CC,EAAImB,KAAKE,IAAKG,EAAQL,KAAKC,IAAKK,EAAQxB,KAAKD,IAE3CC,KAIRH,YAAawB,EAAKC,SAEXG,EAASzB,KAAKyB,gBAEbzB,KAAK0B,aAAcD,GAAU,GAAIX,eAAgBI,KAAKE,IAAKC,EAAKH,KAAKC,IAAKG,EAAKG,KAIvF5B,oBAEMC,EAAIoB,KAAKS,MAAO3B,KAAKF,QACrBC,EAAImB,KAAKS,MAAO3B,KAAKD,GAEnBC,KAIRH,mBAEMC,EAAIoB,KAAKU,KAAM5B,KAAKF,QACpBC,EAAImB,KAAKU,KAAM5B,KAAKD,GAElBC,KAIRH,oBAEMC,EAAIoB,KAAKW,MAAO7B,KAAKF,QACrBC,EAAImB,KAAKW,MAAO7B,KAAKD,GAEnBC,KAIRH,0BAEMC,EAAME,KAAKF,EAAI,EAAMoB,KAAKU,KAAM5B,KAAKF,GAAMoB,KAAKS,MAAO3B,KAAKF,QAC5DC,EAAMC,KAAKD,EAAI,EAAMmB,KAAKU,KAAM5B,KAAKD,GAAMmB,KAAKS,MAAO3B,KAAKD,GAE1DC,KAIRH,qBAEMC,GAAME,KAAKF,OACXC,GAAMC,KAAKD,EAETC,KAIRH,IAAKS,UAEGN,KAAKF,EAAIQ,EAAER,EAAIE,KAAKD,EAAIO,EAAEP,EAIlCF,MAAOS,UAECN,KAAKF,EAAIQ,EAAEP,EAAIC,KAAKD,EAAIO,EAAER,EAIlCD,kBAEQG,KAAKF,EAAIE,KAAKF,EAAIE,KAAKD,EAAIC,KAAKD,EAIxCF,gBAEQqB,KAAKY,KAAM9B,KAAKF,EAAIE,KAAKF,EAAIE,KAAKD,EAAIC,KAAKD,GAInDF,yBAEQqB,KAAKa,IAAK/B,KAAKF,GAAMoB,KAAKa,IAAK/B,KAAKD,GAI5CF,mBAEQG,KAAK0B,aAAc1B,KAAKyB,UAAY,GAI5C5B,eAIeqB,KAAKc,OAAShC,KAAKD,GAAKC,KAAKF,GAAMoB,KAAKe,GAMvDpC,WAAYS,UAEJY,KAAKY,KAAM9B,KAAKkC,kBAAmB5B,IAI3CT,kBAAmBS,SAEZ6B,EAAKnC,KAAKF,EAAIQ,EAAER,EAAGsC,EAAKpC,KAAKD,EAAIO,EAAEP,SAClCoC,EAAKA,EAAKC,EAAKA,EAIvBvC,oBAAqBS,UAEbY,KAAKa,IAAK/B,KAAKF,EAAIQ,EAAER,GAAMoB,KAAKa,IAAK/B,KAAKD,EAAIO,EAAEP,GAIxDF,UAAW4B,UAEHzB,KAAKqC,YAAYvB,eAAgBW,GAIzC5B,KAAMS,EAAGgC,eAEHxC,MAASA,EAAIE,KAAKF,GAAMwC,OACxBvC,MAASA,EAAIC,KAAKD,GAAMuC,EAEtBtC,KAIRH,YAAa0C,EAAIC,EAAIF,eAEfxC,EAAIyC,EAAGzC,KAASA,EAAIyC,EAAGzC,GAAMwC,OAC7BvC,EAAIwC,EAAGxC,KAASA,EAAIwC,EAAGxC,GAAMuC,EAE3BtC,KAIRH,OAAQS,UAEIA,EAAER,IAAME,KAAKF,GAASQ,EAAEP,IAAMC,KAAKD,EAI/CF,UAAW4C,EAAOC,EAAS,eAErB5C,EAAI2C,EAAOC,QACX3C,EAAI0C,EAAOC,EAAS,GAElB1C,KAIRH,QAAS4C,EAAQ,GAAIC,EAAS,YAEtBA,GAAW1C,KAAKF,IAChB4C,EAAS,GAAM1C,KAAKD,EAEpB0C,EAIR5C,oBAAqB8C,EAAWxC,EAAOuC,eAEtB,IAAXA,WAEIlC,KAAM,4EAIVV,EAAI6C,EAAUC,KAAMzC,QACpBJ,EAAI4C,EAAUE,KAAM1C,GAElBH,KAIRH,aAAciD,EAAQC,SAEfC,EAAI9B,KAAK+B,IAAKF,GAASrC,EAAIQ,KAAKgC,IAAKH,GAErCjD,EAAIE,KAAKF,EAAIgD,EAAOhD,EACpBC,EAAIC,KAAKD,EAAI+C,EAAO/C,cAErBD,EAAIA,EAAIkD,EAAIjD,EAAIW,EAAIoC,EAAOhD,OAC3BC,EAAID,EAAIY,EAAIX,EAAIiD,EAAIF,EAAO/C,EAEzBC,KAIRH,qBAEMC,EAAIoB,KAAKiC,cACTpD,EAAImB,KAAKiC,SAEPnD,MAMToD,EAAQC,UAAUC,WAAY,EC1d9B,MAAMC,EAAO,GAEb,QAAUC,GAAI,EAAGA,GAAI,IAAKA,OAEnBA,QAAY,GAAK,IAAM,IAASA,GAAIC,SAAU,IAIrD,IAAIC,EAAQ,QAGZ,MAAMC,EAAUzC,KAAKe,GAAK,IACpB2B,EAAU,IAAM1C,KAAKe,GAmB3B,WAAgBhC,EAAOoB,EAAKC,UAEpBJ,KAAKE,IAAKC,EAAKH,KAAKC,IAAKG,EAAKrB,IAMtC,WAA0B4D,EAAG9C,YAEbA,EAAMA,GAAMA,EA2B5B,WAAejB,EAAGC,EAAG+D,YAEPA,GAAMhE,EAAIgE,EAAI/D,qGAvD5B,iBAEOgE,EAAqB,WAAhB7C,KAAKiC,SAAwB,EAClCa,EAAqB,WAAhB9C,KAAKiC,SAAwB,EAClCc,EAAqB,WAAhB/C,KAAKiC,SAAwB,EAClCe,EAAqB,WAAhBhD,KAAKiC,SAAwB,SAC3BI,EAAW,IAALQ,GAAcR,EAAMQ,GAAM,EAAI,KAASR,EAAMQ,GAAM,GAAK,KAASR,EAAMQ,GAAM,GAAK,KAAS,IAC5GR,EAAW,IAALS,GAAcT,EAAMS,GAAM,EAAI,KAAS,IAAMT,EAAMS,GAAM,GAAK,GAAO,IAAST,EAAMS,GAAM,GAAK,KAAS,IAC9GT,EAAW,GAALU,EAAY,KAASV,EAAMU,GAAM,EAAI,KAAS,IAAMV,EAAMU,GAAM,GAAK,KAASV,EAAMU,GAAM,GAAK,KACrGV,EAAW,IAALW,GAAcX,EAAMW,GAAM,EAAI,KAASX,EAAMW,GAAM,GAAK,KAASX,EAAMW,GAAM,GAAK,MAG9EC,mDAmBb,SAAoBrE,EAAGsE,EAAIzD,EAAI0D,EAAIzD,UAE3ByD,KAAWD,MAAcC,MAAcD,gBAK/C,SAAsBtE,EAAGC,EAAGE,UAEtBH,IAAMC,KAEOD,MAAYA,GAItB,eAcT,SAAeA,EAAGC,EAAGuE,EAAQC,UAErBC,EAAM1E,EAAGC,EAAG,EAAImB,KAAKuD,KAAOH,EAASC,cAK7C,SAAmBzE,EAAG2B,EAAS,UAEvBA,EAASP,KAAKa,IAAK2C,EAAiB5E,EAAY,EAAT2B,GAAeA,eAK9D,SAAqB3B,EAAGuB,EAAKC,UAEvBxB,GAAKuB,EAAa,EAClBvB,GAAKwB,EAAa,QAEbD,MAAgBA,IAEfvB,KAAU,EAAIA,iBAI1B,SAAuBA,EAAGuB,EAAKC,UAEzBxB,GAAKuB,EAAa,EAClBvB,GAAKwB,EAAa,QAEbD,MAAgBA,IAEfvB,EAAIA,MAAgB,IAAI,IAAO,aAK3C,SAAkB6E,EAAKC,UAEfD,EAAMzD,KAAKS,MAAOT,KAAKiC,YAAoBwB,EAAM,eAKzD,SAAoBA,EAAKC,UAEjBD,EAAMzD,KAAKiC,YAAoBwB,oBAKvC,SAA0BE,UAElBA,MAAgB3D,KAAKiC,wBAK7B,SAAuBzC,eAEX,IAANA,MAA0BA,EAAI,cAInB,MAARgD,EAAgB,cAEP,GAAM,qBAIxB,SAAmBoB,UAEXA,EAAUnB,YAIlB,SAAmBoB,UAEXA,EAAUnB,gBAIlB,SAAuB3D,UAEe,MAAlBA,EAAQ,IAAyB,IAAVA,kBAI3C,SAAyBA,UAEjBiB,KAAK8D,IAAK,EAAG9D,KAAKU,KAAMV,KAAK+D,IAAKhF,GAAUiB,KAAKgE,uBAIzD,SAA0BjF,UAElBiB,KAAK8D,IAAK,EAAG9D,KAAKS,MAAOT,KAAK+D,IAAKhF,GAAUiB,KAAKgE,oCAI1D,SAAuCC,EAAGxE,EAAGC,EAAGoC,EAAGoC,SAQ5CC,EAAMnE,KAAK+B,IACXqC,EAAMpE,KAAKgC,IAEXqC,EAAKF,EAAKzE,EAAI,GACd4E,EAAKF,EAAK1E,EAAI,GAEd6E,EAAMJ,KAAWrC,GAAM,GACvB0C,EAAMJ,KAAWtC,GAAM,GAEvB2C,EAAON,KAAWrC,GAAM,GACxB4C,EAAON,KAAWtC,GAAM,GAExB6C,EAAOR,KAAW1E,GAAM,GACxBmF,EAAOR,KAAW3E,GAAM,UAErByE,OAEH,QACFW,IAAKR,EAAKG,EAAKF,EAAKG,EAAMH,EAAKI,EAAML,EAAKE,aAGxC,QACFM,IAAKP,EAAKI,EAAML,EAAKG,EAAKF,EAAKG,EAAMJ,EAAKE,aAGxC,QACFM,IAAKP,EAAKG,EAAMH,EAAKI,EAAML,EAAKG,EAAKH,EAAKE,aAGxC,QACFM,IAAKR,EAAKG,EAAKF,EAAKM,EAAMN,EAAKK,EAAMN,EAAKE,aAGxC,QACFM,IAAKP,EAAKK,EAAMN,EAAKG,EAAKF,EAAKM,EAAMP,EAAKE,aAGxC,QACFM,IAAKP,EAAKM,EAAMN,EAAKK,EAAMN,EAAKG,EAAKH,EAAKE,yBAIpCjF,KAAM,kFAAoF4E,OC/NrG,QAECvF,YAAaC,EAAI,EAAGC,EAAI,EAAGiG,EAAI,EAAGzF,EAAI,QAEhC0F,GAAKnG,OACLoG,GAAKnG,OACLoG,GAAKH,OACLI,GAAK7F,eAIG8F,EAAIC,EAAIC,EAAIzC,kBAEjBtD,KAAM,wGACP+F,EAAGC,iBAAkBH,EAAIC,EAAIxC,oBAInB2C,EAAKC,EAAWC,EAAMC,EAAYC,EAAMC,EAAYhD,OAIjEiD,EAAKJ,EAAMC,EAAa,GAC3BI,EAAKL,EAAMC,EAAa,GACxBK,EAAKN,EAAMC,EAAa,GACxBM,EAAKP,EAAMC,EAAa,SAEnBO,EAAKN,EAAMC,EAAa,GAC7BM,EAAKP,EAAMC,EAAa,GACxBO,EAAKR,EAAMC,EAAa,GACxBQ,EAAKT,EAAMC,EAAa,MAEd,IAANhD,WAEC4C,EAAY,GAAMK,IAClBL,EAAY,GAAMM,IAClBN,EAAY,GAAMO,SAClBP,EAAY,GAAMQ,MAKb,IAANpD,WAEC4C,EAAY,GAAMS,IAClBT,EAAY,GAAMU,IAClBV,EAAY,GAAMW,SAClBX,EAAY,GAAMY,MAKnBJ,IAAOI,GAAMP,IAAOI,GAAMH,IAAOI,GAAMH,IAAOI,EAAK,KAEnD3G,EAAI,EAAIoD,QACNuB,EAAM0B,EAAKI,EAAKH,EAAKI,EAAKH,EAAKI,EAAKH,EAAKI,EAC9CC,EAAQlC,GAAO,EAAI,KACnBmC,EAAS,EAAInC,EAAMA,KAGfmC,EAASC,OAAOC,QAAU,OAExBpC,EAAMpE,KAAKY,KAAM0F,GACtBG,EAAMzG,KAAKc,MAAOsD,EAAKD,EAAMkC,KAE1BrG,KAAKgC,IAAKxC,EAAIiH,GAAQrC,IACtBpE,KAAKgC,IAAKY,EAAI6D,GAAQrC,QAIrBsC,EAAO9D,EAAIyD,OAEZR,EAAKrG,EAAIyG,EAAKS,IACdZ,EAAKtG,EAAI0G,EAAKQ,IACdX,EAAKvG,EAAI2G,EAAKO,IACdV,EAAKxG,EAAI4G,EAAKM,EAGdlH,IAAM,EAAIoD,EAAI,OAEZ+D,EAAI,EAAI3G,KAAKY,KAAMiF,EAAKA,EAAKC,EAAKA,EAAKC,EAAKA,EAAKC,EAAKA,MAEtDW,KACAA,KACAA,KACAA,KAMHnB,GAAcK,IACdL,EAAY,GAAMM,IAClBN,EAAY,GAAMO,IAClBP,EAAY,GAAMQ,iCAIQT,EAAKC,EAAWC,EAAMC,EAAYC,EAAMC,SAEjEC,EAAKJ,EAAMC,GACXI,EAAKL,EAAMC,EAAa,GACxBK,EAAKN,EAAMC,EAAa,GACxBM,EAAKP,EAAMC,EAAa,GAExBO,EAAKN,EAAMC,GACXM,EAAKP,EAAMC,EAAa,GACxBO,EAAKR,EAAMC,EAAa,GACxBQ,EAAKT,EAAMC,EAAa,YAEzBJ,GAAcK,EAAKO,EAAKJ,EAAKC,EAAKH,EAAKK,EAAKJ,EAAKG,IACjDV,EAAY,GAAMM,EAAKM,EAAKJ,EAAKE,EAAKH,EAAKE,EAAKJ,EAAKM,IACrDX,EAAY,GAAMO,EAAKK,EAAKJ,EAAKG,EAAKN,EAAKK,EAAKJ,EAAKG,IACrDT,EAAY,GAAMQ,EAAKI,EAAKP,EAAKI,EAAKH,EAAKI,EAAKH,EAAKI,EAEnDZ,iBAMAzG,KAAKiG,SAINhG,QAEDgG,GAAKhG,OACL6H,mCAME9H,KAAKkG,SAINjG,QAEDiG,GAAKjG,OACL6H,mCAME9H,KAAKmG,SAINlG,QAEDkG,GAAKlG,OACL6H,mCAME9H,KAAKoG,SAINnG,QAEDmG,GAAKnG,OACL6H,oBAINjI,IAAKC,EAAGC,EAAGiG,EAAGzF,eAER0F,GAAKnG,OACLoG,GAAKnG,OACLoG,GAAKH,OACLI,GAAK7F,OAELuH,oBAEE9H,KAIRH,eAEQ,IAAIG,KAAKK,YAAaL,KAAKiG,GAAIjG,KAAKkG,GAAIlG,KAAKmG,GAAInG,KAAKoG,IAI9DvG,KAAMkI,eAEA9B,GAAK8B,EAAWjI,OAChBoG,GAAK6B,EAAWhI,OAChBoG,GAAK4B,EAAW/B,OAChBI,GAAK2B,EAAWxH,OAEhBuH,oBAEE9H,KAIRH,aAAcmI,EAAOC,WAEFD,EAAME,cAEjB,IAAI9H,MAAO,0GAIZN,EAAIkI,EAAM/B,GAAIlG,EAAIiI,EAAM9B,GAAIF,EAAIgC,EAAM7B,GAAIf,EAAQ4C,EAAMG,OAMxD9C,EAAMnE,KAAK+B,IACXqC,EAAMpE,KAAKgC,IAEXkF,EAAK/C,EAAKvF,EAAI,GACdkD,EAAKqC,EAAKtF,EAAI,GACdsI,EAAKhD,EAAKW,EAAI,GAEdsC,EAAKhD,EAAKxF,EAAI,GACd0F,EAAKF,EAAKvF,EAAI,GACdwI,EAAKjD,EAAKU,EAAI,UAEXZ,OAEH,WACCa,GAAKqC,EAAKtF,EAAKqF,EAAKD,EAAK5C,EAAK+C,OAC9BrC,GAAKkC,EAAK5C,EAAK6C,EAAKC,EAAKtF,EAAKuF,OAC9BpC,GAAKiC,EAAKpF,EAAKuF,EAAKD,EAAK9C,EAAK6C,OAC9BjC,GAAKgC,EAAKpF,EAAKqF,EAAKC,EAAK9C,EAAK+C,YAG/B,WACCtC,GAAKqC,EAAKtF,EAAKqF,EAAKD,EAAK5C,EAAK+C,OAC9BrC,GAAKkC,EAAK5C,EAAK6C,EAAKC,EAAKtF,EAAKuF,OAC9BpC,GAAKiC,EAAKpF,EAAKuF,EAAKD,EAAK9C,EAAK6C,OAC9BjC,GAAKgC,EAAKpF,EAAKqF,EAAKC,EAAK9C,EAAK+C,YAG/B,WACCtC,GAAKqC,EAAKtF,EAAKqF,EAAKD,EAAK5C,EAAK+C,OAC9BrC,GAAKkC,EAAK5C,EAAK6C,EAAKC,EAAKtF,EAAKuF,OAC9BpC,GAAKiC,EAAKpF,EAAKuF,EAAKD,EAAK9C,EAAK6C,OAC9BjC,GAAKgC,EAAKpF,EAAKqF,EAAKC,EAAK9C,EAAK+C,YAG/B,WACCtC,GAAKqC,EAAKtF,EAAKqF,EAAKD,EAAK5C,EAAK+C,OAC9BrC,GAAKkC,EAAK5C,EAAK6C,EAAKC,EAAKtF,EAAKuF,OAC9BpC,GAAKiC,EAAKpF,EAAKuF,EAAKD,EAAK9C,EAAK6C,OAC9BjC,GAAKgC,EAAKpF,EAAKqF,EAAKC,EAAK9C,EAAK+C,YAG/B,WACCtC,GAAKqC,EAAKtF,EAAKqF,EAAKD,EAAK5C,EAAK+C,OAC9BrC,GAAKkC,EAAK5C,EAAK6C,EAAKC,EAAKtF,EAAKuF,OAC9BpC,GAAKiC,EAAKpF,EAAKuF,EAAKD,EAAK9C,EAAK6C,OAC9BjC,GAAKgC,EAAKpF,EAAKqF,EAAKC,EAAK9C,EAAK+C,YAG/B,WACCtC,GAAKqC,EAAKtF,EAAKqF,EAAKD,EAAK5C,EAAK+C,OAC9BrC,GAAKkC,EAAK5C,EAAK6C,EAAKC,EAAKtF,EAAKuF,OAC9BpC,GAAKiC,EAAKpF,EAAKuF,EAAKD,EAAK9C,EAAK6C,OAC9BjC,GAAKgC,EAAKpF,EAAKqF,EAAKC,EAAK9C,EAAK+C,wBAI3B/H,KAAM,mEAAqE4E,UAIrE,IAAX6C,QAAwBH,oBAEtB9H,KAIRH,iBAAkB2I,EAAMzF,SAMjB0F,EAAY1F,EAAQ,EAAGrC,EAAIQ,KAAKgC,IAAKuF,eAEtCxC,GAAKuC,EAAK1I,EAAIY,OACdwF,GAAKsC,EAAKzI,EAAIW,OACdyF,GAAKqC,EAAKxC,EAAItF,OACd0F,GAAKlF,KAAK+B,IAAKwF,QAEfX,oBAEE9H,KAIRH,sBAAuBkB,SAMhB2H,EAAK3H,EAAEE,SAEZ0H,EAAMD,EAAI,GAAKE,EAAMF,EAAI,GAAKG,EAAMH,EAAI,GACxCI,EAAMJ,EAAI,GAAKK,EAAML,EAAI,GAAKM,EAAMN,EAAI,GACxCO,EAAMP,EAAI,GAAKQ,EAAMR,EAAI,GAAKS,EAAMT,EAAI,IAExCU,EAAQT,EAAMI,EAAMI,KAEhBC,EAAQ,EAAI,OAEV1I,EAAI,GAAMQ,KAAKY,KAAMsH,EAAQ,QAE9BhD,GAAK,IAAO1F,OACZuF,MAAa+C,GAAQtI,OACrBwF,MAAa+C,GAAQvI,OACrByF,MAAayC,GAAQlI,UAEfiI,EAAMI,GAAOJ,EAAMQ,EAAM,OAE9BzI,EAAI,EAAMQ,KAAKY,KAAM,EAAM6G,EAAMI,EAAMI,QAExC/C,MAAa4C,GAAQtI,OACrBuF,GAAK,IAAOvF,OACZwF,MAAa4C,GAAQpI,OACrByF,MAAa8C,GAAQvI,UAEfqI,EAAMI,EAAM,OAEjBzI,EAAI,EAAMQ,KAAKY,KAAM,EAAMiH,EAAMJ,EAAMQ,QAExC/C,MAAa6C,GAAQvI,OACrBuF,MAAa6C,GAAQpI,OACrBwF,GAAK,IAAOxF,OACZyF,MAAa+C,GAAQxI,MAEpB,OAEAA,EAAI,EAAMQ,KAAKY,KAAM,EAAMqH,EAAMR,EAAMI,QAExC3C,MAAawC,GAAQlI,OACrBuF,MAAagD,GAAQvI,OACrBwF,MAAagD,GAAQxI,OACrByF,GAAK,IAAOzF,cAIboH,oBAEE9H,KAIRH,mBAAoBwJ,EAAOC,OAItBC,EAAIF,EAAMG,IAAKF,GAAQ,SAEtBC,EAAI9B,OAAOC,WAIX,EAECxG,KAAKa,IAAKsH,EAAMvJ,GAAMoB,KAAKa,IAAKsH,EAAMrD,SAErCC,IAAOoD,EAAMtJ,OACbmG,GAAKmD,EAAMvJ,OACXqG,GAAK,OACLC,GAAKmD,SAILtD,GAAK,OACLC,IAAOmD,EAAMrD,OACbG,GAAKkD,EAAMtJ,OACXqG,GAAKmD,UAQNtD,GAAKoD,EAAMtJ,EAAIuJ,EAAItD,EAAIqD,EAAMrD,EAAIsD,EAAIvJ,OACrCmG,GAAKmD,EAAMrD,EAAIsD,EAAIxJ,EAAIuJ,EAAMvJ,EAAIwJ,EAAItD,OACrCG,GAAKkD,EAAMvJ,EAAIwJ,EAAIvJ,EAAIsJ,EAAMtJ,EAAIuJ,EAAIxJ,OACrCsG,GAAKmD,GAIJvJ,KAAKqC,YAIbxC,QAASsF,UAED,EAAIjE,KAAKuI,KAAMvI,KAAKa,IAAK2H,EAAiB1J,KAAKwJ,IAAKrE,MAAU,KAItEtF,cAAesF,EAAGwE,SAEX5G,EAAQ/C,KAAK4J,QAASzE,MAEb,IAAVpC,SAAqB/C,WAEpB8D,EAAI5C,KAAKC,IAAK,EAAGwI,EAAO5G,eAEzB8G,MAAO1E,EAAGrB,GAER9D,KAIRH,kBAEQG,KAAK+F,IAAK,EAAG,EAAG,EAAG,GAI3BlG,gBAIQG,KAAK8J,YAIbjK,wBAEMoG,YACAC,YACAC,YAEA2B,oBAEE9H,KAIRH,IAAKS,UAEGN,KAAKiG,GAAK3F,EAAE2F,GAAKjG,KAAKkG,GAAK5F,EAAE4F,GAAKlG,KAAKmG,GAAK7F,EAAE6F,GAAKnG,KAAKoG,GAAK9F,EAAE8F,GAIvEvG,kBAEQG,KAAKiG,GAAKjG,KAAKiG,GAAKjG,KAAKkG,GAAKlG,KAAKkG,GAAKlG,KAAKmG,GAAKnG,KAAKmG,GAAKnG,KAAKoG,GAAKpG,KAAKoG,GAInFvG,gBAEQqB,KAAKY,KAAM9B,KAAKiG,GAAKjG,KAAKiG,GAAKjG,KAAKkG,GAAKlG,KAAKkG,GAAKlG,KAAKmG,GAAKnG,KAAKmG,GAAKnG,KAAKoG,GAAKpG,KAAKoG,IAI9FvG,gBAEKkK,EAAI/J,KAAKyB,gBAEF,IAANsI,QAEC9D,GAAK,OACLC,GAAK,OACLC,GAAK,OACLC,GAAK,MAIN,EAAI2D,OAEH9D,GAAKjG,KAAKiG,GAAK8D,OACf7D,GAAKlG,KAAKkG,GAAK6D,OACf5D,GAAKnG,KAAKmG,GAAK4D,OACf3D,GAAKpG,KAAKoG,GAAK2D,QAIhBjC,oBAEE9H,KAIRH,SAAUsF,EAAG6E,eAED,IAANA,WAEIxJ,KAAM,0GACPR,KAAKiK,oBAAqB9E,EAAG6E,IAI9BhK,KAAKiK,oBAAqBjK,KAAMmF,GAIxCtF,YAAasF,UAELnF,KAAKiK,oBAAqB9E,EAAGnF,MAIrCH,oBAAqBc,EAAGC,SAIjBsJ,EAAMvJ,EAAEsF,GAAIkE,EAAMxJ,EAAEuF,GAAIkE,EAAMzJ,EAAEwF,GAAIkE,EAAM1J,EAAEyF,GAC5CkE,EAAM1J,EAAEqF,GAAIsE,EAAM3J,EAAEsF,GAAIsE,EAAM5J,EAAEuF,GAAIsE,EAAM7J,EAAEwF,eAE7CH,GAAKiE,EAAMO,EAAMJ,EAAMC,EAAMH,EAAMK,EAAMJ,EAAMG,OAC/CrE,GAAKiE,EAAMM,EAAMJ,EAAME,EAAMH,EAAME,EAAMJ,EAAMM,OAC/CrE,GAAKiE,EAAMK,EAAMJ,EAAMG,EAAMN,EAAMK,EAAMJ,EAAMG,OAC/ClE,GAAKiE,EAAMI,EAAMP,EAAMI,EAAMH,EAAMI,EAAMH,EAAMI,OAE/C1C,oBAEE9H,KAIRH,MAAOyG,EAAIxC,MAEC,IAANA,SAAiB9D,QACX,IAAN8D,SAAiB9D,KAAK0K,KAAMpE,SAE3BxG,EAAIE,KAAKiG,GAAIlG,EAAIC,KAAKkG,GAAIF,EAAIhG,KAAKmG,GAAI5F,EAAIP,KAAKoG,OAIlDuE,EAAepK,EAAI+F,EAAGF,GAAKtG,EAAIwG,EAAGL,GAAKlG,EAAIuG,EAAGJ,GAAKF,EAAIM,EAAGH,MAEzDwE,EAAe,QAEdvE,IAAOE,EAAGF,QACVH,IAAOK,EAAGL,QACVC,IAAOI,EAAGJ,QACVC,IAAOG,EAAGH,MAEEwE,QAIZD,KAAMpE,GAIPqE,GAAgB,cAEfvE,GAAK7F,OACL0F,GAAKnG,OACLoG,GAAKnG,OACLoG,GAAKH,EAEHhG,WAIF4K,EAAkB,EAAMD,EAAeA,KAExCC,GAAmBnD,OAAOC,QAAU,OAElChH,EAAI,EAAIoD,cACTsC,GAAK1F,EAAIH,EAAIuD,EAAI9D,KAAKoG,QACtBH,GAAKvF,EAAIZ,EAAIgE,EAAI9D,KAAKiG,QACtBC,GAAKxF,EAAIX,EAAI+D,EAAI9D,KAAKkG,QACtBC,GAAKzF,EAAIsF,EAAIlC,EAAI9D,KAAKmG,QAEtB9D,iBACAyF,oBAEE9H,WAIF6K,EAAe3J,KAAKY,KAAM8I,GAC1BE,EAAY5J,KAAKc,MAAO6I,EAAcF,GACtCI,EAAS7J,KAAKgC,OAAWY,GAAMgH,GAAcD,EAClDG,EAAS9J,KAAKgC,IAAKY,EAAIgH,GAAcD,cAEjCzE,GAAO7F,EAAIwK,EAAS/K,KAAKoG,GAAK4E,OAC9B/E,GAAOnG,EAAIiL,EAAS/K,KAAKiG,GAAK+E,OAC9B9E,GAAOnG,EAAIgL,EAAS/K,KAAKkG,GAAK8E,OAC9B7E,GAAOH,EAAI+E,EAAS/K,KAAKmG,GAAK6E,OAE9BlD,oBAEE9H,KAIRH,iBAAkBwG,EAAIC,EAAIxC,QAEpB4G,KAAMrE,GAAKwD,MAAOvD,EAAIxC,GAI5BjE,OAAQkI,UAEEA,EAAW9B,KAAOjG,KAAKiG,IAAU8B,EAAW7B,KAAOlG,KAAKkG,IAAU6B,EAAW5B,KAAOnG,KAAKmG,IAAU4B,EAAW3B,KAAOpG,KAAKoG,GAIpIvG,UAAW4C,EAAOC,EAAS,eAErBuD,GAAKxD,EAAOC,QACZwD,GAAKzD,EAAOC,EAAS,QACrByD,GAAK1D,EAAOC,EAAS,QACrB0D,GAAK3D,EAAOC,EAAS,QAErBoF,oBAEE9H,KAIRH,QAAS4C,EAAQ,GAAIC,EAAS,YAEtBA,GAAW1C,KAAKiG,KAChBvD,EAAS,GAAM1C,KAAKkG,KACpBxD,EAAS,GAAM1C,KAAKmG,KACpBzD,EAAS,GAAM1C,KAAKoG,GAEpB3D,EAIR5C,oBAAqB8C,EAAWxC,eAE1B8F,GAAKtD,EAAUC,KAAMzC,QACrB+F,GAAKvD,EAAUE,KAAM1C,QACrBgG,GAAKxD,EAAUsI,KAAM9K,QACrBiG,GAAKzD,EAAUuI,KAAM/K,GAEnBH,KAIRH,UAAWsL,eAELrD,kBAAoBqD,EAElBnL,KAIRH,sBAIDuL,EAAW/H,UAAUgI,cAAe,ECppBpC,QAECxL,YAAaC,EAAI,EAAGC,EAAI,EAAGiG,EAAI,QAEzBlG,EAAIA,OACJC,EAAIA,OACJiG,EAAIA,EAIVnG,IAAKC,EAAGC,EAAGiG,eAEC,IAANA,MAAsBhG,KAAKgG,QAE3BlG,EAAIA,OACJC,EAAIA,OACJiG,EAAIA,EAEFhG,KAIRH,UAAWK,eAELJ,EAAII,OACJH,EAAIG,OACJ8F,EAAI9F,EAEFF,KAIRH,KAAMC,eAEAA,EAAIA,EAEFE,KAIRH,KAAME,eAEAA,EAAIA,EAEFC,KAIRH,KAAMmG,eAEAA,EAAIA,EAEFhG,KAIRH,aAAcM,EAAOF,UAEXE,QAEH,OAAQL,EAAIG,aACZ,OAAQF,EAAIE,aACZ,OAAQ+F,EAAI/F,sBACF,IAAIG,MAAO,0BAA4BD,UAIhDH,KAIRH,aAAcM,UAEJA,QAEH,SAAUH,KAAKF,OACf,SAAUE,KAAKD,OACf,SAAUC,KAAKgG,gBACL,IAAI5F,MAAO,0BAA4BD,IAMxDN,eAEQ,IAAIG,KAAKK,YAAaL,KAAKF,EAAGE,KAAKD,EAAGC,KAAKgG,GAInDnG,KAAMS,eAEAR,EAAIQ,EAAER,OACNC,EAAIO,EAAEP,OACNiG,EAAI1F,EAAE0F,EAEJhG,KAIRH,IAAKS,EAAGC,eAEI,IAANA,WAEIC,KAAM,yFACPR,KAAKS,WAAYH,EAAGC,UAIvBT,GAAKQ,EAAER,OACPC,GAAKO,EAAEP,OACPiG,GAAK1F,EAAE0F,EAELhG,MAIRH,UAAWa,eAELZ,GAAKY,OACLX,GAAKW,OACLsF,GAAKtF,EAEHV,KAIRH,WAAYc,EAAGC,eAETd,EAAIa,EAAEb,EAAIc,EAAEd,OACZC,EAAIY,EAAEZ,EAAIa,EAAEb,OACZiG,EAAIrF,EAAEqF,EAAIpF,EAAEoF,EAEVhG,KAIRH,gBAAiBS,EAAGI,eAEdZ,GAAKQ,EAAER,EAAIY,OACXX,GAAKO,EAAEP,EAAIW,OACXsF,GAAK1F,EAAE0F,EAAItF,EAETV,KAIRH,IAAKS,EAAGC,eAEI,IAANA,WAEIC,KAAM,yFACPR,KAAKa,WAAYP,EAAGC,UAIvBT,GAAKQ,EAAER,OACPC,GAAKO,EAAEP,OACPiG,GAAK1F,EAAE0F,EAELhG,MAIRH,UAAWa,eAELZ,GAAKY,OACLX,GAAKW,OACLsF,GAAKtF,EAEHV,KAIRH,WAAYc,EAAGC,eAETd,EAAIa,EAAEb,EAAIc,EAAEd,OACZC,EAAIY,EAAEZ,EAAIa,EAAEb,OACZiG,EAAIrF,EAAEqF,EAAIpF,EAAEoF,EAEVhG,KAIRH,SAAUS,EAAGC,eAED,IAANA,WAEIC,KAAM,mGACPR,KAAKsL,gBAAiBhL,EAAGC,UAI5BT,GAAKQ,EAAER,OACPC,GAAKO,EAAEP,OACPiG,GAAK1F,EAAE0F,EAELhG,MAIRH,eAAgBK,eAEVJ,GAAKI,OACLH,GAAKG,OACL8F,GAAK9F,EAEHF,KAIRH,gBAAiBc,EAAGC,eAEdd,EAAIa,EAAEb,EAAIc,EAAEd,OACZC,EAAIY,EAAEZ,EAAIa,EAAEb,OACZiG,EAAIrF,EAAEqF,EAAIpF,EAAEoF,EAEVhG,KAIRH,WAAYmI,aAEOA,EAAME,iBAEfqD,MAAO,+FAITvL,KAAKwL,gBAAiBC,EAAYC,aAAc1D,IAIxDnI,eAAgB2I,EAAMzF,UAEd/C,KAAKwL,gBAAiBC,EAAYE,iBAAkBnD,EAAMzF,IAIlElD,aAAckB,SAEPjB,EAAIE,KAAKF,EAAGC,EAAIC,KAAKD,EAAGiG,EAAIhG,KAAKgG,EACjChF,EAAID,EAAEE,qBAEPnB,EAAIkB,EAAG,GAAMlB,EAAIkB,EAAG,GAAMjB,EAAIiB,EAAG,GAAMgF,OACvCjG,EAAIiB,EAAG,GAAMlB,EAAIkB,EAAG,GAAMjB,EAAIiB,EAAG,GAAMgF,OACvCA,EAAIhF,EAAG,GAAMlB,EAAIkB,EAAG,GAAMjB,EAAIiB,EAAG,GAAMgF,EAErChG,KAIRH,kBAAmBkB,UAEXf,KAAK4L,aAAc7K,GAAIsB,YAI/BxC,aAAckB,SAEPjB,EAAIE,KAAKF,EAAGC,EAAIC,KAAKD,EAAGiG,EAAIhG,KAAKgG,EACjChF,EAAID,EAAEE,SAENV,EAAI,KAAS,GAAMT,EAAIkB,EAAG,GAAMjB,EAAIiB,EAAG,IAAOgF,EAAIhF,EAAG,iBAEtDlB,KAAS,GAAMA,EAAIkB,EAAG,GAAMjB,EAAIiB,EAAG,GAAMgF,EAAIhF,EAAG,KAAST,OACzDR,KAAS,GAAMD,EAAIkB,EAAG,GAAMjB,EAAIiB,EAAG,GAAMgF,EAAIhF,EAAG,KAAST,OACzDyF,KAAS,GAAMlG,EAAIkB,EAAG,GAAMjB,EAAIiB,EAAG,IAAOgF,EAAIhF,EAAG,KAAST,EAExDP,KAIRH,gBAAiBsF,SAEVrF,EAAIE,KAAKF,EAAGC,EAAIC,KAAKD,EAAGiG,EAAIhG,KAAKgG,EACjC6F,EAAK1G,EAAErF,EAAGgM,EAAK3G,EAAEpF,EAAGgM,EAAK5G,EAAEa,EAAGgG,EAAK7G,EAAE5E,EAIrC0L,EAAKD,EAAKlM,EAAIgM,EAAK9F,EAAI+F,EAAKhM,EAC5BmM,EAAKF,EAAKjM,EAAIgM,EAAKjM,EAAI+L,EAAK7F,EAC5BmG,EAAKH,EAAKhG,EAAI6F,EAAK9L,EAAI+L,EAAKhM,EAC5BsM,GAAOP,EAAK/L,EAAIgM,EAAK/L,EAAIgM,EAAK/F,cAI/BlG,EAAImM,EAAKD,EAAKI,GAAOP,EAAKK,GAAOH,EAAKI,GAAOL,OAC7C/L,EAAImM,EAAKF,EAAKI,GAAON,EAAKK,GAAON,EAAKI,GAAOF,OAC7C/F,EAAImG,EAAKH,EAAKI,GAAOL,EAAKE,GAAOH,EAAKI,GAAOL,EAE3C7L,KAIRH,QAASwM,UAEDrM,KAAKsM,aAAcD,EAAOE,oBAAqBD,aAAcD,EAAOG,kBAI5E3M,UAAWwM,UAEHrM,KAAKsM,aAAcD,EAAOI,yBAA0BH,aAAcD,EAAOK,aAIjF7M,mBAAoBkB,SAKbjB,EAAIE,KAAKF,EAAGC,EAAIC,KAAKD,EAAGiG,EAAIhG,KAAKgG,EACjChF,EAAID,EAAEE,qBAEPnB,EAAIkB,EAAG,GAAMlB,EAAIkB,EAAG,GAAMjB,EAAIiB,EAAG,GAAMgF,OACvCjG,EAAIiB,EAAG,GAAMlB,EAAIkB,EAAG,GAAMjB,EAAIiB,EAAG,GAAMgF,OACvCA,EAAIhF,EAAG,GAAMlB,EAAIkB,EAAG,GAAMjB,EAAIiB,EAAG,IAAOgF,EAEtChG,KAAKqC,YAIbxC,OAAQS,eAEFR,GAAKQ,EAAER,OACPC,GAAKO,EAAEP,OACPiG,GAAK1F,EAAE0F,EAELhG,KAIRH,aAAcK,UAENF,KAAKc,eAAgB,EAAIZ,GAIjCL,IAAKS,eAECR,EAAIoB,KAAKC,IAAKnB,KAAKF,EAAGQ,EAAER,QACxBC,EAAImB,KAAKC,IAAKnB,KAAKD,EAAGO,EAAEP,QACxBiG,EAAI9E,KAAKC,IAAKnB,KAAKgG,EAAG1F,EAAE0F,GAEtBhG,KAIRH,IAAKS,eAECR,EAAIoB,KAAKE,IAAKpB,KAAKF,EAAGQ,EAAER,QACxBC,EAAImB,KAAKE,IAAKpB,KAAKD,EAAGO,EAAEP,QACxBiG,EAAI9E,KAAKE,IAAKpB,KAAKgG,EAAG1F,EAAE0F,GAEtBhG,KAIRH,MAAOwB,EAAKC,eAINxB,EAAIoB,KAAKE,IAAKC,EAAIvB,EAAGoB,KAAKC,IAAKG,EAAIxB,EAAGE,KAAKF,SAC3CC,EAAImB,KAAKE,IAAKC,EAAItB,EAAGmB,KAAKC,IAAKG,EAAIvB,EAAGC,KAAKD,SAC3CiG,EAAI9E,KAAKE,IAAKC,EAAI2E,EAAG9E,KAAKC,IAAKG,EAAI0E,EAAGhG,KAAKgG,IAEzChG,KAIRH,YAAa0B,EAAQC,eAEf1B,EAAIoB,KAAKE,IAAKG,EAAQL,KAAKC,IAAKK,EAAQxB,KAAKF,SAC7CC,EAAImB,KAAKE,IAAKG,EAAQL,KAAKC,IAAKK,EAAQxB,KAAKD,SAC7CiG,EAAI9E,KAAKE,IAAKG,EAAQL,KAAKC,IAAKK,EAAQxB,KAAKgG,IAE3ChG,KAIRH,YAAawB,EAAKC,SAEXG,EAASzB,KAAKyB,gBAEbzB,KAAK0B,aAAcD,GAAU,GAAIX,eAAgBI,KAAKE,IAAKC,EAAKH,KAAKC,IAAKG,EAAKG,KAIvF5B,oBAEMC,EAAIoB,KAAKS,MAAO3B,KAAKF,QACrBC,EAAImB,KAAKS,MAAO3B,KAAKD,QACrBiG,EAAI9E,KAAKS,MAAO3B,KAAKgG,GAEnBhG,KAIRH,mBAEMC,EAAIoB,KAAKU,KAAM5B,KAAKF,QACpBC,EAAImB,KAAKU,KAAM5B,KAAKD,QACpBiG,EAAI9E,KAAKU,KAAM5B,KAAKgG,GAElBhG,KAIRH,oBAEMC,EAAIoB,KAAKW,MAAO7B,KAAKF,QACrBC,EAAImB,KAAKW,MAAO7B,KAAKD,QACrBiG,EAAI9E,KAAKW,MAAO7B,KAAKgG,GAEnBhG,KAIRH,0BAEMC,EAAME,KAAKF,EAAI,EAAMoB,KAAKU,KAAM5B,KAAKF,GAAMoB,KAAKS,MAAO3B,KAAKF,QAC5DC,EAAMC,KAAKD,EAAI,EAAMmB,KAAKU,KAAM5B,KAAKD,GAAMmB,KAAKS,MAAO3B,KAAKD,QAC5DiG,EAAMhG,KAAKgG,EAAI,EAAM9E,KAAKU,KAAM5B,KAAKgG,GAAM9E,KAAKS,MAAO3B,KAAKgG,GAE1DhG,KAIRH,qBAEMC,GAAME,KAAKF,OACXC,GAAMC,KAAKD,OACXiG,GAAMhG,KAAKgG,EAEThG,KAIRH,IAAKS,UAEGN,KAAKF,EAAIQ,EAAER,EAAIE,KAAKD,EAAIO,EAAEP,EAAIC,KAAKgG,EAAI1F,EAAE0F,EAMjDnG,kBAEQG,KAAKF,EAAIE,KAAKF,EAAIE,KAAKD,EAAIC,KAAKD,EAAIC,KAAKgG,EAAIhG,KAAKgG,EAI1DnG,gBAEQqB,KAAKY,KAAM9B,KAAKF,EAAIE,KAAKF,EAAIE,KAAKD,EAAIC,KAAKD,EAAIC,KAAKgG,EAAIhG,KAAKgG,GAIrEnG,yBAEQqB,KAAKa,IAAK/B,KAAKF,GAAMoB,KAAKa,IAAK/B,KAAKD,GAAMmB,KAAKa,IAAK/B,KAAKgG,GAIjEnG,mBAEQG,KAAK0B,aAAc1B,KAAKyB,UAAY,GAI5C5B,UAAW4B,UAEHzB,KAAKqC,YAAYvB,eAAgBW,GAIzC5B,KAAMS,EAAGgC,eAEHxC,MAASA,EAAIE,KAAKF,GAAMwC,OACxBvC,MAASA,EAAIC,KAAKD,GAAMuC,OACxB0D,MAASA,EAAIhG,KAAKgG,GAAM1D,EAEtBtC,KAIRH,YAAa0C,EAAIC,EAAIF,eAEfxC,EAAIyC,EAAGzC,KAASA,EAAIyC,EAAGzC,GAAMwC,OAC7BvC,EAAIwC,EAAGxC,KAASA,EAAIwC,EAAGxC,GAAMuC,OAC7B0D,EAAIzD,EAAGyD,KAASA,EAAIzD,EAAGyD,GAAM1D,EAE3BtC,KAIRH,MAAOS,EAAGC,eAEE,IAANA,WAEIC,KAAM,6FACPR,KAAK2M,aAAcrM,EAAGC,IAIvBP,KAAK2M,aAAc3M,KAAMM,GAIjCT,aAAcc,EAAGC,SAEVgM,EAAKjM,EAAEb,EAAG+M,EAAKlM,EAAEZ,EAAG+M,EAAKnM,EAAEqF,EAC3B+G,EAAKnM,EAAEd,EAAGkN,EAAKpM,EAAEb,EAAGkN,EAAKrM,EAAEoF,cAE5BlG,EAAI+M,EAAKI,EAAKH,EAAKE,OACnBjN,EAAI+M,EAAKC,EAAKH,EAAKK,OACnBjH,EAAI4G,EAAKI,EAAKH,EAAKE,EAEjB/M,KAIRH,gBAAiBS,SAEV4M,EAAc5M,EAAE6M,cAED,IAAhBD,SAA2BlN,KAAK+F,IAAK,EAAG,EAAG,SAE1C7F,EAASI,EAAEkJ,IAAKxJ,MAASkN,SAExBlN,KAAK0K,KAAMpK,GAAIQ,eAAgBZ,GAIvCL,eAAgBuN,YAEP1C,KAAM1K,MAAOqN,gBAAiBD,GAE/BpN,KAAKsN,IAAKC,GAIlB1N,QAAS2N,UAKDxN,KAAKsN,IAAKC,EAAQ7C,KAAM8C,GAAS1M,eAAgB,EAAId,KAAKwJ,IAAKgE,KAIvE3N,QAASS,SAEF4M,EAAchM,KAAKY,KAAM9B,KAAKmN,WAAa7M,EAAE6M,eAE9B,IAAhBD,SAA2BhM,KAAKe,GAAK,QAEpCwL,EAAQzN,KAAKwJ,IAAKlJ,GAAM4M,SAIvBhM,KAAKuI,KAAMC,EAAiB+D,KAAY,IAIhD5N,WAAYS,UAEJY,KAAKY,KAAM9B,KAAKkC,kBAAmB5B,IAI3CT,kBAAmBS,SAEZ6B,EAAKnC,KAAKF,EAAIQ,EAAER,EAAGsC,EAAKpC,KAAKD,EAAIO,EAAEP,EAAG2N,EAAK1N,KAAKgG,EAAI1F,EAAE0F,SAErD7D,EAAKA,EAAKC,EAAKA,EAAKsL,EAAKA,EAIjC7N,oBAAqBS,UAEbY,KAAKa,IAAK/B,KAAKF,EAAIQ,EAAER,GAAMoB,KAAKa,IAAK/B,KAAKD,EAAIO,EAAEP,GAAMmB,KAAKa,IAAK/B,KAAKgG,EAAI1F,EAAE0F,GAInFnG,iBAAkBa,UAEVV,KAAK2N,uBAAwBjN,EAAEkN,OAAQlN,EAAEmN,IAAKnN,EAAE+M,OAIxD5N,uBAAwB+N,EAAQC,EAAKJ,SAE9BK,EAAe5M,KAAKgC,IAAK2K,GAAQD,cAElC9N,EAAIgO,EAAe5M,KAAKgC,IAAKuK,QAC7B1N,EAAImB,KAAK+B,IAAK4K,GAAQD,OACtB5H,EAAI8H,EAAe5M,KAAK+B,IAAKwK,GAE3BzN,KAIRH,mBAAoBmD,UAEZhD,KAAK+N,yBAA0B/K,EAAE4K,OAAQ5K,EAAEyK,MAAOzK,EAAEjD,GAI5DF,yBAA0B+N,EAAQH,EAAO1N,eAEnCD,EAAI8N,EAAS1M,KAAKgC,IAAKuK,QACvB1N,EAAIA,OACJiG,EAAI4H,EAAS1M,KAAK+B,IAAKwK,GAErBzN,KAIRH,sBAAuBkB,SAEhBC,EAAID,EAAEE,qBAEPnB,EAAIkB,EAAG,SACPjB,EAAIiB,EAAG,SACPgF,EAAIhF,EAAG,IAELhB,KAIRH,mBAAoBkB,SAEbiN,EAAKhO,KAAKiO,oBAAqBlN,EAAG,GAAIU,SACtCyM,EAAKlO,KAAKiO,oBAAqBlN,EAAG,GAAIU,SACtC0M,EAAKnO,KAAKiO,oBAAqBlN,EAAG,GAAIU,qBAEvC3B,EAAIkO,OACJjO,EAAImO,OACJlI,EAAImI,EAEFnO,KAIRH,oBAAqBkB,EAAGZ,UAEhBH,KAAKoO,UAAWrN,EAAEE,SAAkB,EAARd,GAIpCN,qBAAsBkB,EAAGZ,UAEjBH,KAAKoO,UAAWrN,EAAEE,SAAkB,EAARd,GAIpCN,OAAQS,UAEIA,EAAER,IAAME,KAAKF,GAASQ,EAAEP,IAAMC,KAAKD,GAASO,EAAE0F,IAAMhG,KAAKgG,EAIrEnG,UAAW4C,EAAOC,EAAS,eAErB5C,EAAI2C,EAAOC,QACX3C,EAAI0C,EAAOC,EAAS,QACpBsD,EAAIvD,EAAOC,EAAS,GAElB1C,KAIRH,QAAS4C,EAAQ,GAAIC,EAAS,YAEtBA,GAAW1C,KAAKF,IAChB4C,EAAS,GAAM1C,KAAKD,IACpB2C,EAAS,GAAM1C,KAAKgG,EAEpBvD,EAIR5C,oBAAqB8C,EAAWxC,EAAOuC,eAEtB,IAAXA,WAEIlC,KAAM,4EAIVV,EAAI6C,EAAUC,KAAMzC,QACpBJ,EAAI4C,EAAUE,KAAM1C,QACpB6F,EAAIrD,EAAUsI,KAAM9K,GAElBH,KAIRH,qBAEMC,EAAIoB,KAAKiC,cACTpD,EAAImB,KAAKiC,cACT6C,EAAI9E,KAAKiC,SAEPnD,MAMTqO,EAAQhL,UAAUiL,WAAY,EAE9B,MAAMf,MAA4Bc,EAC5B5C,MAAgCL,EC9sBtC,QAECvL,YAAaC,EAAI,EAAGC,EAAI,EAAGiG,EAAI,EAAGzF,EAAI,QAEhCT,EAAIA,OACJC,EAAIA,OACJiG,EAAIA,OACJzF,EAAIA,qBAMFP,KAAKgG,YAIF/F,QAEL+F,EAAI/F,sBAMFD,KAAKO,aAIDN,QAENM,EAAIN,EAIVJ,IAAKC,EAAGC,EAAGiG,EAAGzF,eAERT,EAAIA,OACJC,EAAIA,OACJiG,EAAIA,OACJzF,EAAIA,EAEFP,KAIRH,UAAWK,eAELJ,EAAII,OACJH,EAAIG,OACJ8F,EAAI9F,OACJK,EAAIL,EAEFF,KAIRH,KAAMC,eAEAA,EAAIA,EAEFE,KAIRH,KAAME,eAEAA,EAAIA,EAEFC,KAIRH,KAAMmG,eAEAA,EAAIA,EAEFhG,KAIRH,KAAMU,eAEAA,EAAIA,EAEFP,KAIRH,aAAcM,EAAOF,UAEXE,QAEH,OAAQL,EAAIG,aACZ,OAAQF,EAAIE,aACZ,OAAQ+F,EAAI/F,aACZ,OAAQM,EAAIN,sBACF,IAAIG,MAAO,0BAA4BD,UAIhDH,KAIRH,aAAcM,UAEJA,QAEH,SAAUH,KAAKF,OACf,SAAUE,KAAKD,OACf,SAAUC,KAAKgG,OACf,SAAUhG,KAAKO,gBACL,IAAIH,MAAO,0BAA4BD,IAMxDN,eAEQ,IAAIG,KAAKK,YAAaL,KAAKF,EAAGE,KAAKD,EAAGC,KAAKgG,EAAGhG,KAAKO,GAI3DV,KAAMS,eAEAR,EAAIQ,EAAER,OACNC,EAAIO,EAAEP,OACNiG,EAAI1F,EAAE0F,OACNzF,OAAc,IAARD,EAAEC,EAAoBD,EAAEC,EAAI,EAEhCP,KAIRH,IAAKS,EAAGC,eAEI,IAANA,WAEIC,KAAM,yFACPR,KAAKS,WAAYH,EAAGC,UAIvBT,GAAKQ,EAAER,OACPC,GAAKO,EAAEP,OACPiG,GAAK1F,EAAE0F,OACPzF,GAAKD,EAAEC,EAELP,MAIRH,UAAWa,eAELZ,GAAKY,OACLX,GAAKW,OACLsF,GAAKtF,OACLH,GAAKG,EAEHV,KAIRH,WAAYc,EAAGC,eAETd,EAAIa,EAAEb,EAAIc,EAAEd,OACZC,EAAIY,EAAEZ,EAAIa,EAAEb,OACZiG,EAAIrF,EAAEqF,EAAIpF,EAAEoF,OACZzF,EAAII,EAAEJ,EAAIK,EAAEL,EAEVP,KAIRH,gBAAiBS,EAAGI,eAEdZ,GAAKQ,EAAER,EAAIY,OACXX,GAAKO,EAAEP,EAAIW,OACXsF,GAAK1F,EAAE0F,EAAItF,OACXH,GAAKD,EAAEC,EAAIG,EAETV,KAIRH,IAAKS,EAAGC,eAEI,IAANA,WAEIC,KAAM,yFACPR,KAAKa,WAAYP,EAAGC,UAIvBT,GAAKQ,EAAER,OACPC,GAAKO,EAAEP,OACPiG,GAAK1F,EAAE0F,OACPzF,GAAKD,EAAEC,EAELP,MAIRH,UAAWa,eAELZ,GAAKY,OACLX,GAAKW,OACLsF,GAAKtF,OACLH,GAAKG,EAEHV,KAIRH,WAAYc,EAAGC,eAETd,EAAIa,EAAEb,EAAIc,EAAEd,OACZC,EAAIY,EAAEZ,EAAIa,EAAEb,OACZiG,EAAIrF,EAAEqF,EAAIpF,EAAEoF,OACZzF,EAAII,EAAEJ,EAAIK,EAAEL,EAEVP,KAIRH,SAAUS,eAEJR,GAAKQ,EAAER,OACPC,GAAKO,EAAEP,OACPiG,GAAK1F,EAAE0F,OACPzF,GAAKD,EAAEC,EAELP,KAIRH,eAAgBK,eAEVJ,GAAKI,OACLH,GAAKG,OACL8F,GAAK9F,OACLK,GAAKL,EAEHF,KAIRH,aAAckB,SAEPjB,EAAIE,KAAKF,EAAGC,EAAIC,KAAKD,EAAGiG,EAAIhG,KAAKgG,EAAGzF,EAAIP,KAAKO,EAC7CS,EAAID,EAAEE,qBAEPnB,EAAIkB,EAAG,GAAMlB,EAAIkB,EAAG,GAAMjB,EAAIiB,EAAG,GAAMgF,EAAIhF,EAAG,IAAOT,OACrDR,EAAIiB,EAAG,GAAMlB,EAAIkB,EAAG,GAAMjB,EAAIiB,EAAG,GAAMgF,EAAIhF,EAAG,IAAOT,OACrDyF,EAAIhF,EAAG,GAAMlB,EAAIkB,EAAG,GAAMjB,EAAIiB,EAAG,IAAOgF,EAAIhF,EAAG,IAAOT,OACtDA,EAAIS,EAAG,GAAMlB,EAAIkB,EAAG,GAAMjB,EAAIiB,EAAG,IAAOgF,EAAIhF,EAAG,IAAOT,EAEpDP,KAIRH,aAAcK,UAENF,KAAKc,eAAgB,EAAIZ,GAIjCL,2BAA4BsF,QAMtB5E,EAAI,EAAIW,KAAKuI,KAAMtE,EAAE5E,SAEpBG,EAAIQ,KAAKY,KAAM,EAAIqD,EAAE5E,EAAI4E,EAAE5E,UAE5BG,EAAI,WAEHZ,EAAI,OACJC,EAAI,OACJiG,EAAI,SAIJlG,EAAIqF,EAAErF,EAAIY,OACVX,EAAIoF,EAAEpF,EAAIW,OACVsF,EAAIb,EAAEa,EAAItF,GAITV,KAIRH,+BAAgCkB,OAM3BgC,EAAOjD,EAAGC,EAAGiG,QACXuI,EAAU,IACfC,EAAW,GAEX9F,EAAK3H,EAAEE,SAEP0H,EAAMD,EAAI,GAAKE,EAAMF,EAAI,GAAKG,EAAMH,EAAI,GACxCI,EAAMJ,EAAI,GAAKK,EAAML,EAAI,GAAKM,EAAMN,EAAI,GACxCO,EAAMP,EAAI,GAAKQ,EAAMR,EAAI,GAAKS,EAAMT,EAAI,OAElCxH,KAAKa,IAAK6G,EAAME,GAAQyF,GACxBrN,KAAKa,IAAK8G,EAAMI,GAAQsF,GACxBrN,KAAKa,IAAKiH,EAAME,GAAQqF,EAAY,IAMnCrN,KAAKa,IAAK6G,EAAME,GAAQ0F,GACxBtN,KAAKa,IAAK8G,EAAMI,GAAQuF,GACxBtN,KAAKa,IAAKiH,EAAME,GAAQsF,GACxBtN,KAAKa,IAAK4G,EAAMI,EAAMI,EAAM,GAAMqF,cAInCzI,IAAK,EAAG,EAAG,EAAG,GAEZ/F,OAMAkB,KAAKe,SAEPwM,KAAa,GAAM,EACnBC,KAAa,GAAM,EACnBC,KAAa,GAAM,EACnBC,KAAa9F,GAAQ,EACrB+F,KAAa5F,GAAQ,EACrB6F,KAAa5F,GAAQ,SAEpBuF,EAAKC,GAAUD,EAAKE,EAIrBF,EAAKF,KAEL,IACA,aACA,eAIArN,KAAKY,KAAM2M,KACXG,EAAK9O,IACL+O,EAAK/O,GAIC4O,EAAKC,EAIXD,EAAKH,KAEL,aACA,IACA,eAIArN,KAAKY,KAAM4M,KACXE,EAAK7O,IACL+O,EAAK/O,GAQL4O,EAAKJ,KAEL,aACA,aACA,MAIArN,KAAKY,KAAM6M,KACXE,EAAK7I,IACL8I,EAAK9I,QAMND,IAAKjG,EAAGC,EAAGiG,EAAGjD,GAEZ/C,SAMJU,EAAIQ,KAAKY,QAAckH,MAAgBA,MAClCC,MAAgBA,MAChBL,MAAgBA,WAEpB1H,KAAKa,IAAKrB,GAAM,SAAY,QAK5BZ,KAAYkJ,GAAQtI,OACpBX,KAAYkJ,GAAQvI,OACpBsF,KAAY4C,GAAQlI,OACpBH,EAAIW,KAAKuI,QAAcV,EAAMI,EAAM,GAAM,GAEvCnJ,KAIRH,IAAKS,eAECR,EAAIoB,KAAKC,IAAKnB,KAAKF,EAAGQ,EAAER,QACxBC,EAAImB,KAAKC,IAAKnB,KAAKD,EAAGO,EAAEP,QACxBiG,EAAI9E,KAAKC,IAAKnB,KAAKgG,EAAG1F,EAAE0F,QACxBzF,EAAIW,KAAKC,IAAKnB,KAAKO,EAAGD,EAAEC,GAEtBP,KAIRH,IAAKS,eAECR,EAAIoB,KAAKE,IAAKpB,KAAKF,EAAGQ,EAAER,QACxBC,EAAImB,KAAKE,IAAKpB,KAAKD,EAAGO,EAAEP,QACxBiG,EAAI9E,KAAKE,IAAKpB,KAAKgG,EAAG1F,EAAE0F,QACxBzF,EAAIW,KAAKE,IAAKpB,KAAKO,EAAGD,EAAEC,GAEtBP,KAIRH,MAAOwB,EAAKC,eAINxB,EAAIoB,KAAKE,IAAKC,EAAIvB,EAAGoB,KAAKC,IAAKG,EAAIxB,EAAGE,KAAKF,SAC3CC,EAAImB,KAAKE,IAAKC,EAAItB,EAAGmB,KAAKC,IAAKG,EAAIvB,EAAGC,KAAKD,SAC3CiG,EAAI9E,KAAKE,IAAKC,EAAI2E,EAAG9E,KAAKC,IAAKG,EAAI0E,EAAGhG,KAAKgG,SAC3CzF,EAAIW,KAAKE,IAAKC,EAAId,EAAGW,KAAKC,IAAKG,EAAIf,EAAGP,KAAKO,IAEzCP,KAIRH,YAAa0B,EAAQC,eAEf1B,EAAIoB,KAAKE,IAAKG,EAAQL,KAAKC,IAAKK,EAAQxB,KAAKF,SAC7CC,EAAImB,KAAKE,IAAKG,EAAQL,KAAKC,IAAKK,EAAQxB,KAAKD,SAC7CiG,EAAI9E,KAAKE,IAAKG,EAAQL,KAAKC,IAAKK,EAAQxB,KAAKgG,SAC7CzF,EAAIW,KAAKE,IAAKG,EAAQL,KAAKC,IAAKK,EAAQxB,KAAKO,IAE3CP,KAIRH,YAAawB,EAAKC,SAEXG,EAASzB,KAAKyB,gBAEbzB,KAAK0B,aAAcD,GAAU,GAAIX,eAAgBI,KAAKE,IAAKC,EAAKH,KAAKC,IAAKG,EAAKG,KAIvF5B,oBAEMC,EAAIoB,KAAKS,MAAO3B,KAAKF,QACrBC,EAAImB,KAAKS,MAAO3B,KAAKD,QACrBiG,EAAI9E,KAAKS,MAAO3B,KAAKgG,QACrBzF,EAAIW,KAAKS,MAAO3B,KAAKO,GAEnBP,KAIRH,mBAEMC,EAAIoB,KAAKU,KAAM5B,KAAKF,QACpBC,EAAImB,KAAKU,KAAM5B,KAAKD,QACpBiG,EAAI9E,KAAKU,KAAM5B,KAAKgG,QACpBzF,EAAIW,KAAKU,KAAM5B,KAAKO,GAElBP,KAIRH,oBAEMC,EAAIoB,KAAKW,MAAO7B,KAAKF,QACrBC,EAAImB,KAAKW,MAAO7B,KAAKD,QACrBiG,EAAI9E,KAAKW,MAAO7B,KAAKgG,QACrBzF,EAAIW,KAAKW,MAAO7B,KAAKO,GAEnBP,KAIRH,0BAEMC,EAAME,KAAKF,EAAI,EAAMoB,KAAKU,KAAM5B,KAAKF,GAAMoB,KAAKS,MAAO3B,KAAKF,QAC5DC,EAAMC,KAAKD,EAAI,EAAMmB,KAAKU,KAAM5B,KAAKD,GAAMmB,KAAKS,MAAO3B,KAAKD,QAC5DiG,EAAMhG,KAAKgG,EAAI,EAAM9E,KAAKU,KAAM5B,KAAKgG,GAAM9E,KAAKS,MAAO3B,KAAKgG,QAC5DzF,EAAMP,KAAKO,EAAI,EAAMW,KAAKU,KAAM5B,KAAKO,GAAMW,KAAKS,MAAO3B,KAAKO,GAE1DP,KAIRH,qBAEMC,GAAME,KAAKF,OACXC,GAAMC,KAAKD,OACXiG,GAAMhG,KAAKgG,OACXzF,GAAMP,KAAKO,EAETP,KAIRH,IAAKS,UAEGN,KAAKF,EAAIQ,EAAER,EAAIE,KAAKD,EAAIO,EAAEP,EAAIC,KAAKgG,EAAI1F,EAAE0F,EAAIhG,KAAKO,EAAID,EAAEC,EAIhEV,kBAEQG,KAAKF,EAAIE,KAAKF,EAAIE,KAAKD,EAAIC,KAAKD,EAAIC,KAAKgG,EAAIhG,KAAKgG,EAAIhG,KAAKO,EAAIP,KAAKO,EAI5EV,gBAEQqB,KAAKY,KAAM9B,KAAKF,EAAIE,KAAKF,EAAIE,KAAKD,EAAIC,KAAKD,EAAIC,KAAKgG,EAAIhG,KAAKgG,EAAIhG,KAAKO,EAAIP,KAAKO,GAIvFV,yBAEQqB,KAAKa,IAAK/B,KAAKF,GAAMoB,KAAKa,IAAK/B,KAAKD,GAAMmB,KAAKa,IAAK/B,KAAKgG,GAAM9E,KAAKa,IAAK/B,KAAKO,GAItFV,mBAEQG,KAAK0B,aAAc1B,KAAKyB,UAAY,GAI5C5B,UAAW4B,UAEHzB,KAAKqC,YAAYvB,eAAgBW,GAIzC5B,KAAMS,EAAGgC,eAEHxC,MAASA,EAAIE,KAAKF,GAAMwC,OACxBvC,MAASA,EAAIC,KAAKD,GAAMuC,OACxB0D,MAASA,EAAIhG,KAAKgG,GAAM1D,OACxB/B,MAASA,EAAIP,KAAKO,GAAM+B,EAEtBtC,KAIRH,YAAa0C,EAAIC,EAAIF,eAEfxC,EAAIyC,EAAGzC,KAASA,EAAIyC,EAAGzC,GAAMwC,OAC7BvC,EAAIwC,EAAGxC,KAASA,EAAIwC,EAAGxC,GAAMuC,OAC7B0D,EAAIzD,EAAGyD,KAASA,EAAIzD,EAAGyD,GAAM1D,OAC7B/B,EAAIgC,EAAGhC,KAASA,EAAIgC,EAAGhC,GAAM+B,EAE3BtC,KAIRH,OAAQS,UAEIA,EAAER,IAAME,KAAKF,GAASQ,EAAEP,IAAMC,KAAKD,GAASO,EAAE0F,IAAMhG,KAAKgG,GAAS1F,EAAEC,IAAMP,KAAKO,EAI3FV,UAAW4C,EAAOC,EAAS,eAErB5C,EAAI2C,EAAOC,QACX3C,EAAI0C,EAAOC,EAAS,QACpBsD,EAAIvD,EAAOC,EAAS,QACpBnC,EAAIkC,EAAOC,EAAS,GAElB1C,KAIRH,QAAS4C,EAAQ,GAAIC,EAAS,YAEtBA,GAAW1C,KAAKF,IAChB4C,EAAS,GAAM1C,KAAKD,IACpB2C,EAAS,GAAM1C,KAAKgG,IACpBtD,EAAS,GAAM1C,KAAKO,EAEpBkC,EAIR5C,oBAAqB8C,EAAWxC,EAAOuC,eAEtB,IAAXA,WAEIlC,KAAM,4EAIVV,EAAI6C,EAAUC,KAAMzC,QACpBJ,EAAI4C,EAAUE,KAAM1C,QACpB6F,EAAIrD,EAAUsI,KAAM9K,QACpBI,EAAIoC,EAAUuI,KAAM/K,GAElBH,KAIRH,qBAEMC,EAAIoB,KAAKiC,cACTpD,EAAImB,KAAKiC,cACT6C,EAAI9E,KAAKiC,cACT5C,EAAIW,KAAKiC,SAEPnD,MAMT+O,EAAQ1L,UAAU2L,WAAY,EC1oB9B,QAECnP,mBAEMoB,SAAW,CAEf,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,GAILgO,UAAUxN,OAAS,WAEf8J,MAAO,iFAMjB1L,IAAKqP,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,SAEzEvH,EAAK1I,KAAKiB,kBAEZ,GAAMiO,IAAS,GAAMC,IAAS,GAAMC,IAAS,IAAOC,IACpD,GAAMC,IAAS,GAAMC,IAAS,GAAMC,IAAS,IAAOC,IACpD,GAAMC,IAAS,GAAMC,IAAS,IAAOC,IAAS,IAAOC,IACrD,GAAMC,IAAS,GAAMC,IAAS,IAAOC,IAAS,IAAOC,EAElDjQ,KAIRH,uBAEMkG,IAEJ,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,GAIH/F,KAIRH,eAEQ,IAAIqQ,GAAU9B,UAAWpO,KAAKiB,UAItCpB,KAAMkB,SAEC2H,EAAK1I,KAAKiB,SACVkP,EAAKpP,EAAEE,kBAET,GAAMkP,EAAI,KAAS,GAAMA,EAAI,KAAS,GAAMA,EAAI,KAAS,GAAMA,EAAI,KACnE,GAAMA,EAAI,KAAS,GAAMA,EAAI,KAAS,GAAMA,EAAI,KAAS,GAAMA,EAAI,KACnE,GAAMA,EAAI,KAAS,GAAMA,EAAI,KAAS,IAAOA,EAAI,MAAU,IAAOA,EAAI,MACtE,IAAOA,EAAI,MAAU,IAAOA,EAAI,MAAU,IAAOA,EAAI,MAAU,IAAOA,EAAI,IAEvEnQ,KAIRH,aAAckB,SAEP2H,EAAK1I,KAAKiB,SAAUkP,EAAKpP,EAAEE,kBAE7B,IAAOkP,EAAI,MACX,IAAOA,EAAI,MACX,IAAOA,EAAI,IAERnQ,KAIRH,eAAgBkB,SAEToP,EAAKpP,EAAEE,qBAER8E,IAEJoK,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAK,EAC3BA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAK,EAC3BA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAK,EAC3B,EAAG,EAAG,EAAG,GAIHnQ,KAIRH,aAAcuQ,EAAOC,EAAOC,YAErBrC,oBAAqBjO,KAAM,KAC3BiO,oBAAqBjO,KAAM,KAC3BiO,oBAAqBjO,KAAM,GAE1BA,KAIRH,UAAWuQ,EAAOC,EAAOC,eAEnBvK,IACJqK,EAAMtQ,EAAGuQ,EAAMvQ,EAAGwQ,EAAMxQ,EAAG,EAC3BsQ,EAAMrQ,EAAGsQ,EAAMtQ,EAAGuQ,EAAMvQ,EAAG,EAC3BqQ,EAAMpK,EAAGqK,EAAMrK,EAAGsK,EAAMtK,EAAG,EAC3B,EAAG,EAAG,EAAG,GAGHhG,KAIRH,gBAAiBkB,SAIV2H,EAAK1I,KAAKiB,SACVkP,EAAKpP,EAAEE,SAEPsP,EAAS,EAAIC,EAAIvC,oBAAqBlN,EAAG,GAAIU,SAC7CgP,EAAS,EAAID,EAAIvC,oBAAqBlN,EAAG,GAAIU,SAC7CiP,EAAS,EAAIF,EAAIvC,oBAAqBlN,EAAG,GAAIU,kBAE/C,GAAM0O,EAAI,GAAMI,IAChB,GAAMJ,EAAI,GAAMI,IAChB,GAAMJ,EAAI,GAAMI,IAChB,GAAM,IAEN,GAAMJ,EAAI,GAAMM,IAChB,GAAMN,EAAI,GAAMM,IAChB,GAAMN,EAAI,GAAMM,IAChB,GAAM,IAEN,GAAMN,EAAI,GAAMO,IAChB,GAAMP,EAAI,GAAMO,IAChB,IAAOP,EAAI,IAAOO,IAClB,IAAO,IAEP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,EAEJ1Q,KAIRH,sBAAuBmI,MAEJA,EAAME,iBAEfqD,MAAO,+GAIV7C,EAAK1I,KAAKiB,SAEVnB,EAAIkI,EAAMlI,EAAGC,EAAIiI,EAAMjI,EAAGiG,EAAIgC,EAAMhC,EACpCrF,EAAIO,KAAK+B,IAAKnD,GAAKc,EAAIM,KAAKgC,IAAKpD,GACjCkD,EAAI9B,KAAK+B,IAAKlD,GAAK4Q,EAAIzP,KAAKgC,IAAKnD,GACjCiB,EAAIE,KAAK+B,IAAK+C,GAAK6B,EAAI3G,KAAKgC,IAAK8C,MAElB,QAAhBgC,EAAM5C,MAAkB,OAEtBwL,EAAKjQ,EAAIK,EAAG6P,EAAKlQ,EAAIkH,EAAGiJ,EAAKlQ,EAAII,EAAG+P,EAAKnQ,EAAIiH,IAE/C,GAAM7E,EAAIhC,IACV,IAAQgC,EAAI6E,IACZ,GAAM8I,IAEN,GAAME,EAAKC,EAAKH,IAChB,GAAMC,EAAKG,EAAKJ,IAChB,IAAQ/P,EAAIoC,IAEZ,GAAM+N,EAAKH,EAAKD,IAChB,GAAMG,EAAKD,EAAKF,IAChB,IAAOhQ,EAAIqC,UAEY,QAAhBgF,EAAM5C,MAAkB,OAE7B4L,EAAKhO,EAAIhC,EAAGiQ,EAAKjO,EAAI6E,EAAGqJ,EAAKP,EAAI3P,EAAGmQ,EAAKR,EAAI9I,IAE/C,GAAMmJ,EAAKG,EAAKvQ,IAChB,GAAMsQ,EAAKtQ,EAAIqQ,IACf,GAAMtQ,EAAIgQ,IAEV,GAAMhQ,EAAIkH,IACV,GAAMlH,EAAIK,IACV,IAAQJ,IAER,GAAMqQ,EAAKrQ,EAAIsQ,IACf,GAAMC,EAAKH,EAAKpQ,IAChB,IAAOD,EAAIqC,UAEY,QAAhBgF,EAAM5C,MAAkB,OAE7B4L,EAAKhO,EAAIhC,EAAGiQ,EAAKjO,EAAI6E,EAAGqJ,EAAKP,EAAI3P,EAAGmQ,EAAKR,EAAI9I,IAE/C,GAAMmJ,EAAKG,EAAKvQ,IAChB,IAAQD,EAAIkH,IACZ,GAAMqJ,EAAKD,EAAKrQ,IAEhB,GAAMqQ,EAAKC,EAAKtQ,IAChB,GAAMD,EAAIK,IACV,GAAMmQ,EAAKH,EAAKpQ,IAEhB,IAAQD,EAAIgQ,IACZ,GAAM/P,IACN,IAAOD,EAAIqC,UAEY,QAAhBgF,EAAM5C,MAAkB,OAE7BwL,EAAKjQ,EAAIK,EAAG6P,EAAKlQ,EAAIkH,EAAGiJ,EAAKlQ,EAAII,EAAG+P,EAAKnQ,EAAIiH,IAE/C,GAAM7E,EAAIhC,IACV,GAAM8P,EAAKH,EAAIE,IACf,GAAMD,EAAKD,EAAII,IAEf,GAAM/N,EAAI6E,IACV,GAAMkJ,EAAKJ,EAAIC,IACf,GAAMC,EAAKF,EAAIG,IAEf,IAAQH,IACR,GAAM/P,EAAIoC,IACV,IAAOrC,EAAIqC,UAEY,QAAhBgF,EAAM5C,MAAkB,OAE7BgM,EAAKzQ,EAAIqC,EAAGqO,EAAK1Q,EAAIgQ,EAAGW,EAAK1Q,EAAIoC,EAAGuO,EAAK3Q,EAAI+P,IAE/C,GAAM3N,EAAIhC,IACV,GAAMuQ,EAAKH,EAAKvJ,IAChB,GAAMyJ,EAAKzJ,EAAIwJ,IAEf,GAAMxJ,IACN,GAAMlH,EAAIK,IACV,IAAQJ,EAAII,IAEZ,IAAQ2P,EAAI3P,IACZ,GAAMqQ,EAAKxJ,EAAIyJ,IACf,IAAOF,EAAKG,EAAK1J,UAEM,QAAhBG,EAAM5C,MAAkB,OAE7BgM,EAAKzQ,EAAIqC,EAAGqO,EAAK1Q,EAAIgQ,EAAGW,EAAK1Q,EAAIoC,EAAGuO,EAAK3Q,EAAI+P,IAE/C,GAAM3N,EAAIhC,IACV,IAAQ6G,IACR,GAAM8I,EAAI3P,IAEV,GAAMoQ,EAAKvJ,EAAI0J,IACf,GAAM5Q,EAAIK,IACV,GAAMqQ,EAAKxJ,EAAIyJ,IAEf,GAAMA,EAAKzJ,EAAIwJ,IACf,GAAMzQ,EAAII,IACV,IAAOuQ,EAAK1J,EAAIuJ,WAKjB,GAAM,IACN,GAAM,IACN,IAAO,IAGP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,EAEJpR,KAIRH,2BAA4BsF,UAEpBnF,KAAKwR,QAASC,EAAOtM,EAAGuM,GAIhC7R,OAAQ8R,EAAKC,EAAQC,SAEdnJ,EAAK1I,KAAKiB,kBAEbJ,WAAY8Q,EAAKC,GAEG,IAAlBzL,EAAGgH,eAIJnH,EAAI,KAIL3D,cACAsK,aAAckF,EAAI1L,GAEE,IAAlBF,EAAGkH,aAImB,IAArBjM,KAAKa,IAAK8P,EAAG7L,KAEdlG,GAAK,OAILkG,GAAK,OAIN3D,cACAsK,aAAckF,EAAI1L,MAInB9D,cACAsK,aAAcxG,EAAIF,KAEjB,GAAMA,EAAGnG,IAAO,GAAMoG,EAAGpG,IAAO,GAAMqG,EAAGrG,IACzC,GAAMmG,EAAGlG,IAAO,GAAMmG,EAAGnG,IAAO,GAAMoG,EAAGpG,IACzC,GAAMkG,EAAGD,IAAO,GAAME,EAAGF,IAAO,IAAOG,EAAGH,EAEvChG,KAIRH,SAAUkB,EAAG8C,eAED,IAANA,WAEIrD,KAAM,oGACPR,KAAK8R,iBAAkB/Q,EAAG8C,IAI3B7D,KAAK8R,iBAAkB9R,KAAMe,GAIrClB,YAAakB,UAELf,KAAK8R,iBAAkB/Q,EAAGf,MAIlCH,iBAAkBc,EAAGC,SAEdgQ,EAAKjQ,EAAEM,SACP6P,EAAKlQ,EAAEK,SACPyH,EAAK1I,KAAKiB,SAEV8Q,EAAMnB,EAAI,GAAKoB,EAAMpB,EAAI,GAAKqB,EAAMrB,EAAI,GAAKsB,EAAMtB,EAAI,IACvDuB,EAAMvB,EAAI,GAAKwB,EAAMxB,EAAI,GAAKyB,EAAMzB,EAAI,GAAK0B,EAAM1B,EAAI,IACvD2B,EAAM3B,EAAI,GAAK4B,EAAM5B,EAAI,GAAK6B,EAAM7B,EAAI,IAAM8B,EAAM9B,EAAI,IACxD+B,EAAM/B,EAAI,GAAKgC,EAAMhC,EAAI,GAAKiC,EAAMjC,EAAI,IAAMkC,EAAMlC,EAAI,IAExDmC,EAAMjC,EAAI,GAAKkC,EAAMlC,EAAI,GAAKmC,EAAMnC,EAAI,GAAKoC,EAAMpC,EAAI,IACvDqC,EAAMrC,EAAI,GAAKsC,EAAMtC,EAAI,GAAKuC,EAAMvC,EAAI,GAAKwC,EAAMxC,EAAI,IACvDyC,EAAMzC,EAAI,GAAK0C,EAAM1C,EAAI,GAAK2C,EAAM3C,EAAI,IAAM4C,EAAM5C,EAAI,IACxD6C,EAAM7C,EAAI,GAAK8C,EAAM9C,EAAI,GAAK+C,EAAM/C,EAAI,IAAMgD,EAAMhD,EAAI,aAE1D,GAAMiB,EAAMgB,EAAMf,EAAMmB,EAAMlB,EAAMsB,EAAMrB,EAAMyB,IAChD,GAAM5B,EAAMiB,EAAMhB,EAAMoB,EAAMnB,EAAMuB,EAAMtB,EAAM0B,IAChD,GAAM7B,EAAMkB,EAAMjB,EAAMqB,EAAMpB,EAAMwB,EAAMvB,EAAM2B,IAChD,IAAO9B,EAAMmB,EAAMlB,EAAMsB,EAAMrB,EAAMyB,EAAMxB,EAAM4B,IAEjD,GAAM3B,EAAMY,EAAMX,EAAMe,EAAMd,EAAMkB,EAAMjB,EAAMqB,IAChD,GAAMxB,EAAMa,EAAMZ,EAAMgB,EAAMf,EAAMmB,EAAMlB,EAAMsB,IAChD,GAAMzB,EAAMc,EAAMb,EAAMiB,EAAMhB,EAAMoB,EAAMnB,EAAMuB,IAChD,IAAO1B,EAAMe,EAAMd,EAAMkB,EAAMjB,EAAMqB,EAAMpB,EAAMwB,IAEjD,GAAMvB,EAAMQ,EAAMP,EAAMW,EAAMV,EAAMc,EAAMb,EAAMiB,IAChD,GAAMpB,EAAMS,EAAMR,EAAMY,EAAMX,EAAMe,EAAMd,EAAMkB,IAChD,IAAOrB,EAAMU,EAAMT,EAAMa,EAAMZ,EAAMgB,EAAMf,EAAMmB,IACjD,IAAOtB,EAAMW,EAAMV,EAAMc,EAAMb,EAAMiB,EAAMhB,EAAMoB,IAEjD,GAAMnB,EAAMI,EAAMH,EAAMO,EAAMN,EAAMU,EAAMT,EAAMa,IAChD,GAAMhB,EAAMK,EAAMJ,EAAMQ,EAAMP,EAAMW,EAAMV,EAAMc,IAChD,IAAOjB,EAAMM,EAAML,EAAMS,EAAMR,EAAMY,EAAMX,EAAMe,IACjD,IAAOlB,EAAMO,EAAMN,EAAMU,EAAMT,EAAMa,EAAMZ,EAAMgB,EAE9C9T,KAIRH,eAAgBa,SAETgI,EAAK1I,KAAKiB,kBAEZ,IAAOP,IAAO,IAAOA,IAAO,IAAOA,IAAO,KAAQA,IAClD,IAAOA,IAAO,IAAOA,IAAO,IAAOA,IAAO,KAAQA,IAClD,IAAOA,IAAO,IAAOA,IAAO,KAAQA,IAAO,KAAQA,IACnD,IAAOA,IAAO,IAAOA,IAAO,KAAQA,IAAO,KAAQA,EAEhDV,KAIRH,oBAEO6I,EAAK1I,KAAKiB,SAEViO,EAAMxG,EAAI,GAAKyG,EAAMzG,EAAI,GAAK0G,EAAM1G,EAAI,GAAK2G,EAAM3G,EAAI,IACvD4G,EAAM5G,EAAI,GAAK6G,EAAM7G,EAAI,GAAK8G,EAAM9G,EAAI,GAAK+G,EAAM/G,EAAI,IACvDgH,EAAMhH,EAAI,GAAKiH,EAAMjH,EAAI,GAAKkH,EAAMlH,EAAI,IAAMmH,EAAMnH,EAAI,WAClDA,EAAI,KAOZ2G,EAAMG,EAAMG,EACXP,EAAMK,EAAME,EACZN,EAAME,EAAMK,EACZT,EAAMM,EAAMG,EACZR,EAAMG,EAAMM,EACZV,EAAMK,EAAMK,GAZUnH,EAAI,KAe3BwG,EAAMM,EAAMK,EACXX,EAAMO,EAAMG,EACZP,EAAMC,EAAMM,EACZR,EAAME,EAAMO,EACZT,EAAMK,EAAMC,EACZL,EAAMG,EAAME,GApByBhH,EAAI,MAuB1CwG,EAAMO,EAAME,EACXT,EAAMK,EAAMM,EACZR,EAAMC,EAAMK,EACZR,EAAMG,EAAMO,EACZR,EAAME,EAAMG,EACZP,EAAMM,EAAMC,GA5ByChH,EAAI,MA+B1D0G,EAAMG,EAAMG,EACXR,EAAMM,EAAMG,EACZT,EAAMK,EAAMK,EACZR,EAAME,EAAMK,EACZR,EAAMG,EAAMM,EACZT,EAAMK,EAAME,GAOlB7P,kBAEO6I,EAAK1I,KAAKiB,aACZ8S,WAEErL,EAAI,KAAS,GAAMA,EAAI,KAAS,GAAMqL,IACtCrL,EAAI,KAAS,GAAMA,EAAI,KAAS,GAAMqL,IACtCrL,EAAI,KAAS,GAAMA,EAAI,KAAS,GAAMqL,IAEtCrL,EAAI,KAAS,GAAMA,EAAI,MAAU,IAAOqL,IACxCrL,EAAI,KAAS,GAAMA,EAAI,MAAU,IAAOqL,IACxCrL,EAAI,MAAU,IAAOA,EAAI,MAAU,IAAOqL,EAEzC/T,KAIRH,YAAaC,EAAGC,EAAGiG,SAEZ0C,EAAK1I,KAAKiB,gBAEXnB,EAAEwO,aAEF,IAAOxO,EAAEA,IACT,IAAOA,EAAEC,IACT,IAAOD,EAAEkG,MAIT,IAAOlG,IACP,IAAOC,IACP,IAAOiG,GAILhG,KAIRH,eAGO6I,EAAK1I,KAAKiB,SAEfiO,EAAMxG,EAAI,GAAK4G,EAAM5G,EAAI,GAAKgH,EAAMhH,EAAI,GAAKoH,EAAMpH,EAAI,GACvDyG,EAAMzG,EAAI,GAAK6G,EAAM7G,EAAI,GAAKiH,EAAMjH,EAAI,GAAKqH,EAAMrH,EAAI,GACvD0G,EAAM1G,EAAI,GAAK8G,EAAM9G,EAAI,GAAKkH,EAAMlH,EAAI,IAAMsH,EAAMtH,EAAI,IACxD2G,EAAM3G,EAAI,IAAM+G,EAAM/G,EAAI,IAAMmH,EAAMnH,EAAI,IAAMuH,EAAMvH,EAAI,IAE1DsL,EAAMxE,EAAMK,EAAME,EAAMN,EAAMG,EAAMG,EAAMN,EAAME,EAAMK,EAAMT,EAAMM,EAAMG,EAAMR,EAAMG,EAAMM,EAAMV,EAAMK,EAAMK,EAC5GgE,EAAM5E,EAAMO,EAAMG,EAAMX,EAAMS,EAAME,EAAMV,EAAMM,EAAMK,EAAMb,EAAMU,EAAMG,EAAMZ,EAAMO,EAAMM,EAAMd,EAAMS,EAAMK,EAC5GiE,EAAM9E,EAAMK,EAAMM,EAAMV,EAAMG,EAAMO,EAAMV,EAAME,EAAMS,EAAMb,EAAMM,EAAMO,EAAMZ,EAAMG,EAAMU,EAAMd,EAAMK,EAAMS,EAC5GkE,EAAM9E,EAAMG,EAAMG,EAAMP,EAAMK,EAAME,EAAMN,EAAME,EAAMK,EAAMT,EAAMM,EAAMG,EAAMR,EAAMG,EAAMM,EAAMV,EAAMK,EAAMK,EAEvGuE,EAAMlF,EAAM8E,EAAM1E,EAAM2E,EAAMvE,EAAMwE,EAAMpE,EAAMqE,KAEzC,IAARC,SAAmBpU,KAAK+F,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,SAEzEsO,EAAS,EAAID,WAEf,GAAMJ,EAAMK,IACZ,MAAczE,EAAME,EAAMN,EAAMK,EAAMC,EAAML,EAAMC,EAAMM,EAAMV,EAAMO,EAAMG,EAAMR,EAAME,EAAMO,EAAMX,EAAMM,EAAMK,GAAQoE,IACtH,MAAcxE,EAAMC,EAAML,EAAME,EAAMG,EAAML,EAAMC,EAAMK,EAAMT,EAAMO,EAAME,EAAMR,EAAMG,EAAMO,EAAMX,EAAMK,EAAMM,GAAQoE,IACtH,MAAc1E,EAAMG,EAAMP,EAAMK,EAAME,EAAMN,EAAME,EAAMK,EAAMT,EAAMM,EAAMG,EAAMR,EAAMG,EAAMM,EAAMV,EAAMK,EAAMK,GAAQqE,IAEtH,GAAMJ,EAAMI,IACZ,MAAcxE,EAAMC,EAAMT,EAAMO,EAAME,EAAMT,EAAMK,EAAMM,EAAMd,EAAMW,EAAMG,EAAMZ,EAAMM,EAAMO,EAAMf,EAAMU,EAAMK,GAAQoE,IACtH,MAAc1E,EAAMG,EAAMX,EAAMU,EAAMC,EAAMT,EAAMK,EAAMK,EAAMb,EAAMW,EAAME,EAAMZ,EAAMO,EAAMO,EAAMf,EAAMS,EAAMM,GAAQoE,IACtH,MAAczE,EAAME,EAAMV,EAAMO,EAAMG,EAAMV,EAAMM,EAAMK,EAAMb,EAAMU,EAAMG,EAAMZ,EAAMO,EAAMM,EAAMd,EAAMS,EAAMK,GAAQqE,IAEtH,GAAMH,EAAMG,IACZ,MAAc7E,EAAMM,EAAMV,EAAMK,EAAMK,EAAMT,EAAMC,EAAMU,EAAMd,EAAMO,EAAMO,EAAMZ,EAAME,EAAMW,EAAMf,EAAMM,EAAMS,GAAQoE,IACtH,OAAe5E,EAAMK,EAAMT,EAAME,EAAMO,EAAMT,EAAMC,EAAMS,EAAMb,EAAMO,EAAMM,EAAMZ,EAAMG,EAAMW,EAAMf,EAAMK,EAAMU,GAAQoE,IACvH,OAAe9E,EAAMO,EAAMX,EAAMK,EAAMM,EAAMV,EAAME,EAAMS,EAAMb,EAAMM,EAAMO,EAAMZ,EAAMG,EAAMU,EAAMd,EAAMK,EAAMS,GAAQqE,IAEvH,IAAOF,EAAME,IACb,OAAe5E,EAAMC,EAAML,EAAMG,EAAME,EAAML,EAAMC,EAAMM,EAAMV,EAAMO,EAAMG,EAAMR,EAAME,EAAMO,EAAMX,EAAMM,EAAMK,GAAQwE,IACvH,OAAe9E,EAAMG,EAAMP,EAAMM,EAAMC,EAAML,EAAMC,EAAMK,EAAMT,EAAMO,EAAME,EAAMR,EAAMG,EAAMO,EAAMX,EAAMK,EAAMM,GAAQwE,IACvH,OAAe7E,EAAME,EAAMN,EAAMG,EAAMG,EAAMN,EAAME,EAAMK,EAAMT,EAAMM,EAAMG,EAAMR,EAAMG,EAAMM,EAAMV,EAAMK,EAAMK,GAAQyE,EAEpHrU,KAIRH,MAAOS,SAEAoI,EAAK1I,KAAKiB,SACVnB,EAAIQ,EAAER,EAAGC,EAAIO,EAAEP,EAAGiG,EAAI1F,EAAE0F,WAE1B,IAAOlG,IAAO,IAAOC,IAAO,IAAOiG,IACnC,IAAOlG,IAAO,IAAOC,IAAO,IAAOiG,IACnC,IAAOlG,IAAO,IAAOC,IAAO,KAAQiG,IACpC,IAAOlG,IAAO,IAAOC,IAAO,KAAQiG,EAEjChG,KAIRH,0BAEO6I,EAAK1I,KAAKiB,SAEVqT,EAAW5L,EAAI,GAAMA,EAAI,GAAMA,EAAI,GAAMA,EAAI,GAAMA,EAAI,GAAMA,EAAI,GACjE6L,EAAW7L,EAAI,GAAMA,EAAI,GAAMA,EAAI,GAAMA,EAAI,GAAMA,EAAI,GAAMA,EAAI,GACjE8L,EAAW9L,EAAI,GAAMA,EAAI,GAAMA,EAAI,GAAMA,EAAI,GAAMA,EAAI,IAAOA,EAAI,WAEjExH,KAAKY,KAAMZ,KAAKE,IAAKkT,EAAUC,EAAUC,IAIjD3U,gBAAiBC,EAAGC,EAAGiG,eAEjBD,IAEJ,EAAG,EAAG,EAAGjG,EACT,EAAG,EAAG,EAAGC,EACT,EAAG,EAAG,EAAGiG,EACT,EAAG,EAAG,EAAG,GAIHhG,KAIRH,cAAe4N,SAERzK,EAAI9B,KAAK+B,IAAKwK,GAAS/M,EAAIQ,KAAKgC,IAAKuK,eAEtC1H,IAEJ,EAAG,EAAG,EAAG,EACT,EAAG/C,GAAKtC,EAAG,EACX,EAAGA,EAAGsC,EAAG,EACT,EAAG,EAAG,EAAG,GAIHhD,KAIRH,cAAe4N,SAERzK,EAAI9B,KAAK+B,IAAKwK,GAAS/M,EAAIQ,KAAKgC,IAAKuK,eAEtC1H,IAEH/C,EAAG,EAAGtC,EAAG,EACT,EAAG,EAAG,EAAG,GACRA,EAAG,EAAGsC,EAAG,EACV,EAAG,EAAG,EAAG,GAIJhD,KAIRH,cAAe4N,SAERzK,EAAI9B,KAAK+B,IAAKwK,GAAS/M,EAAIQ,KAAKgC,IAAKuK,eAEtC1H,IAEJ/C,GAAKtC,EAAG,EAAG,EACXA,EAAGsC,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,GAIHhD,KAIRH,iBAAkB2I,EAAMzF,SAIjBC,EAAI9B,KAAK+B,IAAKF,GACdrC,EAAIQ,KAAKgC,IAAKH,GACde,EAAI,EAAId,EACRlD,EAAI0I,EAAK1I,EAAGC,EAAIyI,EAAKzI,EAAGiG,EAAIwC,EAAKxC,EACjCyO,EAAK3Q,EAAIhE,EAAG4U,EAAK5Q,EAAI/D,cAEtBgG,IAEJ0O,EAAK3U,EAAIkD,EAAGyR,EAAK1U,EAAIW,EAAIsF,EAAGyO,EAAKzO,EAAItF,EAAIX,EAAG,EAC5C0U,EAAK1U,EAAIW,EAAIsF,EAAG0O,EAAK3U,EAAIiD,EAAG0R,EAAK1O,EAAItF,EAAIZ,EAAG,EAC5C2U,EAAKzO,EAAItF,EAAIX,EAAG2U,EAAK1O,EAAItF,EAAIZ,EAAGgE,EAAIkC,EAAIA,EAAIhD,EAAG,EAC/C,EAAG,EAAG,EAAG,GAIHhD,KAIRH,UAAWC,EAAGC,EAAGiG,eAEXD,IAEJjG,EAAG,EAAG,EAAG,EACT,EAAGC,EAAG,EAAG,EACT,EAAG,EAAGiG,EAAG,EACT,EAAG,EAAG,EAAG,GAIHhG,KAIRH,UAAW+O,EAAIC,EAAI8F,EAAI7F,EAAI8F,EAAIC,eAEzB9O,IAEJ,EAAG4O,EAAIC,EAAI,EACXhG,EAAI,EAAGiG,EAAI,EACXhG,EAAIC,EAAI,EAAG,EACX,EAAG,EAAG,EAAG,GAIH9O,KAIRH,QAASiV,EAAU/M,EAAYgN,SAExBrM,EAAK1I,KAAKiB,SAEVnB,EAAIiI,EAAW9B,GAAIlG,EAAIgI,EAAW7B,GAAIF,EAAI+B,EAAW5B,GAAI5F,EAAIwH,EAAW3B,GACxE4O,EAAKlV,EAAIA,EAAGmV,EAAKlV,EAAIA,EAAGmV,EAAKlP,EAAIA,EACjCyI,EAAK3O,EAAIkV,EAAIpG,EAAK9O,EAAImV,EAAIpG,EAAK/O,EAAIoV,EACnCxG,EAAK3O,EAAIkV,EAAInG,EAAK/O,EAAImV,EAAIvG,EAAK3I,EAAIkP,EACnCC,EAAK5U,EAAIyU,EAAII,EAAK7U,EAAI0U,EAAII,EAAK9U,EAAI2U,EAEnClH,EAAK+G,EAAMjV,EAAGoO,EAAK6G,EAAMhV,EAAGoO,EAAK4G,EAAM/O,WAEzC,SAAmB2I,IAASX,IAC5B,MAAaqH,GAAOrH,IACpB,MAAaoH,GAAOpH,IACpB,GAAM,IAEN,MAAaqH,GAAOnH,IACpB,SAAmBS,IAAST,IAC5B,MAAaiH,GAAOjH,IACpB,GAAM,IAEN,MAAakH,GAAOjH,IACpB,MAAagH,GAAOhH,IACpB,UAAoBO,IAASP,IAC7B,IAAO,IAEP,IAAO2G,EAAShV,IAChB,IAAOgV,EAAS/U,IAChB,IAAO+U,EAAS9O,IAChB,IAAO,EAEJhG,KAIRH,UAAWiV,EAAU/M,EAAYgN,SAE1BrM,EAAK1I,KAAKiB,aAEZ+M,EAAKwC,EAAIzK,IAAK2C,EAAI,GAAKA,EAAI,GAAKA,EAAI,IAAMjH,eACxCyM,EAAKsC,EAAIzK,IAAK2C,EAAI,GAAKA,EAAI,GAAKA,EAAI,IAAMjH,SAC1C0M,EAAKqC,EAAIzK,IAAK2C,EAAI,GAAKA,EAAI,GAAKA,EAAI,KAAOjH,SAGrCzB,KAAKsV,cACN,OAAWtH,KAEblO,EAAI4I,EAAI,MACR3I,EAAI2I,EAAI,MACR1C,EAAI0C,EAAI,MAGbgC,KAAM1K,YAEJuV,EAAQ,EAAIvH,EACZwH,EAAQ,EAAItH,EACZuH,EAAQ,EAAItH,WAEdlN,SAAU,IAAOsU,IACjBtU,SAAU,IAAOsU,IACjBtU,SAAU,IAAOsU,IAEjBtU,SAAU,IAAOuU,IACjBvU,SAAU,IAAOuU,IACjBvU,SAAU,IAAOuU,IAEjBvU,SAAU,IAAOwU,IACjBxU,SAAU,IAAOwU,IACjBxU,SAAU,KAAQwU,IAEXC,sBAAuBC,KAE5B7V,EAAIkO,IACJjO,EAAImO,IACJlI,EAAImI,EAEHnO,KAIRH,gBAAiB+V,EAAMC,EAAOC,EAAKC,EAAQC,EAAMC,QAEnC,IAARA,WAEIzV,KAAM,8GAITkI,EAAK1I,KAAKiB,SACVnB,EAAI,EAAIkW,KAAiBJ,GACzB7V,EAAI,EAAIiW,KAAeD,GAEvBpV,KAAciV,MAAmBA,GACjChV,KAAYmV,MAAmBA,GAC/B/S,MAAcgT,MAAiBA,GAC/BrF,KAAUsF,EAAMD,KAAeA,YAEjC,GAAMlW,IAAO,GAAM,IAAO,GAAMa,IAAO,IAAO,IAC9C,GAAM,IAAO,GAAMZ,IAAO,GAAMa,IAAO,IAAO,IAC9C,GAAM,IAAO,GAAM,IAAO,IAAOoC,IAAO,IAAO2N,IAC/C,GAAM,IAAO,GAAM,IAAO,SAAgB,IAAO,EAE9C3Q,KAIRH,iBAAkB+V,EAAMC,EAAOC,EAAKC,EAAQC,EAAMC,SAE3CvN,EAAK1I,KAAKiB,SACVV,EAAI,KAAgBqV,GACpBM,EAAI,KAAcH,GAClB/L,EAAI,KAAcgM,GAElBlW,KAAc8V,GAASrV,EACvBR,KAAYgW,GAAWG,EACvBlQ,KAAYgQ,GAAShM,WAEvB,GAAM,EAAIzJ,IAAO,GAAM,IAAO,GAAM,IAAO,KAAST,IACpD,GAAM,IAAO,GAAM,EAAIoW,IAAO,GAAM,IAAO,KAASnW,IACpD,GAAM,IAAO,GAAM,IAAO,OAAaiK,IAAO,KAAShE,IACvD,GAAM,IAAO,GAAM,IAAO,IAAO,IAAO,IAAO,EAE5ChG,KAIRH,OAAQsW,SAEDzN,EAAK1I,KAAKiB,SACVkP,EAAKgG,EAAOlV,iBAERuC,EAAI,EAAGA,EAAI,GAAIA,OAEnBkF,EAAIlF,KAAQ2M,EAAI3M,UAAa,SAI5B,EAIR3D,UAAW4C,EAAOC,EAAS,WAEhBc,EAAI,EAAGA,EAAI,GAAIA,SAEnBvC,SAAUuC,GAAMf,EAAOe,EAAId,UAI1B1C,KAIRH,QAAS4C,EAAQ,GAAIC,EAAS,SAEvBgG,EAAK1I,KAAKiB,kBAETyB,GAAWgG,EAAI,KACfhG,EAAS,GAAMgG,EAAI,KACnBhG,EAAS,GAAMgG,EAAI,KACnBhG,EAAS,GAAMgG,EAAI,KAEnBhG,EAAS,GAAMgG,EAAI,KACnBhG,EAAS,GAAMgG,EAAI,KACnBhG,EAAS,GAAMgG,EAAI,KACnBhG,EAAS,GAAMgG,EAAI,KAEnBhG,EAAS,GAAMgG,EAAI,KACnBhG,EAAS,GAAMgG,EAAI,KACnBhG,EAAS,IAAOgG,EAAI,MACpBhG,EAAS,IAAOgG,EAAI,MAEpBhG,EAAS,IAAOgG,EAAI,MACpBhG,EAAS,IAAOgG,EAAI,MACpBhG,EAAS,IAAOgG,EAAI,MACpBhG,EAAS,IAAOgG,EAAI,IAEpBjG,GAMTyN,EAAQ7M,UAAU+S,WAAY,EAE9B,MAAM5F,MAAwBnC,EACxBsH,MAAwBzF,EACxBuB,MAA0BpD,EAAS,EAAG,EAAG,GACzCqD,MAAyBrD,EAAS,EAAG,EAAG,GACxCpI,MAAuBoI,EACvBnI,MAAuBmI,EACvBlI,MAAuBkI,EC72BvBgI,MAA4BnG,EAC5BzE,MAAgCL,EAEtC,QAECvL,YAAaC,EAAI,EAAGC,EAAI,EAAGiG,EAAI,EAAGZ,EAAQkR,EAAMC,mBAE1CtQ,GAAKnG,OACLoG,GAAKnG,OACLoG,GAAKH,OACLmC,OAAS/C,iBAMPpF,KAAKiG,SAINhG,QAEDgG,GAAKhG,OACL6H,mCAME9H,KAAKkG,SAINjG,QAEDiG,GAAKjG,OACL6H,mCAME9H,KAAKmG,SAINlG,QAEDkG,GAAKlG,OACL6H,uCAME9H,KAAKmI,iBAIFlI,QAELkI,OAASlI,OACT6H,oBAINjI,IAAKC,EAAGC,EAAGiG,EAAGZ,eAERa,GAAKnG,OACLoG,GAAKnG,OACLoG,GAAKH,OACLmC,OAAS/C,GAASpF,KAAKmI,YAEvBL,oBAEE9H,KAIRH,eAEQ,IAAIG,KAAKK,YAAaL,KAAKiG,GAAIjG,KAAKkG,GAAIlG,KAAKmG,GAAInG,KAAKmI,QAI9DtI,KAAMmI,eAEA/B,GAAK+B,EAAM/B,QACXC,GAAK8B,EAAM9B,QACXC,GAAK6B,EAAM7B,QACXgC,OAASH,EAAMG,YAEfL,oBAEE9H,KAIRH,sBAAuBkB,EAAGqE,EAAO6C,SAI1BS,EAAK3H,EAAEE,SACP0H,EAAMD,EAAI,GAAKE,EAAMF,EAAI,GAAKG,EAAMH,EAAI,GACxCI,EAAMJ,EAAI,GAAKK,EAAML,EAAI,GAAKM,EAAMN,EAAI,GACxCO,EAAMP,EAAI,GAAKQ,EAAMR,EAAI,GAAKS,EAAMT,EAAI,aAEtCtD,GAASpF,KAAKmI,YAIhB,WAECjC,GAAKhF,KAAKsV,KAAMC,EAAO5N,KAAU,IAEjC3H,KAAKa,IAAK8G,GAAQ,eAEjB5C,GAAK/E,KAAKc,OAASgH,EAAKG,QACxBhD,GAAKjF,KAAKc,OAAS4G,EAAKD,UAIxB1C,GAAK/E,KAAKc,MAAOkH,EAAKH,QACtB5C,GAAK,aAMP,WAECF,GAAK/E,KAAKsV,MAAQC,EAAOzN,KAAU,IAEnC9H,KAAKa,IAAKiH,GAAQ,eAEjB9C,GAAKhF,KAAKc,MAAO6G,EAAKM,QACtBhD,GAAKjF,KAAKc,MAAO8G,EAAKC,UAItB7C,GAAKhF,KAAKc,OAASiH,EAAKN,QACxBxC,GAAK,aAMP,WAECF,GAAK/E,KAAKsV,KAAMC,EAAOvN,KAAU,IAEjChI,KAAKa,IAAKmH,GAAQ,eAEjBhD,GAAKhF,KAAKc,OAASiH,EAAKE,QACxBhD,GAAKjF,KAAKc,OAAS4G,EAAKG,UAIxB7C,GAAK,OACLC,GAAKjF,KAAKc,MAAO8G,EAAKH,cAMxB,WAECzC,GAAKhF,KAAKsV,MAAQC,EAAOxN,KAAU,IAEnC/H,KAAKa,IAAKkH,GAAQ,eAEjBhD,GAAK/E,KAAKc,MAAOkH,EAAKC,QACtBhD,GAAKjF,KAAKc,MAAO8G,EAAKH,UAItB1C,GAAK,OACLE,GAAKjF,KAAKc,OAAS4G,EAAKG,cAM1B,WAEC5C,GAAKjF,KAAKsV,KAAMC,EAAO3N,KAAU,IAEjC5H,KAAKa,IAAK+G,GAAQ,eAEjB7C,GAAK/E,KAAKc,OAASgH,EAAKD,QACxB7C,GAAKhF,KAAKc,OAASiH,EAAKN,UAIxB1C,GAAK,OACLC,GAAKhF,KAAKc,MAAO6G,EAAKM,cAMxB,WAEChD,GAAKjF,KAAKsV,MAAQC,EAAO7N,KAAU,IAEnC1H,KAAKa,IAAK6G,GAAQ,eAEjB3C,GAAK/E,KAAKc,MAAOkH,EAAKH,QACtB7C,GAAKhF,KAAKc,MAAO6G,EAAKF,UAItB1C,GAAK/E,KAAKc,OAASgH,EAAKG,QACxBjD,GAAK,yBAQH1F,KAAM,uEAAyE4E,eAIpF+C,OAAS/C,GAEE,IAAX6C,QAAwBH,oBAEtB9H,KAIRH,kBAAmBsF,EAAGC,EAAO6C,YAEpByO,2BAA4BvR,GAE7BnF,KAAK0V,sBAAuBW,EAASjR,EAAO6C,GAIpDpI,eAAgBS,EAAG8E,UAEXpF,KAAK+F,IAAKzF,EAAER,EAAGQ,EAAEP,EAAGO,EAAE0F,EAAGZ,GAASpF,KAAKmI,QAI/CtI,QAAS8W,YAIIjL,aAAc1L,MAEnBA,KAAK4W,kBAAmBnL,EAAakL,GAI7C9W,OAAQmI,UAEEA,EAAM/B,KAAOjG,KAAKiG,IAAU+B,EAAM9B,KAAOlG,KAAKkG,IAAU8B,EAAM7B,KAAOnG,KAAKmG,IAAU6B,EAAMG,SAAWnI,KAAKmI,OAIpHtI,UAAW4C,eAELwD,GAAKxD,EAAO,QACZyD,GAAKzD,EAAO,QACZ0D,GAAK1D,EAAO,QACG,IAAfA,EAAO,UAAyB0F,OAAS1F,EAAO,SAEhDqF,oBAEE9H,KAIRH,QAAS4C,EAAQ,GAAIC,EAAS,YAEtBA,GAAW1C,KAAKiG,KAChBvD,EAAS,GAAM1C,KAAKkG,KACpBxD,EAAS,GAAM1C,KAAKmG,KACpBzD,EAAS,GAAM1C,KAAKmI,OAEpB1F,EAIR5C,UAAWgX,UAELA,EAEGA,EAAe9Q,IAAK/F,KAAKiG,GAAIjG,KAAKkG,GAAIlG,KAAKmG,IAI3C,IAAIkI,EAASrO,KAAKiG,GAAIjG,KAAKkG,GAAIlG,KAAKmG,IAM7CtG,UAAWsL,eAELrD,kBAAoBqD,EAElBnL,KAIRH,sBAIDyW,EAAMjT,UAAU6E,SAAU,EAE1BoO,EAAMC,aAAe,MACrBD,EAAMQ,eAAiB,CAAE,MAAO,MAAO,MAAO,MAAO,MAAO,OC/T5D,MAAMC,EAAiB,CAAEC,UAAa,SAAUC,aAAgB,SAAUC,KAAQ,MAAUC,WAAc,QAAUC,MAAS,SAC5HC,MAAS,SAAUC,OAAU,SAAUC,MAAS,EAAUC,eAAkB,SAAUC,KAAQ,IAAUC,WAAc,QACtHC,MAAS,SAAUC,UAAa,SAAUC,UAAa,QAAUC,WAAc,QAAUC,UAAa,SAAUC,MAAS,SACzHC,eAAkB,QAAUC,SAAY,SAAUC,QAAW,SAAUC,KAAQ,MAAUC,SAAY,IAAUC,SAAY,MAC3HC,cAAiB,SAAUC,SAAY,SAAUC,UAAa,MAAUC,SAAY,SAAUC,UAAa,SAAUC,YAAe,QACpIC,eAAkB,QAAUC,WAAc,SAAUC,WAAc,SAAUC,QAAW,QAAUC,WAAc,SAAUC,aAAgB,QACzIC,cAAiB,QAAUC,cAAiB,QAAUC,cAAiB,QAAUC,cAAiB,MAAUC,WAAc,QAC1HC,SAAY,SAAUC,YAAe,MAAUC,QAAW,QAAUC,QAAW,QAAUC,WAAc,QAAUC,UAAa,SAC9HC,YAAe,SAAUC,YAAe,QAAUC,QAAW,SAAUC,UAAa,SAAUC,WAAc,SAAUC,KAAQ,SAC9HC,UAAa,SAAUC,KAAQ,QAAUC,MAAS,MAAUC,YAAe,SAAUC,KAAQ,QAAUC,SAAY,SAAUC,QAAW,SACxIC,UAAa,SAAUC,OAAU,QAAUC,MAAS,SAAUC,MAAS,SAAUC,SAAY,SAAUC,cAAiB,SAAUC,UAAa,QAC/IC,aAAgB,SAAUC,UAAa,SAAUC,WAAc,SAAUC,UAAa,SAAUC,qBAAwB,SAAUC,UAAa,SAC/IC,WAAc,QAAUC,UAAa,SAAUC,UAAa,SAAUC,YAAe,SAAUC,cAAiB,QAAUC,aAAgB,QAC1IC,eAAkB,QAAUC,eAAkB,QAAUC,eAAkB,SAAUC,YAAe,SAAUC,KAAQ,MAAUC,UAAa,QAC5IC,MAAS,SAAUC,QAAW,SAAUC,OAAU,QAAUC,iBAAoB,QAAUC,WAAc,IAAUC,aAAgB,SAClIC,aAAgB,QAAUC,eAAkB,QAAUC,gBAAmB,QAAUC,kBAAqB,MAAUC,gBAAmB,QACrIC,gBAAmB,SAAUC,aAAgB,QAAUC,UAAa,SAAUC,UAAa,SAAUC,SAAY,SAAUC,YAAe,SAC1IC,KAAQ,IAAUC,QAAW,SAAUC,MAAS,QAAUC,UAAa,QAAUC,OAAU,SAAUC,UAAa,SAAUC,OAAU,SACtIC,cAAiB,SAAUC,UAAa,SAAUC,cAAiB,SAAUC,cAAiB,SAAUC,WAAc,SAAUC,UAAa,SAC7IC,KAAQ,SAAUC,KAAQ,SAAUC,KAAQ,SAAUC,WAAc,SAAUC,OAAU,QAAUC,cAAiB,QAAUC,IAAO,SAAUC,UAAa,SAC3JC,UAAa,QAAUC,YAAe,QAAUC,OAAU,SAAUC,WAAc,SAAUC,SAAY,QAAUC,SAAY,SAC9HC,OAAU,SAAUC,OAAU,SAAUC,QAAW,QAAUC,UAAa,QAAUC,UAAa,QAAUC,UAAa,QAAUC,KAAQ,SAC1IC,YAAe,MAAUC,UAAa,QAAUC,IAAO,SAAUC,KAAQ,MAAUC,QAAW,SAAUC,OAAU,SAAUC,UAAa,QACzIC,OAAU,SAAUC,MAAS,SAAUC,MAAS,SAAUC,WAAc,SAAUC,OAAU,SAAUC,YAAe,UAEhHC,EAAQ,CAAElK,EAAG,EAAGxV,EAAG,EAAGqJ,EAAG,GACzBsW,EAAQ,CAAEnK,EAAG,EAAGxV,EAAG,EAAGqJ,EAAG,GAE/B,WAAkBC,EAAG7E,EAAGrB,UAElBA,EAAI,OAAS,GACbA,EAAI,OAAS,GACbA,EAAI,EAAI,EAAWkG,EAAgB,KAANA,GAAUlG,EACvCA,EAAI,GAAeqB,EACnBrB,EAAI,EAAI,EAAWkG,EAAgB,KAANA,MAAgB,EAAIlG,GAC/CkG,EAIR,WAAuBhH,UAEbA,EAAI,OAAgB,YAAJA,EAAmB9B,KAAK8D,IAAS,YAAJhC,EAAmB,YAAc,KAIxF,WAAuBA,UAEbA,EAAI,SAAkB,MAAJA,EAAY,MAAU9B,KAAK8D,IAAKhC,EAAG,QAAc,KAI7E,QAECnD,YAAa0J,EAAG+W,EAAG1f,eAEP,IAAN0f,QAAyB,IAAN1f,EAGhBZ,KAAK+F,IAAKwD,GAIXvJ,KAAKugB,OAAQhX,EAAG+W,EAAG1f,GAI3Bf,IAAKI,UAECA,GAASA,EAAMugB,aAEd9V,KAAMzK,GAEiB,iBAAVA,OAEbwgB,OAAQxgB,GAEe,iBAAVA,QAEbygB,SAAUzgB,GAITD,KAIRH,UAAWK,eAELqJ,EAAIrJ,OACJogB,EAAIpgB,OACJygB,EAAIzgB,EAEFF,KAIRH,OAAQ+gB,YAED1f,KAAKS,MAAOif,QAEbrX,MAAa,GAAK,KAAQ,SAC1B+W,MAAa,EAAI,KAAQ,SACzBK,GAAY,OAAQ,IAElB3gB,KAIRH,OAAQ0J,EAAG+W,EAAG1f,eAER2I,EAAIA,OACJ+W,EAAIA,OACJK,EAAI/f,EAEFZ,KAIRH,OAAQqW,EAAGxV,EAAGqJ,QAGT8W,EAA2B3K,EAAG,KAC9BxM,EAAiBhJ,EAAG,EAAG,KACvBgJ,EAAiBK,EAAG,EAAG,GAEhB,IAANrJ,OAEC6I,EAAIvJ,KAAKsgB,EAAItgB,KAAK2gB,EAAI5W,MAErB,OAEAC,EAAID,GAAK,GAAMA,KAAUrJ,GAAMqJ,EAAIrJ,EAAMqJ,EAAIrJ,EAC7CyE,EAAM,EAAI4E,EAAMC,OAEjBT,EAAIuX,EAAS3b,EAAG6E,EAAGkM,EAAI,EAAI,QAC3BoK,EAAIQ,EAAS3b,EAAG6E,EAAGkM,QACnByK,EAAIG,EAAS3b,EAAG6E,EAAGkM,EAAI,EAAI,UAI1BlW,KAIRH,SAAUkhB,cAEaC,QAEL,IAAXA,GAEAC,WAAYD,GAAW,WAEnBxgB,KAAM,mCAAqCugB,EAAQ,yBAOzDhgB,KAECA,EAAI,+BAA+BmgB,KAAMH,GAAU,KAInDI,QACEC,EAAOrgB,EAAG,GACVsgB,EAAatgB,EAAG,UAEbqgB,OAEH,UACA,UAECD,EAAQ,+DAA+DD,KAAMG,eAG5E9X,EAAIrI,KAAKC,IAAK,IAAKmgB,SAAUH,EAAO,GAAK,KAAS,SAClDb,EAAIpf,KAAKC,IAAK,IAAKmgB,SAAUH,EAAO,GAAK,KAAS,SAClDR,EAAIzf,KAAKC,IAAK,IAAKmgB,SAAUH,EAAO,GAAK,KAAS,MAE1CA,EAAO,IAEbnhB,QAIHmhB,EAAQ,qEAAqED,KAAMG,eAGlF9X,EAAIrI,KAAKC,IAAK,IAAKmgB,SAAUH,EAAO,GAAK,KAAS,SAClDb,EAAIpf,KAAKC,IAAK,IAAKmgB,SAAUH,EAAO,GAAK,KAAS,SAClDR,EAAIzf,KAAKC,IAAK,IAAKmgB,SAAUH,EAAO,GAAK,KAAS,MAE1CA,EAAO,IAEbnhB,eAMJ,UACA,UAECmhB,EAAQ,yEAAyED,KAAMG,GAAe,OAGpGnL,EAAI+K,WAAYE,EAAO,IAAQ,IAC/BzgB,EAAI4gB,SAAUH,EAAO,GAAK,IAAO,IACjCpX,EAAIuX,SAAUH,EAAO,GAAK,IAAO,aAE1BA,EAAO,IAEbnhB,KAAKuhB,OAAQrL,EAAGxV,EAAGqJ,aAQlBhJ,EAAI,oBAAoBmgB,KAAMH,GAAU,OAI7CH,EAAM7f,EAAG,GACTygB,EAAOZ,EAAInf,UAEH,IAAT+f,cAGCjY,EAAI+X,SAAUV,EAAIa,OAAQ,GAAMb,EAAIa,OAAQ,GAAK,IAAO,SACxDnB,EAAIgB,SAAUV,EAAIa,OAAQ,GAAMb,EAAIa,OAAQ,GAAK,IAAO,SACxDd,EAAIW,SAAUV,EAAIa,OAAQ,GAAMb,EAAIa,OAAQ,GAAK,IAAO,IAEtDzhB,QAEa,IAATwhB,cAGNjY,EAAI+X,SAAUV,EAAIa,OAAQ,GAAMb,EAAIa,OAAQ,GAAK,IAAO,SACxDnB,EAAIgB,SAAUV,EAAIa,OAAQ,GAAMb,EAAIa,OAAQ,GAAK,IAAO,SACxDd,EAAIW,SAAUV,EAAIa,OAAQ,GAAMb,EAAIa,OAAQ,GAAK,IAAO,IAEtDzhB,YAMJ+gB,GAASA,EAAMtf,OAAS,EAErBzB,KAAK0hB,aAAcX,GAIpB/gB,KAIRH,aAAckhB,SAGPH,EAAM7J,EAAgBgK,EAAMY,2BAErB,IAARf,OAGCH,OAAQG,WAKLpgB,KAAM,8BAAgCugB,GAIxC/gB,KAIRH,eAEQ,IAAIG,KAAKK,YAAaL,KAAKuJ,EAAGvJ,KAAKsgB,EAAGtgB,KAAK2gB,GAInD9gB,KAAMshB,eAEA5X,EAAI4X,EAAM5X,OACV+W,EAAIa,EAAMb,OACVK,EAAIQ,EAAMR,EAER3gB,KAIRH,kBAAmBshB,EAAOS,EAAc,eAElCrY,EAAIrI,KAAK8D,IAAKmc,EAAM5X,EAAGqY,QACvBtB,EAAIpf,KAAK8D,IAAKmc,EAAMb,EAAGsB,QACvBjB,EAAIzf,KAAK8D,IAAKmc,EAAMR,EAAGiB,GAErB5hB,KAIRH,kBAAmBshB,EAAOS,EAAc,SAEjCC,EAAgBD,EAAc,EAAQ,EAAMA,EAAgB,cAE7DrY,EAAIrI,KAAK8D,IAAKmc,EAAM5X,EAAGsY,QACvBvB,EAAIpf,KAAK8D,IAAKmc,EAAMb,EAAGuB,QACvBlB,EAAIzf,KAAK8D,IAAKmc,EAAMR,EAAGkB,GAErB7hB,KAIRH,qBAAsB+hB,eAEhBE,kBAAmB9hB,KAAM4hB,GAEvB5hB,KAIRH,qBAAsB+hB,eAEhBG,kBAAmB/hB,KAAM4hB,GAEvB5hB,KAIRH,iBAAkBshB,eAEZ5X,EAAIyY,EAAcb,EAAM5X,QACxB+W,EAAI0B,EAAcb,EAAMb,QACxBK,EAAIqB,EAAcb,EAAMR,GAEtB3gB,KAIRH,iBAAkBshB,eAEZ5X,EAAI0Y,EAAcd,EAAM5X,QACxB+W,EAAI2B,EAAcd,EAAMb,QACxBK,EAAIsB,EAAcd,EAAMR,GAEtB3gB,KAIRH,kCAEMqiB,iBAAkBliB,MAEhBA,KAIRH,kCAEMsiB,iBAAkBniB,MAEhBA,KAIRH,gBAEmB,IAATG,KAAKuJ,GAAa,GAAgB,IAATvJ,KAAKsgB,GAAa,EAAe,IAATtgB,KAAK2gB,GAAa,EAI7E9gB,+BAEqBG,KAAKoiB,SAAS3e,SAAU,KAAO4e,UAIpDxiB,OAAQ+R,QAIS,IAAXA,YAEIpR,KAAM,mDACL,CAAE0V,EAAG,EAAGxV,EAAG,EAAGqJ,EAAG,UAIrBR,EAAIvJ,KAAKuJ,EAAG+W,EAAItgB,KAAKsgB,EAAG1f,EAAIZ,KAAK2gB,EAEjCrf,EAAMJ,KAAKE,IAAKmI,EAAG+W,EAAG1f,GACtBS,EAAMH,KAAKC,IAAKoI,EAAG+W,EAAG1f,OAExB0hB,EAAKC,QACHC,KAAoBlhB,GAAQ,KAE7BD,IAAQC,IAEN,IACO,MAEP,OAEAmhB,EAAQnhB,EAAMD,WAEPmhB,GAAa,GAAMC,KAAgBphB,GAAQohB,KAAcnhB,EAAMD,GAEnEC,QAEHiI,OAAe3I,GAAM6hB,KAAc7hB,EAAI,EAAI,cAC3C0f,OAAe/W,GAAMkZ,EAAQ,aAC7B7hB,OAAe0f,GAAMmC,EAAQ,KAI5B,WAIDvM,EAAIoM,IACJ5hB,EAAI6hB,IACJxY,EAAIyY,EAEJ5Q,EAIR/R,iBAEQ,QAAsB,SAAJ0J,EAAY,GAAM,KAAmB,SAAJ+W,EAAY,GAAM,KAAmB,SAAJK,EAAY,GAAM,IAI9G9gB,UAAWqW,EAAGxV,EAAGqJ,eAEX2Y,OAAQtC,KAEPlK,GAAKA,IAASxV,GAAKA,IAASqJ,GAAKA,OAElCwX,OAAQnB,EAAMlK,EAAGkK,EAAM1f,EAAG0f,EAAMrW,GAE9B/J,KAIRH,IAAKshB,eAEC5X,GAAK4X,EAAM5X,OACX+W,GAAKa,EAAMb,OACXK,GAAKQ,EAAMR,EAET3gB,KAIRH,UAAW8iB,EAAQC,eAEbrZ,EAAIoZ,EAAOpZ,EAAIqZ,EAAOrZ,OACtB+W,EAAIqC,EAAOrC,EAAIsC,EAAOtC,OACtBK,EAAIgC,EAAOhC,EAAIiC,EAAOjC,EAEpB3gB,KAIRH,UAAWa,eAEL6I,GAAK7I,OACL4f,GAAK5f,OACLigB,GAAKjgB,EAEHV,KAIRH,IAAKshB,eAEC5X,EAAIrI,KAAKE,IAAK,EAAGpB,KAAKuJ,EAAI4X,EAAM5X,QAChC+W,EAAIpf,KAAKE,IAAK,EAAGpB,KAAKsgB,EAAIa,EAAMb,QAChCK,EAAIzf,KAAKE,IAAK,EAAGpB,KAAK2gB,EAAIQ,EAAMR,GAE9B3gB,KAIRH,SAAUshB,eAEJ5X,GAAK4X,EAAM5X,OACX+W,GAAKa,EAAMb,OACXK,GAAKQ,EAAMR,EAET3gB,KAIRH,eAAgBa,eAEV6I,GAAK7I,OACL4f,GAAK5f,OACLigB,GAAKjgB,EAEHV,KAIRH,KAAMshB,EAAO7e,eAEPiH,MAAaA,EAAIvJ,KAAKuJ,GAAMjH,OAC5Bge,MAAaA,EAAItgB,KAAKsgB,GAAMhe,OAC5Bqe,MAAaA,EAAI3gB,KAAK2gB,GAAMre,EAE1BtC,KAIRH,WAAY8iB,EAAQC,EAAQtgB,eAEtBiH,EAAIoZ,EAAOpZ,KAAaA,EAAIoZ,EAAOpZ,GAAMjH,OACzCge,EAAIqC,EAAOrC,KAAaA,EAAIqC,EAAOrC,GAAMhe,OACzCqe,EAAIgC,EAAOhC,KAAaA,EAAIgC,EAAOhC,GAAMre,EAEvCtC,KAIRH,QAASshB,EAAO7e,QAEVogB,OAAQtC,KACPsC,OAAQrC,SAERnK,EAAI2M,EAAgBzC,EAAMlK,EAAGmK,EAAMnK,EAAG5T,GACtC5B,EAAImiB,EAAgBzC,EAAM1f,EAAG2f,EAAM3f,EAAG4B,GACtCyH,EAAI8Y,EAAgBzC,EAAMrW,EAAGsW,EAAMtW,EAAGzH,eAEvCif,OAAQrL,EAAGxV,EAAGqJ,GAEZ/J,KAIRH,OAAQmD,UAEEA,EAAEuG,IAAMvJ,KAAKuJ,GAASvG,EAAEsd,IAAMtgB,KAAKsgB,GAAStd,EAAE2d,IAAM3gB,KAAK2gB,EAInE9gB,UAAW4C,EAAOC,EAAS,eAErB6G,EAAI9G,EAAOC,QACX4d,EAAI7d,EAAOC,EAAS,QACpBie,EAAIle,EAAOC,EAAS,GAElB1C,KAIRH,QAAS4C,EAAQ,GAAIC,EAAS,YAEtBA,GAAW1C,KAAKuJ,IAChB7G,EAAS,GAAM1C,KAAKsgB,IACpB5d,EAAS,GAAM1C,KAAK2gB,EAEpBle,EAIR5C,oBAAqB8C,EAAWxC,eAE1BoJ,EAAI5G,EAAUC,KAAMzC,QACpBmgB,EAAI3d,EAAUE,KAAM1C,QACpBwgB,EAAIhe,EAAUsI,KAAM9K,IAEK,IAAzBwC,EAAUmgB,kBAITvZ,GAAK,SACL+W,GAAK,SACLK,GAAK,KAIJ3gB,KAIRH,gBAEQG,KAAKoiB,UAMdW,EAAMC,MAAQjM,EAEdgM,EAAM1f,UAAUmd,SAAU,EAC1BuC,EAAM1f,UAAUkG,EAAI,EACpBwZ,EAAM1f,UAAUid,EAAI,EACpByC,EAAM1f,UAAUsd,EAAI,EC9lBpB,MAAMpT,MAA4BnK,EAElC,QAECvD,YAAawB,EAAM,IAAI+B,EAAS6f,EAAAA,EAAYA,EAAAA,GAAc3hB,EAAM,IAAI8B,mBAE9DjC,IAAME,OACND,IAAME,EAIZzB,IAAKwB,EAAKC,eAEJH,IAAIuJ,KAAMrJ,QACVD,IAAIsJ,KAAMpJ,GAERtB,KAIRH,cAAeqjB,QAETC,oBAEK3f,EAAI,EAAG4f,EAAKF,EAAOzhB,OAAQ+B,EAAI4f,EAAI5f,SAEvC6f,cAAeH,EAAQ1f,WAItBxD,KAIRH,qBAAsBiD,EAAQ0e,SAEvB8B,EAAW/V,EAAQ7C,KAAM8W,GAAO1gB,eAAgB,gBACjDK,IAAIuJ,KAAM5H,GAASwK,IAAKgW,QACxBliB,IAAIsJ,KAAM5H,GAASygB,IAAKD,GAEtBtjB,KAIRH,eAEQ,IAAIG,KAAKK,aAAcqK,KAAM1K,MAIrCH,KAAM2jB,eAEAriB,IAAIuJ,KAAM8Y,EAAIriB,UACdC,IAAIsJ,KAAM8Y,EAAIpiB,KAEZpB,KAIRH,wBAEMsB,IAAIrB,EAAIE,KAAKmB,IAAIpB,EAAIkjB,EAAAA,OACrB7hB,IAAItB,EAAIE,KAAKoB,IAAIrB,OAEfC,KAIRH,iBAIUG,KAAKoB,IAAItB,EAAIE,KAAKmB,IAAIrB,GAASE,KAAKoB,IAAIrB,EAAIC,KAAKmB,IAAIpB,EAI/DF,UAAW+R,eAEM,IAAXA,YAEIpR,KAAM,qDACL,IAAI4C,GAIPpD,KAAKyjB,UAAY7R,EAAO7L,IAAK,EAAG,GAAM6L,EAAOnR,WAAYT,KAAKmB,IAAKnB,KAAKoB,KAAMN,eAAgB,IAItGjB,QAAS+R,eAEQ,IAAXA,YAEIpR,KAAM,mDACL,IAAI4C,GAIPpD,KAAKyjB,UAAY7R,EAAO7L,IAAK,EAAG,GAAM6L,EAAO/Q,WAAYb,KAAKoB,IAAKpB,KAAKmB,KAIhFtB,cAAe6jB,eAETviB,IAAIA,IAAKuiB,QACTtiB,IAAIA,IAAKsiB,GAEP1jB,KAIRH,eAAgB8jB,eAEVxiB,IAAImM,IAAKqW,QACTviB,IAAImiB,IAAKI,GAEP3jB,KAIRH,eAAgBK,eAEViB,IAAIyiB,WAAa1jB,QACjBkB,IAAIwiB,UAAW1jB,GAEbF,KAIRH,cAAe6jB,WAEPA,EAAM5jB,EAAIE,KAAKmB,IAAIrB,GAAK4jB,EAAM5jB,EAAIE,KAAKoB,IAAItB,GACjD4jB,EAAM3jB,EAAIC,KAAKmB,IAAIpB,GAAK2jB,EAAM3jB,EAAIC,KAAKoB,IAAIrB,GAI7CF,YAAa2jB,UAELxjB,KAAKmB,IAAIrB,GAAK0jB,EAAIriB,IAAIrB,GAAK0jB,EAAIpiB,IAAItB,GAAKE,KAAKoB,IAAItB,GACvDE,KAAKmB,IAAIpB,GAAKyjB,EAAIriB,IAAIpB,GAAKyjB,EAAIpiB,IAAIrB,GAAKC,KAAKoB,IAAIrB,EAInDF,aAAc6jB,EAAO9R,eAKJ,IAAXA,YAEIpR,KAAM,wDACL,IAAI4C,GAIPwO,EAAO7L,OACLjG,EAAIE,KAAKmB,IAAIrB,SAAasB,IAAItB,EAAIE,KAAKmB,IAAIrB,MAC3CC,EAAIC,KAAKmB,IAAIpB,SAAaqB,IAAIrB,EAAIC,KAAKmB,IAAIpB,IAKrDF,cAAe2jB,WAIPA,EAAIpiB,IAAItB,EAAIE,KAAKmB,IAAIrB,GAAK0jB,EAAIriB,IAAIrB,EAAIE,KAAKoB,IAAItB,GACrD0jB,EAAIpiB,IAAIrB,EAAIC,KAAKmB,IAAIpB,GAAKyjB,EAAIriB,IAAIpB,EAAIC,KAAKoB,IAAIrB,GAIjDF,WAAY6jB,EAAO9R,eAEF,IAAXA,YAEIpR,KAAM,sDACL,IAAI4C,GAIPwO,EAAOlH,KAAMgZ,GAAQjN,MAAOzW,KAAKmB,IAAKnB,KAAKoB,KAInDvB,gBAAiB6jB,UAEKnW,EAAQ7C,KAAMgZ,GAAQjN,MAAOzW,KAAKmB,IAAKnB,KAAKoB,KAC7CkM,IAAKoW,GAAQjiB,SAIlC5B,UAAW2jB,eAELriB,IAAIC,IAAKoiB,EAAIriB,UACbC,IAAID,IAAKqiB,EAAIpiB,KAEXpB,KAIRH,MAAO2jB,eAEDriB,IAAIA,IAAKqiB,EAAIriB,UACbC,IAAIA,IAAKoiB,EAAIpiB,KAEXpB,KAIRH,UAAW6C,eAELvB,IAAIoiB,IAAK7gB,QACTtB,IAAImiB,IAAK7gB,GAEP1C,KAIRH,OAAQ2jB,UAEAA,EAAIriB,IAAI0iB,OAAQ7jB,KAAKmB,MAASqiB,EAAIpiB,IAAIyiB,OAAQ7jB,KAAKoB,MAM5D0iB,EAAKzgB,UAAU0gB,QAAS,EClOxB,QAEClkB,YAAawB,EAAM,IAAIgN,EAAS4U,EAAAA,EAAYA,EAAAA,EAAYA,EAAAA,GAAc3hB,EAAM,IAAI+M,wBAE1ElN,IAAME,OACND,IAAME,EAIZzB,IAAKwB,EAAKC,eAEJH,IAAIuJ,KAAMrJ,QACVD,IAAIsJ,KAAMpJ,GAERtB,KAIRH,aAAc4C,OAETuhB,EAAOf,EAAAA,EACPgB,EAAOhB,EAAAA,EACPiB,EAAOjB,EAAAA,EAEPkB,OACAC,OACAC,eAEM7gB,EAAI,EAAGuG,EAAItH,EAAMhB,OAAQ+B,EAAIuG,EAAGvG,GAAK,EAAI,OAE5C1D,EAAI2C,EAAOe,GACXzD,EAAI0C,EAAOe,EAAI,GACfwC,EAAIvD,EAAOe,EAAI,GAEhB1D,EAAIkkB,MAAclkB,GAClBC,EAAIkkB,MAAclkB,GAClBiG,EAAIke,MAAcle,GAElBlG,EAAIqkB,MAAcrkB,GAClBC,EAAIqkB,MAAcrkB,GAClBiG,EAAIqe,MAAcre,eAInB7E,IAAI4E,IAAKie,EAAMC,EAAMC,QACrB9iB,IAAI2E,IAAKoe,EAAMC,EAAMC,GAEnBrkB,KAIRH,uBAAwB8C,OAEnBqhB,EAAOf,EAAAA,EACPgB,EAAOhB,EAAAA,EACPiB,EAAOjB,EAAAA,EAEPkB,OACAC,OACAC,eAEM7gB,EAAI,EAAGuG,EAAIpH,EAAU2hB,MAAO9gB,EAAIuG,EAAGvG,IAAO,OAE7C1D,EAAI6C,EAAUC,KAAMY,GACpBzD,EAAI4C,EAAUE,KAAMW,GACpBwC,EAAIrD,EAAUsI,KAAMzH,GAErB1D,EAAIkkB,MAAclkB,GAClBC,EAAIkkB,MAAclkB,GAClBiG,EAAIke,MAAcle,GAElBlG,EAAIqkB,MAAcrkB,GAClBC,EAAIqkB,MAAcrkB,GAClBiG,EAAIqe,MAAcre,eAInB7E,IAAI4E,IAAKie,EAAMC,EAAMC,QACrB9iB,IAAI2E,IAAKoe,EAAMC,EAAMC,GAEnBrkB,KAIRH,cAAeqjB,QAETC,oBAEK3f,EAAI,EAAG4f,EAAKF,EAAOzhB,OAAQ+B,EAAI4f,EAAI5f,SAEvC6f,cAAeH,EAAQ1f,WAItBxD,KAIRH,qBAAsBiD,EAAQ0e,SAEvB8B,EAAW/V,EAAQ7C,KAAM8W,GAAO1gB,eAAgB,gBAEjDK,IAAIuJ,KAAM5H,GAASwK,IAAKgW,QACxBliB,IAAIsJ,KAAM5H,GAASygB,IAAKD,GAEtBtjB,KAIRH,cAAe0kB,eAETpB,YAEEnjB,KAAKwkB,eAAgBD,GAI7B1kB,eAEQ,IAAIG,KAAKK,aAAcqK,KAAM1K,MAIrCH,KAAM2jB,eAEAriB,IAAIuJ,KAAM8Y,EAAIriB,UACdC,IAAIsJ,KAAM8Y,EAAIpiB,KAEZpB,KAIRH,wBAEMsB,IAAIrB,EAAIE,KAAKmB,IAAIpB,EAAIC,KAAKmB,IAAI6E,EAAIid,EAAAA,OAClC7hB,IAAItB,EAAIE,KAAKoB,IAAIrB,EAAIC,KAAKoB,IAAI4E,OAE5BhG,KAIRH,iBAIUG,KAAKoB,IAAItB,EAAIE,KAAKmB,IAAIrB,GAASE,KAAKoB,IAAIrB,EAAIC,KAAKmB,IAAIpB,GAASC,KAAKoB,IAAI4E,EAAIhG,KAAKmB,IAAI6E,EAI9FnG,UAAW+R,eAEM,IAAXA,YAEIpR,KAAM,qDACL,IAAI6N,GAIPrO,KAAKyjB,UAAY7R,EAAO7L,IAAK,EAAG,EAAG,GAAM6L,EAAOnR,WAAYT,KAAKmB,IAAKnB,KAAKoB,KAAMN,eAAgB,IAIzGjB,QAAS+R,eAEQ,IAAXA,YAEIpR,KAAM,mDACL,IAAI6N,GAIPrO,KAAKyjB,UAAY7R,EAAO7L,IAAK,EAAG,EAAG,GAAM6L,EAAO/Q,WAAYb,KAAKoB,IAAKpB,KAAKmB,KAInFtB,cAAe6jB,eAETviB,IAAIA,IAAKuiB,QACTtiB,IAAIA,IAAKsiB,GAEP1jB,KAIRH,eAAgB8jB,eAEVxiB,IAAImM,IAAKqW,QACTviB,IAAImiB,IAAKI,GAEP3jB,KAIRH,eAAgBK,eAEViB,IAAIyiB,WAAa1jB,QACjBkB,IAAIwiB,UAAW1jB,GAEbF,KAIRH,eAAgB0kB,KAKRE,mBAAmB,GAAO,SAE3BC,EAAWH,EAAOG,cAEN,IAAbA,IAE0B,OAAzBA,EAASC,eAEJC,uBAILla,KAAMga,EAASC,eACfrY,aAAciY,EAAO7X,kBAErBmY,MAAOC,UAIPC,EAAWR,EAAOQ,iBAEdvhB,EAAI,EAAGuG,EAAIgb,EAAStjB,OAAQ+B,EAAIuG,EAAGvG,SAEvCghB,eAAgBO,EAAUvhB,WAIzBxD,KAIRH,cAAe6jB,WAEPA,EAAM5jB,EAAIE,KAAKmB,IAAIrB,GAAK4jB,EAAM5jB,EAAIE,KAAKoB,IAAItB,GACjD4jB,EAAM3jB,EAAIC,KAAKmB,IAAIpB,GAAK2jB,EAAM3jB,EAAIC,KAAKoB,IAAIrB,GAC3C2jB,EAAM1d,EAAIhG,KAAKmB,IAAI6E,GAAK0d,EAAM1d,EAAIhG,KAAKoB,IAAI4E,GAI7CnG,YAAa2jB,UAELxjB,KAAKmB,IAAIrB,GAAK0jB,EAAIriB,IAAIrB,GAAK0jB,EAAIpiB,IAAItB,GAAKE,KAAKoB,IAAItB,GACvDE,KAAKmB,IAAIpB,GAAKyjB,EAAIriB,IAAIpB,GAAKyjB,EAAIpiB,IAAIrB,GAAKC,KAAKoB,IAAIrB,GACjDC,KAAKmB,IAAI6E,GAAKwd,EAAIriB,IAAI6E,GAAKwd,EAAIpiB,IAAI4E,GAAKhG,KAAKoB,IAAI4E,EAInDnG,aAAc6jB,EAAO9R,eAKJ,IAAXA,YAEIpR,KAAM,wDACL,IAAI6N,GAIPuD,EAAO7L,OACLjG,EAAIE,KAAKmB,IAAIrB,SAAasB,IAAItB,EAAIE,KAAKmB,IAAIrB,MAC3CC,EAAIC,KAAKmB,IAAIpB,SAAaqB,IAAIrB,EAAIC,KAAKmB,IAAIpB,MAC3CiG,EAAIhG,KAAKmB,IAAI6E,SAAa5E,IAAI4E,EAAIhG,KAAKmB,IAAI6E,IAKrDnG,cAAe2jB,WAGPA,EAAIpiB,IAAItB,EAAIE,KAAKmB,IAAIrB,GAAK0jB,EAAIriB,IAAIrB,EAAIE,KAAKoB,IAAItB,GACrD0jB,EAAIpiB,IAAIrB,EAAIC,KAAKmB,IAAIpB,GAAKyjB,EAAIriB,IAAIpB,EAAIC,KAAKoB,IAAIrB,GAC/CyjB,EAAIpiB,IAAI4E,EAAIhG,KAAKmB,IAAI6E,GAAKwd,EAAIriB,IAAI6E,EAAIhG,KAAKoB,IAAI4E,GAIjDnG,iBAAkBmlB,eAGZC,WAAYD,EAAOliB,OAAQyK,GAGzBA,EAAQrL,kBAAmB8iB,EAAOliB,SAAckiB,EAAOpX,OAASoX,EAAOpX,OAI/E/N,gBAAiBqlB,OAKZ7jB,EAAKC,SAEJ4jB,EAAM1X,OAAO1N,EAAI,KAEfolB,EAAM1X,OAAO1N,EAAIE,KAAKmB,IAAIrB,IAC1BolB,EAAM1X,OAAO1N,EAAIE,KAAKoB,IAAItB,MAI1BolB,EAAM1X,OAAO1N,EAAIE,KAAKoB,IAAItB,IAC1BolB,EAAM1X,OAAO1N,EAAIE,KAAKmB,IAAIrB,GAI5BolB,EAAM1X,OAAOzN,EAAI,MAEdmlB,EAAM1X,OAAOzN,EAAIC,KAAKmB,IAAIpB,KAC1BmlB,EAAM1X,OAAOzN,EAAIC,KAAKoB,IAAIrB,OAI1BmlB,EAAM1X,OAAOzN,EAAIC,KAAKoB,IAAIrB,KAC1BmlB,EAAM1X,OAAOzN,EAAIC,KAAKmB,IAAIpB,GAI7BmlB,EAAM1X,OAAOxH,EAAI,MAEdkf,EAAM1X,OAAOxH,EAAIhG,KAAKmB,IAAI6E,KAC1Bkf,EAAM1X,OAAOxH,EAAIhG,KAAKoB,IAAI4E,OAI1Bkf,EAAM1X,OAAOxH,EAAIhG,KAAKoB,IAAI4E,KAC1Bkf,EAAM1X,OAAOxH,EAAIhG,KAAKmB,IAAI6E,GAIzB3E,IAAS6jB,EAAMC,UAAY7jB,IAAS4jB,EAAMC,SAIpDtlB,mBAAoBulB,MAEdplB,KAAKyjB,iBAEF,OAKH4B,UAAWC,KACPzkB,WAAYb,KAAKoB,IAAKkkB,KAG3BzkB,WAAYukB,EAASG,EAAGD,KACxBzkB,WAAYukB,EAASzE,EAAG2E,KACxBzkB,WAAYukB,EAASI,EAAGF,KAGxBzkB,WAAY2P,EAAKiV,KACjB5kB,WAAY6kB,EAAKlV,KACjB3P,WAAY4kB,EAAKC,OAKjBC,EAAO,CACV,GAAKC,EAAI5f,EAAG4f,EAAI7lB,EAAG,GAAK8lB,EAAI7f,EAAG6f,EAAI9lB,EAAG,GAAK+lB,EAAI9f,EAAG8f,EAAI/lB,EACtD6lB,EAAI5f,EAAG,GAAK4f,EAAI9lB,EAAG+lB,EAAI7f,EAAG,GAAK6f,EAAI/lB,EAAGgmB,EAAI9f,EAAG,GAAK8f,EAAIhmB,GACpD8lB,EAAI7lB,EAAG6lB,EAAI9lB,EAAG,GAAK+lB,EAAI9lB,EAAG8lB,EAAI/lB,EAAG,GAAKgmB,EAAI/lB,EAAG+lB,EAAIhmB,EAAG,WAEhDimB,EAAYJ,EAAMF,EAAKjV,EAAKkV,EAAKM,OAOjC,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KAC1BD,EAAYJ,EAAMF,EAAKjV,EAAKkV,EAAKM,OAQxBrZ,aAAciZ,EAAKC,KAC5B,CAAEI,EAAgBnmB,EAAGmmB,EAAgBlmB,EAAGkmB,EAAgBjgB,GAExD+f,EAAYJ,EAAMF,EAAKjV,EAAKkV,EAAKM,KAIzCnmB,WAAY6jB,EAAO9R,eAEF,IAAXA,YAEIpR,KAAM,sDACL,IAAI6N,GAIPuD,EAAOlH,KAAMgZ,GAAQjN,MAAOzW,KAAKmB,IAAKnB,KAAKoB,KAInDvB,gBAAiB6jB,UAEKnW,EAAQ7C,KAAMgZ,GAAQjN,MAAOzW,KAAKmB,IAAKnB,KAAKoB,KAE7CkM,IAAKoW,GAAQjiB,SAIlC5B,kBAAmB+R,eAEF,IAAXA,WAEIrG,MAAO,gEAKX8Z,UAAWzT,EAAO9O,UAEhB8K,OAA4C,GAAnC5N,KAAKkmB,QAAS3Y,GAAU9L,SAEjCmQ,EAIR/R,UAAW2jB,eAELriB,IAAIC,IAAKoiB,EAAIriB,UACbC,IAAID,IAAKqiB,EAAIpiB,KAGbpB,KAAKyjB,gBAAiBN,YAEpBnjB,KAIRH,MAAO2jB,eAEDriB,IAAIA,IAAKqiB,EAAIriB,UACbC,IAAIA,IAAKoiB,EAAIpiB,KAEXpB,KAIRH,aAAcsW,UAGRnW,KAAKyjB,cAGD,GAAI1d,IAAK/F,KAAKmB,IAAIrB,EAAGE,KAAKmB,IAAIpB,EAAGC,KAAKmB,IAAI6E,GAAIsG,aAAc6J,KAC5D,GAAIpQ,IAAK/F,KAAKmB,IAAIrB,EAAGE,KAAKmB,IAAIpB,EAAGC,KAAKoB,IAAI4E,GAAIsG,aAAc6J,KAC5D,GAAIpQ,IAAK/F,KAAKmB,IAAIrB,EAAGE,KAAKoB,IAAIrB,EAAGC,KAAKmB,IAAI6E,GAAIsG,aAAc6J,KAC5D,GAAIpQ,IAAK/F,KAAKmB,IAAIrB,EAAGE,KAAKoB,IAAIrB,EAAGC,KAAKoB,IAAI4E,GAAIsG,aAAc6J,KAC5D,GAAIpQ,IAAK/F,KAAKoB,IAAItB,EAAGE,KAAKmB,IAAIpB,EAAGC,KAAKmB,IAAI6E,GAAIsG,aAAc6J,KAC5D,GAAIpQ,IAAK/F,KAAKoB,IAAItB,EAAGE,KAAKmB,IAAIpB,EAAGC,KAAKoB,IAAI4E,GAAIsG,aAAc6J,KAC5D,GAAIpQ,IAAK/F,KAAKoB,IAAItB,EAAGE,KAAKoB,IAAIrB,EAAGC,KAAKmB,IAAI6E,GAAIsG,aAAc6J,KAC5D,GAAIpQ,IAAK/F,KAAKoB,IAAItB,EAAGE,KAAKoB,IAAIrB,EAAGC,KAAKoB,IAAI4E,GAAIsG,aAAc6J,QAEhEgQ,cAAeC,IAZSpmB,KAkB9BH,UAAW6C,eAELvB,IAAIoiB,IAAK7gB,QACTtB,IAAImiB,IAAK7gB,GAEP1C,KAIRH,OAAQ2jB,UAEAA,EAAIriB,IAAI0iB,OAAQ7jB,KAAKmB,MAASqiB,EAAIpiB,IAAIyiB,OAAQ7jB,KAAKoB,MAM5DilB,EAAKhjB,UAAUijB,QAAS,EAExB,MAAMF,EAAU,KACG/X,MACAA,MACAA,MACAA,MACAA,MACAA,MACAA,MACAA,GAGbd,MAA4Bc,EAE5ByW,MAAyBuB,EAIzBZ,MAAwBpX,EACxBmC,MAAwBnC,EACxBqX,MAAwBrX,EAIxBuX,MAAwBvX,EACxBwX,MAAwBxX,EACxByX,MAAwBzX,EAExBiX,MAA4BjX,EAC5B2X,MAA6B3X,EAC7B4X,MAAoC5X,EACpCkY,MAA8BlY,EAEpC,WAAqBsX,EAAMa,EAAIjkB,EAAIC,EAAIikB,WAE5BjjB,EAAI,EAAGkjB,EAAIf,EAAKlkB,OAAS,EAAG+B,GAAKkjB,EAAGljB,GAAK,EAAI,GAE5C4K,UAAWuX,EAAMniB,SAErB+F,EAAIkd,EAAQ3mB,EAAIoB,KAAKa,IAAKwkB,EAAUzmB,GAAM2mB,EAAQ1mB,EAAImB,KAAKa,IAAKwkB,EAAUxmB,GAAM0mB,EAAQzgB,EAAI9E,KAAKa,IAAKwkB,EAAUvgB,GAEhH2gB,EAAKH,EAAGhd,IAAK+c,GACbK,EAAKrkB,EAAGiH,IAAK+c,GACbM,EAAKrkB,EAAGgH,IAAK+c,MAEdrlB,KAAKE,KAAOF,KAAKE,IAAKulB,EAAIC,EAAIC,GAAM3lB,KAAKC,IAAKwlB,EAAIC,EAAIC,IAAStd,SAI5D,SAMF,ECliBR,MAAMgE,MAA4Bc,EAC5ByY,MAA+BzY,EAC/B0Y,MAA4B1Y,EAC5B2Y,MAA0B3Y,EAE1B4Y,OAA2B5Y,EAC3B6Y,OAA2B7Y,EAC3B8Y,OAA4B9Y,EAElC,SAECxO,YAAaunB,EAAS,IAAI/Y,EAAWgZ,EAAY,IAAIhZ,EAAS,EAAG,YAE3D+Y,OAASA,OACTC,UAAYA,EAIlBxnB,IAAKunB,EAAQC,eAEPD,OAAO1c,KAAM0c,QACbC,UAAU3c,KAAM2c,GAEdrnB,KAIRH,KAAMynB,eAEAF,OAAO1c,KAAM4c,EAAIF,aACjBC,UAAU3c,KAAM4c,EAAID,WAElBrnB,KAIRH,GAAIiE,EAAG8N,eAEU,IAAXA,YAEIpR,KAAM,6CACL,IAAI6N,GAIPuD,EAAOlH,KAAM1K,KAAKqnB,WAAYvmB,eAAgBgD,GAAIyf,IAAKvjB,KAAKonB,QAIpEvnB,OAAQS,eAEF+mB,UAAU3c,KAAMpK,GAAIgN,IAAKtN,KAAKonB,QAAS/kB,YAErCrC,KAIRH,OAAQiE,eAEFsjB,OAAO1c,KAAM1K,KAAKunB,GAAIzjB,EAAGyJ,IAEvBvN,KAIRH,oBAAqB6jB,EAAO9R,QAEX,IAAXA,YAEIpR,KAAM,8DACL,IAAI6N,KAIPxN,WAAY6iB,EAAO1jB,KAAKonB,cAEzBI,EAAoB5V,EAAOpI,IAAKxJ,KAAKqnB,kBAEtCG,EAAoB,EAEjB5V,EAAOlH,KAAM1K,KAAKonB,QAInBxV,EAAOlH,KAAM1K,KAAKqnB,WAAYvmB,eAAgB0mB,GAAoBjE,IAAKvjB,KAAKonB,QAIpFvnB,gBAAiB6jB,UAETxiB,KAAKY,KAAM9B,KAAKynB,kBAAmB/D,IAI3C7jB,kBAAmB6jB,SAEZ8D,EAAoBja,EAAQ1M,WAAY6iB,EAAO1jB,KAAKonB,QAAS5d,IAAKxJ,KAAKqnB,kBAIxEG,EAAoB,EAEjBxnB,KAAKonB,OAAOllB,kBAAmBwhB,MAI/BhZ,KAAM1K,KAAKqnB,WAAYvmB,eAAgB0mB,GAAoBjE,IAAKvjB,KAAKonB,QAEtE7Z,EAAQrL,kBAAmBwhB,IAInC7jB,oBAAqB2mB,EAAIjkB,EAAImlB,EAAoBC,KASrCjd,KAAM8b,GAAKjD,IAAKhhB,GAAKzB,eAAgB,MACxC4J,KAAMnI,GAAK+K,IAAKkZ,GAAKnkB,cACvBqI,KAAM1K,KAAKonB,QAAS9Z,IAAKwZ,SAEzBc,EAAkC,GAAtBpB,EAAGqB,WAAYtlB,GAC3BulB,GAAQ9nB,KAAKqnB,UAAU7d,IAAKud,GAC5BgB,EAAKf,EAAMxd,IAAKxJ,KAAKqnB,WACrBhjB,GAAO2iB,EAAMxd,IAAKud,GAClB/jB,EAAIgkB,EAAM7Z,WACViH,EAAMlT,KAAKa,IAAK,EAAI+lB,EAAMA,OAC5BE,EAAI1f,EAAI2f,EAASC,KAEhB9T,EAAM,OAIL0T,EAAMzjB,EAAK0jB,IACXD,EAAMC,EAAK1jB,IACPujB,EAAYxT,EAEhB4T,GAAM,KAEL1f,IAAQ4f,KAEP5f,GAAM4f,EAAS,OAKbC,EAAS,EAAI/T,KACb+T,KACAA,IACIH,KAAYF,EAAMxf,EAAK,EAAIyf,GAAOzf,KAAa0f,EAAK1f,EAAK,EAAIjE,GAAOrB,SAMzE4kB,IACA1mB,KAAKE,IAAK,MAAakH,EAAKyf,OACrBC,EAAKA,EAAK1f,KAAY,EAAIjE,GAAOrB,UAQvC4kB,IACF1mB,KAAKE,IAAK,MAAakH,EAAKyf,OACrBC,EAAKA,EAAK1f,KAAY,EAAIjE,GAAOrB,OAMzCsF,IAAQ4f,KAIPhnB,KAAKE,IAAK,KAAS0mB,EAAMF,EAAYG,MACnCC,EAAK,GAAQJ,EAAY1mB,KAAKC,IAAKD,KAAKE,KAAOwmB,GAAavjB,GAAMujB,MAC7DI,EAAKA,EAAK1f,KAAY,EAAIjE,GAAOrB,GAElCsF,GAAM4f,KAIZ,IACAhnB,KAAKC,IAAKD,KAAKE,KAAOwmB,GAAavjB,GAAMujB,KACpCtf,KAAY,EAAIjE,GAAOrB,MAM5B9B,KAAKE,IAAK,MAAawmB,EAAYG,MACjCC,EAAK,EAAMJ,EAAY1mB,KAAKC,IAAKD,KAAKE,KAAOwmB,GAAavjB,GAAMujB,MAC3DI,EAAKA,EAAK1f,KAAY,EAAIjE,GAAOrB,UAUxC8kB,EAAM,GAAQF,EAAYA,IAC5B1mB,KAAKE,IAAK,MAAakH,EAAKyf,OACrBC,EAAKA,EAAK1f,KAAY,EAAIjE,GAAOrB,SAIzC0kB,KAEehd,KAAM1K,KAAKqnB,WAAYvmB,eAAgBknB,GAAKzE,IAAKvjB,KAAKonB,QAIrEO,KAEmBjd,KAAMqc,GAAUjmB,eAAgBwH,GAAKib,IAAKuD,GAI3DmB,EAIRpoB,gBAAiBmlB,EAAQpT,KAEhB/Q,WAAYmkB,EAAOliB,OAAQ9C,KAAKonB,cAClCgB,EAAM7a,EAAQ/D,IAAKxJ,KAAKqnB,WACxBpjB,EAAKsJ,EAAQ/D,IAAK+D,GAAY6a,EAAMA,EACpCC,EAAUrD,EAAOpX,OAASoX,EAAOpX,UAElC3J,EAAKokB,SAAiB,WAErBC,EAAMpnB,KAAKY,KAAMumB,EAAUpkB,GAG3BskB,EAAKH,EAAME,EAGXE,EAAKJ,EAAME,SAGZC,EAAK,GAAKC,EAAK,EAAW,KAK1BD,EAAK,EAAWvoB,KAAKunB,GAAIiB,EAAI5W,GAG3B5R,KAAKunB,GAAIgB,EAAI3W,GAIrB/R,iBAAkBmlB,UAEVhlB,KAAKynB,kBAAmBzC,EAAOliB,SAAckiB,EAAOpX,OAASoX,EAAOpX,OAI5E/N,gBAAiBqlB,SAEVhY,EAAcgY,EAAM1X,OAAOhE,IAAKxJ,KAAKqnB,cAEtB,IAAhBna,SAG0C,IAAzCgY,EAAMuD,gBAAiBzoB,KAAKonB,QAEzB,EAMD,WAIFtjB,SAAasjB,OAAO5d,IAAK0b,EAAM1X,QAAW0X,EAAMC,UAAajY,SAI5DpJ,GAAK,EAAIA,EAAI,KAIrBjE,eAAgBqlB,EAAOtT,SAEhB9N,EAAI9D,KAAK0oB,gBAAiBxD,UAErB,OAANphB,EAEG,KAID9D,KAAKunB,GAAIzjB,EAAG8N,GAIpB/R,gBAAiBqlB,SAIVyD,EAAczD,EAAMuD,gBAAiBzoB,KAAKonB,WAE3B,IAAhBuB,SAEG,SAIYzD,EAAM1X,OAAOhE,IAAKxJ,KAAKqnB,WAExBsB,EAAc,EAYlC9oB,aAAc2jB,EAAK5R,OAEdgX,EAAMC,EAAMC,EAAOC,EAAOC,EAAOC,QAE/BC,EAAU,EAAIlpB,KAAKqnB,UAAUvnB,EAClCqpB,EAAU,EAAInpB,KAAKqnB,UAAUtnB,EAC7BqpB,EAAU,EAAIppB,KAAKqnB,UAAUrhB,EAExBohB,EAASpnB,KAAKonB,cAEf8B,GAAW,QAEF/nB,IAAIrB,EAAIsnB,EAAOtnB,GAAMopB,OACrB9nB,IAAItB,EAAIsnB,EAAOtnB,GAAMopB,SAIrB9nB,IAAItB,EAAIsnB,EAAOtnB,GAAMopB,OACrB/nB,IAAIrB,EAAIsnB,EAAOtnB,GAAMopB,GAI9BC,GAAW,QAEDhoB,IAAIpB,EAAIqnB,EAAOrnB,GAAMopB,OACrB/nB,IAAIrB,EAAIqnB,EAAOrnB,GAAMopB,SAIrB/nB,IAAIrB,EAAIqnB,EAAOrnB,GAAMopB,OACrBhoB,IAAIpB,EAAIqnB,EAAOrnB,GAAMopB,GAI7BP,EAAOG,GAAaD,EAAQD,EAAgB,OAK9CC,EAAQF,GAAQA,GAASA,OAAcE,IAEvCC,EAAQF,GAAQA,GAASA,OAAcE,GAEvCK,GAAW,QAEDjoB,IAAI6E,EAAIohB,EAAOphB,GAAMojB,OACrBhoB,IAAI4E,EAAIohB,EAAOphB,GAAMojB,SAIrBhoB,IAAI4E,EAAIohB,EAAOphB,GAAMojB,OACrBjoB,IAAI6E,EAAIohB,EAAOphB,GAAMojB,GAI7BR,EAAOK,GAAaD,EAAQH,EAAgB,OAE9CG,EAAQJ,GAAQA,GAASA,OAAcI,IAEvCC,EAAQJ,GAAQA,GAASA,OAAcI,GAIvCJ,EAAO,EAAW,KAEhB7oB,KAAKunB,GAAIqB,GAAQ,EAAIA,EAAOC,EAAMjX,KAI1C/R,cAAe2jB,UAE+B,OAAtCxjB,KAAKqpB,aAAc7F,EAAKjW,GAIhC1N,kBAAmBc,EAAGC,EAAGoC,EAAGsmB,EAAiB1X,MAMrC/Q,WAAYD,EAAGD,MACfE,WAAYmC,EAAGrC,MACdgM,aAAcsa,GAAQC,QAQ1BqC,EADAC,EAAMxpB,KAAKqnB,UAAU7d,IAAK2d,OAGzBqC,EAAM,EAAI,IAETF,SAAyB,OACvB,YAEIE,EAAM,UAOV,aAJCA,IAQH3oB,WAAYb,KAAKonB,OAAQzmB,SACzB8oB,EAASF,EAAOvpB,KAAKqnB,UAAU7d,IAAK0d,GAAOva,aAAcqa,EAAOE,QAGjEuC,EAAS,SAEN,WAIFC,EAASH,EAAOvpB,KAAKqnB,UAAU7d,IAAKyd,GAAO0C,MAAO3C,OAGnD0C,EAAS,SAEN,QAKHD,EAASC,EAASF,SAEf,WAKFI,GAAQL,EAAOvC,EAAMxd,IAAK2d,WAG3ByC,EAAM,EAEH,KAKD5pB,KAAKunB,GAAIqC,EAAMJ,EAAK5X,GAI5B/R,aAAcgqB,eAERzC,OAAO9a,aAAcud,QACrBxC,UAAUyC,mBAAoBD,GAE5B7pB,KAIRH,OAAQynB,UAEAA,EAAIF,OAAOvD,OAAQ7jB,KAAKonB,SAAYE,EAAID,UAAUxD,OAAQ7jB,KAAKqnB,WAIvExnB,eAEQ,IAAIG,KAAKK,aAAcqK,KAAM1K,OCpftC,MAAM+pB,OAA4B1b,EAC5B2b,OAA8B3b,EAEpC,SAECxO,YAAaoqB,EAAQ,IAAI5b,EAAW6b,EAAM,IAAI7b,QAExC4b,MAAQA,OACRC,IAAMA,EAIZrqB,IAAKoqB,EAAOC,eAEND,MAAMvf,KAAMuf,QACZC,IAAIxf,KAAMwf,GAERlqB,KAIRH,KAAMsqB,eAEAF,MAAMvf,KAAMyf,EAAKF,YACjBC,IAAIxf,KAAMyf,EAAKD,KAEblqB,KAIRH,UAAW+R,eAEM,IAAXA,YAEIpR,KAAM,sDACL,IAAI6N,GAIPuD,EAAOnR,WAAYT,KAAKiqB,MAAOjqB,KAAKkqB,KAAMppB,eAAgB,IAIlEjB,MAAO+R,eAEU,IAAXA,YAEIpR,KAAM,kDACL,IAAI6N,GAIPuD,EAAO/Q,WAAYb,KAAKkqB,IAAKlqB,KAAKiqB,OAI1CpqB,oBAEQG,KAAKiqB,MAAM/nB,kBAAmBlC,KAAKkqB,KAI3CrqB,kBAEQG,KAAKiqB,MAAMpC,WAAY7nB,KAAKkqB,KAIpCrqB,GAAIiE,EAAG8N,eAEU,IAAXA,YAEIpR,KAAM,+CACL,IAAI6N,GAIPrO,KAAKyiB,MAAO7Q,GAAS9Q,eAAgBgD,GAAIyf,IAAKvjB,KAAKiqB,OAI3DpqB,6BAA8B6jB,EAAO0G,MAE5BvpB,WAAY6iB,EAAO1jB,KAAKiqB,UACtBppB,WAAYb,KAAKkqB,IAAKlqB,KAAKiqB,aAE/BI,EAAYL,GAAUxgB,IAAKwgB,QAG7BlmB,EAFoBkmB,GAAUxgB,IAAKugB,IAEbM,SAErBD,MAEA1gB,EAAiB5F,EAAG,EAAG,IAIrBA,EAIRjE,oBAAqB6jB,EAAO0G,EAAaxY,SAElC9N,EAAI9D,KAAKsqB,6BAA8B5G,EAAO0G,eAEpC,IAAXxY,YAEIpR,KAAM,gEACL,IAAI6N,GAIPrO,KAAKyiB,MAAO7Q,GAAS9Q,eAAgBgD,GAAIyf,IAAKvjB,KAAKiqB,OAI3DpqB,aAAcsW,eAER8T,MAAM3d,aAAc6J,QACpB+T,IAAI5d,aAAc6J,GAEhBnW,KAIRH,OAAQsqB,UAEAA,EAAKF,MAAMpG,OAAQ7jB,KAAKiqB,QAAWE,EAAKD,IAAIrG,OAAQ7jB,KAAKkqB,KAIjErqB,eAEQ,IAAIG,KAAKK,aAAcqK,KAAM1K,OCxItC,SAECH,mBAEMoB,SAAW,CAEf,EAAG,EAAG,EACN,EAAG,EAAG,EACN,EAAG,EAAG,GAIFgO,UAAUxN,OAAS,WAEf8J,MAAO,iFAMjB1L,IAAKqP,EAAKC,EAAKC,EAAKE,EAAKC,EAAKC,EAAKE,EAAKC,EAAKC,SAEtClH,EAAK1I,KAAKiB,kBAEZ,GAAMiO,IAAS,GAAMI,IAAS,GAAMI,IACpC,GAAMP,IAAS,GAAMI,IAAS,GAAMI,IACpC,GAAMP,IAAS,GAAMI,IAAS,GAAMI,EAEjC5P,KAIRH,uBAEMkG,IAEJ,EAAG,EAAG,EACN,EAAG,EAAG,EACN,EAAG,EAAG,GAIA/F,KAIRH,KAAMkB,SAEC2H,EAAK1I,KAAKiB,SACVkP,EAAKpP,EAAEE,kBAET,GAAMkP,EAAI,KAAS,GAAMA,EAAI,KAAS,GAAMA,EAAI,KAChD,GAAMA,EAAI,KAAS,GAAMA,EAAI,KAAS,GAAMA,EAAI,KAChD,GAAMA,EAAI,KAAS,GAAMA,EAAI,KAAS,GAAMA,EAAI,GAE7CnQ,KAIRH,aAAcuQ,EAAOC,EAAOC,YAErBia,qBAAsBvqB,KAAM,KAC5BuqB,qBAAsBvqB,KAAM,KAC5BuqB,qBAAsBvqB,KAAM,GAE3BA,KAIRH,eAAgBkB,SAEToP,EAAKpP,EAAEE,qBAER8E,IAEJoK,EAAI,GAAKA,EAAI,GAAKA,EAAI,GACtBA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GACtBA,EAAI,GAAKA,EAAI,GAAKA,EAAI,KAIhBnQ,KAIRH,SAAUkB,UAEFf,KAAK8R,iBAAkB9R,KAAMe,GAIrClB,YAAakB,UAELf,KAAK8R,iBAAkB/Q,EAAGf,MAIlCH,iBAAkBc,EAAGC,SAEdgQ,EAAKjQ,EAAEM,SACP6P,EAAKlQ,EAAEK,SACPyH,EAAK1I,KAAKiB,SAEV8Q,EAAMnB,EAAI,GAAKoB,EAAMpB,EAAI,GAAKqB,EAAMrB,EAAI,GACxCuB,EAAMvB,EAAI,GAAKwB,EAAMxB,EAAI,GAAKyB,EAAMzB,EAAI,GACxC2B,EAAM3B,EAAI,GAAK4B,EAAM5B,EAAI,GAAK6B,EAAM7B,EAAI,GAExCmC,EAAMjC,EAAI,GAAKkC,EAAMlC,EAAI,GAAKmC,EAAMnC,EAAI,GACxCqC,EAAMrC,EAAI,GAAKsC,EAAMtC,EAAI,GAAKuC,EAAMvC,EAAI,GACxCyC,EAAMzC,EAAI,GAAK0C,EAAM1C,EAAI,GAAK2C,EAAM3C,EAAI,YAE1C,GAAMiB,EAAMgB,EAAMf,EAAMmB,EAAMlB,EAAMsB,IACpC,GAAMxB,EAAMiB,EAAMhB,EAAMoB,EAAMnB,EAAMuB,IACpC,GAAMzB,EAAMkB,EAAMjB,EAAMqB,EAAMpB,EAAMwB,IAEpC,GAAMtB,EAAMY,EAAMX,EAAMe,EAAMd,EAAMkB,IACpC,GAAMpB,EAAMa,EAAMZ,EAAMgB,EAAMf,EAAMmB,IACpC,GAAMrB,EAAMc,EAAMb,EAAMiB,EAAMhB,EAAMoB,IAEpC,GAAMlB,EAAMQ,EAAMP,EAAMW,EAAMV,EAAMc,IACpC,GAAMhB,EAAMS,EAAMR,EAAMY,EAAMX,EAAMe,IACpC,GAAMjB,EAAMU,EAAMT,EAAMa,EAAMZ,EAAMgB,EAEjCzT,KAIRH,eAAgBa,SAETgI,EAAK1I,KAAKiB,kBAEZ,IAAOP,IAAO,IAAOA,IAAO,IAAOA,IACnC,IAAOA,IAAO,IAAOA,IAAO,IAAOA,IACnC,IAAOA,IAAO,IAAOA,IAAO,IAAOA,EAEhCV,KAIRH,oBAEO6I,EAAK1I,KAAKiB,SAEVN,EAAI+H,EAAI,GAAK9H,EAAI8H,EAAI,GAAK1F,EAAI0F,EAAI,GACvCiI,EAAIjI,EAAI,GAAK1H,EAAI0H,EAAI,GAAKb,EAAIa,EAAI,GAClC4X,EAAI5X,EAAI,GAAKwN,EAAIxN,EAAI,GAAKlF,EAAIkF,EAAI,UAE5B/H,EAAIK,EAAIwC,EAAI7C,EAAIkH,EAAIqO,EAAItV,EAAI+P,EAAInN,EAAI5C,EAAIiH,EAAIyY,EAAItd,EAAI2N,EAAIuF,EAAIlT,EAAIhC,EAAIsf,EAI5EzgB,eAEO6I,EAAK1I,KAAKiB,SAEfiO,EAAMxG,EAAI,GAAK4G,EAAM5G,EAAI,GAAKgH,EAAMhH,EAAI,GACxCyG,EAAMzG,EAAI,GAAK6G,EAAM7G,EAAI,GAAKiH,EAAMjH,EAAI,GACxC0G,EAAM1G,EAAI,GAAK8G,EAAM9G,EAAI,GAAKkH,EAAMlH,EAAI,GAExCsL,EAAMpE,EAAML,EAAMI,EAAMH,EACxByE,EAAMtE,EAAMP,EAAMQ,EAAMT,EACxB+E,EAAM1E,EAAML,EAAMI,EAAMH,EAExBgF,EAAMlF,EAAM8E,EAAM1E,EAAM2E,EAAMvE,EAAMwE,KAExB,IAARE,SAAmBpU,KAAK+F,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,SAEpDsO,EAAS,EAAID,WAEf,GAAMJ,EAAMK,IACZ,MAAc7E,EAAMI,EAAMN,GAAQ+E,IAClC,MAAc/E,EAAMI,EAAMH,GAAQ8E,IAElC,GAAMJ,EAAMI,IACZ,MAAcnF,EAAMQ,EAAMN,GAAQiF,IAClC,MAAclF,EAAMQ,EAAMT,GAAQmF,IAElC,GAAMH,EAAMG,IACZ,MAAcjF,EAAMI,EAAMN,GAAQmF,IAClC,MAAcnF,EAAMI,EAAMH,GAAQkF,EAE/BrU,KAIRH,gBAEKkU,QACEhT,EAAIf,KAAKiB,kBAETF,EAAG,KAAQ,GAAMA,EAAG,KAAQ,GAAMgT,IAClChT,EAAG,KAAQ,GAAMA,EAAG,KAAQ,GAAMgT,IAClChT,EAAG,KAAQ,GAAMA,EAAG,KAAQ,GAAMgT,EAEjC/T,KAIRH,gBAAiBgqB,UAET7pB,KAAKwqB,eAAgBX,GAAUY,SAASC,YAIhD7qB,mBAAoB0J,SAEbxI,EAAIf,KAAKiB,kBAEZ,GAAMF,EAAG,KACT,GAAMA,EAAG,KACT,GAAMA,EAAG,KACT,GAAMA,EAAG,KACT,GAAMA,EAAG,KACT,GAAMA,EAAG,KACT,GAAMA,EAAG,KACT,GAAMA,EAAG,KACT,GAAMA,EAAG,GAELf,KAIRH,eAAgB4U,EAAIC,EAAI1G,EAAIE,EAAIyc,EAAUC,EAAIC,SAEvC7nB,EAAI9B,KAAK+B,IAAK0nB,GACdjqB,EAAIQ,KAAKgC,IAAKynB,eAEf5kB,IACJiI,EAAKhL,EAAGgL,EAAKtN,GAAKsN,KAAW4c,EAAKlqB,EAAImqB,GAAOD,EAAKnW,GAChDvG,EAAKxN,EAAGwN,EAAKlL,GAAKkL,IAASxN,EAAIkqB,EAAK5nB,EAAI6nB,GAAOA,EAAKnW,EACtD,EAAG,EAAG,GAGA1U,KAIRH,MAAOmO,EAAIE,SAEJxF,EAAK1I,KAAKiB,kBAEZ,IAAO+M,IAAQ,IAAOA,IAAQ,IAAOA,IACrC,IAAOE,IAAQ,IAAOA,IAAQ,IAAOA,EAElClO,KAIRH,OAAQ4N,SAEDzK,EAAI9B,KAAK+B,IAAKwK,GACd/M,EAAIQ,KAAKgC,IAAKuK,GAEd/E,EAAK1I,KAAKiB,SAEV8Q,EAAMrJ,EAAI,GAAKsJ,EAAMtJ,EAAI,GAAKuJ,EAAMvJ,EAAI,GACxCyJ,EAAMzJ,EAAI,GAAK0J,EAAM1J,EAAI,GAAK2J,EAAM3J,EAAI,YAE1C,GAAM1F,EAAI+O,EAAMrR,EAAIyR,IACpB,GAAMnP,EAAIgP,EAAMtR,EAAI0R,IACpB,GAAMpP,EAAIiP,EAAMvR,EAAI2R,IAEpB,IAAQ3R,EAAIqR,EAAM/O,EAAImP,IACtB,IAAQzR,EAAIsR,EAAMhP,EAAIoP,IACtB,IAAQ1R,EAAIuR,EAAMjP,EAAIqP,EAEnBrS,KAIRH,UAAW4U,EAAIC,SAERhM,EAAK1I,KAAKiB,kBAEZ,IAAOwT,EAAK/L,EAAI,KAAS,IAAO+L,EAAK/L,EAAI,KAAS,IAAO+L,EAAK/L,EAAI,KAClE,IAAOgM,EAAKhM,EAAI,KAAS,IAAOgM,EAAKhM,EAAI,KAAS,IAAOgM,EAAKhM,EAAI,GAE/D1I,KAIRH,OAAQsW,SAEDzN,EAAK1I,KAAKiB,SACVkP,EAAKgG,EAAOlV,iBAERuC,EAAI,EAAGA,EAAI,EAAGA,OAElBkF,EAAIlF,KAAQ2M,EAAI3M,UAAa,SAI5B,EAIR3D,UAAW4C,EAAOC,EAAS,WAEhBc,EAAI,EAAGA,EAAI,EAAGA,SAElBvC,SAAUuC,GAAMf,EAAOe,EAAId,UAI1B1C,KAIRH,QAAS4C,EAAQ,GAAIC,EAAS,SAEvBgG,EAAK1I,KAAKiB,kBAETyB,GAAWgG,EAAI,KACfhG,EAAS,GAAMgG,EAAI,KACnBhG,EAAS,GAAMgG,EAAI,KAEnBhG,EAAS,GAAMgG,EAAI,KACnBhG,EAAS,GAAMgG,EAAI,KACnBhG,EAAS,GAAMgG,EAAI,KAEnBhG,EAAS,GAAMgG,EAAI,KACnBhG,EAAS,GAAMgG,EAAI,KACnBhG,EAAS,GAAMgG,EAAI,GAEnBjG,EAIR5C,eAEQ,IAAIG,KAAKK,aAAc+N,UAAWpO,KAAKiB,WAMhD6pB,GAAQznB,UAAU0nB,WAAY,EC7U9B,MAAMC,OAA6B3c,EAC7B4c,OAA6B5c,EAC7B6c,OAAkCJ,GAExC,SAECjrB,YAAa2N,EAAS,IAAIa,EAAS,EAAG,EAAG,GAAK8W,EAAW,QAInD3X,OAASA,OACT2X,SAAWA,EAIjBtlB,IAAK2N,EAAQ2X,eAEP3X,OAAO9C,KAAM8C,QACb2X,SAAWA,EAETnlB,KAIRH,cAAeC,EAAGC,EAAGiG,EAAGzF,eAElBiN,OAAOzH,IAAKjG,EAAGC,EAAGiG,QAClBmf,SAAW5kB,EAETP,KAIRH,8BAA+B2N,EAAQkW,eAEjClW,OAAO9C,KAAM8C,QACb2X,UAAazB,EAAMla,IAAKxJ,KAAKwN,QAE3BxN,KAIRH,sBAAuBc,EAAGC,EAAGoC,SAEtBwK,EAASwd,GAASnqB,WAAYmC,EAAGpC,GAAI+oB,MAAOsB,GAASpqB,WAAYF,EAAGC,IAAMyB,wBAI3E8oB,8BAA+B3d,EAAQ7M,GAErCX,KAIRH,KAAMqlB,eAEA1X,OAAO9C,KAAMwa,EAAM1X,aACnB2X,SAAWD,EAAMC,SAEfnlB,KAIRH,kBAIOurB,EAAsB,EAAMprB,KAAKwN,OAAO/L,qBACzC+L,OAAO1M,eAAgBsqB,QACvBjG,UAAYiG,EAEVprB,KAIRH,qBAEMslB,kBACA3X,OAAO6d,SAELrrB,KAIRH,gBAAiB6jB,UAET1jB,KAAKwN,OAAOhE,IAAKka,GAAU1jB,KAAKmlB,SAIxCtlB,iBAAkBmlB,UAEVhlB,KAAKyoB,gBAAiBzD,EAAOliB,QAAWkiB,EAAOpX,OAIvD/N,aAAc6jB,EAAO9R,eAEJ,IAAXA,YAEIpR,KAAM,yDACL,IAAI6N,GAIPuD,EAAOlH,KAAM1K,KAAKwN,QAAS1M,gBAAkBd,KAAKyoB,gBAAiB/E,IAAUH,IAAKG,GAI1F7jB,cAAesqB,EAAMvY,QAEJ,IAAXA,YAEIpR,KAAM,0DACL,IAAI6N,SAIRgZ,EAAY8C,EAAK1H,MAAOuI,IAExB9d,EAAclN,KAAKwN,OAAOhE,IAAK6d,MAEhB,IAAhBna,SAGwC,IAAvClN,KAAKyoB,gBAAiB0B,EAAKF,OAExBrY,EAAOlH,KAAMyf,EAAKF,OAKnB,WAIFnmB,MAAammB,MAAMzgB,IAAKxJ,KAAKwN,QAAWxN,KAAKmlB,UAAajY,SAE3DpJ,EAAI,GAAKA,EAAI,EAEV,KAID8N,EAAOlH,KAAM2c,GAAYvmB,eAAgBgD,GAAIyf,IAAK4G,EAAKF,OAI/DpqB,eAAgBsqB,SAITmB,EAAYtrB,KAAKyoB,gBAAiB0B,EAAKF,OACvCsB,EAAUvrB,KAAKyoB,gBAAiB0B,EAAKD,YAElCoB,EAAY,GAAKC,EAAU,GAASA,EAAU,GAAKD,EAAY,EAIzEzrB,cAAe2jB,UAEPA,EAAIgI,gBAAiBxrB,MAI7BH,iBAAkBmlB,UAEVA,EAAOwG,gBAAiBxrB,MAIhCH,cAAe+R,eAEE,IAAXA,YAEIpR,KAAM,0DACL,IAAI6N,GAIPuD,EAAOlH,KAAM1K,KAAKwN,QAAS1M,gBAAkBd,KAAKmlB,UAI1DtlB,aAAcsW,EAAQsV,SAEfC,EAAeD,GAAwBP,GAAcS,gBAAiBxV,GAEtEyV,EAAiB5rB,KAAK6rB,cAAeb,IAAW1e,aAAc6J,GAE9D3I,EAASxN,KAAKwN,OAAO5B,aAAc8f,GAAerpB,wBAEnD8iB,UAAayG,EAAepiB,IAAKgE,GAE/BxN,KAIRH,UAAW6C,eAELyiB,UAAYziB,EAAO8G,IAAKxJ,KAAKwN,QAE3BxN,KAIRH,OAAQqlB,UAEAA,EAAM1X,OAAOqW,OAAQ7jB,KAAKwN,SAAc0X,EAAMC,WAAanlB,KAAKmlB,SAIxEtlB,eAEQ,IAAIG,KAAKK,aAAcqK,KAAM1K,OAMtC8rB,GAAMzoB,UAAU0oB,SAAU,QCpJbC,GAAOC,OAAOC,OAAO,IAAI9oB,EAAQ,EAAE,IACnC+oB,GAAOF,OAAOC,OAAO,IAAI9oB,EAAQ,EAAE,IACnCgpB,GAAQH,OAAOC,OAAO,IAAI7d,EAAQ,EAAE,EAAE,IACtCge,GAAQJ,OAAOC,OAAO,IAAI7d,EAAQ,EAAE,EAAE,IACtCie,GAAQL,OAAOC,OAAO,IAAI7d,EAAQ,EAAE,EAAE,IACtCke,GAAQN,OAAOC,OAAO,IAAI7d,EAAQ,EAAE,EAAE,IACtCme,GAAQP,OAAOC,OAAO,IAAI7d,EAAQ,EAAE,EAAE,IACtCoe,GAAaR,OAAOC,OAAO,IAAI9gB,GAE/BshB,GAAY,CACrBC,MAAOV,OAAOC,OAAO,IAAI7d,EAAQ,EAAG,EAAG,IACvCue,GAAIX,OAAOC,OAAO,IAAI7d,EAAQ,EAAG,EAAG,IACpCwe,KAAMZ,OAAOC,OAAO,IAAI7d,EAAQ,EAAG,EAAG,IACtCye,KAAMb,OAAOC,OAAO,IAAI7d,KAAY,EAAG,IACvC0e,KAAMd,OAAOC,OAAO,IAAI7d,EAAQ,KAAO,IACvC2e,IAAKf,OAAOC,OAAO,IAAI7d,EAAQ,EAAG,oBAgGmC4b,EAASC,SACzD,iBAAVD,EAef,SAA0CvpB,EAAUM,MAC5CA,IAAMN,SAAU,QACdusB,EAAW/rB,KAAKa,IAAIf,EAAEN,GACtBwsB,QAA0BnrB,IAAIf,GAAKE,KAAKa,IAAIrB,IAAI,SAC/CusB,EAAWC,EAnBoBC,CAAiClD,EAAOC,GAC1E,cAAeD,EAqBvB,SAA2CvpB,EAAgBM,MACnDA,EAAE6iB,OAAOnjB,UAAW,QAClBusB,EAAWjsB,EAAE6mB,WAAWnnB,GACxB0sB,KAAkB3rB,SAAWf,EAAEe,UAAU,SACxCwrB,EAAWG,EAzBeC,CAAkCpD,EAAkBC,GACjF,cAAeD,EA2BvB,SAA2CvpB,EAAgBM,MACnDA,EAAE6iB,OAAOnjB,UAAW,QAClBusB,EAAWjsB,EAAE6mB,WAAWnnB,GACxB0sB,KAAkB3rB,SAAWf,EAAEe,UAAU,SACxCwrB,EAAWG,EA/BeE,CAAkCrD,EAAkBC,GACjF,WAAYD,EAiCpB,SAAwCvpB,EAAQM,MACxCN,EAAEmjB,OAAO7iB,UAAW,QAClBV,EAAIitB,GACJC,EAAUxsB,EAAEG,IAAI0mB,WAAWnnB,EAAES,KAC7BssB,EAAUzsB,EAAEI,IAAIymB,WAAWnnB,EAAEU,KAC7BssB,KAAyBD,GAAW,EACpCE,KAAsBzH,QAAQ5lB,GAAGmB,SAAWf,EAAEwlB,QAAQ5lB,GAAGmB,UAAY,SACpEisB,EAAcC,EAxCSC,CAA+B3D,EAAeC,GAKxE,iBAAkBD,GAuCkCjpB,EAvCsCkpB,GAuCpDxpB,EAvC+BupB,GAwCnEpG,OAAO7iB,GAAW,EACjBN,EAAEkJ,QAAQ5I,GAAKE,KAAKe,IAxCvB,YAAagoB,EA2CrB,SAAyCvpB,EAASM,MAC1CN,EAAEmjB,OAAO7iB,UAAW,SACdusB,GACSxnB,IACf7E,KAAKa,IAAIf,EAAEuI,EAAI7I,EAAE6I,GACjBrI,KAAKa,IAAIf,EAAEsf,EAAI5f,EAAE4f,GACjBpf,KAAKa,IAAIf,EAAE2f,EAAIjgB,EAAEigB,IACnBlf,SACgBosB,GAnDaC,CAAgC7D,EAAgBC,GACxEjH,EAAAA,EAqCX,IAA8CviB,EAAcM,EAF5D,MAAMusB,GAAY,IAAIlf,EAiBtB,MAAMwf,GAAQ3sB,KAAKY,KAAK,GAQXisB,GAAW,CAACC,EAAkB,SACrCC,EAAI/sB,KAAKiC,kBACH,KAAK,KAAK,MAAMjC,KAAKY,MAAMZ,KAAK+D,IAAI/D,KAAKE,IAAI,KAAK6sB,KAAKD,GAyBtDE,GAAO,CAACnZ,EAAM,WACjBoZ,EAAejtB,KAAKY,KAAMZ,KAAKY,KAAK,KAASiT,YAC5C,EAAKgZ,GAASI,IAAiB,GAS7BC,eACHC,EAAiB,EAAVntB,KAAKe,GACZqsB,EAAQ,IAAIjgB,EAAQ,EAAE,EAAE,GACxBkgB,EAAQ,IAAInjB,EACZojB,EAAQ,IAAIpjB,EACZqjB,EAAY,IAAIpgB,EAChBqgB,EAAM,IAAItjB,SACT,SAA0BujB,EAAW,EAAGC,EAAW,OAClDC,QAAuB1rB,SAAW,IAAOkrB,EAAOM,EAChDG,EAAiB5tB,KAAKiC,SAAWkrB,EACjCU,EAAiB7tB,KAAKiC,SAAWjC,KAAKe,GAAK2sB,WACrC7oB,IAAI,EAAE,EAAE,GAAGipB,eAAeV,EAAOQ,KACrCnjB,iBAAiB2iB,EAAOO,KACxBljB,iBAAiB8iB,EAAWM,GAC3BL,EAAIzkB,oBAAoBukB,EAAOD,oBAIdU,EAASC,OACjCC,EAAQ,UACH3rB,EAAE,EAAGA,EAAGyrB,EAAIxtB,OAAQ+B,yBAA0BA,KAAI,QACrD4rB,EAAYluB,KAAKiC,SAAWgsB,IAC1B,UACC3rB,EAAE,EAAGA,EAAGyrB,EAAIxtB,OAAQ+B,4BACNA,KAAI,EACnB2rB,EAAQC,SAAkBH,EAAIzrB,UAE/ByrB,EAAI,SAWFI,eACHC,EAAM,IAAIjhB,SACT,SAAkCkhB,EAAgBlI,EAAmBqH,SAClEc,EAAUF,EAAIvpB,IAAIwpB,EAAIzvB,EAAGyvB,EAAIxvB,EAAGwvB,EAAIvpB,GACpCypB,EAAUpI,EAAU7d,IAAIgmB,GAExBE,EAAaJ,EAAI5kB,KAAK2c,GAAWvmB,eAAe2uB,GAChDlB,EAAQG,EAAI3oB,IAAI2pB,EAAW5vB,EAAG4vB,EAAW3vB,EAAG2vB,EAAW1pB,EAAGupB,EAAIhvB,GAAG8B,mBACnEotB,EAAU,MAEJ3vB,GAAKyuB,EAAMzuB,IACXC,GAAKwuB,EAAMxuB,IACXiG,GAAKuoB,EAAMvoB,IACXzF,GAAKguB,EAAMhuB,GAEdguB,gBCrVR1uB,6BACS,GACZA,QAAW8vB,KAAaC,KACbC,KAAK7vB,YACN8vB,EAwBd,SAAoBH,OACZ1vB,QACE8vB,EAA8B,KAC5BA,EAAQC,gBACAA,aAAc,IACdL,KAKL1vB,YAEH+vB,aAAc,EACfD,EArCcE,CAAQN,aACdO,KAASN,IACVO,UAAUN,KAAKC,UAElBA,EAEXjwB,sBACUuwB,EAAYpwB,KAAKmwB,kBACd3sB,EAAE,EAAGA,EAAIxD,KAAKmwB,UAAU1uB,OAAQ+B,MAC3BA,GAAGwsB,aAAc,EAGnCnwB,uBACUuwB,EAAYpwB,KAAKmwB,kBACd3sB,EAAE,EAAGA,EAAIxD,KAAKmwB,UAAU1uB,OAAQ+B,QAChC4sB,EAAU5sB,GAAGwsB,mBAAoB,SAEnC,GC5Bf,gBAMA,MAAMK,GAAmBC,OAAO,OAC1BC,GAAuBD,OAAO,WAC9BE,GAAsBF,OAAO,UAC7BG,GAA8BH,OAAO,2BAIvCzwB,YAAmB6wB,EAAgCC,0CAElC,IAAIC,gBAMX,eAYiB,6BAUE5wB,KAAK6wB,OAAOZ,SAAQ,UACxCa,aAAaC,UAAU/wB,KAAKgxB,eAAgBhxB,KAAKixB,kBAAmBjxB,KAAKkxB,kBACzED,kBAAkB5uB,iBAClB8uB,yBAAyBzmB,KAAK1K,KAAKixB,mBAAmBxG,cACtD2G,eAAe1a,2BAA2B1W,KAAKixB,wBAC/CI,sBAAsB3a,2BAA2B1W,KAAKmxB,0BACpDnxB,KAAK8wB,kCAYO,IAAI5gB,2BACG,IAAIA,sBAET,IAAI7B,yBACD,IAAIjD,gCACG,IAAIA,mBACjB,IAAIiD,EAAQ,EAAE,EAAE,uBACb,IAAI6B,6BACG,IAAIA,0BA0CPlQ,KAAK6wB,OAAOZ,SAAQ,WACvC9Z,EAASnW,KAAKsxB,aAAa5mB,KAAK1K,KAAKuxB,aACrCC,EAAcxxB,KAAKwxB,mBACrBA,KACOC,YAAYD,EAAYE,eAE5BX,UAAU/wB,KAAK2xB,eAAgB3xB,KAAK4xB,kBAAmB5xB,KAAK6xB,kBAC9DC,oBAAoBpnB,KAAK1K,KAAKsxB,cAAc7G,cAC5CsH,yBAAyBrnB,KAAK1K,KAAK4xB,mBAAmBnH,cACtDuH,eAAetb,2BAA2B1W,KAAK4xB,wBAC/CK,sBAAsBvb,2BAA2B1W,KAAK+xB,0BACpD5b,yBAMc,IAAI9H,yBACD,IAAIjD,gCACG,IAAIA,mBACjB,IAAIiD,oBACH,IAAI6B,2BACG,IAAIA,sBACT,IAAIA,6BACG,IAAIA,0BA8CPlQ,KAAK6wB,OAAOZ,SAAQ,IACtCjwB,KAAKkyB,aAAaxnB,KAAK1K,KAAK2wB,QAAQwB,aAAa7lB,aAAatM,KAAK0xB,iCAKvD,IAAIrjB,4BAOIrO,KAAK6wB,OAAOZ,SAAQ,WACzCmC,EAAgBpyB,KAAKqyB,eAAe7gB,QAAQxR,KAAKsyB,YAAatyB,KAAKuyB,iBAAkB/F,SACtFgG,sBAAsB9nB,KAAK1K,KAAKqyB,gBAAgB5H,cAChDgI,kBAAkB3gB,iBAAiB9R,KAAK0yB,mBAAoBN,QAC5DO,kBAAkBjoB,KAAK1K,KAAKyyB,mBAAmBhI,eAC9CmI,EAAY5yB,KAAK6yB,sBACnBD,OACKE,sBAAsBhhB,iBAAiB9R,KAAKwyB,sBAAuBI,EAAUlB,kBAE7EoB,sBAAsBpoB,KAAK1K,KAAKwyB,uBAElCJ,yBAMc,IAAIliB,6BACG,IAAIA,yBACR,IAAIA,yBACJ,IAAIA,6BACA,IAAIA,4BAsCLlQ,KAAK6wB,OAAOZ,SAAQ,UAC1C8C,eAAeroB,KAAK1K,KAAK2wB,QAAQqC,mBAChCC,EAASjzB,KAAK+yB,eAAezmB,aAAatM,KAAKkzB,2BAC9C7N,UAAUrlB,KAAKmzB,kBACfjN,QAAQlmB,KAAKozB,cACbH,yBAGc,IAAI5M,oBACN,IAAIhY,sBACF,IAAIA,0BAmBArO,KAAK6wB,OAAOZ,SAAQ,WACvCgD,EAASjzB,KAAKqzB,aACdC,EAAUtzB,KAAK2wB,QAAQ4C,OAAOC,aAAaC,IAAIzzB,KAAK2wB,QAAQ+C,SAC9DJ,IACO5oB,KAAK4oB,EAAQK,YAAY3zB,KAAK0wB,WAClC,OACGmC,EAAiB7yB,KAAK6yB,eACvBA,IACOnoB,KAAKmoB,EAAelC,QAAQqC,eADZY,qBAAqBxH,GAAMA,MAEhD9f,aAAatM,KAAK6zB,+BAEtBxO,UAAUrlB,KAAK8zB,gBACf5N,QAAQlmB,KAAK+zB,YACbd,uBAMY,IAAI5M,oBACJ,IAAIhY,kBACN,IAAIA,gCAoCUrO,KAAK6wB,OAAOZ,SAAQ,WAC7CgD,EAASjzB,KAAKg0B,mBACdV,EAAUtzB,KAAK2wB,QAAQ4C,OAAOC,aAAaC,IAAIzzB,KAAK2wB,QAAQ+C,SAC9DJ,IACO5oB,KAAK4oB,EAAQW,kBAAkBj0B,KAAK0wB,WACxC,OACGmC,EAAiB7yB,KAAK6yB,eACvBA,IACOnoB,KAAKmoB,EAAeqB,gBADJN,qBAAqBxH,GAAOA,aAGrD/G,UAAUrlB,KAAKm0B,sBACfjO,QAAQlmB,KAAKo0B,kBACbnB,6BAMkB,IAAI5M,0BACJ,IAAIhY,wBACN,IAAIA,sBAiCN,IAAI6B,wBAQF,IAAIA,wBAQJ,IAAIA,wBAQJlQ,KAAK6wB,OAAOZ,SAAQ,QACvCjwB,KAAK2wB,QAAQ4C,OAAOc,WAAar0B,KAAK2wB,QAAQ+C,iBACzCY,WAAWnzB,IAAIozB,mBACfD,WAAWlzB,IAAImzB,UAAU,GACvBv0B,KAAKs0B,iBAGV5E,EADc1vB,KAAK2wB,QAAQ4C,OAAOiB,YACTC,4BACzBC,EAAgB10B,KAAK00B,cACrBC,EAA0B30B,KAAK40B,yBAAyB9iB,iBAAiB4d,EAAYgF,GACrFzB,EAASjzB,KAAKs0B,WAAW5pB,KAAK1K,KAAK2wB,QAAQqC,aAAa1mB,aAAaqoB,YACpEtP,UAAUrlB,KAAK60B,cACf3O,QAAQlmB,KAAK80B,UACfC,SAAS9B,EAAO9xB,IAAIrB,IAAOi1B,SAAS9B,EAAO9xB,IAAIpB,IAAOg1B,SAAS9B,EAAO9xB,IAAI6E,IAC1E+uB,SAAS9B,EAAO7xB,IAAItB,IAAOi1B,SAAS9B,EAAO7xB,IAAIrB,IAAOg1B,SAAS9B,EAAO7xB,IAAI4E,OACpE7E,IAAIozB,gBACJnzB,IAAImzB,UAAU,KACdlP,UAAUrlB,KAAK60B,cACf3O,QAAQlmB,KAAK80B,WAEjB7B,IACRjzB,KAAKg1B,WAAWnE,sCACgB,IAAI3gB,kBAClB,IAAImW,kBACJ,IAAIhY,gBACN,IAAIA,2BAoBOrO,KAAK6wB,OAAOZ,SAAQ,WACxCsD,EAASvzB,KAAK2wB,QAAQ4C,OACtB7D,EAAa6D,EAAOiB,YAAYC,4BAChCQ,EAAoBj1B,KAAKk1B,mBAAmBxqB,KAAKglB,GAAYjF,SAC7DwI,EAASjzB,KAAKm1B,cAAczqB,KAAK1K,KAAKo1B,WACtC90B,EAAIN,KAAKwQ,IACT6kB,EAAa/0B,EAAEyF,IAAI,EAAE,EAAEktB,EAAO9xB,IAAI6E,GAAGsG,aAAa2oB,GAAmBjvB,EACrEsvB,EAAYh1B,EAAEyF,IAAI,EAAE,EAAEktB,EAAO7xB,IAAI4E,GAAGsG,aAAa2oB,GAAmBjvB,WACnE7E,IAAI6E,EAAIsvB,IACRl0B,IAAI4E,EAAIqvB,IACRl0B,IAAIrB,GAAK,GAAMyzB,EAAOgC,eAAez1B,IACrCsB,IAAItB,GAAK,GAAMyzB,EAAOgC,eAAez1B,IACrCqB,IAAIpB,GAAK,GAAMwzB,EAAOgC,eAAex1B,IACrCqB,IAAIrB,GAAK,GAAMwzB,EAAOgC,eAAex1B,IACrCslB,UAAUrlB,KAAKw1B,iBACftP,QAAQlmB,KAAKy1B,aACbxC,IACRjzB,KAAKg1B,WAAWnE,2BACK,IAAIxK,qBACJ,IAAIhY,mBACN,IAAIA,WACZ,IAAIA,0BACW,IAAI6B,qBAiBT,IAAI7B,qCASYrO,KAAK6wB,OAAOZ,SAAQ,WAClDyF,EAAqB11B,KAAK21B,oBAAoB7jB,iBAAiB9R,KAAK0yB,mBAAoB1yB,KAAKg1B,WAAWtD,aACxGkE,EAAuB51B,KAAK61B,sBAAsBC,gBAAgBJ,GAClEK,EAA0B/1B,KAAKg2B,yBAAyBtgB,sBAAsBkgB,GAC9EK,EAAmBj2B,KAAKk2B,qBAAqBnwB,IAAI,EAAG,EAAG,GAAGyF,gBAAgBuqB,GAC1EI,EAAcn2B,KAAKo2B,gBAAgBrwB,IAAI,EAAG,EAAG,GAAGyF,gBAAgBuqB,OAIlEM,EACAC,EACA3lB,EAJA4lB,EAActT,EAAAA,EACduT,EAASvT,EAAAA,MAKRtS,KAAK+b,GAAW,OACXnlB,EAAMmlB,GAAU/b,OAClB8lB,EAAON,EAAYj0B,kBAAkBqF,GACrCkvB,EAAOD,MACEC,IACYlvB,OAIxBoJ,KAAK+b,GAAW,OACXnlB,EAAMmlB,GAAU/b,MAElBpJ,EAAIzH,GAAKw2B,EAAoBx2B,cAC7ByH,EAAIxH,GAAKu2B,EAAoBv2B,cAC7BwH,EAAIvB,GAAKswB,EAAoBtwB,iBAC3B0wB,EAAOT,EAAiB/zB,kBAAkBqF,GAC5CmvB,EAAOH,MACOG,IACYnvB,SAI5BgoB,EAAMvvB,KAAK22B,oBAAoBC,oBACjCC,OAAOR,EAA0BjK,GAAOkK,GACrCt2B,KAAK82B,uBAAuBphB,sBAAsB6Z,KAC1DvvB,KAAKg1B,WAAWnE,iCACW,IAAI3gB,6BACF,IAAIA,gCACD,IAAI9E,uBACb,IAAIiD,4BACC,IAAIA,2BACL,IAAI6B,8BACD,IAAI9E,yBAGTpL,KAAK6wB,OAAOZ,SAAQ,UACvC8G,kBAAoB,OACpBC,iBAAmB,QAElBC,EAAUj3B,KAAK2wB,WACjBsG,EAAQjE,YAAYvP,uBAGlByT,EADSD,EAAQ1D,OACCC,aAAa2D,SAE/BC,EAAWp3B,KAAKk0B,aAChBmD,EAASD,EAASj2B,IAAI6E,EACtBrF,EAAI22B,GAAUC,MACd32B,EAAI02B,GAAUE,QAClBr2B,IAAI4E,IAAIqxB,EAASj2B,IAAIrB,EAAGs3B,EAASj2B,IAAIpB,KACrCoB,IAAI4E,IAAIqxB,EAASh2B,IAAItB,EAAGs3B,EAASh2B,IAAIrB,SACjC03B,EAAW92B,EAAEulB,QAAQoR,GAAUI,QAAQj2B,mBAElC6xB,KAAW4D,EAAU,OACtBS,EAAerE,EAAQ3C,WACzBgH,IAAiBV,eAChBU,EAAaC,YAAcD,EAAa3E,YAAYvP,sBACrDkU,EAAaE,gBAAgBvE,EAAQI,qBAGnCoE,GAD2B,YAAd93B,KAAK0wB,KAAqBiH,EAAaI,QAAUJ,EAAa/lB,QAClDsiB,eAC7B/yB,IAAI4E,IAAIqxB,EAASj2B,IAAIrB,EAAGs3B,EAASj2B,IAAIpB,KACrCoB,IAAI4E,IAAIqxB,EAASh2B,IAAItB,EAAGs3B,EAASh2B,IAAIrB,KACrCoB,IAAI4E,IAAI+xB,EAAY32B,IAAIrB,EAAGg4B,EAAY32B,IAAIpB,KAC3CoB,IAAI4E,IAAI+xB,EAAY12B,IAAItB,EAAGg4B,EAAY12B,IAAIrB,SACvCi4B,EAAiBr3B,EAAEs3B,UAAUr3B,GAAGslB,QAAQoR,GAAUY,QAAQz2B,SAAWg2B,EACvEO,EAAiB,IACZX,EAASS,EAAY32B,IAAI6E,OAAQ+wB,mBAAqBiB,OACjDhB,kBAAoBgB,MAGtCh4B,KAAKg1B,WAAWnE,+BAaQ,wBASD,EAtlB3BhxB,kBACSgxB,OAAOsH,oCAMLn4B,KAAKo4B,mBAELC,GACSr4B,KAAKo4B,UACLC,SACPD,QAAUC,OACVC,6CAMF,cAAK3H,QAAQ4H,wBAAgBv4B,KAAK0wB,wCAIlC,cAAKC,QAAQ6H,2BAAmBx4B,KAAK0wB,+BAWrB1wB,KAAK8wB,6BAChBuH,MACRI,MAAMJ,EAAIp3B,SAAS,UAAW,IAAIb,MACjCJ,KAAK8wB,aAAajN,OAAOwU,UACrBC,kBACAxH,aAAapmB,KAAK2tB,QAClBK,oBAAoBhuB,KAAK1K,KAAK8wB,cAAcrG,0CAe9CzqB,KAAK04B,oDAIPC,qBACE34B,KAAKgxB,kDAIP2H,qBACE34B,KAAKixB,4DAIP0H,qBACE34B,KAAKmxB,sDAIPwH,qBACE34B,KAAKkxB,4CAOPyH,qBACE34B,KAAKoxB,sDAOPuH,qBACE34B,KAAKqxB,+CAiBLrxB,KAAK44B,0DAaPlH,YACE1xB,KAAK8xB,oDAIPJ,YACE1xB,KAAK2xB,kDAIPD,YACE1xB,KAAK4xB,+CAIPF,YACE1xB,KAAK6xB,iDAOL7xB,KAAK+xB,oDAOL/xB,KAAKgyB,iDAOLhyB,KAAKiyB,+CAULjyB,KAAK64B,gDAuBL74B,KAAK84B,8DAcP1G,cACEpyB,KAAKwyB,yDAOPJ,cACEpyB,KAAKyyB,qDAOPL,cACEpyB,KAAK2yB,yDAOPP,cACEpyB,KAAK8yB,iDAaa9yB,KAAK+4B,qDASzBC,cACEh5B,KAAKozB,6CAOP4F,cACEh5B,KAAKmzB,wCAsBWnzB,KAAKi5B,mDASvBtF,YACE3zB,KAAK8zB,yCAOPH,YACE3zB,KAAK+zB,2CAONT,EAAUtzB,KAAK2wB,QAAQ4C,OAAOC,aAAaC,IAAIzzB,KAAK2wB,QAAQ+C,aAC9DJ,EAAgBA,EAAQhB,YAAYtyB,KAAK0wB,MACtC,SAAA,cAAKmC,yBAAgBqG,eAAe9M,wCAOrCkH,EAAUtzB,KAAK2wB,QAAQ4C,OAAOC,aAAaC,IAAIzzB,KAAK2wB,QAAQ+C,aAC9DJ,EAAgBA,EAAQ6F,iBAAiBn5B,KAAK0wB,MAC3C,SAAA,cAAKmC,yBAAgBN,oBAAoB9F,kCAoBnBzsB,KAAKo5B,+DAS7BnF,kBACEj0B,KAAKm0B,qDAOPF,kBACEj0B,KAAKo0B,qCAKRp0B,KAAK2wB,QAAQ4C,OAAOc,WAAar0B,KAAK2wB,QAAQ+C,YAAa1zB,WACzDq5B,EAAcr5B,KAAK2wB,QAAQ4C,OAAO8F,kBACtB,YAAdr5B,KAAK0wB,KAA2B2I,EAAY9I,IACzC8I,EAAY7I,+BAQZxwB,KAAKs5B,eAAexnB,iBAAiB9R,KAAKg1B,WAAWtC,mBAAoB1yB,KAAK0xB,0CAQ9E1xB,KAAKu5B,iBAAiBznB,iBAAiB9R,KAAKg1B,WAAWtC,mBAAoB1yB,KAAKoyB,4CAQhFpyB,KAAKw5B,iBAAiB9uB,KAAK1K,KAAKy5B,iBAAiBhP,gCAQjDzqB,KAAK05B,+CA8BPA,mBACE15B,KAAK60B,qCAGP6E,mBACE15B,KAAK80B,mCAUL90B,KAAK25B,qDA2BPA,sBACE35B,KAAKw1B,2CAGPmE,sBACE35B,KAAKy1B,8CAOLz1B,KAAK45B,cAAclvB,KAAK1K,KAAKg1B,WAAW6E,eAAevtB,aAAatM,KAAK0yB,wDASzE1yB,KAAK85B,mEAgGPC,oBACE/5B,KAAK+2B,oDAQPgD,oBACE/5B,KAAKg3B,iBAUhBn3B,uCA7Bem6B,GAAAzC,MAAQ,IAAIzT,EACZkW,GAAAxC,MAAQ,IAAI1T,EACZkW,GAAAtC,OAAS,IAAIt0B,EACb42B,GAAA9B,OAAS,IAAI90B,WA0C5BvD,YAAmB0zB,EAAuCG,yCAEzC,IAAI9C,qBAEP,0BAyCe5wB,KAAK6wB,OAAOZ,SAAQ,WACvCgK,EAAQj6B,KAAKk6B,gBAEfl6B,KAAK0zB,OAAS1zB,KAAKuzB,OAAOc,SAAU,GAC9B3pB,KAAK1K,KAAKm6B,uBACVC,EAAcp6B,KAAKq6B,uBACdr3B,KAAKhD,KAAKs6B,uBACfC,qBACU7vB,KAAK1H,EAAEgwB,eACP1mB,aAAatJ,EAAEw3B,IAAIjJ,eACzB1M,MAAMuV,SAIdt3B,EAASm3B,EAAM5U,UAAUrlB,KAAKy6B,cAC9BjZ,EAAOyY,EAAM/T,QAAQlmB,KAAK06B,eAC5BlZ,EAAK/f,SAAW,EAAG,OAGbk5B,EAAe36B,KAAKuzB,OAAOqH,eAC7B15B,KAAKa,IAAIyf,EAAK1hB,IAAM66B,MAAmB76B,QAAU+6B,KAAKrZ,EAAK1hB,IAAM,GAAK66B,EAAe,KACrFz5B,KAAKa,IAAIyf,EAAKzhB,IAAM46B,MAAmB56B,QAAU86B,KAAKrZ,EAAKzhB,IAAM,GAAK46B,EAAe,KACrFz5B,KAAKa,IAAIyf,EAAKxb,IAAM20B,MAGf30B,QAAU60B,KAAKrZ,EAAKxb,IAAM,GAAK20B,EAAe,MAC5C30B,GAAoB,IAAf20B,EAAsB,KAEhC/G,qBAAqB9wB,EAAQ0e,UAEhCyY,uBAEY,IAAI5T,oBACJ,IAAIA,oBACJ,IAAIhY,kBACN,IAAIA,oCAgCa,wBACX,IAAIgY,wBACJ,IAAIhY,sBACN,IAAIA,2BA+DCrO,KAAK6wB,OAAOZ,SAAQ,UACzCsD,OAAOuH,SAASC,YAAY/6B,KAAMA,KAAKg7B,eACrCh7B,KAAKg7B,oCAEQ,IAAIC,qCAOlB1J,EAAc,IAAIrhB,EAClBgrB,EAAmB,IAAI9vB,EACvB+vB,EAAgB,IAAI9sB,EACpB+sB,EAAa,IAAI/sB,EAEjBqjB,EAAc,IAAIxhB,EAClB2pB,EAAgB,IAAIxrB,EACpBkkB,EAAmB,IAAInnB,EACvBiwB,EAAa,IAAIhtB,EAEjBitB,EAAgB,IAAIjtB,EACpBktB,EAAc,IAAIltB,EAClBmtB,EAAgB,IAAIntB,EACpBotB,EAAc,IAAIptB,SAEjB,SAA8CqtB,eAE3CC,EAA4B,YAAfD,EAAMhL,KACnB4C,EAAUtzB,KAAK47B,WAEJlxB,0BAEAmxB,YAAYC,4BAAoBD,YAAY9D,2BAC5C8D,YAAYC,4BAAoBD,YAAYjqB,UACpD5R,KAAKw6B,IAAIU,wBAGZlC,EAAgB2C,oBACT1I,OAAO6I,4BAAoB7I,OAAO8E,2BAClC9E,OAAO6I,4BAAoB7I,OAAOrhB,QAEzC2mB,EAAgBv4B,KAAKu4B,mBACrBwD,OAAS,0BAAerI,QAAQ,KAElCsF,EAAe,GACD3T,UAAUiW,KACVpV,QAAQqV,SAEhB/J,EAAcmK,QAChBpD,WAAeR,cACfQ,WAAe3mB,OAEbugB,EAAcnyB,KAAKmyB,YACnB6J,EAAYh8B,KAAKg8B,UAEjBrB,EAAe36B,KAAKuzB,OAAOqH,eAC7B15B,KAAKa,IAAIw5B,EAAYz7B,IAAM66B,MAA0B76B,QAAU+6B,KAAKU,EAAYz7B,IAAM,GAAK66B,EAAe,IAC1Gz5B,KAAKa,IAAIw5B,EAAYx7B,IAAM46B,MAA0B56B,QAAU86B,KAAKU,EAAYx7B,IAAM,GAAK46B,EAAe,IAC1Gz5B,KAAKa,IAAIw5B,EAAYv1B,IAAM20B,MAA0B30B,QAAU60B,KAAKU,EAAYv1B,IAAM,GAAK20B,EAAe,MAEnGjwB,KAAK6wB,GACZr6B,KAAKa,IAAIi6B,EAAUl8B,IAAM66B,MAAyB76B,GAAKk8B,EAAUl8B,GACjEoB,KAAKa,IAAIi6B,EAAUj8B,IAAM46B,MAAyB56B,GAAKi8B,EAAUj8B,GACjEmB,KAAKa,IAAIi6B,EAAUh2B,IAAM20B,MAAyB30B,GAAKg2B,EAAUh2B,KAEpDiE,oBAAoByxB,EAAMvC,iBAAkB+B,GAAkB74B,cACjEqI,KAAK4wB,GAAe9vB,gBAAgB+mB,KACtC7nB,KAAKynB,GAAa8J,SAASZ,GAAY7vB,gBAAgB+mB,KACrD7nB,KAAKgxB,EAAMpJ,aAAa/O,IAAIiY,GAAeluB,IAAImuB,KAEjDjqB,QAAQqoB,EAActH,EAAiB8I,KAG/C9J,EAAYzf,iBAAiB0f,EAAYkB,mBAAoBhB,GAC7DH,EAAY7mB,KAAKgnB,UAIPhnB,KAAK1K,KAAKw6B,IAAIW,iBACjBzwB,KAAK1K,KAAKw6B,IAAIY,cACb5pB,QAAQ2pB,EAAeD,EAAkBE,YAKnD7J,YAAcA,EACbmK,4BAqBW17B,KAAK6wB,OAAOZ,SAAQ,UACrCsD,OAAOuH,SAASoB,SAASl8B,KAAMA,KAAKqwB,KAClCrwB,KAAKqwB,gBAEkB,IAAI2J,GAAU,SAAUh6B,+BAS5BA,KAAK6wB,OAAOZ,SAAQ,IACvCjwB,KAAKm8B,cAAcn8B,KAAKuwB,gBAEG,IAAIyJ,GAAU,UAAWh6B,8BASlCA,KAAK6wB,OAAOZ,SAAQ,IACtCjwB,KAAKm8B,cAAcn8B,KAAKwwB,gBAEE,IAAIwJ,GAAU,SAAUh6B,eAUhB,IAAIg6B,GAAU,SAAUh6B,iCASrCA,KAAK6wB,OAAOZ,SAAQ,WAC1CmM,EAAep8B,KAAKo8B,aACpBrX,EAAW/kB,KAAKq8B,oBACb56B,OAAS,YACP66B,KAASF,EAAc,OACxBzL,EAAU3wB,KAAKuzB,OAAOgJ,WAAWD,GACnC3L,EAAQiH,cACH/H,KAAKc,UAEX5L,4BAEiB,GAzU5BllB,sBACQG,KAAKgwB,YAAa,MACbA,aAAc,QAKbsD,EAAUtzB,KAAK47B,SAAW57B,KAAKuzB,OAAOC,aAAaC,IAAIzzB,KAAK0zB,WAE7D8I,WAAax8B,KAAKw6B,IAAIuB,YACtBxD,cAAgBv4B,KAAKw8B,YAAcx8B,KAAKuzB,OAAOgJ,WAAWv8B,KAAKw8B,kBAC9D5J,GAAY,0BAAS6J,uBAAcC,kCAA0BA,gBAAiB18B,KAAKw8B,gBACpFhE,iBAAmB5F,GAAa5yB,KAAKuzB,OAAOgJ,WAAW3J,iBAEvD2F,kBAAetwB,uBACfuwB,qBAAkBvwB,SAGnBqrB,IAEQqJ,gBAGHC,6BACArC,8CA+CNv6B,KAAK68B,mDAIP7J,YACEhzB,KAAKy6B,yCAIPzH,YACEhzB,KAAK06B,wCAOR16B,KAAK88B,mCACAA,6BAA8B,OAC9BvJ,OAAOuH,SAASiC,mBAAmB/8B,KAAMA,KAAKg9B,uBAC9CA,iBAAiB3X,UAAUrlB,KAAKi9B,uBAChCD,iBAAiB9W,QAAQlmB,KAAKk9B,iBAEhCl9B,KAAKg9B,mDASP7C,gBACEn6B,KAAKi9B,iDAIP9C,gBACEn6B,KAAKk9B,eAMhBr9B,iCACSi9B,6BAA8B,YACxB95B,KAAKhD,KAAKs6B,uBACf6C,4BAIVt9B,4BACQG,KAAK68B,mBAAmB7M,kBACvBoN,oBAAoBpN,aAAc,OAClCqN,sBAAsBrN,aAAc,OACpC6M,mBAAmB7M,aAAc,YAC3BhtB,KAAKhD,KAAKs6B,uBACfsC,yBASV/8B,aAAa6zB,QACJzrB,aACDswB,EAAgBv4B,KAAKuzB,OAAOgJ,WAAW7I,QACpC6E,GAAe,IACdA,EAAcA,gBAAkBv4B,YAAau4B,EAAc7E,OAC/C6E,EAAcA,qBAE3B,EAGX14B,gBAAgB6zB,QACPzrB,aACDswB,EAAgBv4B,KAAKu4B,mBAClBA,GAAe,IACdA,EAAc7E,OAASA,SAAa6E,EAAc7E,OACtC6E,EAAcA,qBAE3B,4BAOAv4B,KAAKo9B,sBA6FhBv9B,iBAAiBy9B,GAAW,GACpBA,SACKC,gBAAgBvN,aAAc,OAC9BK,IAAkBiI,mBAEtBkF,oBAAoBxN,aAAc,OAClCyN,mBAAmBzN,aAAc,OACjCO,IAAsB+H,kBACtB9H,IAAqB8H,8BAOnBt4B,KAAKu9B,4CAYPt1B,SACEjI,KAAKw9B,+CAWPv1B,SACEjI,KAAKy9B,sDAYPx1B,SACEjI,KAAKywB,sCASLzwB,KAAKq9B,gDAmBLr9B,KAAKuzB,OAAOC,aAAakK,IAAI19B,KAAK0zB,OA79BjDiK,MA66BKC,MAYAC,MAUAC,eCz7BDj+B,YAAYk+B,MACE9R,OAAO+R,OAAOh+B,KAAM+9B,aAsDlCl+B,YAAmB0zB,8BAED,IAAI0K,yBAgBK,IAAI7yB,mBACT,IAAIib,wBAyDC,IAAI6X,6BACA,IAAIA,GAzE3Br+B,WAAWk+B,iCACTI,EAAgBn+B,KAAKuzB,OAAO6K,cAC7BC,QAAQC,gBAAkB,WAAOA,mBAAmBH,EAAcG,qBAClED,QAAQE,kBAAoB,WAAOA,qBAAqBJ,EAAcI,uBACtEF,QAAQG,UAAY,WAAOA,aAAaL,EAAcK,eACtDH,QAAQI,sBAAwB,WAAOA,yBAAyBN,EAAcM,2BAC9EJ,QAAQK,UAAY,WAAOA,aAAaP,EAAcO,eACtDL,QAAQM,kBAAoB,WAAOA,qBAAqBR,EAAcQ,uBACtEN,QAAQO,kBAAoB,WAAOA,qBAAqBT,EAAcS,uBACtEP,QAAQQ,YAAc,WAAOA,eAAeV,EAAcU,iBAC1DR,QAAQS,YAAc,WAAOA,eAAeX,EAAcW,iBAC1DT,QAAQU,cAAgB,WAAOA,iBAAiBZ,EAAcY,cAWvEl/B,OAAOyzB,MAE4B,IAA3BA,EAAQ0L,QAAQv9B,QAAgB6xB,EAAQ3C,QAAQqC,YAAYvP,mBACpDgZ,aAAe,MAChB,QAGLwC,EAAkBj/B,KAAKk/B,iBAAiBx0B,KAAK4oB,EAAQuI,YAAYjqB,QACjEutB,EAAan/B,KAAKo/B,YAAY10B,KAAK4oB,EAAQL,OAAOrhB,kBAE7CytB,KAAU/L,EAAQ0L,aACpBM,WAAWD,QACXE,cAAcjM,EAAS+L,OAG5BG,EACAC,YACOJ,KAAU/L,EAAQ0L,QAAS,OAC5BU,EAAWL,EAAOM,UAAU,QAC7BF,IAAkBA,EAAaG,YAAcF,EAASE,gBACxCF,IACFL,EACTI,EAAaG,2BAKjBC,oBAAsBvM,EAAQC,OAAOuM,YACrCC,sBAAwBzM,EAAQC,OAAOuM,4BAE5BF,gBACPC,mBAAqB,GAG5BJ,GAAgBA,EAAaG,YAActM,EAAQuM,oBAAsB7/B,KAAKq+B,QAAQC,iBACvFhL,EAAQyM,sBAAwB//B,KAAKq+B,QAAQE,qBACrCwB,qBAAuB,IACjBC,OAAM,OAEZnE,YAAYjqB,OAASqtB,IACrBhM,OAAOrhB,OAASutB,IAChBxO,QAAQ4J,sBAGZkC,aAAe+C,GAEhB,EAOH3/B,cAAcyzB,EAA6B+L,WACvCY,mBAAmBC,UAEpBC,0BACDR,EAAYN,EAAOM,UACnB38B,EAAIhD,KAAKq+B,QACT+B,EAAcpgC,KAAKqgC,iBACnBZ,EAAez/B,KAAKsgC,yBAGtBC,EAAav9B,EAAEy7B,uBAGf,WAAOkB,UAAU,aAAIC,gBACR,QAGZY,0BAA0BlN,EAAS+L,EAAQr8B,EAAE07B,UAAW17B,EAAE+7B,iBAGrD,GAAGiB,gBAKJx8B,EAAE,EAAGA,EAAG+8B,EAAY/8B,IAAK,GACvBi9B,cACM/1B,KAAKi1B,EAAU,QAExBe,GAAU,UAGLha,EAAE,EAAGA,EAAIiZ,EAAUl+B,OAAQilB,IAAK,OAC/BgZ,EAAWC,EAAUjZ,OAKvBia,OAFQj2B,KAAKg1B,KACLkB,mBAAqBlB,EAASkB,mBAGtC1/B,KAAKiC,SAAWH,EAAEw7B,UAAW,OAEvBqC,EAAOpB,IAAiBC,EAAWD,EAAeE,EAAU,OAC9DmB,KACAnB,EAAUl+B,OAAS,OACGk+B,EAAUz+B,KAAKS,MAAMT,KAAKiC,SAASw8B,EAAUl+B,eAC5Dq/B,IAAmBpB,KAGlBqB,YAAYF,EAAM79B,EAAE27B,kBAAmB37B,EAAE47B,mBACjDkC,GAAkBzB,EAAO2B,iBAAiBF,EAAgBpB,IAAa,KAC3DqB,YAAYD,EAAgB99B,EAAE27B,kBAAmB37B,EAAE47B,0BAIhDwB,EAAYa,YAIvBjB,cAGNkB,EAAU7B,EAAO2B,iBAAiBZ,EAAaV,GAAY,KAC7DwB,MACSx2B,KAAK01B,GACVV,IAAaC,EAAU,IAAMN,EAAO2B,iBAAiBtB,EAAUC,EAAU,IAAM,KACrE,GAAGj1B,KAAKg1B,MAEZ,GAIViB,OACiBQ,UAAYD,EAjEX,IACA,mBAiEbA,GAAWP,EAAiBQ,SAAWn+B,EAAE87B,aAAe6B,EAAiBQ,SAAWn+B,EAAE67B,YAAa,WAEzF99B,KAAK2+B,EAASkB,qBACnBO,SAAWn+B,EAAE+7B,cAEfW,IAAaC,EAAU,OAChByB,YAAc,UAAoB/B,EAAO+B,cACvCC,UAAU,KACVrB,WACC,QAKVN,IAAaC,EAAU,OAChByB,iBAA0B/B,EAAO+B,aAUpDV,KAAgBY,gBAChBjC,EAAO2B,iBAAiBvB,EAAcE,EAAU,KAAO,IAChD4B,iBAA0BlC,EAAOkC,cAEjCA,YAAc,UAAoBlC,EAAOkC,aAKpD1hC,0BAA0ByzB,EAA2B+L,EAAsBX,EAAkB8C,MAC7F9C,GAAa,QAAS,IAAIt+B,MAAM,uCAChCi/B,EAAOM,UAAUl+B,OAASi9B,OACnBW,EAAOM,UAAUl+B,OAASi9B,GAAW,OAClCgB,EAAW,IAAIxB,GAAemB,aACzB3+B,KAAKg/B,EAASkB,qBAAsBO,SAAWK,IACjDH,UAAU,KACZ1B,UAAU9P,KAAK6P,WAEnBL,EAAOM,UAAUl+B,OAASi9B,OAC1BW,EAAOM,UAAUl+B,OAASi9B,KACtBiB,UAAU8B,gBClM7B5hC,YAAYw/B,aAnBoD,uBACpD,8BAQkB,8BACO,wFAI1B,6CAWyB,CAAMp/B,EAASyhC,EAA6BC,aAC/D,IAATD,SAA2B,KAE3BA,aAAgBzG,MAAO,KACnB2G,iBACOlhC,KAAKghC,IACJxgC,KAAKE,IAAIugC,EAAQ1hC,EAAOS,GAAIkhC,UAEjCA,SAEJD,EAAQ1hC,EAAOyhC,+BAOM,CAACzhC,EAAcyhC,SACvCG,EAAO,KACS,iBAATH,EAAmB,OACpB9vB,EAAS5R,KAAKq/B,OAAO/L,QAAQC,OAAOuO,cAAcJ,MAChDxgC,KAAKa,IAAI9B,EAAQ2R,OACtB,OACGvQ,EAAM,OAAQqgC,EAAO1hC,KAAKq/B,OAAO/L,QAAQC,OAAOuO,cAAcJ,EAAKK,SAAK,EACxEzgC,EAAM,OAAQogC,EAAO1hC,KAAKq/B,OAAO/L,QAAQC,OAAOuO,cAAcJ,EAAKM,SAAK,OAClE,IAAR3gC,GAAqBpB,EAAQoB,IACtBpB,EAAQoB,OAEF,IAARC,GAAqBrB,EAAQqB,MAC3BA,EAAMrB,UAGd4hC,+BAOsB,CAAC5hC,EAAeyhC,KAE7B,MAAOA,QAA0B,IAAXA,EAAK5hC,EAAqBE,KAAKiiC,eAAehiC,EAAMH,EAAG4hC,EAAK5hC,GAAK,IACvF,MAAO4hC,QAA0B,IAAXA,EAAK3hC,EAAqBC,KAAKiiC,eAAehiC,EAAMF,EAAG2hC,EAAK3hC,GAAK,IACvF,MAAO2hC,QAA0B,IAAXA,EAAK17B,EAAqBhG,KAAKiiC,eAAehiC,EAAM+F,EAAG07B,EAAK17B,GAAK,IAC/E,cAAe07B,QAAkC,IAAnBA,EAAKQ,UAA6BliC,KAAKiiC,eAAehiC,EAAMwB,SAAUigC,EAAKQ,WAAa,cAQlI,IAAI92B,cACH,IAAIkL,iCAEe,CAACrW,EAAkByhC,qBACtC,IAATA,SAA2B,KAG3B,MAAOA,EAAM,QACH1hC,KAAKmiC,MAAMz3B,KAAKg3B,GACf93B,QAAQ3J,GAASmiC,KACrB,eAAgBV,EAAM,OACvB15B,EAAQhI,KAAKqiC,OAAOzrB,kBAAkB3W,GACtCqiC,EAASt6B,EAAMlI,EAAIsiC,EACnBG,EAASv6B,EAAMjI,EAAIqiC,EACnBI,EAASx6B,EAAMhC,EAAIo8B,EACnB7O,EAASvzB,KAAKq/B,OAAO/L,QAAQC,OAC7BkP,EAAMlP,EAAOmP,UAAUC,WACzBC,GAAc,WAAKC,qBAAY/iC,GAAIyzB,EAAOuO,cAAcJ,EAAKmB,WAAW/iC,EAAG2iC,GAAO,EAClFK,GAAc,WAAKD,qBAAY9iC,GAAIwzB,EAAOuO,cAAcJ,EAAKmB,WAAW9iC,EAAG0iC,GAAO,IACxEvhC,KAAKE,IAAIwhC,EAAa,OACtB1hC,KAAKE,IAAI0hC,EAAa,WAM9BC,EAAc,KAAcH,IAAgB,KAAcE,IAAgB,EAC1EE,GANatB,EAAKuB,WAAa1P,EAAOuO,cAAcJ,EAAKuB,WAAYR,GAAO,GAMlDvhC,KAAKa,IAAIygC,YACpB,EAAI,EAAIO,MAA4B,EAAI,EAAIC,UAG9D,qCAwF4B,CAAC/iC,EAAcyhC,EAAqCwB,EAAwBC,aAClG,IAATzB,SAA2B,KAEX,iBAATA,EAAmB,IACtB,OAAQA,EAAM,OACRrgC,EAAMrB,KAAKq/B,OAAO/L,QAAQ8P,cAAc1B,EAAKK,GAAImB,EAAMC,MACzDljC,EAAQoB,SAAYpB,EAAQoB,KAEhC,OAAQqgC,EAAM,OACRpgC,EAAMtB,KAAKq/B,OAAO/L,QAAQ8P,cAAc1B,EAAKM,GAAIkB,EAAMC,MACzDljC,EAAQqB,SAAYA,EAAMrB,SAE3B,SAEFiB,KAAKa,IAAI9B,EAAQD,KAAKq/B,OAAO/L,QAAQ8P,cAAc1B,EAAMwB,EAAMC,UA9LnE9D,OAASA,wBA7BO3+B,SACfwiC,SAAcxiC,QACJ,WAATwiC,GAA8B,WAATA,0BAGLxiC,eACV,IAANA,GAAmBA,aAAau6B,QAAU,GAAsB,iBAANv6B,IAA+C,WAApBA,GAAK,OAAQA,0BASlGV,KAAKq/B,OAAOM,UAAU,GAAG0D,OAAOrjC,KAAKG,OAgCtCN,eAAeI,EAAcyhC,UAC5B1hC,KAAKsjC,wBAAwBrjC,EAAOyhC,EAAM1hC,KAAKujC,uBAqBhD1jC,gBAAgBI,EAAeyhC,UAC9B1hC,KAAKsjC,wBAAwBrjC,EAAOyhC,EAAM1hC,KAAKwjC,wBAYhD3jC,mBAAmBI,EAAkByhC,UACpC1hC,KAAKsjC,wBAAwBrjC,EAAOyhC,EAAM1hC,KAAKyjC,2BAqChD5jC,eAAe6hC,EAAkCgC,WAC1C,IAAThC,SAA2B,MAC3BE,EAAQ,YACD+B,KAAOjC,EAAM,IACR,aAARiC,eAGAC,EAAID,KACE,SAANC,GAAsB,WAANA,EAAgB,OAC1BC,EAAUnC,EAAKkC,aACVE,KAAUC,GAAmB,KAChCC,EAAKF,KACU,YAAfJ,EAA0B,IACR,UAAd1jC,KAAKkjC,MAA2B,MAAPc,cACX,UAAdhkC,KAAKkjC,MAA2B,MAAPc,cAExBhkC,KAAKikC,4BAAsBJ,WAAUG,GAAKN,EAAYE,EAAEI,QAElE,IACgB,YAAfN,EAA0B,IACR,UAAd1jC,KAAKkjC,MAA0B,SAANU,GAAsB,UAANA,cAE3B,UAAd5jC,KAAKkjC,OAA2B,YAAgB,UAANU,eAGzC5jC,KAAKikC,sBAAsBvC,EAAKkC,GAAIF,EAAYE,WAG1DhC,EAGD/hC,sBAAsB6hC,EAAgDwB,EAAwBC,WACvF,IAATzB,SAA2B,QACzBhG,EAAQ17B,KAAKq/B,OAAO/L,QAAQ3C,QAAQ/e,WACtCqhB,EACAnwB,EACA0e,SACI0hB,OACC,YACQxH,EAAM1C,gBACN0C,EAAMJ,gBACRI,EAAMH,sBAEZ,aACA,SACQG,EAAMxH,eACNwH,EAAMwI,eACRxI,EAAMyI,+BAGP,IAAI/jC,MAAM,yBAAyB8iC,KAAQC,kBAAwBzB,UAE7EzhC,EAAQ,SACJkjC,OACC,SAAmBlQ,EAAO9xB,IAAIrB,YAC9B,UAAmBmzB,EAAO7xB,IAAItB,YAC9B,WAAmBmzB,EAAO9xB,IAAIpB,YAC9B,QAAmBkzB,EAAO7xB,IAAIrB,YAC9B,SAAmBkzB,EAAO9xB,IAAI6E,YAC9B,UAAmBitB,EAAO7xB,IAAI4E,YAC9B,YAAmBlD,EAAOhD,YAC1B,YAAmBgD,EAAO/C,YAC1B,YAAmB+C,EAAOkD,YAC1B,mBAAmC,YAATk9B,EAC3BpgC,EAAOrB,SAAWP,KAAKY,KAAKgB,EAAOhD,GAAG,EAAI0hB,EAAKzhB,GAAG,aACjD,UAAmByhB,EAAK1hB,YACxB,UAAkB0hB,EAAKzhB,YACvB,UAAmByhB,EAAKxb,YACxB,iBAAiC,YAATk9B,EACzB1hB,EAAK/f,SAAWP,KAAKY,KAAK0f,EAAK1hB,GAAG,EAAI0hB,EAAKzhB,GAAG,uBAExC,IAAIK,MAAM,2BAA2B8iC,KAAQC,cAAoBzB,SAI3EA,aAAgBzG,MAAO,KACnB2G,iBACOlhC,KAAKghC,IACJxgC,KAAKE,IAAIpB,KAAKokC,6BAA6BnkC,EAAOS,EAAGwiC,EAAMC,GAAUvB,UAE1EA,SAEJ5hC,KAAKokC,6BAA6BnkC,EAAOyhC,EAAMwB,EAAMC,GAqBtDtjC,qBAAqB+hC,OACvByC,EAAU,QACRC,EAAMtkC,KAAKq/B,OAAOkF,6BAA6B,SAC/CjR,EAAUtzB,KAAKq/B,OAAO/L,QACtBiC,EAAiBjC,EAAQC,OAAOgC,eAChCf,EAAclB,EAAQC,OAAOiB,YAC7BgQ,EAAKjP,EAAez1B,EACpB2kC,EAAKlP,EAAex1B,EACpB2kC,EAAWnP,EAAe9zB,SAC1ByyB,EAAeZ,EAAQ3C,QAAQ/e,OAAOsiB,aACtCyQ,EAAazQ,EAAa/yB,IAAIrB,IAAK0kC,EAAG,EAAIF,EAC1CM,EAAc1Q,EAAa9yB,IAAItB,EAAI0kC,EAAG,EAAIF,EAC1CO,EAAe3Q,EAAa/yB,IAAIpB,IAAK0kC,EAAG,EAAIH,EAC5CQ,EAAY5Q,EAAa9yB,IAAIrB,EAAI0kC,EAAG,EAAIH,EACxCS,EAAa7Q,EAAa9yB,IAAI4E,EAAIwuB,EAAYa,kBAChDsP,EAAa,OAAczjC,KAAKa,IAAI4iC,EAAaH,IACjDI,EAAc,OAAc1jC,KAAKa,IAAI6iC,EAAcJ,IACnDK,EAAe,OAAc3jC,KAAKa,IAAI8iC,EAAeJ,IACrDK,EAAY,OAAc5jC,KAAKa,IAAI+iC,EAAYL,IAC/CM,EAAa,OAA2B,GAAbA,GACxBnD,EAAQ1gC,KAAKa,IAAI2iC,GAAUL,oBAkBSW,GAG/CnlC,YAAYw/B,SACFA,QACD6D,KAAO,SAGhBrjC,iBACU67B,EAAQ17B,KAAKq/B,OAAO/L,QAAQ3C,QAAQ/e,cACnC5R,KAAKilC,mBAAmBvJ,EAAMR,iBAAkBl7B,KAAK0hC,wBAK1BsD,GAGtCnlC,YAAYw/B,SACFA,QACD6D,KAAO,QAGhBrjC,iBACU67B,EAAQ17B,KAAKq/B,OAAO/L,QAAQ3C,QAAQ/e,cACnC5R,KAAKklC,gBAAgBxJ,EAAML,WAAYr7B,KAAK0hC,wBAIrBsD,GAKlCnlC,YAAYw/B,SACFA,aALH,kBAEU,IAAIhxB,OAIZ60B,KAAO,QAGhBrjC,iBACU67B,EAAQ17B,KAAKq/B,OAAO/L,QAAQ3C,QAAQ/e,OACpC8e,EAAO1wB,KAAK0wB,SACbA,SAAa,QAEZhwB,EAAIV,KAAKmlC,OAAOz6B,KAAKgxB,EAAML,YAC3B+J,EAAmB,QAAT1U,EACZxvB,KAAKE,IAAIF,KAAKa,IAAIrB,EAAEZ,GAAIoB,KAAKa,IAAIrB,EAAEX,GAAImB,KAAKa,IAAIrB,EAAEsF,IAClD9E,KAAKE,IAAIF,KAAKa,IAAIrB,EAAEZ,GAAIoB,KAAKa,IAAIrB,EAAEX,IACjCslC,EAAa3kC,EAAEgB,aAAa0jC,YACtBC,EAAWvlC,EAAK,KAChBulC,EAAWtlC,EAAK,GACV,aACFslC,EAAWr/B,EAAK,EAEpBq/B,EAAWr/B,EAAI,EAAI,EAAEq/B,EAAWr/B,EAAI,IA+BxD,MAAM+9B,GAAoB,CAAC,IAAI,IAAI,IAAI,WAAY,6BAENiB,GAGzCnlC,YAAYw/B,SACFA,QACD6D,KAAO,QAGhBrjC,kBACWG,KAAKslC,eAAetlC,KAAK0hC,KAAM,6BAsCFsD,GAGxCnlC,YAAYw/B,SACFA,QACD6D,KAAO,QAGhBrjC,wBACWG,KAAKulC,qBACRvlC,KAAKslC,eAAetlC,KAAK0hC,KAAM,UAC/B1hC,KAAKslC,eAAe,cAAK5D,eAAM8D,SAAU,2BAMRR,GAEzCnlC,YAAYw/B,SACFA,uBAIO,OAHR6D,KAAO,QAKhBrjC,uBACU+R,EAAS5R,KAAKq/B,OAAO/L,QAAQ3C,QAAQ/e,OACrCuyB,EAAavyB,EAAOuyB,WACpBO,EAAW1kC,KAAKq/B,OAAO/L,QAAQC,OAAOgC,eACtCkQ,EAAavkC,KAAKC,IAAIgjC,EAAWrkC,EAAIqkC,EAAWpkC,EAAG2kC,EAAS5kC,EAAI4kC,EAAS3kC,GACzE2lC,GAAgB,WAAO7S,yBAAgBsR,aAAcO,EACrDiB,EAAgBD,EAAc5lC,EAAI4lC,EAAc3lC,SACxCC,KAAKulC,qBAAqBE,GAAcE,EAAgB3lC,KAAK4lC,iCAM3CZ,GAEpCnlC,YAAYw/B,SACFA,QACD6D,KAAO,aACP2C,kBAAoB,KAG7BhmC,kBACmBG,KAAKq/B,OAAO/L,QAAQ3C,QAAQ/e,OAAOsyB,aACnCziC,2BCldYw8B,GAE/Bp+B,YAAmByzB,iDAKC,CAChBwS,MAAO,MACPC,MAAO,MACPpD,OAAQ,WACRqD,MAAO,uBAOG,mBAEA,kBAKD,IAAI/K,yBAMY,oBA+HjB,IAAIA,qBAKJ,wBAqEO,CAACt6B,EAAkBC,WAO5BqlC,EAAajmC,KAAKimC,cACpBtlC,EAAE0iC,OAAO5hC,OAASwkC,EAAWxkC,cAAe,KAC5Cb,EAAEyiC,OAAO5hC,OAASwkC,EAAWxkC,sBAE3BykC,EAAYvlC,EAAEi/B,WACduG,EAAYvlC,EAAEg/B,cAChBsG,IAAcC,cACdA,IAAcD,SAAkB,MAEhCE,EAAO,QAELC,EAAarmC,KAAK2/B,UAAU,GAAG0D,eAC5B7/B,EAAI,EAAGA,EAAIyiC,EAAWxkC,OAAQ+B,IAAK,OAClC8iC,EAAS3lC,EAAE0iC,OAAO7/B,GAClB+iC,EAAS3lC,EAAEyiC,OAAO7/B,MACpBi1B,MAAM6N,UAAgB,KACtB7N,MAAM8N,kBACJC,EAAYP,EAAWziC,GACvBijC,EAAUD,EAAUE,0BACpBC,EAAUH,EAAUI,0BACpB/F,EAAO3/B,KAAKE,IAAIilC,EAAW7iC,GAAI8iC,EAAQC,GACvCM,EAAY3lC,KAAKC,IAAI0/B,EAAO3/B,KAAKa,IAAI8+B,GAAQ4F,GAAUE,MACzDL,EAASO,GAAaN,EAASM,WACrBC,YACHP,EAASD,EAEhBC,EAASD,GAAW,MAAUC,EAASD,UAKxCF,GAhQXvmC,6BAA6BqjC,UAClBljC,KAAKszB,QAAQC,OAAOuO,cAAc9hC,KAAK6lC,kBAAkB3C,GAAOA,GAsB3ErjC,eAAe+yB,eACN8J,cAAgB9J,EACd5yB,KAGXH,SAASknC,eACCC,EAAMhnC,KAAKinC,kBACb,cAAKA,qBAAqB,IAAIC,GAAkBlnC,eAChDmnC,gBACAC,kBAAoB,GACjBpnC,KAAKqnC,aAAaL,EAAID,GAOjClnC,YAAY6hC,EAAqBqF,eACvBC,EAAMhnC,KAAKsnC,sBAAwB,cAAKA,yBAAyB,IAAIC,GAA8BvnC,eACrG0hC,KAAOA,IACPyF,cACGnnC,KAAKqnC,aAAaL,EAAKD,GASlClnC,WAAW6wB,EAAiB,MAAOqW,eACzBC,EAAMhnC,KAAKwnC,qBAAuB,cAAKA,wBAAwB,IAAIC,GAAiBznC,eACtF0wB,KAAOA,IACPyW,cACGnnC,KAAKqnC,aAAaL,EAAKD,GAkBlClnC,MAAM6hC,EAAkBqF,eACdC,EAAMhnC,KAAK0nC,gBAAkB,cAAKA,mBAAmB,IAAIC,GAAqB3nC,eAChF0hC,KAAOA,IACPyF,YACGnnC,KAAKqnC,aAAaL,EAAKD,GAKlClnC,OAAO6hC,EAAwBqF,eACrBC,EAAMhnC,KAAK4nC,iBAAoB,cAAKA,oBAAoB,IAAIC,GAAwB7nC,eACtF0hC,KAAOA,EACJ1hC,KAAKqnC,aAAaL,EAAKD,GAIlClnC,kBAAkB6hC,EAAqBqF,IAIvClnC,aAAa6hC,EAAuBqF,iBAC1Be,EAAkB9nC,KAAK+nC,4BACzB,cAAKA,+BAA+B,IAAIC,GAAuBhoC,MAC7DioC,EAAkBjoC,KAAKkoC,4BACzB,cAAKA,+BAA+B,IAAIF,GAAuBhoC,eACnD0hC,KAAOA,IACPwB,KAAO,UACPxB,KAAOA,IACPwB,KAAO,QAChBljC,KAAKqnC,aAAaS,EAAiBf,GAAMM,aAAaY,EAAiBlB,GAKlFlnC,UAAUknC,eACAC,EAAMhnC,KAAKmoC,mBAAqB,cAAKA,sBAAsB,IAAIC,GAAmBpoC,eACpFmnC,gBACAC,kBAAoB,IACjBpnC,KAAKqnC,aAAaL,EAAKD,GAIlClnC,eAAeknC,eACLC,EAAMhnC,KAAKqoC,2BACb,cAAKA,8BAA8B,IAAID,GAAmBpoC,eAC1DmnC,SAAW,GACRnnC,KAAKqnC,aAAaL,EAAKD,GAWlClnC,aAAyCmnC,EAAOD,iBACrC/I,OAAOgJ,EAAKD,QACf/mC,KAAKimC,WAAWqC,QAAQtB,SAClBf,WAAuCpW,KAAKmX,QACjD7G,oBACEngC,yCAkBkC,KAAlC,cAAK2/B,UAAU,aAAIC,YAU9B//B,kCACU0oC,EAAMvoC,KAAKszB,QAAQC,OACnB0S,EAAajmC,KAAKimC,eACpB9lC,EAAQ,YACDqoC,KAAKvC,IACV9lC,MAAQA,MACRymC,+BAAoD,IAAxB4B,EAAE3C,kBAC5B0C,EAAIzG,cAAc0G,EAAE3C,kBAAmB0C,EAAI7F,UAAU8F,EAAEtF,OACvDljC,KAAKukC,6BAA6BiE,EAAEtF,QACtCwD,0BAA4B,SAAA,WAAEU,qBAC5BpnC,KAAKonC,qBACLpnC,KAAKszB,QAAQC,OAAO6K,SAASgJ,kBAUzCvnC,qBACS8/B,UAAU8I,KAAKzoC,KAAKghC,uBACpBvB,aAAez/B,KAAK2/B,UAAU,IA0EpC,eAEH9/B,YAAYw/B,oBAOY,mBAKV,IAAIj0B,cAKT,IAAIib,cAmBJ,oBAKI,0BAGQ,CACjB,CAAC6c,KAAK,SAAU/B,SAAU,IAC1B,CAAC+B,KAAK,SAAU/B,SAAU,IAC1B,CAAC+B,KAAK,OAAQ/B,SAAU,IACxB,CAAC+B,KAAK,SAAU/B,SAAU,2BAsBH,GArEnB9B,SAAaA,OAASA,8BAoBnBr/B,KAAKqjC,OAAOrjC,KAAKq/B,OAAO4G,WAAWqC,QAAQtoC,KAAKq/B,OAAOmI,wBAAyB,kCAIhFxnC,KAAKqjC,OAAOrjC,KAAKq/B,OAAO4G,WAAWqC,QAAQtoC,KAAKq/B,OAAOiI,yBAA0B,oCAIjFtnC,KAAKqjC,OAAOrjC,KAAKq/B,OAAO4G,WAAWqC,QAAQtoC,KAAKq/B,OAAOuI,oBAAqB,EAsB/E/nC,wBACE6oC,EAAa1oC,KAAK4gC,mBAClB1R,EAAUlvB,KAAK2oC,iBAEfrB,EAAwBtnC,KAAKq/B,OAAOiI,sBACpCsB,EAAmB5oC,KAAKq/B,OAAOmI,6BAE5BhkC,EAAE,EAAGA,EAAIklC,EAAWjnC,OAAQ+B,MACzBA,GAAKklC,EAAWllC,GAAG29B,SACvBmG,GAA+C,UAAtBoB,EAAWllC,GAAG0/B,MACpCljC,KAAK6oC,oBAAsBvB,EAAsBV,8BAC5CpjC,IAAM,KACdolC,GAA0C,QAAtBF,EAAWllC,GAAG0/B,MAC/BljC,KAAK8oC,eAAiBF,EAAiBhC,8BAClCpjC,IAAM,YAGfulC,GAAaL,EAAYxZ,GAIpCrvB,KAAK6/B,QACIL,OAASK,EAASL,YAClBxD,YAAYnxB,KAAMg1B,EAAS7D,kBAC3B5I,OAAOvoB,KAAMg1B,EAASzM,aACtBoQ,OAAO5hC,OAAS,UAEZ+B,EAAI,EAAGA,EAAIk8B,EAAS2D,OAAO5hC,OAAQ+B,SACnC6/B,OAAO7/B,GAAKk8B,EAAS2D,OAAO7/B,eAGhCo8B,WAAaF,EAASE,WACpB5/B,KAMXH,UAAUmpC,SAEA/yB,EAAMiY,GAAK8a,GAMXlmC,EAASmmC,GAAeC,WAAWnjC,IACrC,EACA,GACEkQ,GAGAkzB,EAAYnpC,KAAKq/B,OAAO/L,QAAQC,OAAO8F,YAAYznB,SAIlDtF,aAAa68B,EAAUzX,mBACxBF,EAAcxxB,KAAKq/B,OAAO/L,QAAQ3C,QAAQ/e,OAAO4f,eACxC1uB,EAAOwJ,aAAaklB,EAAYkB,yBAE1CmJ,YAAYnxB,KAAKy+B,EAAU5W,qBACjBvyB,KAAK67B,YAAYI,SAASzK,EAAY4X,+BAO/CnP,EAAQj6B,KAAKq/B,OAAO/L,QAAQ3C,QAAQqC,YACpCxR,EAAOyY,EAAMxW,UACfwlB,GAAeI,WAAWtjC,IAAI,EAAE,EAAE,GAClCk0B,EAAM/T,QAAQ+iB,GAAeI,qBAC5BhnC,cACAvB,eAAqB,EAANmV,EAAU/U,KAAKue,IAAI,EAAI6pB,SAEtCrW,OAAOW,qBAAqB9wB,EAAQ0e,GAIlCxhB,KASXH,YAAY6/B,EAAyB6J,EAAgBC,SAC3C1mC,EAAS9C,KAAKizB,OAAO5N,UAAU4jB,GAAe3jB,SAC9C9D,EAAOxhB,KAAKizB,OAAO/M,QAAQ+iB,GAAeQ,OAC1C3R,EAAc4H,EAASzM,OACvByW,EAAc5R,EAAYzS,UAAU4jB,GAAeU,cACnDC,EAAY9R,EAAY5R,QAAQ+iB,GAAeY,iBAChDhO,YAAYhyB,MAAM61B,EAAS7D,YAAaoN,GAAea,uBAAuBP,EAASC,IAAUnnC,YAClGnB,KAAKiC,SAAW,MACTqB,KAAKklC,EAAaT,GAAea,uBAAuBP,EAASC,MACnEhlC,KAAKolC,EAAWX,GAAea,uBAAuBP,EAASC,SAC/DvW,OAAOW,qBAAqB9wB,EAAQ0e,UAEpCyR,OAAO9xB,IAAIqD,KAAKszB,EAAY32B,IAAK8nC,GAAea,uBAAuBP,EAASC,SAChFvW,OAAO7xB,IAAIoD,KAAKszB,EAAY12B,IAAK6nC,GAAea,uBAAuBP,EAASC,KAS7F3pC,sBAEUkqC,EAAW/pC,KAAKgqC,kBAChBC,EAAeF,EAAS7G,SAC1B/B,EAAW4I,EAAS5I,YAGH,WAAjB8I,GAA6B/oC,KAAKiC,SAAW,KAAO,OAC9C+mC,EAAkB,cAAK7K,OAAOiI,gCAAuB5F,0BACtCr2B,eACjBrL,KAAK6oC,mBAAqBqB,EAAgBtD,2BAC1C1lC,KAAKiC,SAAW,SACX04B,YAAYnxB,KAAKw/B,OACnB,OACGn1B,EAAQ7T,KAAKC,IAAI+sB,GAA2B,KAAtBhtB,KAAKC,IAAIggC,EAAU,IAAY,QACtDtF,YAAYI,SAAS7N,GAAiBrZ,EAAOA,IAAQ1S,mBAI5D4wB,EAASjzB,KAAKizB,OACdnwB,EAASmwB,EAAO5N,UAAU4jB,GAAe3jB,SACzC9D,EAAOyR,EAAO/M,QAAQ+iB,GAAeQ,UAGtB,WAAjBQ,EAA4B,OACtBvnC,EAASumC,GAAekB,WAAWpkC,IAAI,EAAE,EAAE,GAAGyF,gBAAgB4iB,GAAiB,EAAE,MAChFgc,UAAUrc,GAASoT,IAAWrgC,eAAe0gB,EAAK/f,YAClD8hB,IAAI7gB,MAIM,SAAjBunC,EAAyB,OACnBl1B,EAAQ,GAAKgZ,GAASoT,KACvBrgC,eAAeiU,QAGnBs1B,YAAYrqC,KAAKq/B,OAAO/L,QAAQC,OAAOqH,eAAe,GAAG,QACvDhH,qBAAqB9wB,EAAQ0e,GAGf,WAAjByoB,EAA2B,OACrBvnC,EAASumC,GAAekB,WAAWpkC,IAAI,EAAE,EAAE,GAAGyF,gBAAgB4iB,GAAiB,EAAE,MAChFgc,UAAUrc,GAASoT,IAAWlF,SAASza,GAC1CtgB,KAAKiC,WACEhC,IAAIoiB,IAAI7gB,SAUjBrB,EAAM4xB,EAAO9xB,IACbG,EAAM2xB,EAAO7xB,WACfC,EAAIvB,EAAIwB,EAAIxB,QAAQwqC,MAAMjpC,EAAIC,EAAI,KAClCD,EAAItB,EAAIuB,EAAIvB,QAAQuqC,MAAMjpC,EAAIC,EAAI,KAClCD,EAAI2E,EAAI1E,EAAI0E,QAAQskC,MAAMjpC,EAAIC,EAAI,KAE/ByoC,EAGHlqC,MAAMc,EAAWC,EAAW+iC,SAC1B4G,EAAS5pC,EAAEgjC,GACX6G,EAAS5pC,EAAE+iC,KACfA,GAAO6G,IACP7G,GAAO4G,gCAGiBlpC,EAAWC,UAC9BD,EAAMH,KAAKiC,YAAkB9B,GAGxCxB,MAAM4qC,GAAS,SACLpL,EAASr/B,KAAKq/B,OACd/L,EAAU+L,EAAO/L,aACfuI,YAAYjqB,OAAS5R,KAAK67B,cAC1B5I,OAAOrhB,OAAS5R,KAAKizB,SACrBtC,QAAQ4J,kBAAiB,GAC7BkQ,EAAU,MACL7K,YAAa,UACTp8B,EAAE,EAAGA,EAAI67B,EAAO4G,WAAWxkC,OAAQ+B,IAAK,OACvCglC,EAAInJ,EAAO4G,WAAWziC,GACtBo+B,EAAQ5hC,KAAKqjC,OAAO7/B,GAAKglC,EAAEiC,YAC7B7I,GAAS4G,EAAE5B,4BAA8B7R,SAAS6M,WAC7ChC,YAAa,iBAjKnB1B,GAAAgL,WAAa,IAAI76B,EACjB6vB,GAAAmL,WAAa,IAAIh7B,EA8CjB6vB,GAAAiM,WAAa,IAAI97B,EACjB6vB,GAAA5Y,QAAU,IAAIjX,EACd6vB,GAAAuL,MAAQ,IAAIp7B,EACZ6vB,GAAAyL,aAAe,IAAIt7B,EACnB6vB,GAAA2L,WAAa,IAAIx7B,EClbpC,IACIq8B,GAAW,SAAUC,UACd,SAAU3gC,UACN,EAAI2gC,EAAO,EAAI3gC,KAG1B4gC,GAAW,SAAUD,UACd,SAAU3gC,UACNA,GAAK,GAAM2gC,EAAO,EAAI3gC,GAAK,KAAS2gC,EAAO,KAAS3gC,KAAO,IAGtE6gC,GAAuBH,GACvBI,GAAuBF,GACvBG,GAAe,SAAUC,UAClB,SAAUhhC,UACN9I,KAAK8D,IAAIgF,EAAGghC,KAGvBC,GAAe,SAAUD,UAClB,SAAUhhC,UACNA,EAAIA,MAAc,GAAKA,EAAIghC,KAGtCE,GAAyB,SAAUF,OAC/BG,EAAaF,GAAaD,UACvB,SAAUhhC,aACA,GAAK,EAAI,GAAMmhC,EAAWnhC,GAAK,MAAW9I,KAAK8D,IAAI,SAAc,OAMlFomC,MAAmC,GACnCC,MAAgCD,IAChCE,MAAkCF,IAClCG,GAAS,SAAUvhC,UACZ,EAAI9I,KAAKgC,IAAIhC,KAAKuI,KAAKO,KAE9BwhC,MAAgCD,IAChCE,MAAkCD,IAClCE,MAxC6B,OAyC7BC,MAAgCD,IAChCE,MAAkCF,IAClCG,MA3C6B,OAkD7BC,GAAY,SAAU9hC,OAClB6c,EAAK7c,EAAIA,SACNA,EARkB,mBAQW,OAAS6c,EAAK7c,EAPxB,kBAOsD,MAAQ6c,EAAK,IAAM7c,EAAI,IAAMA,EANpF,GACpB,mBAK0I6c,EAJ1I,kBAIoJ7c,EAHpJ,kBAG6J,KAAOA,EAAIA,EAAI,MAAQA,EAAI,OAc7L+hC,GAA6C,oBAAjBC,aAC5BzmB,GAAI,SAAUnhB,EAAIzD,UACX,EAAM,EAAMA,EAAK,EAAMyD,GAE9Buc,GAAI,SAAUvc,EAAIzD,UACX,EAAMA,EAAK,EAAMyD,GAExBohB,GAAI,SAAUphB,UACP,EAAMA,GAEb6nC,GAAW,SAAUnoC,EAAGM,EAAIzD,UACrB,EAAM4kB,GAAEnhB,EAAIzD,GAAMmD,EAAIA,EAAI,EAAM6c,GAAEvc,EAAIzD,GAAMmD,EAAI0hB,GAAEphB,IAEzD8nC,GAAa,SAAUpoC,EAAGM,EAAIzD,cACnByD,EAAIzD,GAAMmD,EAAI6c,GAAEvc,EAAIzD,IAAOmD,EAAI0hB,GAAEphB,IAAON,SChC1CqoC,wMDnBA,SAAUniC,UACZA,6IAwBI,SAAUA,UACd,EAAM8hC,GAAU,EAAM9hC,gBAEf,SAAUA,UACjBA,EAAI,GAAM,MAAa8hC,GAAU,EAAU,EAAJ9hC,IAAY,GAAM8hC,GAAc,EAAJ9hC,EAAU,GAAO,gBAwB/F,SAAqBoiC,EAAKC,EAAKC,EAAKC,OAC5BC,EAAeT,GAAqB,IAAIC,aAnBtB,IAmB0D,IAAI/Q,MAnB9D,IAsDlBwR,EAAW,SAAUC,WAIjBjW,EACAkW,EACAC,EALAC,EAAgB,EAChBC,EAAgB,EACHC,KAIVD,GAAgCN,EAAaM,IAAkBJ,IAAMI,KA5D3D,WA+DfA,OACWN,EAAaM,OAAgCA,EAAgB,GAAKN,EAAaM,OAE7Eb,KADHY,EAjEK,GAiEWpW,EACO2V,EAAKE,KAtEzB,KAsCQ,SAAUI,EAAIM,WACjCxpC,EAAI,EACJypC,EAAe,EAEZzpC,EA3CS,IA2CgBA,EAAG,IAEV,OADNyoC,GAASe,EAASZ,EAAKE,WAE3BU,MAEAd,GAAWc,EAASZ,EAAKE,GAAOI,GACrBO,SAEnBD,EAsBIE,CAAqBR,EAAIC,GACR,IAAjBC,EACAD,EAnDO,SAAUD,EAAIS,EAAIC,OAEhCC,EACAC,EAFA9pC,EAAI,QAKO0oC,KADAiB,KAAWA,GAAM,EACIf,EAAKE,GAAOI,GAC7B,IACNY,IAEAA,QAEJpsC,KAAKa,IAAIsrC,GAlCE,QAkCqC7pC,EAjChC,WAkClB8pC,EAwCIC,CAAgBb,EAAIG,EAAeA,EAxE7B,YAgDE,mBACVrpC,EAAI,EAAGA,EAlDE,KAkDyBA,IAC1BA,GAAK0oC,GAlDL,GAkDgB1oC,EAAwB4oC,EAAKE,MA0BnD,SAAUI,UAEjBN,IAAQC,GAAOC,IAAQC,EACTG,EACA,IAAPA,EACO,EACA,IAAPA,EACO,EAEAR,GAAWO,EAASC,GAAKL,EAAKE,gBCjGpD1sC,YAAY2tC,MACGvhB,OAAO+R,OAAOh+B,KAAMwtC,aAUnC3tC,YAAYk+B,MACE9R,OAAO+R,OAAOh+B,KAAM+9B,IA0CtC,MAAMsL,GAAa,IAAIjmC,EACjBqqC,GAAa,IAAIp/B,EACjBq/B,GAAY,IAAItiC,EAChBuiC,GAAc,IAAItnB,EAClBunB,GAAgB,IAAI7qB,EACpB8qB,GAAc,IAAI9qB,EAAM,EAAE,EAAE,oBAEiC+qB,GAE/DjuC,YACW0zB,EACPwa,EACAhQ,EACOiQ,EAAgCza,EAAO0a,kBAExClQ,uDAMI,aAkBE,IAAI1vB,aAsEwB,iBAKlC,kBAsBE,qBAeW,uBAmCG,IAAIy/B,kBAGlB,oBACG,uBAI0D,yBAoBP,iBAtMzDI,MAAMH,QACNI,gBAAkBnuC,KAAKouC,MAAMpuC,KAAKmuC,gBAAiBnuC,KAAK4R,QAMzD/R,MAAMwuC,EAA2BC,WACjB,IAATA,YACS,iBAATA,SAA0BA,QAC/BC,EAASF,EAAMA,EAAW3jC,KAAK4jC,GAASA,EAAaE,WACvDD,GAAU,WAAYA,EAAQ,OACxBE,EAAYF,EACZG,EAAaD,EAAUvoB,QAAQlmB,KAAKypC,QACtCgF,EAAUhrB,WACTsR,SAAS2Z,EAAW5uC,IACpBi1B,SAAS2Z,EAAW3uC,IACpBg1B,SAAS2Z,EAAW1oC,MACX4tB,qBAAqBxH,GAAOA,WAGvCmiB,EAIH1uC,SAASc,EAA0BC,eAC7B,IAAND,QAAyB,IAANC,IACnBD,IAAMC,IACO,iBAAND,EAAuBA,IAAMC,oBACrBijB,OAAOjjB,MAAM,IAOpCf,MAAMS,QACGquC,OAAS3uC,KAAKouC,MAAMpuC,KAAK2uC,OAAQruC,QACjCsuC,SAAW5uC,KAAKouC,MAAMpuC,KAAK4uC,SAAUtuC,QACrCuuC,QAAU7uC,KAAKouC,MAAMpuC,KAAK6uC,QAASvuC,QACnCwuC,MAAMrtC,OAAS,YAMdxB,QACD0uC,OAAS3uC,KAAKouC,MAAMpuC,KAAK2uC,OAAQ1uC,sBAG/BD,KAAK2uC,mBAOJ1uC,QACH2uC,SAAW5uC,KAAKouC,MAAMpuC,KAAK4uC,SAAU3uC,wBAGnCD,KAAK4uC,uBAOF3uC,QACL8uC,WAAa/uC,KAAKouC,MAAMpuC,KAAK+uC,WAAY9uC,0BAGvCD,KAAK+uC,sBAOL9uC,QACF67B,SAAU,OACV+S,QAAU7uC,KAAKouC,MAAMpuC,KAAK6uC,QAAS5uC,uBAGjCD,KAAK6uC,2BAsBP7uC,KAAK87B,eAAgB,KAEtB97B,KAAK8uC,MAAMrtC,OAAS,EAAG,OACjBqC,EAAI9D,KAAK8uC,MAAM9uC,KAAK8uC,MAAMrtC,OAAO,UACpB,IAAfqC,EAAEkrC,SAAuB,EACtBlrC,EAAEmrC,QAAUnrC,EAAEkrC,gBAGlB,2BAeAhvC,KAAKkvC,6BAEA7W,GACRr4B,KAAKkvC,eAAiB7W,SACrB6W,aAAe7W,wCAQd8W,GAAa,cAAKL,MAAM9uC,KAAK8uC,MAAMrtC,OAAO,aAAImQ,SAAU5R,KAAKiqB,kBACrC,IAAhBjqB,KAAK4R,OAAyBw9B,GAA0BD,EAAYnvC,KAAK4R,QAAU,gDAOhE,IAAnB5R,KAAK4yB,gBAAoD,IAAhB5yB,KAAK4R,OACxDw9B,GAA0BpvC,KAAK4yB,UAAW5yB,KAAK4R,QAAUqR,EAAAA,iEAOvD1Z,EAAIvJ,KAAKqvC,gBACTC,EAAgBtvC,KAAKguC,aACrBuB,EAAevvC,KAAKuzB,OAAO0a,oBAC/BuB,WAAa,SAAA,cAAKA,oBAAcF,WAAeE,cAAcD,EAAaC,aAC1ER,SAAW,SAAA,cAAKA,kBAAYM,WAAeN,YAAYO,EAAaP,WACpE7C,OAAS,SAAA,cAAKA,gBAAUmD,WAAenD,UAAUoD,EAAapD,SAC9D/c,UAAY,SAAA,cAAKA,mBAAakgB,WAAelgB,aAAamgB,EAAangB,YACvEqgB,MAAQ,SAAA,cAAKA,eAASH,WAAeG,SAASF,EAAaE,QAC3DC,SAAW,SAAA,cAAKA,kBAAYJ,WAAeI,YAAYH,EAAaG,WACpEC,QAAU,SAAA,cAAKA,iBAAWL,WAAeK,WAAWJ,EAAaI,UACjEC,MAAQ,SAAA,cAAKA,eAASN,WAAeM,SAASL,EAAaK,MACtDrmC,8BAYAvJ,KAAK6vC,oCAYR7vC,KAAKgwB,mBACA6f,gBAAkB7vC,KAAK8vC,aACvBA,QAAU9vC,KAAK+vC,kBAEjB/vC,KAAK8vC,QAGRjwC,oBAEAG,KAAKgwC,kBAAoB,mBAEvBjS,EAAS/9B,KAAKiwC,eACd7gB,EAAY2O,EAAO3O,UACnB3M,EAAQziB,KAAKuzB,OAAOuM,UAAY/B,EAAOyR,WACvCC,EAAQzvC,KAAKkwC,UAAYztB,EACzBitB,EAAW1vC,KAAKmwC,aAAe1tB,OAErBziB,KAAKowC,mBACKhhB,SAEL,gBAEhBpvB,KAAKqwC,eAAwBtS,EAAO0R,OAASC,GAAY3R,EAAO2R,UAAaD,GAAS1R,EAAO4R,eACvF,oBAGQ3vC,KAAKswC,4BACIlhB,EAMrB,WAHI,UASPvvB,4CACEigC,EAAa9/B,KAAKuzB,OAAOuM,UACzB/B,EAAS/9B,KAAKiwC,eACdnB,EAAQ9uC,KAAK8uC,MACbyB,EAASvwC,KAAKuwC,OACd9tB,EAAQqd,EAAY/B,EAAOyR,gBAI1BV,EAAMrtC,QAAUqtC,EAAM,GAAGG,SAAWH,EAAM,GAAGE,eAC3C/kB,MAAQ6kB,EAAM0B,QAAS5+B,YAG3BmmB,QAAU/3B,KAAKiqB,YACd8N,EAAU/3B,KAAK4uC,aACjB6B,EAAiBzwC,KAAKiqB,cAEjBzmB,EAAE,EAAGA,EAAIsrC,EAAMrtC,OAAQ+B,IAAK,OAC3ByqC,EAAaa,EAAMtrC,WACpBktC,wBAAwB3Y,EAAS0Y,EAAgBxC,EAAYxrB,KACjDwrB,EAAWr8B,QACvBq8B,EAAW2B,wBAKfO,cAAgB1tB,EAEb8tB,OACC,qBACA,eACIL,WAAaztB,OACbmQ,UAAY5yB,KAAK4R,iBAErB,iBACIghB,eAAY,OACZsd,UAAY,YAchB,kBACIA,UAAY,OACZC,aAAe,QACdlC,EAAyC,iBAArBjuC,KAAKgwC,YAC3BhwC,KAAKgwC,YAAc,IAAIW,KAChB/+B,OAAS,WAAWA,UAAU5R,KAAKouC,WAAM,EAAWpuC,KAAK4R,UACzDo9B,SAAW,WAAWA,YAAYjR,EAAOiR,WACzC7C,OAAS,WAAWA,UAAUpO,EAAOoO,SACrCyD,MAAQ,WAAWA,SAAS7R,EAAO6R,QACnCX,QAAU,WAAWA,WAAW,IACrCpf,KAAKoe,QACN+B,aAAc,OAGtBK,WAAY,EAGbxwC,wBAAwBk4B,EAA+B9N,EAA6BgkB,EAAoCxrB,SACtHngB,EAAQ2rC,EAAWe,SAAW,EAAIf,EAAW9B,OAAQjrC,KAAKC,IAAI8sC,EAAWgB,QAAUhB,EAAWe,SAAU,IAAO,EAC/Gp9B,EAASq8B,EAAWr8B,YACfq9B,SAAWxsB,EAEA,iBAAX7Q,MAKP,cAAeA,SACT5O,EAAI+0B,EACJr3B,EAAIupB,EACJjpB,EAAI4Q,EACJg/B,EAASnD,GAAW/iC,KAAK1J,GAAGsM,IAAI5M,GAAG8D,KAAK4nB,GAAO,EAAE9pB,QAClDssC,SAAW5rC,EAAEugB,IAAIqtB,WAItB,cAAeh/B,SACT5O,EAAI+0B,EACJr3B,EAAIupB,EACJjpB,EAAI4Q,EACJg/B,EAASvH,GAAW3+B,KAAK1J,GAAGsM,IAAI5M,GAAG8D,KAAKwnB,GAAM,EAAE1pB,QACjDssC,SAAW5rC,EAAEugB,IAAIqtB,WAItB,iBAAkBh/B,SACZ5O,EAAI+0B,EACJr3B,EAAIupB,EACJjpB,EAAI4Q,EACJg/B,EAASlD,GAAUhjC,KAAKhK,GAAG+pB,SAASwR,SAASj7B,GAAG6I,MAAM4iB,GAAY,EAAEnqB,QACrEssC,SAAW5rC,EAAEi5B,SAAS2U,GAAQvuC,oBAInC,YAAauP,SACP5O,EAAI+0B,EACJr3B,EAAIupB,EACJjpB,EAAI4Q,EACJg/B,EAAShD,GAAcljC,KAAK1J,GAAGsM,IAAI5M,GAAG8D,KAAKqpC,GAAa,EAAEvrC,QAC3DssC,SAAW5rC,EAAEugB,IAAIqtB,WAItB,WAAYh/B,EAAQ,OACd5O,EAAI+0B,EACJr3B,EAAIupB,EACJjpB,EAAI4Q,EACJi/B,EAAYlD,GAAYxsC,IAAIuJ,KAAK1J,EAAEG,KAAKmM,IAAI5M,EAAES,KAAKqD,KAAK4nB,GAAO,EAAE9pB,GACjEwuC,EAAYnD,GAAYvsC,IAAIsJ,KAAK1J,EAAEI,KAAKkM,IAAI5M,EAAEU,KAAKoD,KAAK4nB,GAAO,EAAE9pB,YACrEnB,IAAIoiB,IAAIstB,KACRzvC,IAAImiB,IAAIutB,aAQLlC,SAAW5rC,cAvDX4rC,SAAW7W,EAAoBlV,EAAejR,EAAUqY,EAAkB,EAAG,EAAE3nB,GA4DpFzC,MAAMc,EAAWC,EAAW+iC,SAC1B4G,EAAS5pC,EAAEgjC,GACX6G,EAAS5pC,EAAE+iC,KACfA,GAAO6G,IACP7G,GAAO4G,EAMb1qC,OAAOkxC,GAAM,OAEJ/wC,KAAKgwB,cAAgB+gB,YAErB/wC,KAAKgxC,SAAShxC,KAAKmuC,gBAAiBnuC,KAAK4R,eACrCi9B,QAAU7uC,KAAK6uC,aACf/S,SAAU,QAGdqS,gBAAkBnuC,KAAKouC,MAAMpuC,KAAKmuC,gBAAiBnuC,KAAK4R,SAExD5R,KAAK87B,qBAEJmV,EAAYjxC,KAAKixC,cAClBjxC,KAAKgwC,aAAeiB,YACVntC,KAAKmtC,KACRntC,EAAEg4B,SAAwB,eAAbh4B,EAAEysC,OAAyB,WAC7BlC,KAAM4C,EACT5C,EAAGre,cAAkC,IAAnBqe,EAAG2B,gBAA0BA,aAAc,cAO5EkB,6BACAlhB,aAAc,gBAITmhB,GACNnxC,KAAKoxC,iBAAiBA,WAAWC,OAAOrxC,WACvCoxC,WAAaD,aACX5tB,IAAIvjB,6BAGJA,KAAKoxC,qBC7fhBvxC,YAIW0zB,EAIAG,qDA6BU,IAAI4d,oBAuGH,IAAIxD,2BASV,sBAuCgC,kBAsCtC,IAAI7S,8BAKO,4BAKE,mBAKD,wBASE,oBAUJ,yBAsBO,4BAMI,IAAI7vB,uBACT,IAAIib,OAvRrBsK,QAAU3wB,KAAKuzB,OAAOgJ,WAAWv8B,KAAK0zB,YACrC8G,EAAMx6B,KAAK2wB,QAAQ6J,SAEpB+W,aAAe,IAAIC,GAAexxC,KAAKuzB,OAAQiH,EAAIU,sBAAkB,EAAWl7B,KAAKiuC,iBACrFwD,QAAU,IAAID,GAAexxC,KAAKuzB,OAAQiH,EAAIxB,mBAAe,EAAWh5B,KAAKiuC,iBAC7EyD,SAAW,IAAIF,GAAexxC,KAAKuzB,OAAQiH,EAAImX,aAAS,EAAW3xC,KAAKiuC,iBAExE2D,aAAe,IAAIJ,GAAexxC,KAAKuzB,OAAQiH,EAAIlI,iBAAa,EAAWtyB,KAAKiuC,iBAChF4D,kBAAoB,IAAIL,GAAexxC,KAAKuzB,OAAQiH,EAAIrB,sBAAkB,EAAWn5B,KAAKiuC,iBAC1F5a,aAAe,IAAIme,GAAexxC,KAAKuzB,OAAQiH,EAAI7G,iBAAa,EAAW3zB,KAAKiuC,iBAChFja,mBAAqB,IAAIwd,GAAexxC,KAAKuzB,OAAQiH,EAAIvG,uBAAmB,EAAWj0B,KAAKiuC,iBAE5F2D,aAAalC,SAAW,OACxBkC,aAAanC,MAAQ,OACrBoC,kBAAkBnC,SAAW,OAC7BmC,kBAAkBpC,MAAQ,OAC1Bpc,aAAaqc,SAAW,OACxBrc,aAAaoc,MAAQ,OACrBzb,mBAAmB0b,SAAW,OAC9B1b,mBAAmByb,MAAQ,OAE3B8B,aAAaN,UAClBjxC,KAAKyxC,QAAQR,UACbjxC,KAAK0xC,SAAST,UACV,IAAIa,IAKZjyC,cAAckyC,EAAuB7O,EAAwBC,mBACnD5P,EAASvzB,KAAKuzB,OACdye,EAAQze,EAAOmP,UACfuP,EAAO1e,EAAO0e,KACdC,EAAiB,YAAThP,GACU,UAAZC,GACY,SAAZA,GACY,YAAZA,GACY,UAAZA,EAAuB6O,EAAMlM,MAAQkM,EAAMjM,MACjDoM,EAAaD,IAASF,EAAMlM,MAAQ,IAAM,KAEzB,iBAAZiM,MAAgC,GAAKA,EAAUI,SACpDC,EAAWlP,EAAO,IAAMC,EAAU,MAAQ4O,KAC5C,cAAK9R,6BAAoBvC,IAAI0U,UAAkBpyC,KAAKigC,mBAAmBxM,IAAI2e,OAE1E7e,EAAO8e,wBAAwB3U,IAAIqU,GAAU,OAExCO,EADOL,EAAKM,MAAMR,EAAQS,QAAQ,IAAK,YAC3BC,YACXJ,wBAAwBtsC,IAAIgsC,EAASO,SAE1CI,EAAOnf,EAAO8e,wBAAwB5e,IAAIse,GAE1C5I,EAAY5V,EAAO8F,YAAYznB,OAC/B8pB,EAAQ17B,KAAK2wB,QAAQ/e,WACvB+gC,EACAC,EA2CA3yC,SA1CIijC,OACC,YACiBxH,EAAM/H,cACN+H,EAAMmX,sBAEvB,WACiBnX,EAAMzH,oBACNyH,EAAMoX,4BAEvB,SACiB3J,EAAUjV,eACViV,EAAUjF,iCAGtB,IAAI9jC,MAAM,yBAAyB8iC,KAAQC,SAGrD4O,EAAQgB,SAAS,KAAM,OACjBC,EAAqB,YAAT9P,EAAqBxH,EAAMsX,UACxC,WAAMC,mBAAmB9J,EAAUhF,eACpC+O,EAAU,SACN/P,OACC,WAAa,cAAgB,YAAc,UAClC8O,EAAKC,KAAKc,EAAUlzC,EAAI,IAAKqyC,aAEtC,aAAe,cAAgB,UAAY,UAClCF,EAAKC,KAAKc,EAAUjzC,EAAI,IAAKoyC,aAEtC,WAAa,cAAgB,YAAc,UAClCF,EAAKC,KAAKc,EAAUhtC,EAAI,IAAK,eAEtC,iBACkB,YAATk9B,EACN+O,EAAKC,KAAKc,EAAUvxC,SAAW,IAAK,KACpCwwC,EAAKC,KAAKhxC,KAAKY,KAAKkxC,EAAUlzC,GAAK,EAAIkzC,EAAUjzC,GAAK,GAAK,IAAK,0BAG9D,IAAIK,MAAM,4BAA4B8iC,KAAQC,6BAEtD+P,QAAUA,SAIZ/P,OACC,SAAgBwP,EAAgBxxC,IAAIrB,YACpC,YAAmB8yC,EAAgB9yC,YACnC,UAAiB6yC,EAAgBvxC,IAAItB,YACrC,WAAkB6yC,EAAgBxxC,IAAIpB,YACtC,YAAmB6yC,EAAgB7yC,YACnC,QAAe4yC,EAAgBvxC,IAAIrB,YACnC,UAAiB4yC,EAAgBvxC,IAAI4E,YACrC,YAAmB4sC,EAAgB5sC,YACnC,SAAgB2sC,EAAgBxxC,IAAI6E,YACpC,2BACY,MAGjBuoC,EAASmE,EAAKjI,SAASuH,SACL,iBAAXzD,MAA8B0D,EAAKkB,OAAO5E,EAAQ2D,OACpD3D,IAEH2E,aAAU,gBACXjT,uBAAoBl6B,IAAIqsC,EAAUnyC,GAEhCA,2BA0BAD,KAAK4xC,2CAQL5xC,KAAK6xC,2CAQL7xC,KAAKqzB,4CAQLrzB,KAAKg0B,8CAQah0B,KAAKozC,eAE1BvzC,4BACAwzC,EAAuCrzC,KAAK2wB,aACzC0iB,EAAcA,EAAY9a,eAAe,OACtCjF,EAAUtzB,KAAKuzB,OAAOC,aAAaC,IAAI4f,EAAY3f,SACrDJ,SAAgBA,SAEjB,8BAOAtzB,KAAKuxC,iCAQLvxC,KAAKyxC,6BAQLzxC,KAAK0xC,qCAqBL1xC,KAAKszC,6BAICjb,QACRib,YAActzC,KAAKuzC,mBACnBA,cAAgBlb,4BAGdr4B,KAAKuzC,oCAULvzC,KAAKwzC,UAIR3zC,0BACGqB,KAAKC,IACRnB,KAAK67B,YAAY4X,SACjBzzC,KAAKizB,OAAOwgB,SACZzzC,KAAK2xC,QAAQ8B,UAOrB5zC,qBACUw/B,EAAS,IAAIqU,GAAc1zC,kBAC5Bg/B,QAAQnP,KAAKwP,GACXA,+BAIAr/B,KAAK2zC,iBAWhB9zC,sCACU+zC,EAAW5zC,KAAK6zC,qBACjBD,KACAA,EAASE,kBACkB,IAA5BF,EAAS5U,QAAQv9B,WACjB,WAASg7B,uBAAcsX,mBAI/Bl0C,qBACSuzC,eAAiBpzC,KAAKg0C,6BACtBL,iBAAmB3zC,KAAKi0C,gCAIvBtjB,EAAU3wB,KAAK2wB,WACjBA,EAAQ6H,wBACHlG,YAAY1gB,OAAOlH,KAAKimB,EAAQ6H,iBAAiB5mB,OAAOsnB,kBACxDC,iBAAiBvnB,OAAOlH,KAAKimB,EAAQ6H,iBAAiB5mB,OAAO2gB,uBAC7DoB,YAAY/hB,OAAOlH,KAAKimB,EAAQ6H,iBAAiBxF,kBACjDW,YAAY/hB,OAAOtF,aAAaqkB,EAAQ/e,OAAOiiB,2BAC/CI,kBAAkBriB,OAAOlH,KAAKimB,EAAQ6H,iBAAiB5mB,OAAOsiB,oBAElE5B,YAAYrqB,cACZkxB,iBAAiBlxB,cACjB0rB,YAAY1rB,cACZgsB,kBAAkBhsB,SAEnBjI,KAAKk0C,SAAU,MAKVA,aACG/W,8BACAP,0BACArC,yBACF4Z,EAAWxjB,EAAQ6J,QACpBx6B,KAAKuzB,OAAO6gB,UAAUnsC,OAAOjI,MAAO,OAC/Bq0C,EAAoBr0C,KAAK67B,YAAYjqB,OACrCiqB,EAAcsY,EAASjZ,iBACzBmZ,EAAkBzqC,QAAQiyB,GAAe77B,KAAKuzB,OAAO+gB,uBAChDzY,YAAYjqB,OAASiqB,SAExB0Y,EAAev0C,KAAKizB,OAAOrhB,OAC3BqhB,EAASkhB,EAASnb,eACpBub,EAAapzC,IAAI0mB,WAAWoL,EAAO9xB,KAAOnB,KAAKuzB,OAAOqH,gBACtD2Z,EAAanzC,IAAIymB,WAAWoL,EAAO7xB,KAAOpB,KAAKuzB,OAAOqH,uBACjD3H,OAAOrhB,OAASqhB,WAIrBkK,8BACAP,0BACArC,wBACHhH,OAAO6gB,UAAUnsC,OAAOjI,WAG5B2xC,QAAQ1pC,cACR4zB,YAAY5zB,cACZgrB,OAAOhrB,cACPurC,UAAYxzC,KAAKw0C,qBAEdja,wBACHhH,OAAOuH,SAASkF,MAAMrP,EAASA,EAAQoH,WACpCwC,iCACHka,sCCzXN50C,0BAEc,IAAI+wB,yBAEH,2CAsBM,4CAsBF,oBAWA,mBAWD,eA6BL,IAAIxtB,eAyBF,IAAIA,WAyFR,IAAIiL,0BACW,IAAI6B,yBACL,IAAI7B,EAAQ,EAAE,oBACvB,IAAIgY,EAAK,IAAIhY,YAAmB,IAAIA,EAAQ,EAAE,EAAE,4CAwBtBrO,KAAK6wB,OAAOZ,SAAQ,WACvDja,EAAOhW,KAAKq1B,WACZpf,EAAMjW,KAAKs1B,UACX1f,EAAOI,EAAO9U,KAAKue,IAAIzf,KAAK00C,YAAcpL,GAC1CzzB,EAAQG,EAAO9U,KAAKue,IAAIzf,KAAK20C,aAAerL,GAC5CxzB,EAAME,EAAO9U,KAAKue,IAAIzf,KAAK40C,WAAatL,GACxCvzB,EAASC,EAAO9U,KAAKue,IAAIzf,KAAK60C,cAAgBvL,UAC7CtpC,KAAK80C,aAAaC,gBACrBn/B,EAAMC,EACNC,EAAKC,EACLC,EAAMC,wBAGS,IAAI/F,aAcX,IAAI4T,aACJ,IAAIA,oBACG,IAAI1gB,2BAtQhBpD,KAAKg1C,6BAEA3c,GACRA,IAAQr4B,KAAKg1C,oBACRA,aAAe3c,OACfxH,OAAOsH,2CAMTn4B,KAAKi1C,+BAEC5c,GACTA,IAAQr4B,KAAKi1C,qBACRA,cAAgB5c,OAChBxH,OAAOsH,4CAMTn4B,KAAKk1C,iCAEE7c,GACVA,IAAQr4B,KAAKk1C,sBACRA,eAAiB7c,OACjBxH,OAAOsH,yCAMTn4B,KAAKm1C,2BAED9c,GACPA,IAAQr4B,KAAKm1C,mBACRA,YAAc9c,OACdxH,OAAOsH,yCAMTn4B,KAAKo1C,2BAED/c,GACPA,IAAQr4B,KAAKo1C,mBACRA,YAAc/c,OACdxH,OAAOsH,wCAMTn4B,KAAKq1C,yBAEFhd,GACNA,IAAQr4B,KAAKq1C,kBACRA,WAAahd,OACbxH,OAAOsH,+CA0BXsR,MAAM1jC,IACP/F,KAAK20C,aAAe30C,KAAK00C,YACzB10C,KAAK40C,WAAa50C,KAAK60C,eAEpB70C,KAAKypC,kCAQNjoB,EAAOxhB,KAAKs1C,mBAEXp0C,KAAKuI,KACRvI,KAAK+B,IAAKue,EAAK1hB,EAAIwpC,GACnBpoC,KAAK+B,IAAKue,EAAKzhB,EAAIupC,IACnBlH,4BAQE5gB,EAAOxhB,KAAKs1C,mBACXt1C,KAAKslB,QAAQvf,IAChB/F,KAAK00C,YAAgBlzB,EAAK1hB,EAAI,EAC9BE,KAAK60C,cAAkBrzB,EAAKzhB,EAAI,6BAa9B+U,EAAW9U,KAAKu1C,qBACfr0C,KAAKuI,KACRvI,KAAK+B,IAAK6R,EAAShV,EAAIwpC,GACvBpoC,KAAK+B,IAAK6R,EAAS/U,EAAIupC,IACvBlH,8BAIGlhC,KAAKuI,KACRvI,KAAK+B,IAAKjD,KAAK00C,YAAcpL,GAC7BpoC,KAAK+B,IAAKjD,KAAK40C,WAAatL,IAC5BlH,+BAIGlhC,KAAKuI,KACRvI,KAAK+B,IAAKjD,KAAK20C,aAAerL,GAC9BpoC,KAAK+B,IAAKjD,KAAK40C,WAAatL,IAC5BlH,iCAIGlhC,KAAKuI,KACRvI,KAAK+B,IAAKjD,KAAK00C,YAAcpL,GAC7BpoC,KAAK+B,IAAKjD,KAAK60C,cAAgBvL,IAC/BlH,kCAIGlhC,KAAKuI,KACRvI,KAAK+B,IAAKjD,KAAK20C,aAAerL,GAC9BpoC,KAAK+B,IAAKjD,KAAK60C,cAAgBvL,IAC/BlH,kCAIEoT,EAAWt0C,KAAKC,IAAID,KAAKE,IAAI,EAAGpB,KAAK00C,aAAc10C,KAAK20C,cACxDc,EAAWv0C,KAAKC,IAAID,KAAKE,IAAI,EAAGpB,KAAK60C,eAAgB70C,KAAK40C,mBACzD1zC,KAAKuI,KACRvI,KAAK+B,IAAKuyC,EAAWlM,GACrBpoC,KAAK+B,IAAKwyC,EAAWnM,IACrBlH,oCAIGlhC,KAAKE,IACRpB,KAAK01C,eACL11C,KAAK21C,gBACL31C,KAAK41C,kBACL51C,KAAK61C,uCAQF71C,KAAKs1B,UAAYt1B,KAAKq1B,iCAQtBr1B,KAAKq1B,WAAcr1B,KAAK81C,MAAQ,0BAMjC9/B,EAAOhW,KAAKq1B,WACZzf,EAAOI,EAAO9U,KAAKue,IAAIzf,KAAK00C,YAAcpL,GAC1CzzB,EAAQG,EAAO9U,KAAKue,IAAIzf,KAAK20C,aAAerL,UACtCtzB,EAAO9U,KAAKue,IAAIzf,KAAK40C,WAAatL,GAC/BtzB,EAAO9U,KAAKue,IAAIzf,KAAK60C,cAAgBvL,OACnB1zB,GAQrC/V,mCAAmC2M,EAA2B4oB,EAAep1B,KAAK+1C,gBACxE9gB,EAAoBj1B,KAAKk1B,mBAAmBxqB,KAAK8B,GAAkBie,SACnEnqB,EAAIN,KAAKwQ,IACTwlC,EAAUh2C,KAAKi2C,kBACfvB,EAAgBxzC,KAAK25B,KAAKzF,EAAUj0B,IAAIrB,GAAKQ,EAAEyF,IAAIqvB,EAAUj0B,IAAIrB,EAAE,MAAMwM,aAAa2oB,GAAmBrrB,QAAQosC,GAAW5T,EAC5HuS,EAAgBzzC,KAAK25B,KAAKzF,EAAUh0B,IAAItB,GAAKQ,EAAEyF,IAAIqvB,EAAUh0B,IAAItB,EAAE,MAAMwM,aAAa2oB,GAAmBrrB,QAAQosC,GAAW5T,EAC5HwS,EAAgB1zC,KAAK25B,KAAKzF,EAAUh0B,IAAIrB,GAAKO,EAAEyF,IAAI,EAAEqvB,EAAUh0B,IAAIrB,MAAMuM,aAAa2oB,GAAmBrrB,QAAQosC,GAAW5T,EAC5HyS,EAAgB3zC,KAAK25B,KAAKzF,EAAUj0B,IAAIpB,GAAKO,EAAEyF,IAAI,EAAEqvB,EAAUj0B,IAAIpB,MAAMuM,aAAa2oB,GAAmBrrB,QAAQosC,GAAW5T,EAC5H/M,GAAc/0B,EAAEyF,IAAI,EAAE,EAAEqvB,EAAUj0B,IAAI6E,GAAGsG,aAAa2oB,GAAmBjvB,EACzEsvB,GAAah1B,EAAEyF,IAAI,EAAE,EAAEqvB,EAAUh0B,IAAI4E,GAAGsG,aAAa2oB,GAAmBjvB,cACzE0uC,YAAcA,OACdC,aAAeA,OACfC,WAAaA,OACbC,cAAgBA,OAChBxf,WAAaA,OACbC,UAAYA,EACVt1B,8CAIAA,KAAKk2C,qCAiBhBr2C,eAAegI,QACN0vB,MAAMp2B,IAAIrB,EAAIE,KAAK00C,iBACnBnd,MAAMn2B,IAAItB,EAAIE,KAAK20C,kBACnBpd,MAAMp2B,IAAIpB,EAAIC,KAAK60C,mBACnBtd,MAAMn2B,IAAIrB,EAAIC,KAAK40C,gBACnBpd,MAAMr2B,IAAIrB,EAAI+H,EAAE6sC,iBAChBld,MAAMp2B,IAAItB,EAAI+H,EAAE8sC,kBAChBnd,MAAMr2B,IAAIpB,EAAI8H,EAAEgtC,mBAChBrd,MAAMp2B,IAAIrB,EAAI8H,EAAE+sC,kBACR50C,KAAKu3B,MAAMU,UAAUj4B,KAAKw3B,OAAOtR,QAAQlmB,KAAKm2C,cAC/C10C,SAAWzB,KAAKs1C,YAAY7zC,UC7QzC,IAAI20C,GAAiB,CAG1B7nC,QAAS,MAET4H,OAAQ,SAERg9B,OAAQ,SAERkD,UAAW,GAKXC,aAAa,EAGbC,WAAY,MCJP,YAAkBz2C,SACH,iBAANA,EAET,YAAqBA,UACnBA,IAA6C,IAAxCA,EAAEO,YAAYgD,UAAUmzC,cAAwB,EAEvD,YAAmB12C,UACjBA,GAAkB,iBAANA,IAAyD,IAAvCmsB,OAAOwqB,eAAe32C,GAAG42C,YAAsB,EAE/E,YAAoB52C,UAClBA,GAAkB,iBAANA,IAA0D,IAAxCmsB,OAAOwqB,eAAe32C,GAAG62C,aAAuB,EAEhF,YAAgB72C,UACdA,IAAwC,IAAnCA,EAAEO,YAAYgD,UAAUuzC,SAAmB,EAElD,YAAkB92C,SACH,iBAANA,EAET,IAAI+2C,GAAU5b,MAAM4b,QACpB,YAAkB/2C,UAChBA,IAA0C,IAArCA,EAAEO,YAAYgD,UAAUyzC,WAAqB,EAQpD,YAAsBh3C,UACpBm7B,MAAM4b,QAAQ/2C,IAAMg3C,GAASh3C,GAE/B,YAAuBA,UACrBA,GAAKA,EAAEi3C,gBAAsD,IAArCj3C,EAAEO,YAAYgD,UAAUyzC,WAAqB,EAEvE,YAAwBh3C,UACtBA,GAAKA,EAAEk3C,iBAAuD,IAArCl3C,EAAEO,YAAYgD,UAAUyzC,WAAqB,EAExE,YAAiBh3C,UACfA,IAAyC,IAApCA,EAAEO,YAAYgD,UAAU4zC,UAAoB,EAEnD,YAAiBn3C,UACfA,IAAyC,IAApCA,EAAEO,YAAYgD,UAAU6zC,UAAoB,EAEnD,YAAmBp3C,SACJ,kBAANA,EAET,YAAqBA,UACnBA,IAA6C,IAAxCA,EAAEO,YAAYgD,UAAU8zC,cAAwB,EAEvD,YAAgBr3C,UACdA,IAAwC,IAAnCA,EAAEO,YAAYgD,UAAU+zC,SAAmB,EAElD,YAAoBt3C,SACL,mBAANA,EAET,YAAgBA,UACdA,aAAau3C,KAEf,YAAkBv3C,UAChBA,aAAaw3C,OAEf,YAAkBx3C,eACK,iBAANA,GAAkBA,EAAEO,cAAgB4rB,QAAWyqB,GAAU52C,IAAO62C,GAAW72C,IAE5F,YAAgBA,UACR,OAANA,EAEF,YAAqBA,eACb,IAANA,EAEF,YAAwBA,UACtBA,IAA0B,IAArBA,EAAEy3C,iBAA8D,IAAnCz3C,EAAEO,YAAYgD,UAAUm0C,SAAmB,EAE/E,YAAqB13C,UACnBA,IAAuB,IAAlBA,EAAE23C,cAA2D,IAAnC33C,EAAEO,YAAYgD,UAAUm0C,SAAmB,EAE5E,YAA0B13C,UACxBA,IAA4B,IAAvBA,EAAE43C,mBAAgE,IAAnC53C,EAAEO,YAAYgD,UAAUm0C,SAAmB,EAEjF,YAAqB13C,UACnBA,IAAuB,IAAlBA,EAAE63C,cAA2D,IAAnC73C,EAAEO,YAAYgD,UAAUm0C,SAAmB,EAE5E,YAA2B13C,UACzBA,IAA6B,IAAxBA,EAAE83C,oBAAiE,IAAnC93C,EAAEO,YAAYgD,UAAUm0C,SAAmB,EAElF,YAAwB13C,UACtBA,IAA0B,IAArBA,EAAE+3C,iBAA8D,IAAnC/3C,EAAEO,YAAYgD,UAAUm0C,SAAmB,EAE/E,YAAkC13C,UAChCA,IAAoC,IAA/BA,EAAEg4C,2BAAwE,IAAnCh4C,EAAEO,YAAYgD,UAAUm0C,SAAmB,EAEzF,YAAwB13C,UACtBA,IAA0B,IAArBA,EAAEi4C,iBAA8D,IAAnCj4C,EAAEO,YAAYgD,UAAUm0C,SAAmB,EAE/E,YAAqB13C,UACnBA,IAAuB,IAAlBA,EAAEk4C,cAA2D,IAAnCl4C,EAAEO,YAAYgD,UAAUm0C,SAAmB,EAE5E,YAAgB13C,UACdA,IAAkB,IAAbA,EAAE03C,SAAsD,IAAnC13C,EAAEO,YAAYgD,UAAUm0C,SAAmB,EAEvE,YAAsB13C,UACpBA,IAAwB,IAAnBA,EAAEm4C,eAA4D,IAAnCn4C,EAAEO,YAAYgD,UAAUm0C,SAAmB,EAE7E,YAAwB13C,UACtBA,IAA0B,IAArBA,EAAEo4C,iBAA8D,IAAnCp4C,EAAEO,YAAYgD,UAAUm0C,SAAmB,EAE/E,YAA2B13C,UACzBA,IAA6B,IAAxBA,EAAEq4C,oBAAiE,IAAnCr4C,EAAEO,YAAYgD,UAAUm0C,SAAmB,EAElF,YAAqB13C,UACnBA,IAAuB,IAAlBA,EAAEs4C,cAA2D,IAAnCt4C,EAAEO,YAAYgD,UAAUm0C,SAAmB,EAE5E,YAAsB13C,UACpBA,IAAwB,IAAnBA,EAAEu4C,eAA4D,IAAnCv4C,EAAEO,YAAYgD,UAAUm0C,SAAmB,EAE7E,YAAiB13C,UACfA,IAAyC,IAApCA,EAAEO,YAAYgD,UAAUi1C,UAAoB,EAEnD,YAAgBx4C,OACjBgE,SAAWhE,QAEL,WAANgE,EAEQ,OAANhE,EAAmB,OACnBm7B,MAAM4b,QAAQ/2C,GAAW,QACzBA,aAAau3C,KAAa,OAC1Bv3C,aAAaw3C,OAAe,SAE5Bd,GAAY12C,GAAW,YACvB42C,GAAU52C,GAAW,UACrB62C,GAAW72C,GAAW,WACtBg3C,GAASh3C,GAAW,SACpB82C,GAAO92C,GAAW,OAClBo3C,GAAQp3C,GAAW,QACnBm3C,GAAQn3C,GAAW,QACnBq3C,GAAYr3C,GAAW,YACvB03C,GAAO13C,GAAWA,EAAEojC,KACpBoV,GAAQx4C,GAAW,QACnBs3C,GAAOt3C,GAAW,OACf,SAGC,aAANgE,EAAyB,WACtBA,EC/IF,YAAehE,OAChBojC,SAAcpjC,KAEL,WAATojC,GAA8B,WAATA,GAA8B,YAATA,GAA1CA,MAAgEpjC,SAC3DA,KAIc,mBAAZA,EAAE0uC,aACJ1uC,EAAE0uC,WAIPvT,MAAM4b,QAAQ/2C,UACTA,EAAEy4C,KAAI,SAAUt4C,UACduuC,GAAMvuC,SAIbH,aAAau3C,YAAa,IAAIA,KAAKv3C,EAAE04C,cACrChC,GAAY12C,UAAWA,KAEvBA,aAAaw3C,aAAc,IAAImB,UAAU,gBAAkB34C,UAGxD44C,GAAU54C,EAAG0uC,IASf,YAAmBjqB,EAAQpZ,OAC5BwtC,EAAQ,WAEHhV,KAAOpf,EACVq0B,GAAer0B,EAAQof,OACnBA,GAAOx4B,EAASoZ,EAAOof,YAI1BgV,EASF,YAAgBh4C,EAAGC,WACfi4C,KAAQj4C,EACXg4C,GAAeh4C,EAAGi4C,OAClBA,GAAQj4C,EAAEi4C,WAITl4C,EASF,YAAoBA,EAAGC,MAExBq6B,MAAM4b,QAAQj2C,SACV,IAAI63C,UAAU,kDAGbI,KAAQj4C,KAGXg4C,GAAeh4C,EAAGi4C,WAAmB5sB,OAAO5oB,mBAAwBy1C,SAASz1C,cAC3EzC,EAAEi4C,IAASj4C,EAAEi4C,GAAMx4C,cAAgB4rB,YACrB,IAAZtrB,EAAEk4C,OACFA,GAAQ,IAGRl4C,EAAEk4C,IAASl4C,EAAEk4C,GAAMx4C,cAAgB4rB,UAC1BtrB,EAAEk4C,GAAOj4C,EAAEi4C,MAEpBA,GAAQj4C,EAAEi4C,WAEL5d,MAAM4b,QAAQj2C,EAAEi4C,UACnB,IAAIJ,UAAU,4CAElBI,GAAQj4C,EAAEi4C,UAKXl4C,EAUF,YAAyBA,EAAGC,OAC7Bi4C,EAAMr1C,EAAGmE,KAETszB,MAAM4b,QAAQl2C,GAAI,KACfs6B,MAAM4b,QAAQj2C,UACV,KAGLD,EAAEc,SAAWb,EAAEa,cACV,MAGJ+B,EAAI,EAAGmE,EAAMhH,EAAEc,OAAQ+B,EAAImE,EAAKnE,QAC9Bu1C,GAAgBp4C,EAAE6C,GAAI5C,EAAE4C,WACpB,SAIJ,KACe,mBAAN7C,SACTA,IAAMC,KACJD,aAAasrB,OAAQ,IAC1BgP,MAAM4b,QAAQj2C,mBAAqBqrB,eAC9B,MAGJ4sB,KAAQl4C,YAEGC,KAAOm4C,GAAgBp4C,EAAEk4C,GAAOj4C,EAAEi4C,WACvC,MAINA,KAAQj4C,YAEGD,KAAOo4C,GAAgBp4C,EAAEk4C,GAAOj4C,EAAEi4C,WACvC,SAIJ,SAEAl4C,IAAMC,EASV,YAAqBo4C,OACtBC,EAAkB,aAETD,EAAcC,GAEpBA,EAGT,YAAsBD,EAAcC,WACzBJ,KAAQG,KACXJ,GAAeI,EAAcH,GAAO,KAClC54C,EAAQ+4C,EAAaH,GAEJ,iBAAV54C,GAAgC,OAAVA,KAClBA,EAAOg5C,KAEJJ,GAAQ54C,GAkCzB,YAAcskB,EAAQs0B,EAAMK,OAG7BC,EAFAC,GAAiB,SAIdC,eAAe90B,EAAQs0B,EAAM,CAClCplB,IAAK,kBACC2lB,MACOF,OACQ,GAGZC,GAETpzC,IAAK,SAAa9F,KACPA,KACQ,GAEnBq5C,cAAc,EACdC,YAAY,IAsCT,YAAwBh1B,EAAQi1B,UAC9Bj1B,GAAU0H,OAAO2sB,eAAea,KAAKl1B,EAAQi1B,GA8H/C,YAAgBj1B,UACd0H,OAAOytB,KAAKn1B,GAAQg0B,QAAWh0B,EAAOof,KCnZxC,IAAIgW,GAAiB,CAAC,SAAU,SAE5BC,GAAiB,CAAC,SAAU,YAAa,YAE7C,YAAuB7b,EAAQ8b,cA2CnBrM,MACXA,EAAS,KACPsM,EAAOpB,GAAU3a,EAAQyQ,OAEdhB,EAAS,SAAUmM,OACnBnM,EAAS,SAAUoM,OAEvB7b,EAAQyP,OACfuM,EAAOrB,GAAU3a,EAAQyQ,IACzBwL,EAAUtB,GAAUlL,EAASgB,aAE5B,SAAUuL,EAAMD,EAAME,GACpBD,SAEArB,GAAU3a,EAAQyQ,aAKrBmL,eAAiBA,KACjBC,eAAiBA,UAElBF,KAAKtD,IAAgB6D,oBACnBZ,eAAehb,EAASsF,EAAK,CAClClQ,IAAK,IAAMsK,EAAO4F,GAClB4V,YAAY,EACZD,cAAc,OAGXjb,EAoBT,YAAwBmP,EAASpsB,EAAM84B,GAXvC,IAAkBz3C,EAAO03C,OAYD,IAAlB3M,EAAQpsB,KAZI3e,EAY6By3C,EAZtBC,EAY8B3M,EAAQpsB,QAXtD3e,EAAM6lC,QAAQ6R,aAaX35C,KAAK,2BAA6BgtC,EAAQpsB,GAAQ,+BAAiCA,EAAO,yBAAgC84B,EAAO3B,QAAa6B,KAAKC,UAAUp6C,KAAQq6C,KAAK,MAAQ,kSC/EtL,+BAGG,sBAIA,iCAyCHC,EAAS,CACX,CAAEC,KAAM,SAAaC,KAAM,SAAU36C,SAAyB,iBAANA,IACxD,CAAE06C,KAAM,SAAaC,KAAM,SAAU36C,SAAyB,iBAANA,IACxD,CAAE06C,KAAM,UAAaC,KAAM,SAAU36C,SAAyB,kBAANA,IACxD,CAAE06C,KAAM,WAAaC,KAAM,SAAU36C,SAAyB,mBAANA,IACxD,CAAE06C,KAAM,QAAaC,KAAMxf,MAAM4b,SACjC,CAAE2D,KAAM,OAAaC,KAAM,SAAU36C,UAAYA,aAAau3C,OAC9D,CAAEmD,KAAM,SAAaC,KAAM,SAAU36C,UAAYA,aAAaw3C,SAC9D,CAAEkD,KAAM,SAAaC,KAAM,SAAU36C,SACf,iBAANA,GAAwB,OAANA,GAAcA,EAAEO,cAAgB4rB,SAElE,CAAEuuB,KAAM,OAAaC,KAAM,SAAU36C,UAAkB,OAANA,IACjD,CAAE06C,KAAM,YAAaC,KAAM,SAAU36C,eAAkB,IAANA,KAG/C46C,EAAU,CACZF,KAAM,MACNC,KAAME,GAIJC,EAAU,GAGVC,EAAe,GAGfC,EAAQ,CACVC,MAAOR,EACPS,YAAaH,EACbI,OAAQL,cASeM,OACnBC,EAAQC,EAAYN,EAAMC,OAAO,SAAUM,UACtCA,EAAMb,OAASU,QAGpBC,SACKA,KAGQ,QAAbD,SACKR,MAGLY,EAAOF,EAAYN,EAAMC,OAAO,SAAUM,UACrCA,EAAMb,KAAK74B,gBAAkBu5B,EAASv5B,uBAGzC,IAAI82B,UAAU,iBAAmByC,EAAW,OACrC,mBAAqBI,EAAKd,KAAO,KAAQ,gBAQjCtX,UACjBA,IAASwX,EACJ,IAGFI,EAAMC,MAAMzS,QAAQpF,cASPjjC,OAChBk7C,EAAQC,EAAYN,EAAMC,OAAO,SAAUM,UACtCA,EAAMZ,KAAKx6C,SAGhBk7C,SACKA,EAAMX,WAGT,IAAI/B,UAAU,kCAAoCx4C,cAkB3Cs7C,EAAIC,OACZD,EAAGE,iBACA,IAAIhD,UAAU,qCAIlBxpB,KACqB,iBAAdusB,EAAwB,GAC3BA,EAAUE,MAAM,aACbl4C,EAAI,EAAGA,EAAIyrB,EAAIxtB,OAAQ+B,MAC1BA,GAAKyrB,EAAIzrB,GAAGm4C,gBAGX1gB,MAAM4b,QAAQ2E,SAIf,IAAI/C,UAAU,uDAHd+C,MAMJI,EAAM3sB,EAAIqrB,KAAK,KAGfuB,EAAQN,EAAGE,WAAWG,MACtBC,SACKA,QAKH,IAAIpD,UAAU,sCAAyC+B,MAAQ,WAAa,IAAMvrB,EAAIqrB,KAAK,MAAQ,iBAQzFr6C,EAAOijC,OACnBoL,EAAOwN,EAAa77C,MAGpBijC,IAASoL,SACJruC,UAGAuD,EAAI,EAAGA,EAAIs3C,EAAME,YAAYv5C,OAAQ+B,IAAK,KAC7Cu4C,EAAajB,EAAME,YAAYx3C,MAC/Bu4C,EAAWzN,OAASA,GAAQyN,EAAW1N,KAAOnL,SACzC6Y,EAAWC,QAAQ/7C,SAIxB,IAAIG,MAAM,uBAAyBkuC,EAAO,OAASpL,cAQjC+Y,UACjBA,EACF1D,KAAI,SAAU2D,OACTC,EAAYD,EAAMnB,MAAMxC,IAAI6D,YAElBC,UAAY,MAAQ,IAAMF,EAAU7B,KAAK,QAExDA,KAAK,gBASS4B,EAAOlB,OACtBqB,EAAqC,IAAzBH,EAAM5T,QAAQ,OAO1B6T,GANUE,EAEPH,EAAMz6C,OAAS,EACZy6C,EAAM75B,MAAM,GACZ,MAHJ65B,GAKgBR,MAAM,KAAKnD,IAAIoD,GAChCW,OAAOC,GACPD,OAAOE,GAERC,EAAsBC,EAAkB1B,EAAamB,GAErDQ,EAAaR,EAAU5D,KAAI,SAAU2C,OACnChY,EAAO0Z,EAAe1B,SAEnB,CACLV,KAAMU,EACN2B,UAAWC,EAAc5Z,GACzBuX,KAAMvX,EAAKuX,KACXsB,WAAY,KACZgB,uBAIAC,EAAmBP,EAAoBlE,KAAI,SAAUwD,OACnD7Y,EAAO0Z,EAAeb,EAAWzN,YAE9B,CACLkM,KAAMuB,EAAWzN,KACjBuO,UAAWC,EAAc5Z,GACzBuX,KAAMvX,EAAKuX,KACXsB,WAAAA,EACAgB,gBAAiB/B,EAAY1S,QAAQyT,aAIlC,CACLhB,MAAO4B,EAAWM,OAAOD,GACzBX,UAAAA,cAYqBb,EAAWD,EAAIP,OAClCiB,EAAS,SAEY,KAArBT,EAAUG,WACHH,EACJE,MAAM,KACNnD,IAAIoD,GACJpD,KAAI,SAAU2D,EAAO/7C,EAAOsC,OACvBy6C,EAAcC,EAAWjB,EAAOlB,MAEhCkC,EAAYb,WAAcl8C,IAAUsC,EAAMhB,OAAS,QAC/C,IAAI27C,YAAY,8BAAgClB,EAAQ,iDAIzDgB,MAIXjB,EAAOoB,KAAKC,GAGP,KAGF,CACLrB,OAAAA,EACAV,GAAAA,cASkBU,OAChBC,EAAQqB,EAAKtB,WACVC,GAAQA,EAAMG,qBASCH,UACfA,EAAMnB,MAAMsC,MAAK,SAAUna,UACN,MAAnBA,EAAK6Y,yBAUKG,MACdA,GAAgC,IAAvBA,EAAMnB,MAAMt5C,WAIM,IAAvBy6C,EAAMnB,MAAMt5C,cACZm7C,EAAeV,EAAMnB,MAAM,GAAGP,MAAMC,QAEb,IAAvByB,EAAMnB,MAAMt5C,OAAc,KAC7B+7C,EAAQZ,EAAeV,EAAMnB,MAAM,GAAGP,MAAMC,KAC5CgD,EAAQb,EAAeV,EAAMnB,MAAM,GAAGP,MAAMC,YACzC,SAAY36C,UACV09C,EAAM19C,IAAM29C,EAAM39C,QAIvB49C,EAAQxB,EAAMnB,MAAMxC,KAAI,SAAUrV,UAC7B0Z,EAAe1Z,EAAKsX,MAAMC,eAE5B,SAAY36C,WACR0D,EAAI,EAAGA,EAAIk6C,EAAMj8C,OAAQ+B,OAC5Bk6C,EAAMl6C,GAAG1D,UACJ,SAGJ,UAtBF66C,aAgCWsB,OAChByB,EAAOF,EAAOC,KAEdE,EAAa1B,GAAS,KAGpB2B,KADIC,EAAQ5B,GAAQ1D,IAAIuF,IACPr8C,OACjBs8C,EAAWD,EAAYP,EAAKtB,IAC5B+B,EAAgB,SAAUC,WACnBz6C,EAAIo6C,EAAUp6C,EAAIy6C,EAAKx8C,OAAQ+B,QACjCu6C,EAASE,EAAKz6C,WACV,SAGJ,UAGF,SAAkBy6C,WACdz6C,EAAI,EAAGA,EAAIk6C,EAAMj8C,OAAQ+B,QAC3Bk6C,EAAMl6C,GAAGy6C,EAAKz6C,WACV,SAGJw6C,EAAcC,IAAUA,EAAKx8C,QAAUm8C,EAAW,UAKrC,IAAlB3B,EAAOx6C,OACF,SAAkBw8C,UACA,IAAhBA,EAAKx8C,QAGW,IAAlBw6C,EAAOx6C,UACNq8C,EAAY7B,EAAO,IACpB,SAAkBgC,UAChBT,EAAMS,EAAK,KAAuB,IAAhBA,EAAKx8C,SAGP,IAAlBw6C,EAAOx6C,UACNq8C,EAAY7B,EAAO,MACnB6B,EAAY7B,EAAO,IACpB,SAAkBgC,UAChBT,EAAMS,EAAK,KAAOR,EAAMQ,EAAK,KAAuB,IAAhBA,EAAKx8C,YAI1Cw6C,EAAO1D,IAAIuF,GACZ,SAAkBG,WACdz6C,EAAI,EAAGA,EAAIk6C,EAAMj8C,OAAQ+B,QAC3Bk6C,EAAMl6C,GAAGy6C,EAAKz6C,WACV,SAGJy6C,EAAKx8C,SAAWi8C,EAAMj8C,oBAcZ+5C,EAAWr7C,UAC3BA,EAAQq7C,EAAUS,OAAOx6C,OAC1B+5C,EAAUS,OAAO97C,GACjBw9C,EAAanC,EAAUS,QACnBsB,EAAK/B,EAAUS,QACf,gBAUmBT,EAAWr7C,EAAO+9C,OAC3ChC,EAAQiC,EAAgB3C,EAAWr7C,UAC3B+7C,EACNgC,EACQhC,EAAMnB,MAAMuB,OAAO8B,GACnBlC,EAAMnB,MACd,IAEOxC,IAAI6D,cAQElZ,UACZA,EAAKsX,gBAQOtX,UACQ,OAApBA,EAAK6Y,iBAA2C,IAApB7Y,EAAK6Y,sBAUbN,EAAYt7C,OACnCg8C,EAAYkC,EAAKC,EAAQ7C,GAAY,SAAUD,UAC1C+C,EAAqB/C,EAAWr7C,GAAO,kBAGxCg8C,EAAU7T,QAAQ,OAAiB,CAAC,OAAS6T,aAWlC/6B,EAAM68B,EAAMxC,OAC3B+C,EAAKC,EAKLt+C,EAJAu+C,EAAQt9B,GAAQ,UAGhBu9B,EAAqBlD,MAEpBt7C,EAAQ,EAAGA,EAAQ89C,EAAKx8C,OAAQtB,IAAS,KACxCy+C,EAAmBD,EAAmBrC,QAAO,SAAUd,OACrDf,EAAOqD,EAAYK,EAAgB3C,EAAWr7C,aAClCq7C,EAAUS,OAAOx6C,QAAUk8C,EAAanC,EAAUS,UAC9DxB,EAAKwD,EAAK99C,UAGgB,IAA5By+C,EAAiBn9C,cAERo9C,EAAoBF,EAAoBx+C,IACtCsB,OAAS,EAAG,KACnBq9C,EAAahD,EAAamC,EAAK99C,aAE7B,IAAIs4C,UAAU,2CAA6CiG,EAC7D,eAAiBD,EAASnE,KAAK,QAC/B,aAAewE,EAAa,YAAc3+C,EAAQ,MAClD4+C,KAAO,CACTC,SAAU,YACVzD,GAAImD,EACJv+C,MAAAA,EACA8+C,OAAQH,EACRL,SAAAA,GAEKD,UAIYI,MAKrBM,EAAUP,EAAmBpG,KAAI,SAAUiD,UACtCmC,EAAanC,EAAUS,QAAUh5B,EAAAA,EAAWu4B,EAAUS,OAAOx6C,aAElEw8C,EAAKx8C,OAASP,KAAKC,IAAI6+B,MAAM,KAAMkf,YAC1BL,EAAoBF,EAAoBx+C,MAC7C,IAAIs4C,UAAU,iCAAmCiG,EACnD,eAAiBD,EAASnE,KAAK,QAC/B,YAAc2D,EAAKx8C,OAAS,MAC5Bs9C,KAAO,CACTC,SAAU,aACVzD,GAAImD,EACJv+C,MAAO89C,EAAKx8C,OACZg9C,SAAAA,GAEKD,MAILW,EAAYj+C,KAAKE,IAAI4+B,MAAM,KAAMkf,UACjCjB,EAAKx8C,OAAS09C,MACV,IAAI1G,UAAU,kCAAoCiG,EACpD,eAAiBS,EAAY,aAAelB,EAAKx8C,OAAS,MAC1Ds9C,KAAO,CACTC,SAAU,cACVzD,GAAImD,EACJv+C,MAAO89C,EAAKx8C,OACZ29C,eAAgBD,GAEXX,OAGH,IAAI/F,UAAU,sBAAwBwF,EAAK3D,KAAK,MAClD,4DAA8DoE,EAAQ,MACtEK,KAAO,CACTC,SAAU,WACVC,OAAQhB,EAAK1F,IAAIuD,IAEZ0C,cAQoBtC,WACvB76C,EAAM,IAEDmC,EAAI,EAAGA,EAAI04C,EAAMnB,MAAMt5C,OAAQ+B,IAClC46C,EAAYlC,EAAMnB,MAAMv3C,QACpBtC,KAAKC,IAAIE,EAAK66C,EAAMnB,MAAMv3C,GAAGq5C,mBAIhCx7C,aAS0B66C,WAC7B76C,EAAM,IAEDmC,EAAI,EAAGA,EAAI04C,EAAMnB,MAAMt5C,OAAQ+B,IACjC46C,EAAYlC,EAAMnB,MAAMv3C,QACrBtC,KAAKC,IAAIE,EAAK66C,EAAMnB,MAAMv3C,GAAGu5C,yBAIhC17C,aAWeg+C,EAAQC,OAC1Bt8C,SAIM,MADNq8C,EAAOhD,UAAYiD,EAAOjD,YAOpB,MADNkD,EAAeF,GAAUE,EAAeD,KAOlC,MADNE,EAAmBH,GAAUG,EAAmBF,IAV3Ct8C,EAgBFy8C,EAAyBJ,GAAUI,EAAyBH,cAWzCI,EAAYC,OAElCn8C,EACAR,EAFA2E,EAAMzG,KAAKC,IAAIu+C,EAAWzD,OAAOx6C,OAAQk+C,EAAW1D,OAAOx6C,WAMrD,MADNi+C,EAAWzD,OAAOoB,KAAKkC,GAAkBI,EAAW1D,OAAOoB,KAAKkC,WAE3Dv8C,MAIJQ,EAAI,EAAGA,EAAImE,EAAKnE,OAET,MADN+7C,EAAeG,EAAWzD,OAAOz4C,IAAM+7C,EAAeI,EAAW1D,OAAOz4C,YAEnER,MAKNQ,EAAI,EAAGA,EAAImE,EAAKnE,OAET,OADNo8C,EAAcF,EAAWzD,OAAOz4C,GAAIm8C,EAAW1D,OAAOz4C,YAEjDR,SAKJ08C,EAAWzD,OAAOx6C,OAASk+C,EAAW1D,OAAOx6C,kBAW3Bu5C,EAAamB,OAClC0D,EAAU,YAEF5F,SAAQ,SAAU8B,QACxBI,EAAU7T,QAAQyT,EAAWzN,YAC7B6N,EAAU7T,QAAQyT,EAAW1N,KAC5BwR,EAAQ9D,EAAWzN,UACdyN,EAAWzN,MAAQyN,MAIxB9vB,OAAOytB,KAAKmG,GAAStH,KAAI,SAAUjK,UACjCuR,EAAQvR,iBAYe2N,EAAQV,OACpCuE,EAAYvE,KAIZU,EAAOoB,KAAKkC,GAAiB,KAC3BlD,EAAYsB,EAAa1B,GACzB8D,EAAsB9D,EAAO1D,IAAIyH,KAEzB,mBACN/B,EAAO,GACPgC,EAAO5D,EAAYptC,UAAUxN,OAAS,EAAIwN,UAAUxN,OAC/C+B,EAAI,EAAGA,EAAIy8C,EAAMz8C,MACnBA,GAAKu8C,EAAoBv8C,GAAGyL,UAAUzL,WAEzC64C,MACG4D,GAAQhxC,UAAUgxC,GAAM1H,IAAIwH,EAAoBE,KAGhD1E,EAAGvb,MAAMhgC,KAAMi+C,QAItBiC,EAAeJ,KACfnC,EAAa1B,GAAS,KACpBv5C,EAASu5C,EAAOx6C,OAAS,IAEd,kBACNq+C,EAAU9f,MAAMhgC,KACnBqiB,EAAMpT,UAAW,EAAGvM,GAAQu6C,OAAO,CAAC56B,EAAMpT,UAAWvM,cAItDw9C,aASqBhE,OACxBsB,EAAOC,EAAO0C,EAAaC,EAC3B1C,EAAQ,GACR1C,EAAc,YAEZD,MAAMd,SAAQ,SAAU/W,GACxBA,EAAK6Y,eACDlsB,KAAK+sB,EAAe1Z,EAAK6Y,WAAWzN,MAAMmM,QACpC5qB,KAAKqT,EAAK6Y,WAAWC,aAK7BhB,EAAYv5C,aACb,SACI,SAAoB4+C,UAClBA,QAGN,WACK3C,EAAM,KACA1C,EAAY,GACnB,SAAoBqF,UACrB7C,EAAM6C,GACDF,EAAYE,GAEdA,QAGN,WACK3C,EAAM,KACNA,EAAM,KACA1C,EAAY,KACZA,EAAY,GACnB,SAAoBqF,UACrB7C,EAAM6C,GACDF,EAAYE,GAEjB5C,EAAM4C,GACDD,EAAYC,GAEdA,kBAIF,SAAoBA,WAChB78C,EAAI,EAAGA,EAAIw3C,EAAYv5C,OAAQ+B,OAClCk6C,EAAMl6C,GAAG68C,UACJrF,EAAYx3C,GAAG68C,UAGnBA,eAgBc5E,OACvB6E,EAAgB,YACTrG,SAAQ,SAAUuB,GACtBA,EAAUS,OAAOoB,KAAKkC,MACb/D,EAAUS,QAAQ,GAAMhC,SAAQ,SAAUgC,KACtCsE,EAAgBtE,IAAWT,EAAUD,SAKlD+E,aAqBYrE,EAAQuE,cACLC,EAAQtgD,EAAO46C,MAC/B56C,EAAQsgD,EAAOh/C,OAAQ,KAKrBi/C,EAJAxE,EAAQuE,EAAOtgD,GACfwgD,EAAgBH,EACdtE,EAAMnB,MAAMuB,OAAO8B,GACnBlC,EAAMnB,SAGRmB,EAAMG,UAAW,KAGfM,EAAagE,EAAcrE,OAAO8B,KACzBzB,EAAWl7C,OAASk/C,EAAcl/C,OACzC,CAACk7C,EAAYgE,GACb,CAACA,UAKMA,EAAcpI,KAAI,SAAUrV,SAChC,CAACA,aAKLob,EAAQoC,GAAY,SAAUE,UAC5BC,EAAaJ,EAAQtgD,EAAQ,EAAG46C,EAAMkC,OAAO,CAAC2D,cAahD,CAPc7F,EAAMxC,KAAI,SAAUrV,EAAM2Z,SACtC,CACL9B,MAAO7X,EACPmZ,UAAYQ,IAAc4D,EAAOh/C,OAAS,GAAMk8C,EAAa8C,eAQ9DI,EAAa5E,EAAQ,EAAG,eASHyD,EAAYC,WACpCmB,EAAK5/C,KAAKE,IAAIs+C,EAAWzD,OAAOx6C,OAAQk+C,EAAW1D,OAAOx6C,QAErD+B,EAAI,EAAGA,EAAIs9C,EAAIt9C,QAIjBu9C,EAHaxC,EAAqBmB,EAAYl8C,GAAG,GACpC+6C,EAAqBoB,EAAYn8C,GAAG,WAG7C,MAIPw9C,EAAOtB,EAAWzD,OAAOx6C,OACzBw/C,EAAOtB,EAAW1D,OAAOx6C,OACzBy/C,EAAavD,EAAa+B,EAAWzD,QACrCkF,EAAaxD,EAAagC,EAAW1D,eAElCiF,EACDC,EAAcH,IAASC,EAASA,GAAQD,EACxCG,EAAcH,GAAQC,EAAUD,IAASC,aAapB7/B,EAAMk/B,MACS,IAAtCr0B,OAAOytB,KAAK4G,GAAe7+C,aACvB,IAAI27C,YAAY,8BAIpBgE,EAAmB,UAChB1H,KAAK4G,GACP/H,KAAI,SAAUiD,UACN6F,EAAe7F,EAAW8E,EAAc9E,GAAYV,EAAME,gBAElEsB,OAAOgF,GACPrH,SAAQ,SAAUsH,OAEbC,EAAuBpG,EAAYgG,GAAkB,SAAU1gD,UAC1D+gD,EAAqB/gD,EAAG6gD,SAE7BC,QACI,IAAI/I,UAAU,2BAChB8H,EAAgBiB,EAAqBvF,QAAU,UAC/CsE,EAAgBgB,EAAgBtF,QAAU,QAG/BpsB,KAAK0xB,UAIxB9F,EAAa6C,EAAQ8C,GAAkB,SAAUG,UACtCA,EAAkBG,EAAYH,EAAgBtF,QAAQ,GAAS,IAE9D1D,KAAI,SAAUkI,SACnB,CACLxE,OAAQwE,EACRlF,GAAIgG,EAAgBhG,UAGvBe,OAAOgF,KAEC7Y,KAAKkZ,OAGZC,EAAMnG,EAAW,IAAMA,EAAW,GAAGQ,OAAOx6C,QAAU,IAAMk8C,EAAalC,EAAW,GAAGQ,QACvF4F,EAAMpG,EAAW,IAAMA,EAAW,GAAGQ,OAAOx6C,QAAU,IAAMk8C,EAAalC,EAAW,GAAGQ,QACvF6F,EAAMrG,EAAW,IAAMA,EAAW,GAAGQ,OAAOx6C,QAAU,IAAMk8C,EAAalC,EAAW,GAAGQ,QACvF8F,EAAMtG,EAAW,IAAMA,EAAW,GAAGQ,OAAOx6C,QAAU,IAAMk8C,EAAalC,EAAW,GAAGQ,QACvF+F,EAAMvG,EAAW,IAAMA,EAAW,GAAGQ,OAAOx6C,QAAU,IAAMk8C,EAAalC,EAAW,GAAGQ,QACvFgG,EAAMxG,EAAW,IAAMA,EAAW,GAAGQ,OAAOx6C,QAAU,IAAMk8C,EAAalC,EAAW,GAAGQ,QACvFiG,EAAQN,GAAOC,GAAOC,GAAOC,GAAOC,GAAOC,EAG3CvE,EAAQjC,EAAWlD,KAAI,SAAUiD,UAC5B2G,EAAa3G,EAAUS,WAG5BmG,EAASR,EAAM9D,EAAYrC,EAAW,GAAGQ,OAAO,IAAMoG,EACtDC,EAAST,EAAM/D,EAAYrC,EAAW,GAAGQ,OAAO,IAAMoG,EACtDE,EAAST,EAAMhE,EAAYrC,EAAW,GAAGQ,OAAO,IAAMoG,EACtDG,EAAST,EAAMjE,EAAYrC,EAAW,GAAGQ,OAAO,IAAMoG,EACtDI,EAAST,EAAMlE,EAAYrC,EAAW,GAAGQ,OAAO,IAAMoG,EACtDK,EAAST,EAAMnE,EAAYrC,EAAW,GAAGQ,OAAO,IAAMoG,EAEtDM,EAASf,EAAM9D,EAAYrC,EAAW,GAAGQ,OAAO,IAAMoG,EACtDO,EAASf,EAAM/D,EAAYrC,EAAW,GAAGQ,OAAO,IAAMoG,EACtDQ,EAASf,EAAMhE,EAAYrC,EAAW,GAAGQ,OAAO,IAAMoG,EACtDS,EAASf,EAAMjE,EAAYrC,EAAW,GAAGQ,OAAO,IAAMoG,EACtDU,EAASf,EAAMlE,EAAYrC,EAAW,GAAGQ,OAAO,IAAMoG,EACtDW,EAASf,EAAMnE,EAAYrC,EAAW,GAAGQ,OAAO,IAAMoG,EAGtDY,EAAMxH,EAAWlD,KAAI,SAASiD,UACzB0H,EAAyB1H,EAAUS,OAAQT,EAAUD,OAG1D4H,EAAMvB,EAAMqB,EAAI,GAAKG,EACrBC,EAAMxB,EAAMoB,EAAI,GAAKG,EACrBE,EAAMxB,EAAMmB,EAAI,GAAKG,EACrBG,EAAMxB,EAAMkB,EAAI,GAAKG,EACrBI,EAAMxB,EAAMiB,EAAI,GAAKG,EACrBK,EAAMxB,EAAMgB,EAAI,GAAKG,EAErBM,EAAO9B,EAAMnG,EAAW,GAAGQ,OAAOx6C,UAClCu/C,EAAOa,EAAMpG,EAAW,GAAGQ,OAAOx6C,UAClCw/C,EAAOa,EAAMrG,EAAW,GAAGQ,OAAOx6C,UAClCkiD,EAAO5B,EAAMtG,EAAW,GAAGQ,OAAOx6C,UAClCmiD,EAAO5B,EAAMvG,EAAW,GAAGQ,OAAOx6C,UAClCoiD,EAAO5B,EAAMxG,EAAW,GAAGQ,OAAOx6C,UAGlCqiD,GAAS5B,EAAQ,EAAI,EACrB6B,GAAOtI,EAAWh6C,OAClBuiD,GAAU,mBAGHxgD,EAAIsgD,GAAQtgD,EAAIugD,GAAMvgD,OACzBk6C,EAAMl6C,GAAGyL,kBACJg0C,EAAIz/C,GAAGw8B,MAAMhgC,KAAMiP,iBAIxBg1C,EAAY7iC,EAAMnS,UAAWwsC,IAKjCF,GAAK,WAAY2I,EAAMC,UAGrBl1C,UAAUxN,SAAWiiD,GAAQtB,EAAO8B,IAASvB,EAAOwB,GAAgBhB,EAAInjB,MAAMokB,EAAIn1C,WAClFA,UAAUxN,SAAWu/C,GAAQsB,EAAO4B,IAAStB,EAAOuB,GAAgBd,EAAIrjB,MAAMokB,EAAIn1C,WAClFA,UAAUxN,SAAWw/C,GAAQsB,EAAO2B,IAASrB,EAAOsB,GAAgBb,EAAItjB,MAAMokB,EAAIn1C,WAClFA,UAAUxN,SAAWkiD,GAAQnB,EAAO0B,IAASpB,EAAOqB,GAAgBZ,EAAIvjB,MAAMokB,EAAIn1C,WAClFA,UAAUxN,SAAWmiD,GAAQnB,EAAOyB,IAASnB,EAAOoB,GAAgBX,EAAIxjB,MAAMokB,EAAIn1C,WAClFA,UAAUxN,SAAWoiD,GAAQnB,EAAOwB,IAASlB,EAAOmB,GAAgBV,EAAIzjB,MAAMokB,EAAIn1C,WAE/E+0C,GAAQhkB,MAAMokB,EAAIn1C,uBAKlBoqC,eAAekC,GAAI,OAAQ,CAACt7C,MAAOmhB,UAErCo9B,eAOJ/C,WAAa4I,EAAoB5I,GAE7BF,cAQUL,cACVJ,EAAMG,OAAO3S,QAAQ4S,cAQhBU,UACLA,EAAID,kBAQKC,WACPA,aAQM37C,UACE,OAAVA,aAQgBi8C,UACO,IAAvBA,EAAMnB,MAAMt5C,kBAQJwtB,UACRA,EAAI5M,MAAM,EAAG4M,EAAIxtB,OAAS,cAQrBwtB,UACLA,EAAIA,EAAIxtB,OAAS,cAUXwtB,EAAKhF,EAAOC,UAClB+Q,MAAM53B,UAAUgf,MAAMo3B,KAAKxqB,EAAKhF,EAAOC,cAS9BznB,EAAO03C,cAChB13C,EAAM6lC,QAAQ6R,cASHmK,EAAQC,WACjB/gD,EAAI,EAAGA,EAAI8gD,EAAO7iD,OAAQ+B,OAC7BghD,EAASD,EAAQD,EAAO9gD,WACnB,SAIJ,aAUYyrB,EAAKwrB,WACfj3C,EAAI,EAAGA,EAAIyrB,EAAIxtB,OAAQ+B,OAC1Bi3C,EAAKxrB,EAAIzrB,WACJyrB,EAAIzrB,cAWHyrB,WACRw1B,EAAU,GACLjhD,EAAI,EAAGA,EAAIyrB,EAAIxtB,OAAQ+B,MACtByrB,EAAIzrB,KAAM,SAEbyoB,OAAOytB,KAAK+K,cAUJx1B,EAAK9jB,UACb8vB,MAAM53B,UAAU45C,OAAOjd,MAAM,GAAI/Q,EAAIspB,IAAIptC,eAQhC83C,WACZ7hC,EAAO,GAEF5d,EAAI,EAAGA,EAAIy/C,EAAIxhD,OAAQ+B,IAAK,KAC/B+3C,EAAK0H,EAAIz/C,OAGiB,iBAAlB+3C,EAAGE,YAAmD,iBAAjBF,EAAGC,YAAuC,KAAZD,EAAGf,QACnE,KAATp5B,IACKm6B,EAAGf,aAEHp5B,IAASm6B,EAAGf,KAAM,KACrBgE,EAAM,IAAIp+C,MAAM,0CAA4CghB,EAAO,aAAem6B,EAAGf,KAAO,aAC5FuE,KAAO,CACTE,OAAQ1D,EAAGf,KACXiE,SAAUr9B,GAENo9B,UAKLp9B,aAIkB6hC,OACrBzE,EACA8B,EAAgB,cAEIoE,EAAYC,MAC9BrE,EAAc1H,eAAe8L,IAAeC,IAAQrE,EAAcoE,WAC9D,IAAItkD,MAAM,cAAgBskD,EAAa,uBACzC3F,KAAO,CAACvD,UAAWkJ,GACjBlG,UAKDh7C,EAAI,EAAGA,EAAIy/C,EAAIxhD,OAAQ+B,IAAK,KAC/B+3C,EAAK0H,EAAIz/C,MAGgB,iBAAlB+3C,EAAGE,mBAEHD,KAAaD,EAAGE,WACnBF,EAAGE,WAAW7C,eAAe4C,OAChBA,EAAWD,EAAGE,WAAWD,MAC1BA,GAAaD,EAAGE,WAAWD,YAId,iBAAjBD,EAAGC,kBAKX,IAAI/C,UAAU,yCAA2Cj1C,EAAI,MAC/Du7C,KAAO,CAAC5+C,MAAOqD,GACbg7C,IANSjD,EAAGC,UAAWD,KACfA,EAAGC,WAAaD,UAS3B+E,WAGDsE,EAAoB,QAAS,CACnCC,iBAAkBD,EAClB34B,OAAU,SAAUq0B,OAEd2C,EAAM,WACDzH,KAAa8E,EAChBA,EAAc1H,eAAe4C,MAC3B3rB,KAAKywB,EAAc9E,WAIpBoJ,EADIE,EAAQ7B,GACc3C,IAEnCyE,cAAe,SAAU9B,UAChB2B,EAAoBE,EAAQ7B,GAAM+B,EAAkB/B,KAE7DgC,sBAAuB,SAAU7jC,EAAM6hC,UAC9B2B,EAAoBxjC,EAAM4jC,EAAkB/B,QAIjDiC,OAASC,IACTpK,MAAQR,IACRS,YAAcH,IACdI,OAASL,IACToB,QAAUA,IACVoJ,KAAOA,IAUPC,QAAU,SAAUniB,EAAMoiB,OACzBpiB,GAA6B,iBAAdA,EAAKsX,MAA0C,mBAAdtX,EAAKuX,WAClD,IAAIhC,UAAU,sEAGG,IAArB6M,UACO9hD,EAAI,EAAGA,EAAIs3C,EAAMC,MAAMt5C,OAAQ+B,OACV,WAAxBs3C,EAAMC,MAAMv3C,GAAGg3C,mBACXO,MAAMwK,OAAO/hD,EAAG,EAAG0/B,KAMzB6X,MAAMlrB,KAAKqT,MAIbsiB,cAAgB,SAAUzJ,OACzBA,GAC6B,iBAApBA,EAAWzN,MACO,iBAAlByN,EAAW1N,IACY,mBAAvB0N,EAAWC,cACjB,IAAIvD,UAAU,mFAGhBuC,YAAYnrB,KAAKksB,IAGlBjB,SAGFqK,IA51CYM,GCNd,YAAmBxlD,SACH,kBAAVA,KAIJ80B,SAAS90B,IAASA,IAAUiB,KAAKW,MAAM5B,GAQzC,IAAI46B,GAAsB35B,KAAK25B,MAAQ,SAAU/6B,UAClDA,EAAI,EACC,EACEA,EAAI,KAGN,GA8IJ,YAAgBG,EAAOutC,MACL,mBAAZA,SAEFA,EAAQvtC,MAIbA,IAAUgjB,EAAAA,QACL,cACEhjB,eACF,eACEw4B,MAAMx4B,SACR,UAKLo2C,EADAqP,EAAW,cAGXlY,IAEEA,EAAQkY,aACClY,EAAQkY,UAIjBC,GAASnY,KACCA,EACHmY,GAASnY,EAAQ6I,eACd7I,EAAQ6I,YAKhBqP,OACD,eACIE,GAAQ3lD,EAAOo2C,OAEnB,qBACIwP,GAAc5lD,EAAOo2C,OAEzB,qBA8DF,SAAuBp2C,EAAOo2C,MAC/B5d,MAAMx4B,KAAW80B,SAAS90B,UACrB6lD,OAAO7lD,OAIZ8lD,EAAUC,GADFC,GAAYhmD,GACSo2C,GAC7Br1C,EAAI+kD,EAAQG,SACZljD,EAAI+iD,EAAQI,aAEZC,EAASplD,EAAI,GAAM,EAAIA,EAAIA,EAAI,EAAIA,EAAI,EAAIA,EAAI,EAAIA,EAAIA,EAAI,KAE3D2kD,GAAStP,QAEJA,EAAYrzC,EAAEvB,QAAUT,EAAIolD,EAAS,EAAIpjD,EAAEvB,UAC9CouB,KAAK,gBAKLw2B,EAAenlD,KAAKa,IAAIf,EAAIolD,MAAa3kD,OAAS,GAE7C+B,EAAI,EAAGA,EAAI6iD,EAAc7iD,MAC9BqsB,KAAK,OAKPy2B,EAAUplD,KAAKa,IAAIf,EAAIolD,GACvBG,EAAa,OAEVD,EAAU,eAObE,EAAWxjD,EAAEqf,MAAMkkC,GAAYjM,KAAK,IACpCmM,EAAad,GAAStP,IAAcmQ,EAAS/kD,QAAU+kD,EAAS3K,MAAM,SAAW,IAAM2K,EAAW,GAClG5K,EAAM54C,EAAEqf,MAAM,EAAGkkC,GAAYjM,KAAK,IAAMmM,EAAa,QAAY,EAAI,IAAM,IAAML,EAAO3iD,kBACrFsiD,EAAQlrB,KAAO+gB,EAtGX8K,CAAczmD,EAAOo2C,OAEzB,cAiLF,SAAqBp2C,EAAOo2C,EAAW7I,MACxC/U,MAAMx4B,KAAW80B,SAAS90B,UACrB6lD,OAAO7lD,OAIZ0mD,EAAWnZ,QAAgC,IAArBA,EAAQmZ,SAAyBnZ,EAAQmZ,YAC/DC,EAAWpZ,QAAgC,IAArBA,EAAQoZ,SAAyBpZ,EAAQoZ,SAAW,EAC1ElL,EAAQuK,GAAYhmD,GACpB8lD,EAAU1P,EAAY2P,GAAYtK,EAAOrF,GAAaqF,KAEtDqK,EAAQG,SAAWS,GAAYZ,EAAQG,UAAYU,SAE9Cf,GAAc5lD,EAAOo2C,OAExBrzC,EAAI+iD,EAAQI,aACZnlD,EAAI+kD,EAAQG,SAEZljD,EAAEvB,OAAS40C,MACTrzC,EAAEi6C,OAAO4J,GAAMxQ,EAAYrzC,EAAEvB,YAK/BuB,EAAEi6C,OAAO4J,GAAM7lD,EAAIgC,EAAEvB,OAAS,KAAOA,OAAS40C,EAAYA,EAAYrzC,EAAEvB,OAAS,SAGjF+H,EAAMxI,EAAI,EAAIA,EAAI,SAElBwI,KAHAq9C,IAAO7lD,GAAGi8C,OAAOj6C,IAGTvB,OAAS,KACjB8jD,OAAO/7C,EAAM,EAAG,EAAG,KAGhBu8C,EAAQlrB,KAAO73B,EAAEs3C,KAAK,IAhNpBwM,CAAY7mD,EAAOo2C,EAAW7I,GAAWA,GAASgF,QAAQ,uBAAuB,eAClFuU,EAAS93C,UAAU,GACnBjO,EAAIiO,UAAU,SACA,MAAX83C,EAAiBA,EAAS/lD,EAAIA,mBAIjC,IAAIZ,MAAM,qBAAuBslD,EAAW,iDAUjD,YAAqBzlD,OAEtB47C,EAAQiK,OAAO7lD,GAAO0hB,cAAck6B,MAAM,0CAEzCA,QACG,IAAIuB,YAAY,kBAAoBn9C,OAGxCspB,EAAOsyB,EAAM,GACbkL,EAASlL,EAAM,GACfqK,EAAWjlC,WAAW46B,EAAM,IAAM,KAClCryC,EAAMu9C,EAAOze,QAAQ,aACb9+B,EAAaA,EAAM,EAAIu9C,EAAOtlD,OAAS,MAC/C0kD,EAAeY,EAAOvU,QAAQ,IAAK,IACtCA,QAAQ,OAAO,SAAUwU,aAEZA,EAAMvlD,OACX,MACN+wC,QAAQ,MAAO,IACjBkJ,MAAM,IAAInD,KAAI,SAAU5nC,UAChB2Q,SAAS3Q,aAGU,IAAxBw1C,EAAa1kD,WACFouB,KAAK,QAIb,CACLgL,KAAMtR,EACN48B,aAAAA,EACAD,SAAAA,GA2DG,YAAiBjmD,EAAOo2C,MACzB5d,MAAMx4B,KAAW80B,SAAS90B,UACrB6lD,OAAO7lD,OAGZgnD,EAAahB,GAAYhmD,GACzB8lD,EAA+B,iBAAd1P,EAAyB2P,GAAYiB,EAAYA,EAAWf,SAAW,EAAI7P,GAAa4Q,EACzGjkD,EAAI+iD,EAAQI,aACZn8C,EAAI+7C,EAAQG,SAAW,EAGvBgB,EAAKl9C,MAAkB,UAEvBhH,EAAEvB,OAASylD,MACTlkD,EAAEi6C,OAAO4J,GAAMK,EAAKlkD,EAAEvB,UAIxBuI,EAAI,MACF68C,GAAW,EAAJ78C,GAAOizC,OAAOj6C,KACrB,GAIFgH,EAAIhH,EAAEvB,UACN8jD,OAAOv7C,EAAG,EAAS,IAANA,EAAU,KAAO,KAG3B+7C,EAAQlrB,KAAO73B,EAAEs3C,KAAK,IAUxB,YAAuBr6C,EAAOo2C,MAC/B5d,MAAMx4B,KAAW80B,SAAS90B,UACrB6lD,OAAO7lD,OAIZy7C,EAAQuK,GAAYhmD,GACpB8lD,EAAU1P,EAAY2P,GAAYtK,EAAOrF,GAAaqF,EACtD14C,EAAI+iD,EAAQI,aACZnlD,EAAI+kD,EAAQG,SAEZljD,EAAEvB,OAAS40C,MACTrzC,EAAEi6C,OAAO4J,GAAMxQ,EAAYrzC,EAAEvB,cAI/B0lD,EAAQnkD,EAAEwtC,eACPuV,EAAQlrB,KAAOssB,KAAW1lD,OAAS,EAAI,IAAMuB,EAAEs3C,KAAK,IAAM,IAAM,QAAY,EAAI,IAAM,IAAMt5C,EA0D9F,YAAqB06C,EAAOrF,WAE7B0P,EAAU,CACZlrB,KAAM6gB,EAAM7gB,KACZsrB,aAAczK,EAAMyK,aACpBD,SAAUxK,EAAMwK,UAEdljD,EAAI+iD,EAAQI,aAET9P,GAAa,KAChB+Q,QAAQ,KACFlB,kBAINljD,EAAEvB,OAAS40C,GACCrzC,EAAEuiD,OAAOlP,EAAWrzC,EAAEvB,OAAS40C,GAEjC,IAAM,EAAG,KACf7yC,EAAI6yC,EAAY,QAClB7yC,KAEc,KAATR,EAAEQ,MACLi+B,MAEQ,IAANj+B,MACA4jD,QAAQ,KACFlB,gCAUTH,EAQT,YAAetkD,WACTwtB,EAAM,GAEDzrB,EAAI,EAAGA,EAAI/B,EAAQ+B,MACtBqsB,KAAK,UAGJZ,EAwBF,IAAIo4B,GAAc5/C,OAAOC,SAAW,qBAWpC,YAAqB5H,EAAGC,EAAGwO,MAE5BA,MAAAA,SACKzO,IAAMC,KAGXD,IAAMC,SACD,KAIL04B,MAAM34B,IAAM24B,MAAM14B,UACb,KAILg1B,SAASj1B,IAAMi1B,SAASh1B,GAAI,KAE1B8hC,EAAO3gC,KAAKa,IAAIjC,EAAIC,UAEpB8hC,EAAOwlB,IAIFxlB,GAAQ3gC,KAAKE,IAAIF,KAAKa,IAAIjC,GAAIoB,KAAKa,IAAIhC,IAAMwO,SAKjD,ECveF,YAAgBtO,EAAOutC,MACL,mBAAZA,SAEFA,EAAQvtC,OAIZA,EAAM80B,kBACF90B,EAAMw4B,QAAU,MAAQx4B,EAAM8hC,GAAG,GAAK,WAAa,gBAKxDsU,EADAqP,EAAW,mBAGC,IAAZlY,IAEEA,EAAQkY,aACClY,EAAQkY,UAIE,iBAAZlY,IACGA,EACHA,EAAQ6I,cACL7I,EAAQ6I,YAKhBqP,OACD,eAqFF,SAAiBzlD,EAAOo2C,UACtBp2C,EAAM2lD,QAAQvP,GArFVuP,CAAQ3lD,EAAOo2C,OAEnB,qBACIwP,GAAc5lD,EAAOo2C,OAEzB,qBA0CF,SAAuBp2C,EAAOo2C,OAE/Br1C,EAAIf,EAAMe,EACVolD,EAASplD,EAAI,GAAM,EAAIA,EAAIA,EAAI,EAAIA,EAAI,EAAIA,EAAI,EAAIA,EAAIA,EAAI,EAE3DsmD,EAAkBrnD,EAAMsnD,IAAIrmD,KAAK8D,IAAI,IAAKohD,IAC1CoB,EAAWF,EAAgBR,YAAYzQ,QAEvCmR,EAASlf,QAAQ,SACRgf,EAAgB7jD,mBAGtB+jD,EAAW,QAAY,EAAI,IAAM,IAAMpB,EAAO3iD,WArD1CijD,CAAczmD,EAAOo2C,OAEzB,WAIGsQ,EAAWnZ,QAAgC,IAArBA,EAAQmZ,SAAyBnZ,EAAQmZ,YAC/DC,EAAWpZ,QAAgC,IAArBA,EAAQoZ,SAAyBpZ,EAAQoZ,SAAW,KAE1E3mD,EAAMwnD,eAAiB,QAGvB1B,EAAU9lD,EAAMynD,oBAAoBrR,GACpCsR,EAAM5B,EAAQ/kD,SAEd2mD,GAAOhB,GAAYgB,EAAMf,EAErBb,EAAQH,UAGRC,GAAc5lD,EAAOo2C,IAIlB7D,QAAQ,uBAAuB,eACpCuU,EAAS93C,UAAU,GACnBjO,EAAIiO,UAAU,SACA,MAAX83C,EAAiBA,EAAS/lD,EAAIA,mBAKnC,IAAIZ,MAAM,qBAAuBslD,EAAW,iDAgCjD,YAAuBzlD,EAAOo2C,eACjB,IAAdA,EACKp2C,EAAM4lD,cAAcxP,EAAY,GAEhCp2C,EAAM4lD,gBCpKV,YAAkB+B,EAAMC,OACzB59B,EAAQ29B,EAAKnmD,OAASomD,EAAOpmD,OAC7ByoB,EAAM09B,EAAKnmD,cACRmmD,EAAKE,UAAU79B,EAAOC,KAAS29B,EAsCjC,YAAgB5nD,EAAOutC,SACP,iBAAVvtC,EACF8nD,GAAa9nD,EAAOutC,GAGzBgJ,GAAYv2C,GACP+nD,GAAgB/nD,EAAOutC,GA+HlC,SAA2BvtC,UAClBA,GAA0B,iBAAVA,GAAyC,iBAAZA,EAAMS,GAAqC,iBAAZT,EAAM4D,GAAqC,iBAAZ5D,EAAM0Q,IAAkB,EA3HtIs3C,CAAkBhoD,GACfutC,GAAgC,YAArBA,EAAQ0a,SAKfjoD,EAAMwD,WAHNxD,EAAMS,EAAIT,EAAM4D,EAAI,IAAM5D,EAAM0Q,EAOvCsqB,MAAM4b,QAAQ52C,GACTkoD,GAAYloD,EAAOutC,GAGxB4a,GAASnoD,GACJ,IAAMA,EAAQ,IAGF,mBAAVA,EACFA,EAAMooD,OAASvC,OAAO7lD,EAAMooD,QAAU,WAG3CpoD,GAA0B,iBAAVA,EACU,mBAAjBA,EAAMqoD,OACRroD,EAAMqoD,OAAO9a,GACXvtC,GAASA,EAAMwD,SAAS+pC,KAAa,GAAG/pC,WAE1CxD,EAAMwD,SAAS+pC,GAKf,IAHOvhB,OAAOytB,KAAKz5C,GAAOs4C,QACxB,IAAM5U,EAAM,MAAQ2kB,GAAOroD,EAAM0jC,GAAM6J,KAE3B8M,KAAK,MAAQ,IAI/BwL,OAAO7lD,GAST,YAAmBA,WACpB2nD,EAAO9B,OAAO7lD,GACdsoD,EAAU,GACV/kD,EAAI,EAEDA,EAAIokD,EAAKnmD,QAAQ,KAClBuB,EAAI4kD,EAAKnmC,OAAOje,GAEV,OAANR,MACSA,MAID,QAFN4kD,EAAKnmC,OAAOje,UAEA,aAAa8kC,QAAQtlC,QACxB,SAGFA,MACI,MAANA,EACE,MAEAA,YAMR,IAAMulD,EAAU,IAQlB,YAAgBtoD,OACjB2nD,EAAO9B,OAAO7lD,YACX2nD,EAAKpV,QAAQ,KAAM,SAASA,QAAQ,KAAM,UAAUA,QAAQ,KAAM,SAASA,QAAQ,KAAM,QAAQA,QAAQ,KAAM,QAcxH,YAAqB/vC,EAAO+qC,MACtBvS,MAAM4b,QAAQp0C,GAAQ,SACpBm5C,EAAM,IACNj0C,EAAMlF,EAAMhB,OAEP+B,EAAI,EAAGA,EAAImE,EAAKnE,IACb,IAANA,OACK,SAGF2kD,GAAY1lD,EAAMe,GAAIgqC,aAGxB,WAGA8a,GAAO7lD,EAAO+qC,GCpKlB,YAAwByR,EAAQR,EAAU+J,wBACzBC,UACd,IAAIrL,YAAY,yDAGnB6B,OAASA,OACTR,SAAWA,OACX+J,SAAWA,OACXE,QAAU,8BAAgC7R,QAAQoI,GAAU,IAAMA,EAAO3E,KAAK,MAAQ,IAAM2E,GAAU,UAAYuJ,UAAY,MAAQ,WAAa3R,QAAQ4H,GAAY,IAAMA,EAASnE,KAAK,MAAQ,IAAMmE,GAAY,SACrNkK,OAAQ,IAAIvoD,OAAQuoD,MCRpB,YAAoBxoD,EAAOkB,EAAKC,wBACfsnD,UACd,IAAIxL,YAAY,yDAGnBj9C,MAAQA,EAET8O,UAAUxN,OAAS,QAChBN,IAAM,OACNC,IAAMC,SAENF,IAAME,OACND,IAAME,QAGI,IAAbtB,KAAKmB,KAAqBnB,KAAKG,MAAQH,KAAKmB,SACzCunD,QAAU,uBAAyB1oD,KAAKG,MAAQ,MAAQH,KAAKmB,IAAM,SAClD,IAAbnB,KAAKoB,KAAqBpB,KAAKG,OAASH,KAAKoB,SACjDsnD,QAAU,uBAAyB1oD,KAAKG,MAAQ,YAAciB,IAAM,GAAK,SAEzEsnD,QAAU,uBAAyB1oD,KAAKG,MAAQ,SAGlDwoD,OAAQ,IAAIvoD,OAAQuoD,MCpBpB,YAAmB7oD,WACpBY,EAAI,GAEDu6B,MAAM4b,QAAQ/2C,MACjB+vB,KAAK/vB,EAAE2B,UACL3B,EAAE,UAGDY,EAYT,YAAmB+B,EAAO+e,EAAMqnC,OAC1BrlD,EACAmE,EAAMlF,EAAMhB,UAEZkG,IAAQ6Z,EAAKqnC,SACT,IAAIJ,GAAe9gD,EAAK6Z,EAAKqnC,OAGjCA,EAAMrnC,EAAK/f,OAAS,EAAG,KAErBqnD,EAAUD,EAAM,MAEfrlD,EAAI,EAAGA,EAAImE,EAAKnE,IAAK,KACpB84B,EAAQ75B,EAAMe,OAEby3B,MAAM4b,QAAQva,SACX,IAAImsB,GAAejnC,EAAK/f,OAAS,EAAG+f,EAAK/f,OAAQ,QAG/CgB,EAAMe,GAAIge,EAAMsnC,aAIvBtlD,EAAI,EAAGA,EAAImE,EAAKnE,OACfy3B,MAAM4b,QAAQp0C,EAAMe,UAChB,IAAIilD,GAAejnC,EAAK/f,OAAS,EAAG+f,EAAK/f,OAAQ,KAcxD,YAAkBgB,EAAO+e,MACC,IAAhBA,EAAK/f,WAIdw5B,MAAM4b,QAAQp0C,SACV,IAAIgmD,GAAehmD,EAAMhB,OAAQ,WAI/BgB,EAAO+e,EAAM,GAUpB,YAAuBrhB,EAAOsB,OAC9BkkD,GAASxlD,KAAW4oD,GAAU5oD,SAC3B,IAAIs4C,UAAU,oCAAsCt4C,EAAQ,QAGhEA,EAAQ,GAAuB,iBAAXsB,GAAuBtB,GAASsB,QAChD,IAAImnD,GAAWzoD,EAAOsB,GAczB,YAAgBgB,EAAO+e,EAAMwnC,OAG7B/tB,MAAM4b,QAAQp0C,KAAWw4B,MAAM4b,QAAQr1B,SACpC,IAAIi3B,UAAU,qBAGF,IAAhBj3B,EAAK/f,aACD,IAAIrB,MAAM,gDAIb65C,SAAQ,SAAUh6C,OAChB0lD,GAAS1lD,KAAW8oD,GAAU9oD,IAAUA,EAAQ,QAC7C,IAAIw4C,UAAU,uDAA8D6P,GAAO9mC,GAAQ,WAM7F/e,EAAO+e,EAAM,OAFgB,IAAjBwnC,EAA6BA,EAAe,GAIzDvmD,EAYT,YAAiBA,EAAO+e,EAAMqnC,EAAKG,OAC7BxlD,EACAylD,EACAC,EAASzmD,EAAMhB,OACf0nD,EAAS3nC,EAAKqnC,GACdO,EAASloD,KAAKC,IAAI+nD,EAAQC,QAExB1nD,OAAS0nD,EAEXN,EAAMrnC,EAAK/f,OAAS,EAAG,KAErBqnD,EAAUD,EAAM,MAEfrlD,EAAI,EAAGA,EAAI4lD,EAAQ5lD,MAEff,EAAMe,GAERy3B,MAAM4b,QAAQoS,OACV,CAACA,KAEFzlD,GAAKylD,MAGLA,EAAMznC,EAAMsnC,EAASE,OAI1BxlD,EAAI4lD,EAAQ5lD,EAAI2lD,EAAQ3lD,MAEpB,KACDA,GAAKylD,KAEHA,EAAMznC,EAAMsnC,EAASE,OAE1B,KAGAxlD,EAAI,EAAGA,EAAI4lD,EAAQ5lD,SACfy3B,MAAM4b,QAAQp0C,EAAMe,OACnBA,GAAKf,EAAMe,GAAG,OAKnBA,EAAI4lD,EAAQ5lD,EAAI2lD,EAAQ3lD,MACrBA,GAAKwlD,GAgBV,YAAiBvmD,EAAO4mD,OAEzBC,EADAC,EA8LC,SAAiB9mD,OACjBw4B,MAAM4b,QAAQp0C,UAEVA,MAGL+mD,EAAO,YACLvP,SAAQ,WAAkBh6C,GAC1Bg7B,MAAM4b,QAAQ52C,KACVg6C,QAAQ9uC,KAET0kB,KAAK5vB,MAGPupD,EA5MSC,CAAQhnD,cAGPwsB,UACRA,EAAIy6B,QAAO,CAAC5P,EAAMC,IAASD,EAAOC,QAGtC9e,MAAM4b,QAAQp0C,KAAWw4B,MAAM4b,QAAQwS,SACpC,IAAI5Q,UAAU,qBAGD,IAAjB4Q,EAAM5nD,aACF,IAAIgnD,GAAe,EAAGkB,EAAQC,GAAUnnD,IAAS,cAGrDonD,EAAY,EAEPC,EAAY,EAAGA,EAAYT,EAAM5nD,OAAQqoD,OACnCT,EAAMS,MAGjBP,EAAU9nD,SAAWooD,QACjB,IAAIpB,GAAekB,EAAQN,GAAQM,EAAQC,GAAUnnD,IAAS,YAuBxE,SAAkBA,EAAO4mD,WAGnBU,EADAC,EAAWvnD,EAGNqnD,EAAYT,EAAM5nD,OAAS,EAAGqoD,EAAY,EAAGA,IAAa,KAC7DtoC,EAAO6nC,EAAMS,KACL,WAERroD,EAASuoD,EAASvoD,OAAS+f,EAEtBhe,EAAI,EAAGA,EAAI/B,EAAQ+B,MAChBqsB,KAAKm6B,EAAS3nC,MAAM7e,EAAIge,KAAW,GAAKA,MAIzCuoC,SAGNC,EAtCMC,CAASV,EAAWF,SACxBroD,MACHA,aAAaynD,SACT,IAAIA,GAAekB,EAAQN,GAAQM,EAAQC,GAAUnnD,IAAS,YAGhEzB,SAGDsoD,EAsGF,YAAmB7mD,EAAOynD,EAAMC,EAAO3oC,OACxC9gB,EAAI8gB,GAAQooC,GAAUnnD,MAEtB0nD,UACO3mD,EAAI,EAAGA,EAAI2mD,EAAO3mD,MACjB,CAACf,KACP2kD,QAAQ,SAKNgD,GAAW3nD,EAAOynD,EAAM,GAEzBxpD,EAAEe,OAASyoD,KACdr6B,KAAK,UAGFptB,EAWT,YAAoBA,EAAOynD,EAAMrB,OAC3BrlD,EAAGs9C,KAEH7lB,MAAM4b,QAAQp0C,GAAQ,KACpB4nD,EAAOxB,EAAM,MAEZrlD,EAAI,EAAGs9C,EAAKr+C,EAAMhB,OAAQ+B,EAAIs9C,EAAIt9C,MAC/BA,GAAK4mD,GAAW3nD,EAAMe,GAAI0mD,EAAMG,gBAG/B15C,EAAIk4C,EAAKl4C,EAAIu5C,EAAMv5C,MAClB,CAAClO,UAINA,EAgCF,YAAaA,EAAO0I,UAClB8vB,MAAM53B,UAAUk1C,IAAIkB,KAAKh3C,EAAO0I,GAQlC,YAAiB1I,EAAO0I,SACvB9H,UAAU42C,QAAQR,KAAKh3C,EAAO0I,GAoC/B,YAAc1I,EAAO6nD,UACnBrvB,MAAM53B,UAAUi3C,KAAKb,KAAKh3C,EAAO6nD,GAwEnC,YAA0B7nD,EAAO8nD,WAClCrnB,EAEAzhC,EAAS,EAEJ+B,EAAI,EAAGA,EAAIf,EAAMhB,OAAQ+B,IAAK,KACjC22C,EAAO13C,EAAMe,GACbgnD,EAAUvvB,MAAM4b,QAAQsD,MAElB,IAAN32C,GAAWgnD,MACJrQ,EAAK14C,QAIZ+oD,GAAWrQ,EAAK14C,SAAWA,aAI3BgpD,EAAWD,EAAUE,GAAiBvQ,EAAMoQ,GAC9CA,EAAOpQ,WAEI,IAATjX,IACKunB,UACEvnB,IAASunB,QACX,eAKJvnB,EAyBF,YAAkBzgC,EAAO03C,cACvB13C,EAAM6lC,QAAQ6R,GCvjBhB,YAAiB/4B,EAAMupC,EAAcxF,EAAQyF,cACzB5Y,OAInB6Y,ETsWD,SAAqBtmC,EAAQumC,WAC9BpgD,EAAO,GAEFlH,EAAI,EAAGA,EAAIsnD,EAAWrpD,OAAQ+B,IAAK,KACtCmgC,EAAMmnB,EAAWtnD,GACjBvD,EAAQskB,EAAOof,QAEL,IAAV1jC,MACG0jC,GAAO1jC,UAITyK,ESlXMqgD,CAAY/Y,EAAO2Y,EAAapS,IAAIyS,YAuF5C,SAA4B5pC,EAAMupC,EAAc3Y,OACpC2Y,EAAarO,YASzB,SAA8B2O,UAC5BA,GAAgC,MAAlBA,EAAW,GAVoBC,CAAqBD,KACxEE,eAA0C,IAAtBnZ,EAAMiZ,KAEV,KACXG,EAAsBT,EAAarO,gBAA2C,IAAtBtK,EAAMiZ,WAE5D,IAAI7qD,MAAM,2BAA4B68C,OAAO77B,EAAM,OAAU,kCAAkC67B,OAAOmO,EAAoB7S,QAAS,IAAK0E,OAAOtsC,EAAG,OAAO2pC,KAAK,MAAO,QA7FxJl5B,EAAMupC,EAAc3Y,GAChCmT,EAAO0F,YAGAQ,WAAY,IACZ9P,GAAKn6B,IACLkqC,aAAeX,EAAatoC,QAAQomB,OAEhDmiB,MACcA,KAAOA,GAGlBW,EA6DF,YAAmBvkB,SACF,mBAARA,GAAwC,iBAAXA,EAAIuU,IAAmBtgB,MAAM4b,QAAQ7P,EAAIskB,cAyB/E,YAA+BL,UAC7BA,GAAgC,MAAlBA,EAAW,GAAaA,EAAW5oC,MAAM,GAAK4oC,EHjHrExC,GAAeplD,UAAY,IAAImoD,WAC/B/C,GAAeplD,UAAUhD,YAAcmrD,WACvC/C,GAAeplD,UAAUm3C,KAAO,iBAChCiO,GAAeplD,UAAUooD,kBAAmB,ECY5C7C,GAAWvlD,UAAY,IAAImoD,WAC3B5C,GAAWvlD,UAAUhD,YAAcmrD,WACnC5C,GAAWvlD,UAAUm3C,KAAO,aAC5BoO,GAAWvlD,UAAUqoD,cAAe,EGIpC,IAAIC,GAAgB,qBAGFC,GAAc1G,OACvB0G,IAUEC,MAAqC,QAP7B,CAAC,aAAc,WAAY,eAAgB,cAOS,SAAqBC,OACtFC,UACFA,EACAC,sBACAC,EACAC,YACEJ,EAIAhR,EAAQ6Q,cAKN5Q,MAAQ,CAAC,CACbP,KAAM,SACNC,KAAMkL,IACL,CACDnL,KAAM,UACNC,KAAM/D,IACL,CACD8D,KAAM,YACNC,KAAMjE,IACL,CACDgE,KAAM,WACNC,KAAM9D,IACL,CACD6D,KAAM,OACNC,KAAM7D,IACL,CACD4D,KAAM,SACNC,KAAM2N,IACL,CACD5N,KAAM,QACNC,KAAMnC,IACL,CACDkC,KAAM,QACNC,KAAM5D,IACL,CACD2D,KAAM,SACNC,KAAM3D,IACL,CACD0D,KAAM,cACNC,KAAM1D,IACL,CACDyD,KAAM,eACNC,KAAMzD,IACL,CACDwD,KAAM,QACNC,KAAMxD,IACL,CACDuD,KAAM,QACNC,KAAMvD,IACL,CACDsD,KAAM,UACNC,KAAM0R,IACL,CACD3R,KAAM,YACNC,KAAMtD,IACL,CACDqD,KAAM,OACNC,KAAMrD,IACL,CACDoD,KAAM,WACNC,KAAM2R,IACL,CACD5R,KAAM,OACNC,KAAM4R,IACL,CACD7R,KAAM,SACNC,KAAM6R,IACL,CACD9R,KAAM,OACNC,KAAM8R,IACL,CACD/R,KAAM,YACNC,KAAM+R,IACL,CACDhS,KAAM,eACNC,KAAMlD,IACL,CACDiD,KAAM,YACNC,KAAMhD,IACL,CACD+C,KAAM,iBACNC,KAAM/C,IACL,CACD8C,KAAM,YACNC,KAAM9C,IACL,CACD6C,KAAM,kBACNC,KAAM7C,IACL,CACD4C,KAAM,eACNC,KAAM5C,IACL,CACD2C,KAAM,eACNC,KAAM1C,IACL,CACDyC,KAAM,yBACNC,KAAM3C,IACL,CACD0C,KAAM,YACNC,KAAMzC,IACL,CACDwC,KAAM,OACNC,KAAMjD,IACL,CACDgD,KAAM,aACNC,KAAMxC,IACL,CACDuC,KAAM,eACNC,KAAMvC,IACL,CACDsC,KAAM,kBACNC,KAAMtC,IACL,CACDqC,KAAM,YACNC,KAAMrC,IACL,CACDoC,KAAM,aACNC,KAAMpC,IACL,CACDmC,KAAM,SACNC,KAAMgS,OAGFzR,YAAc,CAAC,CACnB1M,KAAM,SACND,GAAI,YACJ2N,QAAS,SAAiBl8C,MACnBisD,MACcjsD,GAIRA,EPyTF+lD,gBAAgBrT,QAAQ,OAAQ,IAC5CA,QAAQ,aAAc,IACtB/wC,OO3TmB,SACR,IAAIg3C,UAAU,uFAA8F34C,EAAI,gEAGjH,IAAIisD,EAAUjsD,KAEtB,CACDwuC,KAAM,SACND,GAAI,UACJ2N,QAAS,SAAiBl8C,UACnB4sD,MACY5sD,GAGV,IAAI4sD,EAAQ5sD,EAAG,KAEvB,CACDwuC,KAAM,SACND,GAAI,SACJ2N,QAAS,SAAiBl8C,UACjBA,EAAI,KAEZ,CACDwuC,KAAM,YACND,GAAI,UACJ2N,QAAS,SAAiBl8C,UACnB4sD,MACY5sD,GAGV,IAAI4sD,EAAQ5sD,EAAE6sD,WAAY,KAElC,CACDre,KAAM,WACND,GAAI,YACJ2N,QAAS,SAAiBl8C,SAClB,IAAI24C,UAAU,+JAErB,CACDnK,KAAM,WACND,GAAI,UACJ2N,QAAS,SAAiBl8C,UACnB4sD,MACY5sD,GAGV,IAAI4sD,EAAQ5sD,EAAE04C,UAAW,KAEjC,CACDlK,KAAM,SACND,GAAI,WACJ2N,QAAS,SAAiBl8C,GACnB8sD,MACa9sD,OAGd+H,EAAI,IAAI+kD,EAAS9sD,MAEjB+H,EAAE2wC,YAAc14C,QACZ,IAAI24C,UAAU,mGAA0G34C,EAAI,8DAG7H+H,IAER,CAQDymC,KAAM,SACND,GAAI,SACJ2N,QAAS,SAAiBl8C,OACpB+D,EAAI4D,OAAO3H,MAEX24B,MAAM50B,SACF,IAAIzD,MAAM,mBAAqBN,EAAI,wBAGpC+D,IAER,CACDyqC,KAAM,SACND,GAAI,YACJ2N,QAAS,SAAiBl8C,GACnBisD,MACcjsD,cAIV,IAAIisD,EAAUjsD,SACd0+C,SACD,IAAIp+C,MAAM,mBAAqBN,EAAI,qBAG5C,CACDwuC,KAAM,SACND,GAAI,WACJ2N,QAAS,SAAiBl8C,GACnB8sD,MACa9sD,cAIT,IAAI8sD,EAAS9sD,SACb0+C,SACD,IAAIp+C,MAAM,mBAAqBN,EAAI,oBAG5C,CACDwuC,KAAM,SACND,GAAI,UACJ2N,QAAS,SAAiBl8C,GACnB4sD,MACY5sD,cAIR,IAAI4sD,EAAQ5sD,SACZ0+C,SACD,IAAIp+C,MAAM,mBAAqBN,EAAI,mBAG5C,CACDwuC,KAAM,UACND,GAAI,SACJ2N,QAAS,SAAiBl8C,UAChBA,IAET,CACDwuC,KAAM,UACND,GAAI,YACJ2N,QAAS,SAAiBl8C,UACnBisD,MACcjsD,GAGZ,IAAIisD,GAAWjsD,KAEvB,CACDwuC,KAAM,UACND,GAAI,WACJ2N,QAAS,SAAiBl8C,UACnB8sD,MACa9sD,GAGX,IAAI8sD,GAAU9sD,KAEtB,CACDwuC,KAAM,UACND,GAAI,SACJ2N,QAAS,SAAiBl8C,UACjBgmD,OAAOhmD,KAEf,CACDwuC,KAAM,QACND,GAAI,SACJ2N,QAAS,SAAiBv5C,UACnBwpD,GAwBX,iBACQ,IAAI7rD,MAAM,0EArBL,IAAI6rD,EAAYxpD,KAExB,CACD6rC,KAAM,SACND,GAAI,QACJ2N,QAAS,SAAiB7lC,UACjBA,EAAOqiC,aAGXsC,KAGT,YAA0Bh7C,SAClB,IAAIM,MAAM,wBAAwB68C,OAAOn9C,EAAG,qDAGpD,YAAwBA,SAChB,IAAIM,MAAM,wBAAwB68C,OAAOn9C,EAAG,wDAOpD,YAAyBA,SACjB,IAAIM,MAAM,wBAAwB68C,OAAOn9C,EAAG,oDC9XpD,IC+FE+sD,GAASC,GD7FAC,MAFA,YACQ,IACqD,gBAOnDtI,wBACKuI,SACd,IAAI5P,YAAY,yDAGnBqH,QAAUA,GAAW,YAOlBphD,UAAU6/B,KAAO,cACjB7/B,UAAU8zC,aAAc,IAOxB9zC,UAAUm1C,QAAU,kBACrBx4C,KAAKykD,WASJphD,UAAUI,SAAW,iBACtB,IAAMzD,KAAKykD,QAAQnK,KAAK,MAAQ,OAU/Bj3C,UAAU4pD,OAAS,iBACpB,CACLC,OAAQ,YACRzI,QAASzkD,KAAKykD,YAYR0I,SAAW,SAAUC,UACtB,IAAIJ,EAAUI,EAAK3I,UAGrBuI,IACN,CACDK,SAAS,IC1DPC,GAAY,KAOdC,GAAW,mBAGXC,GAAO,qgCAGPvrD,GAAK,qgCAILwrD,GAAW,CAOTpX,UAAW,GAiBXqX,SAAU,EAeVC,OAAQ,EAIRC,YAIAC,SAAW,GAIXC,MAAOR,GAIPS,KAAMT,GAGNU,QAAQ,GAQVC,IAAW,EAGXC,GAAkBC,oCAIlBC,GAAYltD,KAAKS,MACjB0sD,GAAUntD,KAAK8D,IAEfspD,GAAW,6CACXC,GAAQ,yDACRC,GAAU,gDACVC,GAAY,qCAEZC,GAAO,IAIPC,GAAiBnB,GAAK/rD,OAAS,EAC/BmtD,GAAe3sD,GAAGR,OAAS,EAG3BotD,GAAI,CAAErU,KAAM,oBAg1Ed,YAAwB7pC,OAClBnN,EAAGogC,EAAGkrB,EACRC,EAAkBp+C,EAAElP,OAAS,EAC7Bm6C,EAAM,GACNr7C,EAAIoQ,EAAE,MAEJo+C,EAAkB,EAAG,QAChBxuD,EACFiD,EAAI,EAAGA,EAAIurD,EAAiBvrD,OA/1ExB,KAg2EFmN,EAAEnN,GAAK,IACM/B,aACJutD,GAAcprB,OACrBkrB,KAn2EA,QAs2ELn+C,EAAEnN,IACG,IACS/B,aACJutD,GAAcprB,YACb,IAANrjC,QACF,SAIFA,EAAI,IAAO,MAAS,UAEpBq7C,EAAMr7C,EAIf,YAAoBiD,EAAGnC,EAAKC,MACtBkC,MAAQA,GAAKA,EAAInC,GAAOmC,EAAIlC,QACxBlB,MAAM8tD,GAAkB1qD,GAUlC,YAA6BmN,EAAGnN,EAAGyrD,EAAIC,OACjCC,EAAIvrB,EAAGr6B,EAAG6lD,MAGTxrB,EAAIjzB,EAAE,GAAIizB,GAAK,GAAIA,GAAK,KAAMpgC,UAG7BA,EAAI,MAx4EC,IA04EJ,MAEAtC,KAAKU,QAAU,GA54EX,MAAA,KAm5EPysD,GAAQ,GAn5ED,EAm5EgB7qD,KACtBmN,EAAEw+C,GAAMvrB,EAAI,EAEA,MAAbsrB,EACE1rD,EAAI,GACG,GAALA,IAAa4rD,EAAK,IAAM,EACd,GAAL5rD,MAAa4rD,EAAK,GAAK,KAC5BH,EAAK,GAAW,OAANG,GAAeH,EAAK,GAAW,OAANG,GAAqB,KAANA,GAAqB,GAANA,QAE3D,GAAKA,EAAK,GAAKxrB,GAAKqrB,EAAK,GAAKG,EAAK,GAAKxrB,EAAI,OACjDurB,EAAK,GAAKvrB,EAAI,IAAM,IAAMyqB,GAAQ,GAAI7qD,EAAI,GAAK,OACzCogC,EAAI,GAAW,GAANwrB,IAAyC,MAA1BD,EAAK,GAAKvrB,EAAI,IAAM,GAGrDpgC,EAAI,GACG,GAALA,IAAa4rD,EAAK,IAAO,EACf,GAAL5rD,IAAa4rD,EAAK,IAAM,EACnB,GAAL5rD,MAAa4rD,EAAK,GAAK,SACdH,EAAK,IAAY,MAANG,IAAeF,GAAaD,EAAK,GAAW,MAANG,UAEhDH,EAAK,IAAMG,EAAK,GAAKxrB,IACtCsrB,GAAaD,EAAK,GAAMG,EAAK,GAAKxrB,EAAI,OACnCurB,EAAK,GAAKvrB,EAAI,IAAO,IAAMyqB,GAAQ,GAAI7qD,EAAI,GAAK,EAIlD+F,EAOT,YAAqBqyC,EAAKyT,EAAQC,WAC5B5oC,EAEF6oC,EADAtgC,EAAM,CAAC,GAEPzrB,EAAI,EACJgsD,EAAO5T,EAAIn6C,OAEN+B,EAAIgsD,GAAO,KACXD,EAAOtgC,EAAIxtB,OAAQ8tD,OAAaA,IAASF,QAC1C,IAAM9B,GAASjlB,QAAQsT,EAAIn6B,OAAOje,MACjCkjB,EAAI,EAAGA,EAAIuI,EAAIxtB,OAAQilB,IACtBuI,EAAIvI,GAAK4oC,EAAU,SACF,IAAfrgC,EAAIvI,EAAI,OAAmBA,EAAI,GAAK,KACpCA,EAAI,IAAMuI,EAAIvI,GAAK4oC,EAAU,IAC7B5oC,IAAM4oC,UAKTrgC,EAAIwgC,UAv3EbZ,GAAEa,cAAgBb,GAAE9sD,IAAM,eACpBjC,EAAI,IAAIE,KAAKK,YAAYL,aACzBF,EAAEY,EAAI,MAAKA,EAAI,GACZivD,GAAS7vD,IASlB+uD,GAAEjtD,KAAO,kBACA+tD,GAAS,IAAI3vD,KAAKK,YAAYL,MAAOA,KAAKgB,EAAI,EAAG,IAY1D6tD,GAAEe,WAAaf,GAAEgB,IAAM,SAAU9vD,OAC3ByD,EAAGkjB,EAAGopC,EAAKC,EACbjwD,EAAIE,KACJgwD,EAAKlwD,EAAE6Q,EACPs/C,KAAU,IAAInwD,EAAEO,YAAYN,IAAI4Q,EAChCu/C,EAAKpwD,EAAEY,EACPyvD,EAAKpwD,EAAEW,MAGJsvD,IAAOC,SACFC,GAAOC,EAAWD,IAAOC,EAAKD,EAAKF,IAAOC,EAAK,GAAKD,EAAKE,EAAK,EAAI,KAAtDE,QAIjBJ,EAAG,KAAOC,EAAG,UAAWD,EAAG,GAAKE,EAAKD,EAAG,IAAME,EAAK,KAGpDD,IAAOC,SAAWD,KAGlBpwD,EAAEkB,IAAMjB,EAAEiB,SAAUlB,EAAEkB,EAAIjB,EAAEiB,EAAIkvD,EAAK,EAAI,SAMxC1sD,EAAI,EAAGkjB,KAJNspC,EAAGvuD,WACHwuD,EAAGxuD,QAGmBquD,EAAMC,EAAKvsD,EAAIkjB,IAAKljB,KAC1CwsD,EAAGxsD,KAAOysD,EAAGzsD,UAAWwsD,EAAGxsD,GAAKysD,EAAGzsD,GAAK0sD,EAAK,EAAI,YAIhDJ,IAAQC,EAAM,EAAID,EAAMC,EAAMG,EAAK,EAAI,MAiBhDrB,GAAEwB,OAASxB,GAAE5rD,IAAM,eACbqtD,EAAIrB,EACNnvD,EAAIE,KACJuwD,EAAOzwD,EAAEO,mBAENP,EAAE6Q,EAGF7Q,EAAE6Q,EAAE,MAEJ4/C,EAAKla,YACLka,EAAK7C,WACLrX,UAAYia,EAAKpvD,KAAKE,IAAItB,EAAEkB,EAAGlB,EAAE0wD,MArK3B,IAsKN9C,SAAW,IA0yElB,SAAgB6C,EAAMzwD,OAChB8jC,EAAG7jC,EACL4H,EAAM7H,EAAE6Q,EAAElP,OAMRkG,EAAM,QAEC8oD,GAAQ,IADbvvD,KAAKU,KAAK+F,EAAM,KACIlE,cAEpB,KACA,kCAGD4yC,WAAazS,IAEd8sB,GAAaH,EAAM,EAAGzwD,EAAE6wD,MAAM5wD,GAAI,IAAIwwD,EAAK,YAGtC/sD,EAAIogC,EAAGpgC,KAAM,KAChBotD,EAAQ9wD,EAAE6wD,MAAM7wD,KAChB8wD,EAAMD,MAAMC,GAAOC,MAAMD,GAAOD,MAAM,GAAGG,KAAK,YAG/Cza,WAAazS,EAEX9jC,EAp0EHuwD,CAAOE,EAAMQ,GAAiBR,EAAMzwD,MAEnCu2C,UAAYia,IACZ5C,SAAWuB,EAETU,GAAqB,GAAZ7C,IAA6B,GAAZA,GAAgBhtD,EAAEkxD,MAAQlxD,EAAGwwD,EAAIrB,GAAI,IAZlD,IAAIsB,EAAK,GAHZ,IAAIA,EAAKH,MAmC5BvB,GAAEoC,SAAWpC,GAAEqC,KAAO,eAChBlwD,EAAGD,EAAG8C,EAAG0F,EAAG4nD,EAAKzwD,EAAG8vD,EAAI1sD,EAAGstD,EAAIC,EACjCvxD,EAAIE,KACJuwD,EAAOzwD,EAAEO,gBAENP,EAAEi1B,YAAcj1B,EAAE2nD,gBAAiB,IAAI8I,EAAKzwD,WACtC,KAGPA,EAAEY,EAAI2tD,GAAQvuD,EAAEY,EAAIZ,EAAG,EAAI,KAIrBoB,KAAKa,IAAIrB,IAAM,EAAA,IAqBnB,IAAI6vD,EAAK7vD,EAAE+C,eApBX6tD,GAAexxD,EAAE6Q,IAIjBjQ,MAHAZ,EAAEkB,GAGO6C,EAAEpC,OAAS,GAAK,QAAc,GAALf,OAAUA,EAAU,IAAM,QAC5D2tD,GAAQxqD,EAAG,EAAI,KAGfuqD,MAAe,GAAK,MAAU,MAAU,KAAS,OASjD,IAAImC,IAPJ7vD,GAAK,EAAA,EACH,KAAOM,KAEPN,EAAEmlD,iBACAxjC,MAAM,EAAGxe,EAAEykC,QAAQ,KAAO,GAAKtnC,IAIrCN,EAAIZ,EAAEY,QAKA6vD,EAAKla,WAAa,eAKtB9sC,GACGonD,MAAM7sD,GAAG6sD,MAAM7sD,IACTgtD,KAAKhxD,KACdyxD,GAAOF,EAAQP,KAAKhxD,GAAG6wD,MAAM7sD,GAAIutD,EAAQP,KAAKM,GAAKZ,EAAK,EAAG,GAG3Dc,GAAextD,EAAE6M,GAAG0R,MAAM,EAAGmuC,QAAac,GAAe/nD,EAAEoH,IAAI0R,MAAM,EAAGmuC,GAAK,IAKtE,WAJL3sD,EAAEwe,MAAMmuC,EAAK,EAAGA,EAAK,MAILW,GAAY,QAALttD,GAepB,EAICA,KAAOA,EAAEwe,MAAM,IAAqB,KAAfxe,EAAE4d,OAAO,SAGzBlY,EAAGvI,EAAI,EAAG,MACduI,EAAEonD,MAAMpnD,GAAGonD,MAAMpnD,GAAGioD,GAAG1xD,cAnBzBqxD,OACMrtD,EAAG9C,EAAI,EAAG,GAEf8C,EAAE6sD,MAAM7sD,GAAG6sD,MAAM7sD,GAAG0tD,GAAG1xD,IAAI,GACzBgE,WAKF,IACA,aAiBD,EAEJ6rD,GAASpmD,EAAGvI,EAAGuvD,EAAK7C,SAAU3sD,IAQvC8tD,GAAE4C,cAAgB5C,GAAE6C,GAAK,eACnBnxD,EACFoQ,EAAI3Q,KAAK2Q,EACT9M,EAAIusD,OAEFz/C,EAAG,MApSI,MAqSLA,EAAElP,OAAS,GACN2sD,GAAUpuD,KAAKgB,EAtSf,MAySL2P,EAAEpQ,QACQA,EAAI,IAAM,EAAGA,GAAK,OAC5BsD,EAAI,MAAO,UAGVA,GAyBTgrD,GAAE8C,UAAY9C,GAAE+C,IAAM,SAAU7xD,UACvBwxD,GAAOvxD,KAAM,IAAIA,KAAKK,YAAYN,KAS3C8uD,GAAEgD,mBAAqBhD,GAAEiD,SAAW,SAAU/xD,OAE1CwwD,EADMvwD,KACGK,mBACJsvD,GAAS4B,GAFRvxD,KAEkB,IAAIuwD,EAAKxwD,GAAI,EAAG,EAAG,GAAIwwD,EAAKla,UAAWka,EAAK7C,WAQxEmB,GAAEhrC,OAASgrC,GAAE2C,GAAK,SAAUzxD,UACH,IAAhBC,KAAK6vD,IAAI9vD,IASlB8uD,GAAEltD,MAAQ,kBACDguD,GAAS,IAAI3vD,KAAKK,YAAYL,MAAOA,KAAKgB,EAAI,EAAG,IAS1D6tD,GAAEkD,YAAclD,GAAE9sB,GAAK,SAAUhiC,UACxBC,KAAK6vD,IAAI9vD,GAAK,GASvB8uD,GAAEmD,qBAAuBnD,GAAEoD,IAAM,SAAUlyD,OACrC6jC,EAAI5jC,KAAK6vD,IAAI9vD,UACL,GAAL6jC,GAAgB,IAANA,GA6BnBirB,GAAEqD,iBAAmBrD,GAAEsD,KAAO,eACxBvuB,EAAG//B,EAAGysD,EAAIrB,EAAItnD,EAChB7H,EAAIE,KACJuwD,EAAOzwD,EAAEO,YACT+xD,EAAM,IAAI7B,EAAK,OAEZzwD,EAAEi1B,kBAAmB,IAAIw7B,EAAKzwD,EAAEY,EAAI,EAAA,EAAQ0vD,QAC7CtwD,EAAE2nD,gBAAiB2K,IAElB7B,EAAKla,YACLka,EAAK7C,WACLrX,UAAYia,EAAKpvD,KAAKE,IAAItB,EAAEkB,EAAGlB,EAAE0wD,MAAQ,IACzC9C,SAAW,KACV5tD,EAAE6Q,EAAElP,QAOA,QAECgvD,GAAQ,IADbvvD,KAAKU,KAAK+F,EAAM,KACIlE,cAEpB,KACA,kCAGFitD,GAAaH,EAAM,EAAGzwD,EAAE6wD,MAAM9sD,GAAI,IAAI0sD,EAAK,IAAI,WAG/C8B,EACF7uD,EAAIogC,EACJ0uB,EAAK,IAAI/B,EAAK,GACT/sD,OACK1D,EAAE6wD,MAAM7wD,KACdsyD,EAAIvB,MAAMwB,EAAQ1B,MAAM2B,EAAGzB,MAAMwB,EAAQ1B,MAAM2B,aAG9C3C,GAAS7vD,EAAGywD,EAAKla,UAAYia,EAAIC,EAAK7C,SAAWuB,GAAI,IAkC9DJ,GAAE0D,eAAiB1D,GAAE2D,KAAO,eACtB5uB,EAAG0sB,EAAIrB,EAAItnD,EACb7H,EAAIE,KACJuwD,EAAOzwD,EAAEO,gBAENP,EAAEi1B,YAAcj1B,EAAE2nD,gBAAiB,IAAI8I,EAAKzwD,QAE5CywD,EAAKla,YACLka,EAAK7C,WACLrX,UAAYia,EAAKpvD,KAAKE,IAAItB,EAAEkB,EAAGlB,EAAE0wD,MAAQ,IACzC9C,SAAW,KACV5tD,EAAE6Q,EAAElP,QAEA,IACJivD,GAAaH,EAAM,EAAGzwD,EAAGA,GAAG,OAC3B,MAWD,IAAMoB,KAAKY,KAAK6F,IACZ,GAAK,GAAS,EAAJi8B,IAGd8sB,GAAaH,EAAM,IADnBzwD,EAAE6wD,MAAM,EAAIF,GAAQ,EAAG7sB,IACE9jC,GAAG,WAG5B2yD,EACFC,EAAK,IAAInC,EAAK,GACdoC,EAAM,IAAIpC,EAAK,IACfqC,EAAM,IAAIrC,EAAK,IACV3sB,OACK9jC,EAAE6wD,MAAM7wD,KACdA,EAAE6wD,MAAM+B,EAAG5B,KAAK2B,EAAQ9B,MAAMgC,EAAIhC,MAAM8B,GAAS3B,KAAK8B,eAIzDvc,UAAYia,IACZ5C,SAAWuB,EAETU,GAAS7vD,EAAGwwD,EAAIrB,GAAI,IAoB7BJ,GAAEgE,kBAAoBhE,GAAEiE,KAAO,eACzBxC,EAAIrB,EACNnvD,EAAIE,KACJuwD,EAAOzwD,EAAEO,mBAENP,EAAEi1B,WACHj1B,EAAE2nD,SAAiB,IAAI8I,EAAKzwD,MAE3BywD,EAAKla,YACLka,EAAK7C,WACLrX,UAAYia,EAAK,IACjB5C,SAAW,EAET6D,GAAOzxD,EAAE0yD,OAAQ1yD,EAAEqyD,OAAQ5B,EAAKla,UAAYia,EAAIC,EAAK7C,SAAWuB,IAR7C,IAAIsB,EAAKzwD,EAAEY,IA+BvCmuD,GAAEkE,cAAgBlE,GAAEplD,KAAO,eACrBupD,EACFlzD,EAAIE,KACJuwD,EAAOzwD,EAAEO,YACTujC,EAAI9jC,EAAEiC,MAAM8tD,IAAI,GAChBS,EAAKC,EAAKla,UACV4Y,EAAKsB,EAAK7C,oBAER9pB,EACW,IAANA,EAEH9jC,EAAEmzD,QAAUC,GAAM3C,EAAMD,EAAIrB,GAAM,IAAIsB,EAAK,GAE3C,IAAIA,EAAKH,KAGXtwD,EAAE2nD,SAAiByL,GAAM3C,EAAMD,EAAK,EAAGrB,GAAI0B,MAAM,OAIhDta,UAAYia,EAAK,IACjB5C,SAAW,IAEZ5tD,EAAE0W,SACG08C,GAAM3C,EAAMD,EAAK,EAAGrB,GAAI0B,MAAM,MAElCta,UAAYia,IACZ5C,SAAWuB,EAET+D,EAAOnC,MAAM/wD,KAuBtB+uD,GAAEsE,wBAA0BtE,GAAEuE,MAAQ,eAChC9C,EAAIrB,EACNnvD,EAAIE,KACJuwD,EAAOzwD,EAAEO,mBAEPP,EAAEuzD,IAAI,GAAW,IAAI9C,EAAKzwD,EAAE0xD,GAAG,GAAK,EAAIpB,KACvCtwD,EAAEi1B,cAEFw7B,EAAKla,YACLka,EAAK7C,WACLrX,UAAYia,EAAKpvD,KAAKE,IAAIF,KAAKa,IAAIjC,EAAEkB,GAAIlB,EAAE0wD,MAAQ,IACnD9C,SAAW,MACL,IAEP5tD,EAAE6wD,MAAM7wD,GAAG+wD,MAAM,GAAG/uD,OAAOgvD,KAAKhxD,OAEzB,IACNu2C,UAAYia,IACZ5C,SAAWuB,EAETnvD,EAAEwzD,MAdiB,IAAI/C,EAAKzwD,IAkCrC+uD,GAAE0E,sBAAwB1E,GAAE2E,MAAQ,eAC9BlD,EAAIrB,EACNnvD,EAAIE,KACJuwD,EAAOzwD,EAAEO,mBAENP,EAAEi1B,YAAcj1B,EAAE2nD,SAAiB,IAAI8I,EAAKzwD,MAE5CywD,EAAKla,YACLka,EAAK7C,WACLrX,UAAYia,EAAK,EAAIpvD,KAAKE,IAAIF,KAAKa,IAAIjC,EAAEkB,GAAIlB,EAAE0wD,MAAQ,IACvD9C,SAAW,MACL,IAEP5tD,EAAE6wD,MAAM7wD,GAAGgxD,KAAK,GAAGhvD,OAAOgvD,KAAKhxD,OAExB,IACNu2C,UAAYia,IACZ5C,SAAWuB,EAETnvD,EAAEwzD,OAuBXzE,GAAE4E,yBAA2B5E,GAAE6E,MAAQ,eACjCpD,EAAIrB,EAAI0E,EAAKC,EACf9zD,EAAIE,KACJuwD,EAAOzwD,EAAEO,mBAENP,EAAEi1B,WACHj1B,EAAEkB,GAAK,EAAU,IAAIuvD,EAAKzwD,EAAEiC,MAAMyvD,GAAG,GAAK1xD,EAAEY,EAAI,EAAIZ,EAAE2nD,SAAW3nD,EAAIswD,QAEpEG,EAAKla,YACLka,EAAK7C,WACJ5tD,EAAE0wD,KAEJtvD,KAAKE,IAAIwyD,EAAKtD,GAAM,GAAKxwD,EAAEkB,EAAI,EAAU2uD,GAAS,IAAIY,EAAKzwD,GAAIwwD,EAAIrB,GAAI,MAEtE5Y,UAAYsd,EAAMC,EAAM9zD,EAAEkB,IAE3BuwD,GAAOzxD,EAAEgxD,KAAK,GAAI,IAAIP,EAAK,GAAGM,MAAM/wD,GAAI6zD,EAAMrD,EAAI,KAEjDja,UAAYia,EAAK,IACjB5C,SAAW,IAEZ5tD,EAAEwzD,OAEDjd,UAAYia,IACZ5C,SAAWuB,EAETnvD,EAAE6wD,MAAM,MArBW,IAAIJ,EAAKH,MA8CrCvB,GAAEgF,YAAchF,GAAEr4C,KAAO,eACnBw8C,EAAQpvB,EACV0sB,EAAIrB,EACJnvD,EAAIE,KACJuwD,EAAOzwD,EAAEO,mBAEPP,EAAE2nD,SAAiB,IAAI8I,EAAKzwD,MAE5BA,EAAEiC,MAAM8tD,IAAI,KACXU,EAAKla,YACLka,EAAK7C,cAEN9pB,EAGQ,IAANA,MACOsvB,GAAM3C,EAAMD,EAAK,EAAGrB,GAAI0B,MAAM,KAChCjwD,EAAIZ,EAAEY,EACNsyD,GAIF,IAAIzC,EAAKH,QAKb/Z,UAAYia,EAAK,IACjB5C,SAAW,IAEZ5tD,EAAE8xD,IAAI,IAAIrB,EAAK,GAAGM,MAAM/wD,EAAE6wD,MAAM7wD,IAAIgC,OAAOgvD,KAAK,IAAIgD,SAEnDzd,UAAYia,IACZ5C,SAAWuB,EAETnvD,EAAE6wD,MAAM,MAsBjB9B,GAAEkF,eAAiBlF,GAAEiF,KAAO,eACtBtwD,EAAGkjB,EAAGkd,EAAG//B,EAAGmwD,EAAIlwD,EAAGyF,EAAGoqD,EAAK3+C,EAC7BlV,EAAIE,KACJuwD,EAAOzwD,EAAEO,YACTiwD,EAAKC,EAAKla,UACV4Y,EAAKsB,EAAK7C,YAEP5tD,EAAEi1B,eAOIj1B,EAAE2nD,gBACJ,IAAI8I,EAAKzwD,MACPA,EAAEiC,MAAMyvD,GAAG,IAAMlB,EAAK,GAAK1B,YAChCsE,GAAM3C,EAAMD,EAAK,EAAGrB,GAAI0B,MAAM,MAChCjwD,EAAIZ,EAAEY,EACD6I,MAZU,KACZzJ,EAAEY,SAAU,IAAI6vD,EAAKH,QACtBE,EAAK,GAAK1B,YACRsE,GAAM3C,EAAMD,EAAK,EAAGrB,GAAI0B,MAAM,KAChCjwD,EAAIZ,EAAEY,EACD6I,QAUN8sC,UAAYsd,EAAMrD,EAAK,KACvB5C,SAAW,EAUXlqD,IAFDtC,KAAKC,IAAI,GAAIwyD,EAz1BN,EAy1BuB,EAAI,GAE1BnwD,IAAKA,IAAO1D,EAAE8xD,IAAI9xD,EAAE6wD,MAAM7wD,GAAGgxD,KAAK,GAAGhvD,OAAOgvD,KAAK,YAElD,IAEP5vD,KAAKU,KAAK+xD,EA/1BH,KAg2BP,IACC7zD,EAAE6wD,MAAM7wD,KACT,IAAIywD,EAAKzwD,KACRA,OAGE0D,QACAwwD,EAAGrD,MAAM37C,KACVzL,EAAEsnD,MAAMmD,EAAGpC,IAAI/tD,GAAK,MAEnBmwD,EAAGrD,MAAM37C,QAGC,OAFXlR,EAAEgtD,KAAKkD,EAAGpC,IAAI/tD,GAAK,KAEjB8M,EAAE+V,OAAoBljB,EAAIkjB,EAAGnd,EAAEoH,EAAEnN,KAAOM,EAAE6M,EAAEnN,IAAMA,aAGtDogC,MAAOr6B,EAAEonD,MAAM,GAAM/sB,EAAI,QAElB,EAEJ+rB,GAASpmD,EAAGgnD,EAAKla,UAAYia,EAAIC,EAAK7C,SAAWuB,GAAI,IAQ9DJ,GAAE95B,SAAW,mBACF/0B,KAAK2Q,GAQhBk+C,GAAE9F,UAAY8F,GAAEoF,MAAQ,mBACbj0D,KAAK2Q,GAAKy9C,GAAUpuD,KAAKgB,EAt4BvB,GAs4BuChB,KAAK2Q,EAAElP,OAAS,GAQpEotD,GAAEp2B,MAAQ,kBACAz4B,KAAKU,GAQfmuD,GAAEqF,WAAarF,GAAEoE,MAAQ,kBAChBjzD,KAAKU,EAAI,GAQlBmuD,GAAEsF,WAAatF,GAAEuF,MAAQ,kBAChBp0D,KAAKU,EAAI,GAQlBmuD,GAAEpH,OAAS,mBACAznD,KAAK2Q,GAAmB,IAAd3Q,KAAK2Q,EAAE,IAQ5Bk+C,GAAEwF,SAAWxF,GAAE7sB,GAAK,SAAUjiC,UACrBC,KAAK6vD,IAAI9vD,GAAK,GAQvB8uD,GAAEyF,kBAAoBzF,GAAEwE,IAAM,SAAUtzD,UAC/BC,KAAK6vD,IAAI9vD,GAAK,GAkCvB8uD,GAAE0F,UAAY1F,GAAE5pD,IAAM,SAAUuvD,OAC1BC,EAAU9jD,EAAGzD,EAAa02B,EAAG8wB,EAAKC,EAAKnE,EAAIjnD,EAC7C82C,EAAMrgD,KACNuwD,EAAOlQ,EAAIhgD,YACXiwD,EAAKC,EAAKla,UACV4Y,EAAKsB,EAAK7C,YAIA,MAAR8G,IACK,IAAIjE,EAAK,OACL,MACN,SACE,IAAIA,EAAKiE,IACP7jD,EAGL6jD,EAAK9zD,EAAI,IAAMiQ,IAAMA,EAAE,IAAM6jD,EAAKhD,GAAG,UAAW,IAAIjB,EAAKH,OAElDoE,EAAKhD,GAAG,SAGjBnR,EAAI1vC,EAGJ0vC,EAAI3/C,EAAI,IAAMiQ,IAAMA,EAAE,IAAM0vC,EAAImR,GAAG,UAC9B,IAAIjB,EAAK5/C,IAAMA,EAAE,IAAK,EAAA,EAAkB,GAAT0vC,EAAI3/C,EAAS0vD,IAAMz/C,EAAI,EAAI,EAAA,MAK/D8jD,KACE9jD,EAAElP,OAAS,KACP,MACD,KACAmiC,EAAIjzB,EAAE,GAAIizB,EAAI,IAAO,MAAS,KACvB,IAANA,SAIC,IAELgxB,GAAiBvU,IADlBiQ,EAnCK,KAqCImE,EAAWI,GAAQtE,EAAMC,EAAK,IAAMoE,GAAiBJ,EAAMhE,GAmBrEsE,MAhBAvD,GAAOoD,EAAKznD,EAAasjD,EAAI,IAgBP7/C,EAAGizB,EAAI0sB,EAAIrB,WAI3B2F,GAAiBvU,KADjB,MAEQoU,EAAWI,GAAQtE,EAAMC,EAAK,IAAMoE,GAAiBJ,EAAMhE,KACrEe,GAAOoD,EAAKznD,EAAasjD,EAAI,IAE5BkE,EAAK,EAGHpD,GAAe/nD,EAAEoH,GAAG0R,MAAMuhB,EAAI,EAAGA,EAAI,IAAM,GAAK,SAC/C+rB,GAASpmD,EAAG+mD,EAAK,EAAG,iBAKrBwE,GAAoBvrD,EAAEoH,EAAGizB,GAAK,GAAIqrB,eAGlC,EAEJU,GAASpmD,EAAG+mD,EAAIrB,IAiDzBJ,GAAEgC,MAAQhC,GAAEvhD,IAAM,SAAUvN,OACtB4Q,EAAG3P,EAAGwC,EAAGkjB,EAAGkd,EAAGj8B,EAAK2oD,EAAIrB,EAAIe,EAAI+E,EAAIC,EAAM/E,EAC5CnwD,EAAIE,KACJuwD,EAAOzwD,EAAEO,iBAEP,IAAIkwD,EAAKxwD,IAGRD,EAAE6Q,IAAM5Q,EAAE4Q,SAGR7Q,EAAEY,GAAMX,EAAEW,EAGNZ,EAAE6Q,IAAKjQ,GAAKX,EAAEW,IAKd,IAAI6vD,EAAKxwD,EAAE4Q,GAAK7Q,EAAEY,IAAMX,EAAEW,EAAIZ,EAAIswD,OARrB,IAAIG,EAAKH,KAUxBrwD,KAILD,EAAEY,GAAKX,EAAEW,WACTA,GAAKX,EAAEW,EACFZ,EAAEgxD,KAAK/wD,QAGXD,EAAE6Q,IACF5Q,EAAE4Q,IACF4/C,EAAKla,YACLka,EAAK7C,UAGLsC,EAAG,KAAOC,EAAG,GAAI,IAGhBA,EAAG,KAAMvvD,GAAKX,EAAEW,WAGXsvD,EAAG,UAIA,IAAIO,EAAY,IAAPtB,KAAgB,KAJjB,IAAIsB,EAAKzwD,UAMtBmuD,GAAW0B,GAAS5vD,EAAGuwD,EAAIrB,GAAMlvD,OAMtCquD,GAAUruD,EAAEiB,EAzpCL,KA0pCNotD,GAAUtuD,EAAEkB,EA1pCN,KA4pCNgvD,EAAG3tC,UACJ0yC,EAAK/zD,EAGF,QACE4iC,EAAI,MAGLosB,KACCpsB,IACCqsB,EAAGxuD,WAELwuD,IACA8E,IACE/E,EAAGvuD,QAQPmiC,KAFA1iC,KAAKE,IAAIF,KAAKU,KAAK0uD,EAhrCd,GAgrC8B3oD,GAAO,OAGxCnE,IACF/B,OAAS,KAIXguD,UACGjsD,EAAIogC,EAAGpgC,OAAQqsB,KAAK,KACvB4/B,cAGG,WAIDO,EAAGvuD,WACDwuD,EAAGxuD,aAEO+B,GAEXA,EAAI,EAAGA,EAAImE,EAAKnE,OACfwsD,EAAGxsD,IAAMysD,EAAGzsD,GAAI,GACXwsD,EAAGxsD,GAAKysD,EAAGzsD,WAKlB,MAGFwxD,MACEhF,IACCC,IACAt/C,IACHjQ,GAAKX,EAAEW,KAGLsvD,EAAGvuD,OAIJ+B,EAAIysD,EAAGxuD,OAASkG,EAAKnE,EAAI,IAAKA,IAAMmE,KAAS,MAG7CnE,EAAIysD,EAAGxuD,OAAQ+B,EAAIogC,GAAI,IAEtBosB,IAAKxsD,GAAKysD,EAAGzsD,GAAI,KACdkjB,EAAIljB,EAAGkjB,GAAiB,IAAZspC,IAAKtpC,MAAcA,GAAKgoC,GAAO,IAC9CsB,EAAGtpC,KACFljB,IAAMkrD,KAGRlrD,IAAMysD,EAAGzsD,QAIO,IAAdwsD,IAAKroD,MAAgB85B,WAGX,IAAVuuB,EAAG,GAAUA,EAAGxf,UAAWxvC,SAG7BgvD,EAAG,MAENr/C,EAAIq/C,IACJhvD,EAAIi0D,GAAkBjF,EAAIhvD,GAErBitD,GAAW0B,GAAS5vD,EAAGuwD,EAAIrB,GAAMlvD,GALrB,IAAIwwD,EAAY,IAAPtB,KAAgB,IAiC9CJ,GAAElB,OAASkB,GAAEqG,IAAM,SAAUn1D,OACvBoF,EACFrF,EAAIE,KACJuwD,EAAOzwD,EAAEO,qBAEP,IAAIkwD,EAAKxwD,IAGRD,EAAE6Q,IAAM5Q,EAAEW,GAAKX,EAAE4Q,IAAM5Q,EAAE4Q,EAAE,GAAW,IAAI4/C,EAAKH,MAG/CrwD,EAAE4Q,GAAK7Q,EAAE6Q,IAAM7Q,EAAE6Q,EAAE,GACfg/C,GAAS,IAAIY,EAAKzwD,GAAIywD,EAAKla,UAAWka,EAAK7C,eAIzC,EAEQ,GAAf6C,EAAK5C,UAIH4D,GAAOzxD,EAAGC,EAAEgC,MAAO,EAAG,EAAG,IAC3BrB,GAAKX,EAAEW,IAEL6wD,GAAOzxD,EAAGC,EAAG,EAAGwwD,EAAK5C,OAAQ,KAG/BxoD,EAAEwrD,MAAM5wD,OAED,EAEJD,EAAE+wD,MAAM1rD,KAUjB0pD,GAAEsG,mBAAqBtG,GAAEpqD,IAAM,kBACtB0wD,GAAmBn1D,OAS5B6uD,GAAE+F,iBAAmB/F,GAAEyE,GAAK,kBACnBsB,GAAiB50D,OAS1B6uD,GAAEuG,QAAUvG,GAAEmC,IAAM,eACdlxD,EAAI,IAAIE,KAAKK,YAAYL,eAC3BU,GAAKZ,EAAEY,EACFivD,GAAS7vD,IAyBlB+uD,GAAEiC,KAAOjC,GAAEtrC,IAAM,SAAUxjB,OACrBs1D,EAAO1kD,EAAG3P,EAAGwC,EAAGogC,EAAGj8B,EAAK2oD,EAAIrB,EAAIe,EAAIC,EACtCnwD,EAAIE,KACJuwD,EAAOzwD,EAAEO,iBAEP,IAAIkwD,EAAKxwD,IAGRD,EAAE6Q,IAAM5Q,EAAE4Q,SAGR7Q,EAAEY,GAAMX,EAAEW,EAMLZ,EAAE6Q,MAAO,IAAI4/C,EAAKxwD,EAAE4Q,GAAK7Q,EAAEY,IAAMX,EAAEW,EAAIZ,EAAIswD,QAN/B,IAAIG,EAAKH,KAQxBrwD,KAILD,EAAEY,GAAKX,EAAEW,WACTA,GAAKX,EAAEW,EACFZ,EAAE+wD,MAAM9wD,QAGZD,EAAE6Q,IACF5Q,EAAE4Q,IACF4/C,EAAKla,YACLka,EAAK7C,UAGLsC,EAAG,KAAOC,EAAG,UAIXA,EAAG,OAAQ,IAAIM,EAAKzwD,IAElBmuD,GAAW0B,GAAS5vD,EAAGuwD,EAAIrB,GAAMlvD,OAMtCquD,GAAUtuD,EAAEkB,EAz5CL,KA05CPotD,GAAUruD,EAAEiB,EA15CL,KA45CNgvD,EAAG3tC,UACJuhB,EAAI5iC,EAGD,KAEDwC,EAAI,KACFwsD,KACCxsD,IACCysD,EAAGxuD,WAELwuD,IACArsB,IACEosB,EAAGvuD,QAOP+B,QAHAtC,KAAKU,KAAK0uD,EA76CL,IA86CC3oD,EAAMi8B,EAAI,EAAIj8B,EAAM,OAGxBA,IACFlG,OAAS,KAIXguD,UACKjsD,OAAQqsB,KAAK,KAClB4/B,iBAGEO,EAAGvuD,WACLwuD,EAAGxuD,QAGO,MACRkG,IACAsoD,IACCD,IACAr/C,GAIF0kD,EAAQ,EAAG7xD,UACAA,GAAKwsD,EAAGxsD,GAAKysD,EAAGzsD,GAAK6xD,GAAS3G,GAAO,IAChDlrD,IAAMkrD,OAGP2G,MACCjO,QAAQiO,KACTr0D,GAKC2G,EAAMqoD,EAAGvuD,OAAqB,GAAbuuD,IAAKroD,MAAe85B,eAExC9wB,EAAIq/C,IACJhvD,EAAIi0D,GAAkBjF,EAAIhvD,GAErBitD,GAAW0B,GAAS5vD,EAAGuwD,EAAIrB,GAAMlvD,GAU1C8uD,GAAExY,UAAYwY,GAAE2B,GAAK,SAAUxqD,OACzB49B,EACF9jC,EAAIE,aAEI,IAANgG,GAAgBA,MAAQA,GAAW,IAANA,GAAiB,IAANA,QAAe5F,MAAM8tD,GAAkBloD,UAE/ElG,EAAE6Q,KACA2kD,GAAax1D,EAAE6Q,GACf3K,GAAKlG,EAAEkB,EAAI,EAAI4iC,MAAO9jC,EAAEkB,EAAI,MAE5BovD,IAGCxsB,GASTirB,GAAEhtD,MAAQ,eACJ/B,EAAIE,KACNuwD,EAAOzwD,EAAEO,mBAEJsvD,GAAS,IAAIY,EAAKzwD,GAAIA,EAAEkB,EAAI,EAAGuvD,EAAK7C,WAmB7CmB,GAAE0G,KAAO1G,GAAE3rD,IAAM,eACXotD,EAAIrB,EACNnvD,EAAIE,KACJuwD,EAAOzwD,EAAEO,mBAENP,EAAEi1B,WACHj1B,EAAE2nD,SAAiB,IAAI8I,EAAKzwD,MAE3BywD,EAAKla,YACLka,EAAK7C,WACLrX,UAAYia,EAAKpvD,KAAKE,IAAItB,EAAEkB,EAAGlB,EAAE0wD,MAzhD3B,IA0hDN9C,SAAW,IA+7DlB,SAAc6C,EAAMzwD,OACd8jC,EACFj8B,EAAM7H,EAAE6Q,EAAElP,UAERkG,EAAM,SAAU+oD,GAAaH,EAAM,EAAGzwD,EAAGA,QAOzC,IAAMoB,KAAKY,KAAK6F,IACZ,GAAK,GAAS,EAAJi8B,IAEd9jC,EAAE6wD,MAAM,EAAIF,GAAQ,EAAG7sB,MACvB8sB,GAAaH,EAAM,EAAGzwD,EAAGA,WAGzB01D,EACF9C,EAAK,IAAInC,EAAK,GACdoC,EAAM,IAAIpC,EAAK,IACfqC,EAAM,IAAIrC,EAAK,IACV3sB,OACI9jC,EAAE6wD,MAAM7wD,KACbA,EAAE6wD,MAAM+B,EAAG5B,KAAK0E,EAAO7E,MAAMgC,EAAIhC,MAAM6E,GAAQ3E,MAAM+B,aAGpD9yD,EAx9DHy1D,CAAKhF,EAAMQ,GAAiBR,EAAMzwD,MAEjCu2C,UAAYia,IACZ5C,SAAWuB,EAETU,GAAS7C,GAAW,EAAIhtD,EAAEkxD,MAAQlxD,EAAGwwD,EAAIrB,GAAI,IAb1B,IAAIsB,EAAKH,MA6BrCvB,GAAE4G,WAAa5G,GAAE/sD,KAAO,eAClBf,EAAG8C,EAAG2sD,EAAIjnD,EAAG4nD,EAAKrtD,EACpBhE,EAAIE,KACJ2Q,EAAI7Q,EAAE6Q,EACN3P,EAAIlB,EAAEkB,EACNN,EAAIZ,EAAEY,EACN6vD,EAAOzwD,EAAEO,eAGD,IAANK,IAAYiQ,IAAMA,EAAE,UACf,IAAI4/C,GAAM7vD,GAAKA,EAAI,KAAOiQ,GAAKA,EAAE,IAAMy/C,IAAMz/C,EAAI7Q,EAAI,EAAA,WAGnD,EAOF,MAJLoB,KAAKY,MAAMhC,KAIDY,GAAK,EAAA,OACb4wD,GAAe3gD,IAEZlP,OAAST,GAAK,GAAK,OAAQ,OAC9BE,KAAKY,KAAK+B,KACVuqD,MAAe,GAAK,MAAU,GAAKptD,EAAI,KASvC,IAAIuvD,IAPJ7vD,GAAK,EAAA,EACH,KAAOM,KAEPN,EAAEmlD,iBACAxjC,MAAM,EAAGxe,EAAEykC,QAAQ,KAAO,GAAKtnC,MAKnC,IAAIuvD,EAAK7vD,EAAE+C,iBAGP8sD,EAAKla,WAAa,YAItB9sC,GACEunD,KAAKS,GAAOzxD,EAAGgE,EAAG0sD,EAAK,EAAG,IAAIG,MAAM,IAGtCW,GAAextD,EAAE6M,GAAG0R,MAAM,EAAGmuC,QAAac,GAAe/nD,EAAEoH,IAAI0R,MAAM,EAAGmuC,GAAK,IAKtE,WAJL3sD,EAAEwe,MAAMmuC,EAAK,EAAGA,EAAK,MAILW,GAAY,QAALttD,GAepB,EAICA,KAAOA,EAAEwe,MAAM,IAAqB,KAAfxe,EAAE4d,OAAO,SAGzBlY,EAAGvI,EAAI,EAAG,MACduI,EAAEonD,MAAMpnD,GAAGioD,GAAG1xD,cAnBhBqxD,OACMrtD,EAAG9C,EAAI,EAAG,GAEf8C,EAAE6sD,MAAM7sD,GAAG0tD,GAAG1xD,IAAI,GAChBgE,WAKF,IACA,aAiBD,EAEJ6rD,GAASpmD,EAAGvI,EAAGuvD,EAAK7C,SAAU3sD,IAiBvC8tD,GAAE6G,QAAU7G,GAAEpvC,IAAM,eACd6wC,EAAIrB,EACNnvD,EAAIE,KACJuwD,EAAOzwD,EAAEO,mBAENP,EAAEi1B,WACHj1B,EAAE2nD,SAAiB,IAAI8I,EAAKzwD,MAE3BywD,EAAKla,YACLka,EAAK7C,WACLrX,UAAYia,EAAK,KACjB5C,SAAW,KAEZ5tD,EAAEoD,OACJxC,EAAI,IACF6wD,GAAOzxD,EAAG,IAAIywD,EAAK,GAAGM,MAAM/wD,EAAE6wD,MAAM7wD,IAAIgC,OAAQwuD,EAAK,GAAI,KAExDja,UAAYia,IACZ5C,SAAWuB,EAETU,GAAqB,GAAZ7C,IAA6B,GAAZA,GAAgBhtD,EAAEkxD,MAAQlxD,EAAGwwD,EAAIrB,GAAI,IAf5C,IAAIsB,EAAKH,MAwCrCvB,GAAE8B,MAAQ9B,GAAEtH,IAAM,SAAUxnD,OACtBs1D,EAAOr0D,EAAGwC,EAAGogC,EAAGr6B,EAAGosD,EAAI7xD,EAAGgsD,EAAKC,EACjCjwD,EAAIE,KACJuwD,EAAOzwD,EAAEO,YACT2vD,EAAKlwD,EAAE6Q,EACPs/C,KAAU,IAAIM,EAAKxwD,IAAI4Q,OAEvBjQ,GAAKZ,EAAEY,IAGJsvD,GAAOA,EAAG,IAAOC,GAAOA,EAAG,WAEvB,IAAIM,GAAMxwD,EAAEW,GAAKsvD,IAAOA,EAAG,KAAOC,GAAMA,IAAOA,EAAG,KAAOD,EAI5DI,IAICJ,GAAOC,EAAqB,EAANlwD,EAAEW,EAAZX,EAAEW,EAAI,SAGrB0tD,GAAUtuD,EAAEkB,EA3tDL,GA2tDqBotD,GAAUruD,EAAEiB,EA3tDjC,MA4tDLgvD,EAAGvuD,WACHwuD,EAAGxuD,YAIHuuD,IACCC,IACA1mD,IACAumD,IACCC,IACA4F,KAIJ,GAECnyD,IADAssD,EAAMC,EACEvsD,OAAQqsB,KAAK,OAGrBrsB,EAAIusD,IAAOvsD,GAAK,GAAI,OACf,EACHogC,EAAIksB,EAAMtsD,EAAGogC,EAAIpgC,KAChB+F,EAAEq6B,GAAKqsB,EAAGzsD,GAAKwsD,EAAGpsB,EAAIpgC,EAAI,GAAK6xD,IACjCzxB,KAAO9/B,EAAI4qD,GAAO,IACZ5qD,EAAI4qD,GAAO,IAGnB9qB,MAAQA,GAAKyxB,GAAS3G,GAAO,QAIzBnlD,IAAIosD,MAAQl0B,aAEhB4zB,IAASr0D,IACNwvC,UAEL7/B,EAAIpH,IACJvI,EAAIi0D,GAAkB1rD,EAAGvI,GAEpBitD,GAAW0B,GAAS5vD,EAAGwwD,EAAKla,UAAWka,EAAK7C,UAAY3tD,GAcjE8uD,GAAE+G,SAAW,SAAUpF,EAAIvB,UAClB4G,GAAe71D,KAAM,EAAGwwD,EAAIvB,IAcrCJ,GAAEiH,gBAAkBjH,GAAEkH,KAAO,SAAUrE,EAAIzC,OACrCnvD,EAAIE,KACNuwD,EAAOzwD,EAAEO,qBAEP,IAAIkwD,EAAKzwD,QACF,IAAP4xD,EAAsB5xD,MAEf4xD,EAAI,EAt4DF,UAw4DF,IAAPzC,IAAoBsB,EAAK7C,YACbuB,EAAI,EAAG,GAEhBU,GAAS7vD,EAAG4xD,EAAK5xD,EAAEkB,EAAI,EAAGiuD,KAYnCJ,GAAEhJ,cAAgB,SAAU6L,EAAIzC,OAC1BrT,EACF97C,EAAIE,KACJuwD,EAAOzwD,EAAEO,wBAEA,IAAPqxD,IACIsE,GAAel2D,GAAG,OAEb4xD,EAAI,EA/5DJ,UAi6DA,IAAPzC,IAAoBsB,EAAK7C,YACbuB,EAAI,EAAG,KAGjB+G,KADFrG,GAAS,IAAIY,EAAKzwD,GAAI4xD,EAAK,EAAGzC,IACV,EAAMyC,EAAK,IAG9B5xD,EAAEmzD,UAAYnzD,EAAE2nD,SAAW,IAAM7L,EAAMA,GAoBhDiT,GAAEjJ,QAAU,SAAU8L,EAAIzC,OACpBrT,EAAK77C,EACPD,EAAIE,KACJuwD,EAAOzwD,EAAEO,wBAEA,IAAPqxD,IACIsE,GAAel2D,OAEV4xD,EAAI,EAp8DJ,UAs8DA,IAAPzC,IAAoBsB,EAAK7C,YACbuB,EAAI,EAAG,KAGjB+G,KADFrG,GAAS,IAAIY,EAAKzwD,GAAI4xD,EAAK5xD,EAAEkB,EAAI,EAAGiuD,IAChB,EAAOyC,EAAK3xD,EAAEiB,EAAI,IAKrClB,EAAEmzD,UAAYnzD,EAAE2nD,SAAW,IAAM7L,EAAMA,GAehDiT,GAAEoH,WAAa,SAAUC,OACnBvlD,EAAG5M,EAAIC,EAAIC,EAAIjD,EAAG4iC,EAAG//B,EAAGsyD,EAAIhnD,EAAImhD,EAAInrD,EAAGoE,EACzCzJ,EAAIE,KACJgwD,EAAKlwD,EAAE6Q,EACP4/C,EAAOzwD,EAAEO,gBAEN2vD,SAAW,IAAIO,EAAKzwD,QAEpBiE,EAAK,IAAIwsD,EAAK,KACd4F,EAAK,IAAI5F,EAAK,WAEf,IAAIA,EAAKvsD,IACPhD,EAAIs0D,GAAatF,GAAMlwD,EAAEkB,EAAI,GA34DxB,IA64DT2P,EAAE,GAAK09C,GAAQ,GAAIzqB,EAAI,EA74Dd,EA64D6BA,EAAIA,GAEhC,MAARsyB,IAGKl1D,EAAI,EAAI2P,EAAIxB,MACd,QACD,IAAIohD,EAAK2F,IACNjC,SAAWpwD,EAAEm+B,GAAG7yB,SAAW/O,MAAM8tD,GAAkBrqD,KACnDA,EAAEk+B,GAAGpxB,GAAM3P,EAAI,EAAI2P,EAAIxB,EAAMtL,UAG3B,IACP,IAAI0sD,EAAKe,GAAetB,MACvBO,EAAKla,YACLA,UAAYr1C,EA55DN,EA45DUgvD,EAAGvuD,OAAoB,IAGtC8vD,GAAO1tD,EAAG8M,EAAG,EAAG,EAAG,GAEH,MADf5M,EAAG+sD,KAAK3rD,EAAEwrD,MAAM3sD,KACd6rD,IAAIqG,MACNlyD,IACAC,IACAkL,IACAgnD,EAAGrF,KAAK3rD,EAAEwrD,MAAM1sD,MAChBA,IACA0M,IACD9M,EAAEgtD,MAAM1rD,EAAEwrD,MAAM1sD,MAChBA,WAGDstD,GAAO2E,EAAKrF,MAAM9sD,GAAKC,EAAI,EAAG,EAAG,KACjCmyD,EAAGrF,KAAK7sD,EAAG0sD,MAAMxhD,MACjBpL,EAAG+sD,KAAK7sD,EAAG0sD,MAAM3sD,MACnBtD,EAAIyO,EAAGzO,EAAIZ,EAAEY,IAGZ6wD,GAAOpiD,EAAInL,EAAIhD,EAAG,GAAG6vD,MAAM/wD,GAAGiC,MAAM8tD,IAAI0B,GAAO4E,EAAIpyD,EAAI/C,EAAG,GAAG6vD,MAAM/wD,GAAGiC,OAAS,EAC7E,CAACoN,EAAInL,GAAM,CAACmyD,EAAIpyD,KAEjBsyC,UAAYia,MACN,EAEJ/mD,GAcTslD,GAAEuH,cAAgBvH,GAAEwH,MAAQ,SAAU7F,EAAIvB,UACjC4G,GAAe71D,KAAM,GAAIwwD,EAAIvB,IAoBtCJ,GAAEyH,UAAY,SAAUv2D,EAAGkvD,OACrBnvD,EAAIE,KACNuwD,EAAOzwD,EAAEO,iBAEP,IAAIkwD,EAAKzwD,GAEJ,MAALC,EAAW,KAGRD,EAAE6Q,SAAU7Q,IAEb,IAAIywD,EAAK,KACRA,EAAK7C,aACL,MACD,IAAI6C,EAAKxwD,QACF,IAAPkvD,IACGsB,EAAK7C,YAECuB,EAAI,EAAG,IAIfnvD,EAAE6Q,SAAU5Q,EAAEW,EAAIZ,EAAIC,MAGtBA,EAAE4Q,SACD5Q,EAAEW,MAAKA,EAAIZ,EAAEY,GACVX,SAKPA,EAAE4Q,EAAE,QACK,IACP4gD,GAAOzxD,EAAGC,EAAG,EAAGkvD,EAAI,GAAG0B,MAAM5wD,OACtB,KACFD,OAIPY,EAAIZ,EAAEY,IACJX,GAGCD,GAST+uD,GAAElC,SAAW,kBACH3sD,MAcV6uD,GAAE0H,QAAU,SAAU/F,EAAIvB,UACjB4G,GAAe71D,KAAM,EAAGwwD,EAAIvB,IA+CrCJ,GAAE2H,QAAU3H,GAAE7pD,IAAM,SAAUjF,OACxBiB,EAAG4iC,EAAG0sB,EAAI/mD,EAAG0lD,EAAIvuD,EACnBZ,EAAIE,KACJuwD,EAAOzwD,EAAEO,YACTo2D,MAAW,IAAIlG,EAAKxwD,SAGjBD,EAAE6Q,GAAM5Q,EAAE4Q,GAAM7Q,EAAE6Q,EAAE,IAAO5Q,EAAE4Q,EAAE,WAAW,IAAI4/C,EAAKlC,IAASvuD,EAAG22D,UAEhE,IAAIlG,EAAKzwD,IAEP0xD,GAAG,UAAW1xD,OAEfywD,EAAKla,YACLka,EAAK7C,SAEN3tD,EAAEyxD,GAAG,UAAW7B,GAAS7vD,EAAGwwD,EAAIrB,SAGhCb,GAAUruD,EAAEiB,EAlmEL,KAqmEFjB,EAAE4Q,EAAElP,OAAS,MAAUg1D,EAAK,GAAKA,EAAKA,IApmE5B,0BAqmEbC,GAAOnG,EAAMzwD,EAAG8jC,EAAG0sB,GAChBvwD,EAAEW,EAAI,EAAI,IAAI6vD,EAAK,GAAGqB,IAAIroD,GAAKomD,GAASpmD,EAAG+mD,EAAIrB,SAGpDnvD,EAAEY,GAGE,EAAG,IAGLM,EAAIjB,EAAE4Q,EAAElP,OAAS,SAAU,IAAI8uD,EAAKH,QAGpB,IAAN,IAAPz/C,EAAE3P,QAAkB,GAGhB,GAAPlB,EAAEkB,GAAoB,GAAVlB,EAAE6Q,EAAE,IAAyB,GAAd7Q,EAAE6Q,EAAElP,gBAC/Bf,EAAIA,EACCZ,WASF,MADLuuD,IAASvuD,EAAG22D,KACD1hC,SAAS6O,GAEpB,IAAI2sB,EAAK3sB,EAAI,IAAI5iC,EADjBotD,GAAUqI,QAAWxxD,IAAI,KAAOqsD,GAAexxD,EAAE6Q,IAAMzP,KAAKssD,KAAO1tD,EAAEkB,EAAI,KAMrEuvD,EAAKxC,KAAO,GAAK/sD,EAAIuvD,EAAKzC,KAAO,EAAU,IAAIyC,EAAKvvD,EAAI,EAAIN,EAAI,EAAI,QAEjE,IACNgtD,SAAW5tD,EAAEY,EAAI,IAMlBQ,KAAKC,IAAI,MAAS,IAAIM,WAGtB0zD,GAAmBp1D,EAAE4wD,MAAMiE,GAAiB90D,EAAGwwD,EAAK1sB,IAAK0sB,IAGvD3/C,GAOAmkD,MAJAnF,GAASpmD,EAAG+mD,EAAK,EAAG,IAIE3/C,EAAG2/C,EAAIrB,OAC3BqB,EAAK,IAMJgB,MAHD3B,GAASwF,GAAmBp1D,EAAE4wD,MAAMiE,GAAiB90D,EAAGkB,EAAI4iC,IAAK5iC,GAAIA,EAAI,EAAG,IAG1D2P,GAAG0R,MAAMiuC,EAAK,EAAGA,EAAK,IAAM,GAAK,SACjDX,GAASpmD,EAAG+mD,EAAK,EAAG,OAK5B5vD,EAAIA,MACK,IACNgtD,SAAWuB,EAETU,GAASpmD,EAAG+mD,EAAIrB,KAezBJ,GAAE/H,YAAc,SAAU0J,EAAIvB,OACxBrT,EACF97C,EAAIE,KACJuwD,EAAOzwD,EAAEO,wBAEA,IAAPmwD,IACIwF,GAAel2D,EAAGA,EAAEkB,GAAKuvD,EAAK3C,UAAY9tD,EAAEkB,GAAKuvD,EAAK1C,cAEjD2C,EAAI,EAryEJ,UAuyEA,IAAPvB,IAAoBsB,EAAK7C,YACbuB,EAAI,EAAG,KAGjB+G,KADFrG,GAAS,IAAIY,EAAKzwD,GAAI0wD,EAAIvB,GACNuB,GAAM1wD,EAAEkB,GAAKlB,EAAEkB,GAAKuvD,EAAK3C,SAAU4C,IAGtD1wD,EAAEmzD,UAAYnzD,EAAE2nD,SAAW,IAAM7L,EAAMA,GAkBhDiT,GAAEnH,oBAAsBmH,GAAE8H,KAAO,SAAUnG,EAAIvB,OAE3CsB,EADMvwD,KACGK,wBAEA,IAAPmwD,KACGD,EAAKla,YACLka,EAAK7C,cAEC8C,EAAI,EAx0EJ,UA00EA,IAAPvB,IAAoBsB,EAAK7C,YACbuB,EAAI,EAAG,IAGlBU,GAAS,IAAIY,EAbZvwD,MAaqBwwD,EAAIvB,IAWnCJ,GAAEprD,SAAW,eACP3D,EAAIE,KACNuwD,EAAOzwD,EAAEO,YACTu7C,EAAMoa,GAAel2D,EAAGA,EAAEkB,GAAKuvD,EAAK3C,UAAY9tD,EAAEkB,GAAKuvD,EAAK1C,iBAEvD/tD,EAAEmzD,UAAYnzD,EAAE2nD,SAAW,IAAM7L,EAAMA,GAQhDiT,GAAE+H,UAAY/H,GAAEgI,MAAQ,kBACflH,GAAS,IAAI3vD,KAAKK,YAAYL,MAAOA,KAAKgB,EAAI,EAAG,IAS1D6tD,GAAErW,QAAUqW,GAAE5B,OAAS,eACjBntD,EAAIE,KACNuwD,EAAOzwD,EAAEO,YACTu7C,EAAMoa,GAAel2D,EAAGA,EAAEkB,GAAKuvD,EAAK3C,UAAY9tD,EAAEkB,GAAKuvD,EAAK1C,iBAEvD/tD,EAAEmzD,QAAU,IAAMrX,EAAMA,GA6NjC,IAAI2V,GAAU,sBAGazxD,EAAG8jC,EAAG4wB,OACzBsC,EACFzB,EAAQ,EACR7xD,EAAI1D,EAAE2B,WAEH3B,EAAIA,EAAEuiB,QAAS7e,OACX1D,EAAE0D,GAAKogC,EAAIyxB,IAChB7xD,GAAKszD,EAAOtC,EAAO,IACbsC,EAAOtC,EAAO,SAGpBa,KAASjO,QAAQiO,GAEdv1D,aAGQa,EAAGC,EAAGm2D,EAAIC,OACrBxzD,EAAG+F,KAEHwtD,GAAMC,IACJD,EAAKC,EAAK,cAETxzD,EAAI+F,EAAI,EAAG/F,EAAIuzD,EAAIvzD,OAClB7C,EAAE6C,IAAM5C,EAAE4C,GAAI,GACZ7C,EAAE6C,GAAK5C,EAAE4C,GAAK,kBAMjB+F,aAGS5I,EAAGC,EAAGm2D,EAAIvC,WACtBhxD,EAAI,EAGDuzD,OACHA,IAAOvzD,IACL7C,EAAEo2D,GAAMn2D,EAAEm2D,GAAM,EAAI,IACtBA,GAAMvzD,EAAIgxD,EAAO7zD,EAAEo2D,GAAMn2D,EAAEm2D,SAIvBp2D,EAAE,IAAMA,EAAEc,OAAS,KAAM+uC,eAG5B,SAAU1wC,EAAGC,EAAGuwD,EAAIrB,EAAIyC,EAAI8C,OAC7B3E,EAAK7uD,EAAGwC,EAAGogC,EAAGqzB,EAASC,EAAMC,EAAMC,EAAOjyD,EAAGkyD,EAAIC,EAAKC,EAAMC,EAAMhH,EAAI1sD,EAAG2zD,EAAIC,EAAIC,EACnFC,EAAI9oD,EACJyhD,EAAOzwD,EAAEO,YACTkpB,EAAOzpB,EAAEY,GAAKX,EAAEW,EAAI,KACpBsvD,EAAKlwD,EAAE6Q,EACPs/C,EAAKlwD,EAAE4Q,OAGJq/C,GAAOA,EAAG,IAAOC,GAAOA,EAAG,WAEvB,IAAIM,EACRzwD,EAAEY,GAAMX,EAAEW,OAAWuvD,GAAMD,EAAG,IAAMC,EAAG,GAAMA,GAG9CD,GAAe,GAATA,EAAG,KAAYC,EAAY,EAAP1mC,EAAWA,EAAO,EAHQ6mC,SAMpDoE,KACQ,IACN10D,EAAEkB,EAAIjB,EAAEiB,MAEL0tD,KA3jFA,IA6jFHN,GAAUtuD,EAAEkB,EAAIi2D,GAAW7I,GAAUruD,EAAEiB,EAAIi2D,MAG5ChH,EAAGxuD,SACHuuD,EAAGvuD,YACJ,IAAI8uD,EAAKhnC,IACN5Y,EAAI,GAINnN,EAAI,EAAGysD,EAAGzsD,OAAUA,IAAM,GAAIA,QAE/BysD,EAAGzsD,MAASA,IAAM,QAEZ,MAAN8sD,KACGA,EAAKC,EAAKla,YACVka,EAAK7C,YACDgE,EACJpB,KAAQtvD,EAAIjB,EAAEiB,GAAK,EAEnBsvD,EAGHE,EAAK,IACJ3gC,KAAK,MACD,MACF,MAGA2gC,EAAKyG,EAAU,EAAI,IACpB,EAGM,GAANW,EAAS,OACP,IACC3H,EAAG,UAIIyH,GAAM9zB,IAAM4sB,IAAMhtD,MACxBogC,EAAI4wB,KAAWhxD,IAAM,KACtBA,GAAKM,EAAImsD,EAAK,IACbnsD,EAAImsD,EAAK,IAGRrsB,GAAKpgC,EAAIk0D,MAGX,QAGDlD,KAAW,GAAK,GAAK,GAEjB,MACDqD,EAAgB5H,EAAIrsB,EAAG4wB,KACvBqD,EAAgB7H,EAAIpsB,EAAG4wB,KACvBvE,EAAGxuD,SACHuuD,EAAGvuD,UAGLm2D,OACC5H,EAAG3tC,MAAM,EAAGu1C,IACPn2D,OAGJ81D,EAAOK,KAASL,KAAU,KAE5BtH,EAAG5tC,SACL+kC,QAAQ,KACL6I,EAAG,GAELA,EAAG,IAAMuE,EAAO,KAAKmD,OAGnB,KAGEG,EAAQ7H,EAAIqH,EAAKM,EAAIL,IAGjB,KAGDD,EAAI,GACPM,GAAML,MAAaC,EAAOhD,KAAY,IAAM,OAG5CgD,EAAOG,EAAM,GAUT,GACF/zB,GAAK4wB,MAAUA,EAAO,GAWf,MAHLsD,IALCD,EAAgB5H,EAAIrsB,EAAG4wB,GAKV8C,IAJZH,EAAK11D,SACN61D,EAAI71D,iBAUA01D,EAAMS,EAAKR,EAAQtoD,EAAKmhD,EAAImH,EAAO5C,MAOrC,GAAL5wB,MAAcA,EAAI,KACfqsB,EAAG5tC,YAGJ80C,EAAK11D,QACD81D,KAAWnQ,QAAQ,KAGtBkQ,EAAKH,EAAMI,EAAM/C,OAGtB3E,MAIIiI,EAAQ7H,EAAIqH,EAAKM,IAHhBN,EAAI71D,SAMD,UAIC61D,EAAKM,EAAKL,EAAOzoD,EAAKmhD,EAAIsH,EAAM/C,MAItC8C,EAAI71D,QACM,IAARouD,UAEH,CAAC,MAINrsD,KAAOogC,EAGNisB,GAAOyH,EAAI,KACTC,KAAUvH,EAAGyH,IAAO,KAElB,CAACzH,EAAGyH,MACH,cAGMC,QAAiB,IAAXJ,EAAI,KAAkB9G,YAE3B,IAAX8G,EAAI,GAIRD,EAAG,MAAO7mB,WAIF,GAAXymB,IACAj2D,EAAIA,KACIk2D,MACL,KAGA1zD,EAAI,EAAGogC,EAAIyzB,EAAG,GAAIzzB,GAAK,GAAIA,GAAK,SACnC5iC,EAAIwC,EAAIxC,EAAIi2D,EAAU,KAEf9xD,EAAGusD,EAAKpB,EAAKnrD,EAAEnE,EAAI,EAAIsvD,EAAIrB,EAAIiI,UAGnC/xD,GAnQG,GA4Qb,YAAkBrF,EAAG0wD,EAAIvB,EAAI8I,OACxBhR,EAAQvjD,EAAGkjB,EAAGkd,EAAGwrB,EAAI4I,EAASz3D,EAAGyvD,EAAIiI,EACvC1H,EAAOzwD,EAAEO,iBAGI,MAANmwD,EAAY,QACd1wD,EAAE6Q,UAGS7Q,MAWXinD,EAAS,EAAGnjB,EAAIosB,EAAG,GAAIpsB,GAAK,GAAIA,GAAK,aACtC4sB,EAAKzJ,GAGD,KAvxFC,IAyxFHyJ,OACAR,EAAGiI,EAAM,IAGJ5J,GAAQ,GAAItH,EAASrgC,EAAI,GAAK,GAAK,aAEtCxlB,KAAKU,QAAU,GA/xFd,QAgyFHouD,EAAGvuD,QACO,KACRs2D,eAGKn0B,KAAOq0B,KAASpoC,KAAK,KACxBu/B,EAAK,IACA,QAvyFN,GAAA,EAyyFgB,MAIhB,OACDxrB,EAAIosB,EAAGiI,GAGNlR,EAAS,EAAGnjB,GAAK,GAAIA,GAAK,gBAjzF1B,GAAA,EAwzFcmjB,GAGV,EAAI,EAAIxmD,EAAI8tD,GAAQ,GAAItH,EAASrgC,EAAI,GAAK,GAAK,OAK9CqxC,GAAevH,EAAK,QAChB,IAAhBR,EAAGiI,EAAM,OAAsB,EAAI13D,EAAIA,EAAI8tD,GAAQ,GAAItH,EAASrgC,EAAI,MAM5DuoC,EAAK,MACJ8I,KAAuB,MAAK9I,MAASvuD,EAAI,EAAI,EAAI,IACxD0uD,EAAK,GAAW,GAANA,IAAkB,MAAK2I,GAAqB,GAAN9I,MAG1C,EAAIvoC,EAAI,EAAInmB,EAAI8tD,GAAQ,GAAItH,EAASrgC,GAAK,EAAIspC,EAAGiI,EAAM,IAAM,GAAM,GACvEhJ,MAASvuD,EAAI,EAAI,EAAI,IAEvB8vD,EAAK,IAAMR,EAAG,YACbvuD,OAAS,EACRu2D,MAGIl4D,EAAEkB,EAAI,IAGT,GAAKqtD,GAAQ,IAv1FX,EAu1F2BmC,EAv1F3B,GAAA,KAw1FHxvD,GAAKwvD,GAAM,KAIV,GAAK1wD,EAAEkB,EAAI,EAGTlB,KAIA,GAAL0D,KACC/B,OAASw2D,IACR,UAGDx2D,OAASw2D,EAAM,IACd5J,GAAQ,GAz2FL,EAy2FoB7qD,KAIxBy0D,GAAOvxC,EAAI,KAAS2nC,GAAQ,GAAItH,EAASrgC,GAAK2nC,GAAQ,GAAI3nC,GAAK,GAAKkd,EAAI,GAGzEo0B,SACO,IAGI,GAAPC,EAAU,KAGPz0D,EAAI,EAAGkjB,EAAIspC,EAAG,GAAItpC,GAAK,GAAIA,GAAK,aACjCspC,EAAG,IAAMpsB,EACRA,EAAI,EAAGld,GAAK,GAAIA,GAAK,OAGtBljB,GAAKogC,MACL5iC,IACEgvD,EAAG,IAAMtB,OAAS,GAAK,eAK1BuJ,IAAQr0B,EACPosB,EAAGiI,IAAQvJ,WACZuJ,KAAS,IACR,MAMLz0D,EAAIwsD,EAAGvuD,OAAoB,IAAZuuD,IAAKxsD,MAAci+B,aAGrCwsB,KAGEnuD,EAAEkB,EAAIuvD,EAAKxC,QAGXp9C,EAAI,OACJ3P,EAAIovD,KAGGtwD,EAAEkB,EAAIuvD,EAAKzC,SAGlB9sD,EAAI,IACJ2P,EAAI,CAAC,KAKJ7Q,EAIT,YAAwBA,EAAGo4D,EAAO1H,OAC3B1wD,EAAEi1B,kBAAmBojC,GAAkBr4D,OACxC8jC,EACF5iC,EAAIlB,EAAEkB,EACN46C,EAAM0V,GAAexxD,EAAE6Q,GACvBhJ,EAAMi0C,EAAIn6C,cAERy2D,GACE1H,MAAWA,EAAK7oD,GAAO,IACnBi0C,EAAIn6B,OAAO,GAAK,IAAMm6B,EAAIv5B,MAAM,GAAK2sC,GAAcprB,GAChDj8B,EAAM,MACTi0C,EAAIn6B,OAAO,GAAK,IAAMm6B,EAAIv5B,MAAM,MAGlCu5B,KAAS56C,EAAI,EAAI,IAAM,MAAQlB,EAAEkB,GAC9BA,EAAI,KACP,KAAOguD,IAAehuD,EAAI,GAAK46C,EACjC4U,MAAWA,EAAK7oD,GAAO,OAAUqnD,GAAcprB,KAC1C5iC,GAAK2G,MACPqnD,GAAchuD,EAAI,EAAI2G,GACzB6oD,MAAWA,EAAKxvD,EAAI,GAAK,MAAS46C,EAAM,IAAMoT,GAAcprB,SAEvD5iC,EAAI,GAAK2G,MAAWi0C,EAAIv5B,MAAM,EAAGuhB,GAAK,IAAMgY,EAAIv5B,MAAMuhB,IAC3D4sB,MAAWA,EAAK7oD,GAAO,IACrB3G,EAAI,IAAM2G,OAAY,QACnBqnD,GAAcprB,KAIlBgY,EAKT,YAA2BmL,EAAQ/lD,OAC7BT,EAAIwmD,EAAO,OAGT/lD,GA58FK,EA48FUT,GAAK,GAAIA,GAAK,cAC5BS,EAIT,YAAiBuvD,EAAMC,EAAIF,MACrBE,EAAK7B,aAGI,EACP2B,MAASja,UAAYia,GACnBlwD,MAn+FiB+tD,kDAq+FlBwB,GAAS,IAAIY,EAAK/C,IAAOgD,EAAI,GAAG,GAIzC,YAAeD,EAAMC,EAAIvB,MACnBuB,EAAK5B,SAAoBxuD,MA1+FJ+tD,kDA2+FlBwB,GAAS,IAAIY,EAAKtuD,IAAKuuD,EAAIvB,GAAI,GAIxC,YAAsBlI,OAChBxmD,EAAIwmD,EAAOtlD,OAAS,EACtBkG,EAr+FS,EAq+FHpH,EAAe,OAEnBwmD,EAAOxmD,GAGJ,MAGEA,EAAI,IAAM,EAAGA,GAAK,WAGpBA,EAAIwmD,EAAO,GAAIxmD,GAAK,GAAIA,GAAK,cAG7BoH,EAIT,YAAuBi8B,WACjBw0B,EAAK,GACFx0B,QAAY,WACZw0B,EAWT,YAAgB7H,EAAMzwD,EAAG+D,EAAGysD,OACtByH,EACFxuD,EAAI,IAAIgnD,EAAK,GAIb3sB,EAAI1iC,KAAKU,KAAK0uD,EA3gGL,EA2gGqB,WAErB,IAEF,IACHzsD,EAAI,GAEFw0D,MADA9uD,EAAEonD,MAAM7wD,IACG6Q,EAAGizB,QAAkB,GAI5B,OADNwqB,GAAUvqD,EAAI,IACL,GAGP0F,EAAEoH,EAAElP,OAAS,EACbs2D,GAA0B,IAAXxuD,EAAEoH,EAAE9M,MAAY0F,EAAEoH,EAAE9M,eAIrC/D,EAAE6wD,MAAM7wD,IACD6Q,EAAGizB,cAGL,EAEJr6B,EAIT,YAAe1F,UACgB,EAAtBA,EAAE8M,EAAE9M,EAAE8M,EAAElP,OAAS,GAO1B,YAAkB8uD,EAAMtS,EAAMqa,WACxBv4D,EACFD,EAAI,IAAIywD,EAAKtS,EAAK,IAClBz6C,EAAI,IAEGA,EAAIy6C,EAAKx8C,QAAS,QACrB,IAAI8uD,EAAKtS,EAAKz6C,KACX9C,EAAG,GACJX,QAEKD,EAAEw4D,GAAMv4D,OACbA,UAIDD,EAmCT,YAA4BA,EAAG0wD,OACzBtjD,EAAaqrD,EAAO7xC,EAAG8xC,EAAKC,EAAK30D,EAAG6vD,EACtCxC,EAAM,EACN3tD,EAAI,EACJogC,EAAI,EACJ2sB,EAAOzwD,EAAEO,YACT4uD,EAAKsB,EAAK7C,SACV4C,EAAKC,EAAKla,cAGPv2C,EAAE6Q,IAAM7Q,EAAE6Q,EAAE,IAAM7Q,EAAEkB,EAAI,UAEpB,IAAIuvD,EAAKzwD,EAAE6Q,EACb7Q,EAAE6Q,EAAE,GAAS7Q,EAAEY,EAAI,EAAI,EAAI,EAAA,EAAlB,EACVZ,EAAEY,EAAIZ,EAAEY,EAAI,EAAI,EAAIZ,EAAI,SAGpB,MAAN0wD,OACS,IACLF,KAEAE,IAGJ,IAAID,EAAK,QAGNzwD,EAAEkB,QAGHlB,EAAE6wD,MAAM7sD,MACP,WAKC5C,KAAK+D,IAAIopD,GAAQ,EAAGzqB,IAAM1iC,KAAKssD,KAAO,EAAI,EAAI,IAExCgL,EAAMC,EAAM,IAAIlI,EAAK,KAC9Bla,UAAYsd,IAER,MACDhE,GAAS6I,EAAI7H,MAAM7wD,GAAI6zD,EAAK,KACpBzmD,EAAYyjD,QAAQntD,GAG9B8tD,MAFAmH,EAAI3H,KAAKS,GAAOiH,EAAKtrD,EAAaymD,EAAK,KAEtBhjD,GAAG0R,MAAM,EAAGsxC,KAASrC,GAAemH,EAAI9nD,GAAG0R,MAAM,EAAGsxC,GAAM,OACzE/vB,EACGld,OAAWipC,GAAS8I,EAAI9H,MAAM8H,GAAM9E,EAAK,MAOtC,MAANnD,WAWGna,UAAYia,EACVmI,OAVHtH,EAAM,GAAK2D,GAAoB2D,EAAI9nD,EAAGgjD,EAAM4E,EAAOtJ,EAAIkC,WAMlDxB,GAAS8I,EAAKlI,EAAKla,UAAYia,EAAIrB,EAAIhB,IAAW,KALpD5X,UAAYsd,GAAO,KACV6E,EAAM10D,EAAI,IAAIysD,EAAK,KAC7B,QAWJzsD,GAoBV,YAA0B/D,EAAGywD,OACvBxtD,EAAG01D,EAAIxrD,EAAalM,EAAG23D,EAAWxH,EAAKsH,EAAK30D,EAAG6vD,EAAKxsD,EAAI6N,EAC1DnR,EAAI,EAEJ/D,EAAIC,EACJiwD,EAAKlwD,EAAE6Q,EACP4/C,EAAOzwD,EAAEO,YACT4uD,EAAKsB,EAAK7C,SACV4C,EAAKC,EAAKla,aAGRv2C,EAAEY,EAAI,IAAMsvD,IAAOA,EAAG,KAAOlwD,EAAEkB,GAAc,GAATgvD,EAAG,IAAwB,GAAbA,EAAGvuD,cAChD,IAAI8uD,EAAKP,IAAOA,EAAG,IAAK,EAAA,EAAgB,GAAPlwD,EAAEY,EAAS0vD,IAAMJ,EAAK,EAAIlwD,MAG1D,MAAN0wD,OACS,IACLF,KAEAE,IAGHna,UAAYsd,GAnBP,QAoBNrC,GAAetB,IACZvuC,OAAO,KAEVvgB,KAAKa,IAAIf,EAAIlB,EAAEkB,GAAK,gBAiClB6zD,GAAQtE,EAAMoD,EAAM,EAAGrD,GAAIK,MAAM3vD,EAAI,MACrC4zD,GAAiB,IAAIrE,EAAKmI,EAAK,IAAM11D,EAAEqf,MAAM,IAAKsxC,EAzD9C,IAyD2D7C,KAAKhtD,KACnEuyC,UAAYia,EAEJ,MAANE,EAAab,GAAS7vD,EAAGwwD,EAAIrB,EAAIhB,IAAW,GAAQnuD,OAxBpD44D,EAAK,GAAW,GAANA,GAAiB,GAANA,GAAW11D,EAAEye,OAAO,GAAK,QAE/C6vC,MADAxxD,EAAE6wD,MAAM5wD,IACS4Q,IACd8Q,OAAO,aAIZ3hB,EAAEkB,EAEF03D,EAAK,KACH,IAAInI,EAAK,KAAOvtD,UAGhB,IAAIutD,EAAKmI,EAAK,IAAM11D,EAAEqf,MAAM,MAe/BviB,IAKC64D,EAAY74D,EAAIyxD,GAAOzxD,EAAE+wD,MAAM,GAAI/wD,EAAEgxD,KAAK,GAAI6C,EAAK,KACpDhE,GAAS7vD,EAAE6wD,MAAM7wD,GAAI6zD,EAAK,KACjB,IAEL,MACKhE,GAASgJ,EAAUhI,MAAM37C,GAAK2+C,EAAK,GAG3CrC,MAFAmH,EAAI3H,KAAKS,GAAOoH,EAAW,IAAIpI,EAAKrjD,GAAcymD,EAAK,KAEtChjD,GAAG0R,MAAM,EAAGsxC,KAASrC,GAAemH,EAAI9nD,GAAG0R,MAAM,EAAGsxC,GAAM,MACvE8E,EAAI9H,MAAM,GAIN,IAAN3vD,MAAey3D,EAAI3H,KAAK+D,GAAQtE,EAAMoD,EAAM,EAAGrD,GAAIK,MAAM3vD,EAAI,QAC3DuwD,GAAOkH,EAAK,IAAIlI,EAAK1sD,GAAI8vD,EAAK,GAQ1B,MAANnD,WAUGna,UAAYia,EACVmI,MAVH3D,GAAoB2D,EAAI9nD,EAAGgjD,EA5F3B,GA4FwC1E,EAAIkC,UAMvCxB,GAAS8I,EAAKlI,EAAKla,UAAYia,EAAIrB,EAAIhB,IAAW,KALpD5X,UAAYsd,GA7Ff,KA8FEgF,EAAY74D,EAAIyxD,GAAOpqD,EAAG0pD,MAAM,GAAI1pD,EAAG2pD,KAAK,GAAI6C,EAAK,KACpDhE,GAAS7vD,EAAE6wD,MAAM7wD,GAAI6zD,EAAK,KACjBxC,EAAM,IAUpBrtD,KACS,GAMnB,YAA2BhE,UAElBgmD,OAAOhmD,EAAEY,EAAIZ,EAAEY,EAAI,GAO5B,YAAsBZ,EAAG87C,OACnB56C,EAAGwC,EAAGmE,SAGDi0C,EAAItT,QAAQ,aAAkBsT,EAAIpJ,QAAQ,IAAK,QAG/CoJ,EAAIiM,OAAO,OAAS,GAGvB7mD,EAAI,MAAOwC,OACTo4C,EAAIv5B,MAAM7e,EAAI,KACdo4C,EAAIkM,UAAU,EAAGtkD,IACdxC,EAAI,MAGT46C,EAAIn6C,QAIL+B,EAAI,EAAyB,KAAtBo4C,EAAIgd,WAAWp1D,GAAWA,SAGjCmE,EAAMi0C,EAAIn6C,OAAoC,KAA5Bm6C,EAAIgd,WAAWjxD,EAAM,KAAaA,QACnDi0C,EAAIv5B,MAAM7e,EAAGmE,GAEV,OACAnE,IACLxC,EAAIA,EAAIA,EAAIwC,EAAI,IAChBmN,EAAI,QAMG,GA71GA,EA81GL3P,EAAI,OA91GC,GAg2GLwC,EAAImE,EAAK,KACPnE,KAAKmN,EAAEkf,MAAM+rB,EAAIv5B,MAAM,EAAG7e,IACzBmE,GAl2GE,EAk2GenE,EAAImE,KAAQgJ,EAAEkf,MAAM+rB,EAAIv5B,MAAM7e,EAAGA,GAl2GhD,MAAA,KAm2GDo4C,EAAIv5B,MAAM7e,IACG/B,eAEdkG,OAGAnE,QAAa,MAClBmN,EAAEkf,MAAM+rB,GAENqS,KAGEnuD,EAAEkB,EAAIlB,EAAEO,YAAY0tD,QAGpBp9C,EAAI,OACJ3P,EAAIovD,KAGGtwD,EAAEkB,EAAIlB,EAAEO,YAAYytD,SAG3B9sD,EAAI,IACJ2P,EAAI,CAAC,YAOT3P,EAAI,IACJ2P,EAAI,CAAC,UAGF7Q,EAoHT,YAAsBywD,EAAM1sD,EAAG/D,EAAGC,EAAG84D,OAC/BnyC,EAAG5iB,EAAGmqB,EAAGjZ,EAEXs7C,EAAKC,EAAKla,UACVzS,EAAI1iC,KAAKU,KAAK0uD,EA7/GL,WA+/GA,IACNxwD,EAAE6wD,MAAM7wD,KACT,IAAIywD,EAAKxwD,KAEJ,MACHwxD,GAAOtjC,EAAE0iC,MAAM37C,GAAK,IAAIu7C,EAAK1sD,IAAMA,KAAMysD,EAAI,KAC7CuI,EAAe94D,EAAE+wD,KAAKhtD,GAAK/D,EAAE8wD,MAAM/sD,KACnCytD,GAAOztD,EAAE6sD,MAAM37C,GAAK,IAAIu7C,EAAK1sD,IAAMA,KAAMysD,EAAI,QAGlC,OAFXriC,EAAE6iC,KAAK/wD,IAEL4Q,EAAEizB,GAAe,KAChBld,EAAIkd,EAAG9/B,EAAE6M,EAAE+V,KAAOuH,EAAEtd,EAAE+V,IAAMA,aAC7BA,UAGFuH,IACAluB,IACA+D,IACA4iB,aAIK,IACT/V,EAAElP,OAASmiC,EAAI,EAEV9/B,EAKT,YAAiBlD,EAAGI,WACd6C,EAAIjD,IACCI,MAAQJ,SACViD,EAKT,YAA0B0sD,EAAMzwD,OAC1BgE,EACFmvD,EAAQnzD,EAAEY,EAAI,EACdo4D,EAAK5F,GAAM3C,EAAMA,EAAKla,UAAW,GACjC2c,EAAS8F,EAAGnI,MAAM,UAEhB7wD,EAAEiC,OAEAsxD,IAAIL,aACGC,EAAQ,EAAI,EAChBnzD,QAGLA,EAAEgyD,SAASgH,IAETrR,YACOwL,EAAQ,EAAI,MAClB,OACDnzD,EAAE+wD,MAAM/sD,EAAE6sD,MAAMmI,KAGdzF,IAAIL,aACG+F,GAAMj1D,GAAMmvD,EAAQ,EAAI,EAAMA,EAAQ,EAAI,EAC9CnzD,KAGEi5D,GAAMj1D,GAAMmvD,EAAQ,EAAI,EAAMA,EAAQ,EAAI,SAGhDnzD,EAAE+wD,MAAMiI,GAAI/2D,MASrB,YAAwBjC,EAAGwvD,EAASkB,EAAIvB,OAClCuF,EAAMxzD,EAAGwC,EAAGogC,EAAGj8B,EAAKqwD,EAASpc,EAAKoU,EAAIjwD,EACxCwwD,EAAOzwD,EAAEO,YACT63D,OAAe,IAAP1H,KAEN0H,MACS1H,EAAI,EAhrHJ,UAirHA,IAAPvB,IAAoBsB,EAAK7C,YACbuB,EAAI,EAAG,OAElBsB,EAAKla,YACLka,EAAK7C,UAGP5tD,EAAEi1B,WAEA,KASDmjC,KACK,EACQ,IAAX5I,IACQ,EAALkB,EAAS,EACM,GAAXlB,MACC,EAALkB,EAAS,MAGTlB,QAhBH0G,GAAel2D,IACbwoC,QAAQ,OAsBP,MACDsT,EAAIpJ,QAAQ,IAAK,OACnB,IAAI+d,EAAK,IACXvvD,EAAI46C,EAAIn6C,OAAS+B,IACjBmN,EAAIqoD,GAAYhD,GAAej2D,GAAI,GAAIy0D,KACvCxzD,EAAIjB,EAAE4Q,EAAElP,UAIRkG,KADCqxD,GAAYpd,EAAK,GAAI4Y,IACb/yD,OAGO,GAAbuuD,IAAKroD,MAAe85B,SAEtBuuB,EAAG,GAED,IACDxsD,EAAI,UAGF,IAAI+sD,EAAKzwD,IACX6Q,EAAIq/C,IACJhvD,EAAIA,OACFuwD,GAAOzxD,EAAGC,EAAGywD,EAAIvB,EAAI,EAAGuF,IACrB7jD,IACH7Q,EAAEkB,IACI6rD,MAIRmD,EAAGQ,KACHgE,EAAO,IACDwD,QAA0B,IAAfhI,EAAGQ,EAAK,KAEnBvB,EAAK,QACJ,OAAU+I,KAAoB,OAAK/I,OAAUvuD,EAAI,EAAI,EAAI,IAChE8C,EAAIogC,GAAKpgC,IAAMogC,IAAa,OAAKo0B,GAAkB,IAAP/I,GAAyB,EAAbe,EAAGQ,EAAK,IAChEvB,OAAUvuD,EAAI,EAAI,EAAI,MAEvBe,OAAS+uD,EAERwH,SAGOhI,IAAKQ,GAAMgE,EAAO,KACtBhE,GAAM,EACJA,MACDxvD,IACComD,QAAQ,QAMZz/C,EAAMqoD,EAAGvuD,QAASuuD,EAAGroD,EAAM,KAAMA,OAGjCnE,EAAI,EAAGo4C,EAAM,GAAIp4C,EAAImE,EAAKnE,OAAY+pD,GAAS9rC,OAAOuuC,EAAGxsD,OAG1D00D,EAAO,IACLvwD,EAAM,KACO,IAAX2nD,GAA4B,GAAXA,EAAc,OAClB,IAAXA,EAAgB,EAAI,IACjB3nD,EAAKA,EAAMnE,EAAGmE,OAAc,QAE9BA,KADAqxD,GAAYpd,EAAK4Y,EAAMlF,IACd7tD,QAASuuD,EAAGroD,EAAM,KAAMA,OAGjCnE,EAAI,EAAGo4C,EAAM,KAAMp4C,EAAImE,EAAKnE,OAAY+pD,GAAS9rC,OAAOuuC,EAAGxsD,WAE1Do4C,EAAIn6B,OAAO,GAAK,IAAMm6B,EAAIv5B,MAAM,KAInCu5B,KAAW,EAAI,IAAM,MAAQ56C,UAC3BA,EAAI,EAAG,QACPA,KAAU,IAAM46C,IACnB,KAAOA,YAEP56C,EAAI2G,MAAU3G,GAAK2G,EAAK3G,QAAc,SACnCA,EAAI2G,MAAWi0C,EAAIv5B,MAAM,EAAGrhB,GAAK,IAAM46C,EAAIv5B,MAAMrhB,WAlEtDk3D,EAAQ,OAAS,OAsEP,MAAK,KAAkB,GAAX5I,EAAe,KAAkB,GAAXA,EAAe,KAAO,IAAM1T,SA9G1Euc,GAAkBr4D,UAiHnBA,EAAEY,EAAI,EAAI,IAAMk7C,EAAMA,EAK/B,YAAkB3sB,EAAKtnB,MACjBsnB,EAAIxtB,OAASkG,WACXlG,OAASkG,GACN,EAyDX,YAAa7H,UACJ,IAAIE,KAAKF,GAAGiC,MAUrB,YAAcjC,UACL,IAAIE,KAAKF,GAAG2J,OAWrB,YAAe3J,UACN,IAAIE,KAAKF,GAAGszD,QAYrB,YAAatzD,EAAGC,UACP,IAAIC,KAAKF,GAAGgxD,KAAK/wD,GAW1B,YAAcD,UACL,IAAIE,KAAKF,GAAG0W,OAWrB,YAAe1W,UACN,IAAIE,KAAKF,GAAG0zD,QAWrB,YAAc1zD,UACL,IAAIE,KAAKF,GAAGg0D,OAWrB,YAAeh0D,UACN,IAAIE,KAAKF,GAAG4zD,QA6BrB,YAAe3zD,EAAGD,KACZ,IAAIE,KAAKD,KACT,IAAIC,KAAKF,OACTyJ,EACF+mD,EAAKtwD,KAAKq2C,UACV4Y,EAAKjvD,KAAK0tD,SACViG,EAAMrD,EAAK,SAGRvwD,EAAEW,GAAMZ,EAAEY,EAIHX,EAAE4Q,GAAM7Q,EAAE6Q,GAKV7Q,EAAE6Q,GAAK5Q,EAAE0nD,YACf3nD,EAAEY,EAAI,EAAIwyD,GAAMlzD,KAAMswD,EAAIrB,GAAM,IAAIjvD,KAAK,IAC3CU,EAAIX,EAAEW,GAGEX,EAAE4Q,GAAK7Q,EAAE2nD,YACfyL,GAAMlzD,KAAM2zD,EAAK,GAAGhD,MAAM,KAC5BjwD,EAAIX,EAAEW,EAGCZ,EAAEY,EAAI,QACV21C,UAAYsd,OACZjG,SAAW,IACZ1tD,KAAK8zD,KAAKvC,GAAOxxD,EAAGD,EAAG6zD,EAAK,MAC5BT,GAAMlzD,KAAM2zD,EAAK,QAChBtd,UAAYia,OACZ5C,SAAWuB,IACZlvD,EAAEW,EAAI,EAAI6I,EAAEsnD,MAAM/wD,GAAKyJ,EAAEunD,KAAKhxD,MAE9BE,KAAK8zD,KAAKvC,GAAOxxD,EAAGD,EAAG6zD,EAAK,OAvB5BT,GAAMlzD,KAAM2zD,EAAK,GAAGhD,MAAM7wD,EAAEY,EAAI,EAAI,IAAO,MAC7CA,EAAIX,EAAEW,IALJ,IAAIV,KAAKowD,KA8BR7mD,EAWT,YAAczJ,UACL,IAAIE,KAAKF,GAAGoxD,OAUrB,YAAcpxD,UACL6vD,GAAS7vD,EAAI,IAAIE,KAAKF,GAAIA,EAAEkB,EAAI,EAAG,GAsB5C,YAAgBgmC,OACTA,GAAsB,iBAARA,QAAwB5mC,MAAM+tD,sCAC7C3qD,EAAGwG,EAAG1J,EACR24D,GAA+B,IAAjBjyB,EAAIkyB,SAClBC,EAAK,CACH,YAAa,EAvjIJ,IAwjIT,WAAY,EAAG,EACf,YAAa7L,GAAW,EACxB,WAAY,EAAGA,GACf,OAAQ,EAAGA,GACX,QAASA,GAAW,EACpB,SAAU,EAAG,OAGZ9pD,EAAI,EAAGA,EAAI21D,EAAG13D,OAAQ+B,GAAK,KAC1BwG,EAAImvD,EAAG31D,GAAIy1D,SAAkBjvD,GAAKyjD,GAASzjD,SAC1B,OAAZg9B,EAAIh9B,IAAgB,MACvBokD,GAAU9tD,KAAOA,GAAKA,GAAK64D,EAAG31D,EAAI,IAAMlD,GAAK64D,EAAG31D,EAAI,UAC7CpD,MAAM8tD,GAAkBlkD,EAAI,KAAO1J,QADmB0J,GAAK1J,KAKtE0J,EAAI,SAAUivD,SAAkBjvD,GAAKyjD,GAASzjD,SAC7B,OAAZg9B,EAAIh9B,IAAgB,KACjB,IAAN1J,IAAoB,IAANA,GAAqB,IAANA,GAAiB,IAANA,QAYpCF,MAAM8tD,GAAkBlkD,EAAI,KAAO1J,MAXrCA,EAAG,IACgB,oBAAV0tD,SAAyBA,gBAC1BoL,kBAAmBpL,OAAOqL,kBAG5Bj5D,MA5/HM+tD,0CA0/HPnkD,IAAK,YAKPA,IAAK,SAOThK,KAWT,YAAaF,UACJ,IAAIE,KAAKF,GAAGmD,MAWrB,YAAcnD,UACL,IAAIE,KAAKF,GAAGqyD,OAuMrB,YAAaryD,EAAGC,UACP,IAAIC,KAAKF,GAAG8xD,IAAI7xD,GAWzB,YAAaD,UACJ,IAAIE,KAAKF,GAAG2E,MAUrB,YAAe3E,UACN6vD,GAAS7vD,EAAI,IAAIE,KAAKF,GAAIA,EAAEkB,EAAI,EAAG,GAa5C,kBACMwC,EAAGK,EACLC,EAAI,IAAI9D,KAAK,WAEJ,EAENwD,EAAI,EAAGA,EAAIyL,UAAUxN,cACpB,IAAIzB,KAAKiP,UAAUzL,OAChBmN,EAMI7M,EAAE6M,MACP7M,EAAEgtD,KAAKjtD,EAAE8sD,MAAM9sD,SAPX,IACJA,EAAEnD,aACO,EACJ,IAAIV,KAAK,EAAA,KAEd6D,aAMG,EAEJC,EAAEhC,OASX,YAA2BklC,UAClBA,aAAesyB,IAAWtyB,GAAoB,qBAAbA,EAAIwT,OAA+B,EAW7E,YAAY16C,UACH,IAAIE,KAAKF,GAAGwzD,KAcrB,YAAaxzD,EAAGC,UACP,IAAIC,KAAKF,GAAGmF,IAAIlF,GAWzB,YAAcD,UACL,IAAIE,KAAKF,GAAGmF,IAAI,GAWzB,YAAenF,UACN,IAAIE,KAAKF,GAAGmF,IAAI,IAUzB,qBACSs0D,GAASv5D,KAAMiP,UAAW,MAUnC,qBACSsqD,GAASv5D,KAAMiP,UAAW,MAYnC,YAAanP,EAAGC,UACP,IAAIC,KAAKF,GAAGo1D,IAAIn1D,GAYzB,YAAaD,EAAGC,UACP,IAAIC,KAAKF,GAAGynD,IAAIxnD,GAYzB,YAAaD,EAAGC,UACP,IAAIC,KAAKF,GAAGkF,IAAIjF,GAYzB,YAAgBywD,OACV7/C,EAAG3P,EAAG4iC,EAAG//B,EACXL,EAAI,EACJ+F,EAAI,IAAIvJ,KAAK,GACbovD,EAAK,WAEI,IAAPoB,IAAoBxwD,KAAKq2C,aACbma,EAAI,EAhgJP,OAkgJTtvD,KAAKU,KAAK4uD,EAn6IH,GAq6INxwD,KAAKguD,UAICA,OAAOoL,sBACZpL,OAAOoL,gBAAgB,IAAII,YAAY51B,IAEpCpgC,EAAIogC,MACLjzB,EAAEnN,KAIG,QACLA,GAAKwqD,OAAOoL,gBAAgB,IAAII,YAAY,IAAI,KAK/Ch2D,KAAOK,EAAI,aAKTmqD,OAAOqL,kBAwBVj5D,MA/9IY+tD,2CA08IdH,OAAOqL,YAAYz1B,GAAK,GAErBpgC,EAAIogC,MAGLjzB,EAAEnN,MAAQA,EAAI,IAAM,MAAQA,EAAI,IAAM,MAAmB,MAATA,EAAI,KAAc,MAG7D,aACA61D,YAAY,GAAG3uD,KAAKiG,EAAGnN,MAK3BqsB,KAAKhsB,EAAI,QACP,KAIL+/B,EAAI,YA5CDpgC,EAAIogC,KAAOpgC,KAAuB,IAAhBtC,KAAKiC,SAAiB,SAt6ItC,KAu9IPisD,IAAK5rD,KAIAgtD,MACHnC,GAAQ,GA59IH,EA49IkBmC,KACxBhtD,MAAUK,EAAI,GAAKA,GAIP,IAAVurD,EAAG5rD,GAAUA,MAAQi+B,SAGxBj+B,EAAI,IACF,IACC,CAAC,OACD,UAIY,IAAV4rD,EAAG,GAAUpuD,GA3+IX,IA2+I6BwvC,YAGjC5M,EAAI,EAAG//B,EAAIurD,EAAG,GAAIvrD,GAAK,GAAIA,GAAK,OAGjC+/B,EAj/IK,OAAA,EAi/IyBA,YAGlC5iC,EAAIA,IACJ2P,EAAIy+C,EAEC7lD,EAYT,YAAezJ,UACN6vD,GAAS7vD,EAAI,IAAIE,KAAKF,GAAIA,EAAEkB,EAAI,EAAGhB,KAAK0tD,UAejD,YAAc5tD,YACR,IAAIE,KAAKF,IACJ6Q,EAAK7Q,EAAE6Q,EAAE,GAAK7Q,EAAEY,EAAI,EAAIZ,EAAEY,EAAKZ,EAAEY,GAAK0vD,IAWjD,YAAatwD,UACJ,IAAIE,KAAKF,GAAGoD,MAWrB,YAAcpD,UACL,IAAIE,KAAKF,GAAG0yD,OAWrB,YAAc1yD,UACL,IAAIE,KAAKF,GAAGgC,OAYrB,YAAahC,EAAGC,UACP,IAAIC,KAAKF,GAAGwN,IAAIvN,GAWzB,YAAaD,UACJ,IAAIE,KAAKF,GAAG2f,MAWrB,YAAc3f,UACL,IAAIE,KAAKF,GAAGgzD,OAUrB,YAAehzD,UACN6vD,GAAS7vD,EAAI,IAAIE,KAAKF,GAAIA,EAAEkB,EAAI,EAAG,GAI5C6tD,GAAEv+B,OAAOmpC,IAAI,+BAAiC5K,GAAEprD,SAChDorD,GAAEv+B,OAAOopC,aAAe,UAGjB,IAAIJ,GArlBX,WAAetyB,OACTxjC,EAAGwG,EAAGmvD,aASO74D,OACXU,EAAG24D,EAAG71D,EACRhE,EAAIE,uBAGa45D,UAAiB,IAAIA,EAAQt5D,QAI9CD,YAAcu5D,EAGZt5D,aAAas5D,WACbl5D,EAAIJ,EAAEI,OAEJutD,IACG3tD,EAAEqQ,GAAKrQ,EAAEU,EAAI44D,EAAQ7L,QAGtB/sD,EAAIovD,MACJz/C,EAAI,MACGrQ,EAAEU,EAAI44D,EAAQ9L,QAGrB9sD,EAAI,IACJ2P,EAAI,CAAC,OAEL3P,EAAIV,EAAEU,IACN2P,EAAIrQ,EAAEqQ,EAAE0R,YAGVrhB,EAAIV,EAAEU,IACN2P,EAAIrQ,EAAEqQ,EAAIrQ,EAAEqQ,EAAE0R,QAAU/hB,EAAEqQ,OAQtB,qBAFCrQ,GAES,IACR,IAANA,WACAI,EAAI,EAAIJ,EAAI,KAAS,IACrBU,EAAI,SACJ2P,EAAI,CAAC,OAILrQ,EAAI,MACDA,IACHI,QAEAA,EAAI,EAIJJ,MAAQA,GAAKA,EAAI,IAAK,KACnBU,EAAI,EAAG24D,EAAIr5D,EAAGq5D,GAAK,GAAIA,GAAK,mBAE7B1L,GACEjtD,EAAI44D,EAAQ7L,QACZ/sD,EAAIovD,MACJz/C,EAAI,MACG3P,EAAI44D,EAAQ9L,QACnB9sD,EAAI,IACJ2P,EAAI,CAAC,OAEL3P,EAAIA,IACJ2P,EAAI,CAACrQ,OAGPU,EAAIA,IACJ2P,EAAI,CAACrQ,YAMI,EAAJA,GAAU,GACdA,MAAKI,EAAI0vD,OACZpvD,EAAIovD,WACJz/C,EAAI,OAIDkpD,GAAa/5D,EAAGQ,EAAEmD,eAEV,WAANK,QACH1D,MAAM8tD,GAAkB5tD,UAIF,QAArBA,EAAEs4D,WAAW,OAChBt4D,EAAE+hB,MAAM,KACV3hB,OAGQ,KAANi5D,MAAcr5D,EAAE+hB,MAAM,MACxB3hB,EAAI,GAGD+tD,GAAUhU,KAAKn6C,GAAKu5D,GAAa/5D,EAAGQ,GA/vB/C,SAAoBR,EAAG87C,OACjB4Y,EAAMjE,EAAMuJ,EAASt2D,EAAGu2D,EAASpyD,EAAKqC,EAAGgmD,EAAI+E,KAErC,aAARnZ,GAA8B,QAARA,SAClBA,MAAOl7C,EAAI0vD,OACfpvD,EAAIovD,MACJz/C,EAAI,KACC7Q,KAGLyuD,GAAM9T,KAAKmB,KACN,KACDA,EAAIj6B,sBACD2sC,GAAS7T,KAAKmB,KAChB,WACE4S,GAAQ/T,KAAKmB,SAGhBx7C,MAAM8tD,GAAkBtS,KAFvB,SAMLA,EAAIiM,OAAO,OAEP,MACDjM,EAAIv5B,MAAM7e,EAAI,KACbo4C,EAAIkM,UAAU,EAAGtkD,MAEjBo4C,EAAIv5B,MAAM,QAKdu5B,EAAItT,QAAQ,OACD,IACRxoC,EAAEO,YAEL05D,YACIne,EAAIpJ,QAAQ,IAAK,KACb/wC,QACA+B,IAGAkzD,GAAOnG,EAAM,IAAIA,EAAKiE,GAAOhxD,EAAO,EAAJA,IAOvCA,OAJAw1D,GAAYpd,EAAK4Y,EAAM9F,KACpBjtD,OAAS,EAGM,IAAVuuD,EAAGxsD,KAAYA,IAAMi+B,aAC9Bj+B,EAAI,EAAU,IAAI+sD,EAAW,EAANzwD,EAAEY,MAC3BM,EAAIi0D,GAAkBjF,EAAI+E,KAC1BpkD,EAAIq/C,MACK,EAQP+J,MAAaxI,GAAOzxD,EAAGg6D,EAAe,EAANnyD,IAGhCqC,MAAOlK,EAAE6wD,MAAMzvD,KAAKa,IAAIiI,GAAK,GAAKqkD,GAAQ,EAAGrkD,GAAKsvD,GAAQt0D,IAAI,EAAGgF,SAC1D,EAEJlK,GA2rB2Ck6D,CAAWl6D,EAAGQ,QAGxD+C,UAAYwrD,KAEZoL,SAAW,IACXC,WAAa,IACbC,WAAa,IACbC,YAAc,IACdC,cAAgB,IAChBC,gBAAkB,IAClBC,gBAAkB,IAClBC,gBAAkB,IAClBC,iBAAmB,IACnBC,OAAS,IAETC,OAASf,EAAQ7zD,IAAM40D,KACvBnsB,MAAQA,IACRigB,UAAYmM,KAEZ74D,IAAMA,KACN0H,KAAOA,KACP2pD,MAAQA,KACR7vC,IAAMA,KACN/M,KAAOA,KACPg9C,MAAQA,KACRM,KAAOA,KACPJ,MAAQA,KACR1xD,MAAQA,KACRkvD,KAAOA,KACPtvD,KAAOA,KACPqB,IAAMA,KACNkvD,KAAOA,KACPP,IAAMA,KACNntD,IAAMA,KACN9C,MAAQA,KACRk5D,MAAQA,KACRvH,GAAKA,KACLruD,IAAMA,KACN61D,MAAQA,KACRC,KAAOA,KACP35D,IAAMA,KACND,IAAMA,KACN+zD,IAAMA,KACN3N,IAAMA,KACNviD,IAAMA,KACN7B,OAASA,KACTtB,MAAQA,KACRg5B,KAAOA,KACP33B,IAAMA,KACNsvD,KAAOA,KACP1wD,KAAOA,KACPwL,IAAMA,KACNmS,IAAMA,KACNqzC,KAAOA,KACP+D,MAAQA,QAEJ,IAAR7vB,MAAsB,IACtBA,IACmB,IAAjBA,EAAIkyB,eACD,CAAC,YAAa,WAAY,WAAY,WAAY,OAAQ,OAAQ,SAAU,UAC5E11D,EAAI,EAAGA,EAAI21D,EAAG13D,QAAculC,EAAI4R,eAAe5uC,EAAImvD,EAAG31D,UAAWwG,GAAKhK,KAAKgK,aAI5E2wD,OAAO3zB,GAER4yB,EAmaYprB,CAAMif,IAG3BD,GAAO,IAAI8L,GAAQ9L,IACnBvrD,GAAK,IAAIq3D,GAAQr3D,ICpuJjB,OAEW+4D,MAFA,YACQ,CAAC,MAAO,WACmDlP,QACxEmP,GACFA,EACAN,UACE7O,EAGAC,EAAYuN,GAAQ9qB,MAAM,CAC5B6H,UAAWtY,EAAOsY,UAClBsX,OAJW,aAUHtqD,UAAU6/B,KAAO,cACjB7/B,UAAUmzC,aAAc,IAQxBnzC,UAAU4pD,OAAS,iBACpB,CACLC,OAAQ,YACRjtD,MAAOD,KAAKyD,eAWN0pD,SAAW,SAAUC,UACtB,IAAIrB,EAAUqB,EAAKntD,QAGxBg7D,KAEC,UAAU,SAAUlhB,EAAMD,GACvBC,EAAK1D,YAAcyD,EAAKzD,aAChBskB,OAAO,CACftkB,UAAW0D,EAAK1D,eAMjB0V,IACN,CACDsB,SAAS;;;;;;;MCxBV,SAAS6N,OAIJC,EAAO,SAASr7D,SACoB,SAAzB2E,IAAI3E,GAAKoB,KAAKuD,KAAK3E,KAG9Bs7D,EAAO,SAASt7D,SACoB,SAAzB2E,IAAI3E,GAAKoB,KAAKuD,KAAK3E,KAqD9Bu7D,EAAc,iBACVje,YAAY,6BAUFz8C,EAAGC,OAEf06D,EAAKp6D,KAAKa,IAAIpB,GACd46D,EAAKr6D,KAAKa,IAAInB,UAER,IAAND,EACKO,KAAK+D,IAAIs2D,GAGR,IAAN36D,EACKM,KAAK+D,IAAIq2D,GAGdA,EAAK,KAAQC,EAAK,IACa,GAA1Br6D,KAAK+D,IAAItE,EAAIA,EAAIC,EAAIA,GAmCvBM,KAAK+D,IAAItE,EAAIO,KAAK+B,IAAI/B,KAAKc,MAAMpB,EAAGD,gBAyH5BA,EAAGC,wBAEI8rD,UACb,IAAIA,EAAQ/rD,EAAGC,OAGpBoF,EA5HM,SAASrF,EAAGC,OAElBoF,EAAI,CAACw1D,GAAM,EAAGC,GAAM,MAEpB96D,MAAAA,OAEMqF,KAAU,eACH,IAANpF,OACCD,OACAC,qBAEKD,OAER,YAEC,OAAQA,GAAK,OAAQA,OACbA,UACAA,aACD,QAASA,GAAK,QAASA,EAAG,KAC9B8G,OAAOstB,SAASp0B,QAAa8G,OAAOstB,SAASp0B,cACzC+rD,gBAEC/rD,MAAWO,KAAK+B,IAAItC,YACpBA,MAAWO,KAAKgC,IAAIvC,eACrB,MAAOA,GAAK,QAASA,EAAG,KAC5B8G,OAAOstB,SAASp0B,MAAW8G,OAAOstB,SAASp0B,cACvC+rD,gBAEC/rD,IAASO,KAAK+B,IAAItC,YAClBA,IAASO,KAAKgC,IAAIvC,YACN,IAAbA,EAAEc,aACDd,EAAE,QACFA,EAAE,kBAMX,cAGKqF,KAAU,MAEd01D,EAAS/6D,EAAEk7C,MAAM,yCACjBiV,EAAO,EACPD,EAAQ,EAEG,OAAX6K,eAIKl4D,EAAI,EAAGA,EAAIk4D,EAAOj6D,OAAQ+B,IAAK,KAElCR,EAAI04D,EAAOl4D,GAEL,MAANR,GAAmB,OAANA,GAAoB,OAANA,IAEd,MAANA,MAEM,MAANA,MAEM,MAANA,GAAmB,MAANA,GAElB8tD,EAAOD,IAAU,OAIC,MAAlB6K,EAAOl4D,EAAI,IAAei1B,MAAMijC,EAAOl4D,EAAI,UAIlCyd,cAAoB,EAAI,IAAM,IAAM,YAHpCA,cAAoB,EAAI,IAAM,IAAMy6C,EAAOl4D,EAAI,WAKrDqtD,EAAQ,KAIXC,EAAOD,IAAU,GAAKp4B,MAAMz1B,SAIV,MAAlB04D,EAAOl4D,EAAI,IAAgC,MAAlBk4D,EAAOl4D,EAAI,UAC3Byd,cAAoB,EAAI,IAAM,IAAMje,cAGpCie,cAAoB,EAAI,IAAM,IAAMje,KAE1C6tD,EAAQ,IAKfC,EAAOD,EAAQ,iBAKhB,cACO,OACAlwD,2BAOZ83B,MAAMzyB,OAAYyyB,MAAMzyB,MAKrBA,EAaCusC,CAAM5xC,EAAGC,WAEJoF,aACAA,OAGP3C,UAAY,CAElBm4D,GAAM,EACNC,GAAM,EAON5gC,KAAQ,eAEF8gC,EAAM37D,kBAEH,IAAI0sD,EACH1sD,QAAa27D,EACb37D,QAAa27D,IAQvBp4C,IAAO,SAAS5iB,EAAGC,OAEboF,EAAI,IAAI0mD,EAAQ/rD,EAAGC,UAGnBZ,mBAAwBgG,eACnB0mD,MAIL1sD,mBAAwBgG,eACnB0mD,WAGF,IAAIA,EACH1sD,QAAagG,KACbhG,QAAagG,OAQvBsH,IAAO,SAAS3M,EAAGC,OAEboF,EAAI,IAAI0mD,EAAQ/rD,EAAGC,UAGnBZ,mBAAwBgG,eACnB0mD,MAIL1sD,mBAAwBgG,eACnB0mD,WAGF,IAAIA,EACH1sD,QAAagG,KACbhG,QAAagG,OAQvBuhD,IAAO,SAAS5mD,EAAGC,OAEboF,EAAI,IAAI0mD,EAAQ/rD,EAAGC,UAGlBZ,mBAAwBgG,YAAmBhG,eAAoBgG,eAC3D0mD,MAIL1sD,mBAAwBgG,eACnB0mD,WAIO,IAAZ1mD,MAAgC,IAAfhG,QACZ,IAAI0sD,EAAQ1sD,QAAagG,KAAS,GAGpC,IAAI0mD,EACH1sD,QAAagG,KAAUhG,QAAagG,KACpChG,QAAagG,KAAUhG,QAAagG,OAQ9C4rD,IAAO,SAASjxD,EAAGC,OAEboF,EAAI,IAAI0mD,EAAQ/rD,EAAGC,MAGlBZ,eAAoBgG,YAAmBhG,mBAAwBgG,sBAC3D0mD,SAIL1sD,mBAAwBgG,kBACnB0mD,cAIL1sD,eAAoBgG,sBACf0mD,SAGL1sD,UACAA,YAIA8D,EAAGhE,EAFHkD,EAAIgD,KACJ2K,EAAI3K,YAGJ,IAAM2K,EAED,IAAI+7C,EAAQ/rD,EAAIqC,EAAGpC,EAAIoC,GAG5B9B,KAAKa,IAAIiB,GAAK9B,KAAKa,IAAI4O,GAKlB,IAAI+7C,QAHP1pD,EAAI2N,GAIS/P,MAHboC,EAAIlD,EAAI6Q,MAIC7Q,EAAIa,GAAKmD,GAOf,IAAI4oD,KACE9rD,KAJT+P,EAAI3N,OACJ2N,EAAI7Q,EAAIkD,MAICrC,EAAIb,GAAKgE,IAS1BkB,IAAO,SAASrE,EAAGC,OAEboF,EAAI,IAAI0mD,EAAQ/rD,EAAGC,QAEnBZ,UACAA,QAEAgG,kBACK0mD,SAIO,IAAZ1mD,KAAe,IAEP,IAANpF,GAAWD,EAAI,SAEV,IAAI+rD,EAAQxrD,KAAK8D,IAAIrE,EAAGqF,MAAU,MAE1B,IAANrF,eAEU,EAAI,GAAK,QACrB,SACI,IAAI+rD,EAAQxrD,KAAK8D,IAAIpE,EAAGoF,MAAU,QACtC,SACI,IAAI0mD,EAAQ,EAAGxrD,KAAK8D,IAAIpE,EAAGoF,YAC/B,SACI,IAAI0mD,GAASxrD,KAAK8D,IAAIpE,EAAGoF,MAAU,QACvC,SACI,IAAI0mD,EAAQ,GAAIxrD,KAAK8D,IAAIpE,EAAGoF,WAwBjC,IAANrF,GAAiB,IAANC,GAAWoF,KAAU,GAAKA,MAAW,SAC3C0mD,WAGLrM,EAAMn/C,KAAKc,MAAMpB,EAAGD,GACpBi7D,EAAMC,EAASl7D,EAAGC,YAElBM,KAAKuD,IAAIuB,KAAU41D,EAAM51D,KAAUq6C,KACnCr6C,KAAU41D,EAAM51D,KAAUq6C,EACvB,IAAIqM,EACH/rD,EAAIO,KAAK+B,IAAIrC,GACbD,EAAIO,KAAKgC,IAAItC,KAQvBkB,KAAQ,eAMF05D,EAAIC,EAJJ96D,EAAIX,QACJY,EAAIZ,QACJuJ,EAAIvJ,cAIJW,GAAK,EAAG,IAEA,IAANC,SACK,IAAI8rD,EAAQxrD,KAAKY,KAAKnB,GAAI,KAG9B,GAAMO,KAAKY,KAAK,KAAWnB,WAE3BO,KAAKa,IAAInB,GAAKM,KAAKY,KAAK,KAASnB,aAGpCA,GAAK,EACF,GAAMO,KAAKY,KAAK,KAAWnB,IAE3BO,KAAKa,IAAInB,GAAKM,KAAKY,KAAK,KAASnB,IAGjC,IAAI+rD,EAAQ8O,EAAI56D,EAAI,GAAK66D,EAAKA,IAQvCh3D,IAAO,eAEDsP,EAAM7S,KAAKuD,IAAIzE,gBAEfA,QAGG,IAAI0sD,EACH34C,EAAM7S,KAAK+B,IAAIjD,SACf+T,EAAM7S,KAAKgC,IAAIlD,WAWzB87D,MAAS,eAQHn7D,EAAIX,QACJY,EAAIZ,eAED,IAAI0sD,EACHxrD,KAAK46D,MAAMn7D,GAAKO,KAAK+B,IAAIrC,GAjhBzB,SAASd,OACfi8D,EAAQ76D,KAAKe,GAAG,KAChBnC,GAAKi8D,GAASj8D,EAAIi8D,SACZ76D,KAAK+B,IAAInD,GAAK,MAGpB2O,EAAK3O,EAAIA,SACN2O,GACGA,KACH,GAAKA,MACF,IAAMA,KACL,MAAQA,MACL,QAAUA,KACT,WAAaA,MACV,YAAcA,KACb,yBAkgBqButD,CAAMp7D,GACpCM,KAAKuD,IAAI9D,GAAKO,KAAKgC,IAAItC,KAQjCqE,IAAO,eAEDtE,EAAIX,QACJY,EAAIZ,eAMD,IAAI0sD,EACHmP,EAASl7D,EAAGC,GACZM,KAAKc,MAAMpB,EAAGD,KAQxBoB,IAAO,kBAphBYjC,EAshBJE,QAthBOD,EAshBKC,QAphBvBW,EAAIO,KAAKa,IAAIjC,GACbc,EAAIM,KAAKa,IAAIhC,GAEbY,EAAI,KAAQC,EAAI,IACXM,KAAKY,KAAKnB,EAAIA,EAAIC,EAAIA,IAG3BD,EAAIC,KACFA,IACAd,EAAIC,KAEJA,EAAID,EAEHa,EAAIO,KAAKY,KAAK,EAAIlB,EAAIA,IAfnB,IAASd,EAAGC,EAElBY,EACAC,GA2hBJy/C,IAAO,kBAEEn/C,KAAKc,MAAMhC,QAAYA,UAQhCkD,IAAO,eAIDvC,EAAIX,QACJY,EAAIZ,eAED,IAAI0sD,EACHxrD,KAAKgC,IAAIvC,GAAKw6D,EAAKv6D,GACnBM,KAAK+B,IAAItC,GAAKy6D,EAAKx6D,KAQ7BqC,IAAO,eAIDtC,EAAIX,QACJY,EAAIZ,eAED,IAAI0sD,EACHxrD,KAAK+B,IAAItC,GAAKw6D,EAAKv6D,IAClBM,KAAKgC,IAAIvC,GAAKy6D,EAAKx6D,KAQ9B6e,IAAO,eAID9e,EAAI,EAAIX,QACRY,EAAI,EAAIZ,QACR2Q,EAAIzP,KAAK+B,IAAItC,GAAKw6D,EAAKv6D,UAEpB,IAAI8rD,EACHxrD,KAAKgC,IAAIvC,GAAKgQ,EACdyqD,EAAKx6D,GAAK+P,IAQpBsrD,IAAO,eAIDt7D,EAAI,EAAIX,QACRY,EAAI,EAAIZ,QACR2Q,EAAIzP,KAAK+B,IAAItC,GAAKw6D,EAAKv6D,UAEpB,IAAI8rD,GACFxrD,KAAKgC,IAAIvC,GAAKgQ,EACfyqD,EAAKx6D,GAAK+P,IAQpBurD,IAAO,eAIDv7D,EAAIX,QACJY,EAAIZ,QACJ2Q,EAAI,GAAMwqD,EAAK,EAAIv6D,GAAK,GAAMM,KAAK+B,IAAI,EAAItC,UAExC,IAAI+rD,EACHxrD,KAAK+B,IAAItC,GAAKw6D,EAAKv6D,GAAK+P,EACxBzP,KAAKgC,IAAIvC,GAAKy6D,EAAKx6D,GAAK+P,IAQlCwrD,IAAO,eAIDx7D,EAAIX,QACJY,EAAIZ,QACJ2Q,EAAI,GAAMwqD,EAAK,EAAIv6D,GAAK,GAAMM,KAAK+B,IAAI,EAAItC,UAExC,IAAI+rD,EACHxrD,KAAKgC,IAAIvC,GAAKw6D,EAAKv6D,GAAK+P,GACvBzP,KAAK+B,IAAItC,GAAKy6D,EAAKx6D,GAAK+P,IAQnC6F,KAAQ,eAIF7V,EAAIX,QACJY,EAAIZ,QAEJwoB,EAAK,IAAIkkC,EACL9rD,EAAIA,EAAID,EAAIA,EAAI,KACXA,EAAIC,UAEbw7D,EAAK,IAAI1P,EACLlkC,KAAW5nB,EACX4nB,KAAW7nB,gBAEZ,IAAI+rD,EAAQ0P,MAAWA,OAQhC3yD,KAAQ,eAIF9I,EAAIX,QACJY,EAAIZ,QAEJwoB,EAAK,IAAIkkC,EACL9rD,EAAIA,EAAID,EAAIA,EAAI,KACXA,EAAIC,UAEbw7D,EAAK,IAAI1P,EACLlkC,KAAW5nB,EACX4nB,KAAW7nB,gBAEZ,IAAI+rD,EAAQxrD,KAAKe,GAAK,EAAIm6D,KAAUA,OAQ7CtI,KAAQ,eAIFnzD,EAAIX,QACJY,EAAIZ,WAEE,IAANW,EAAS,IAED,IAANC,SACK,IAAI8rD,EAAQ,EAAGzpC,EAAAA,WAGpBriB,SACK,IAAI8rD,EAAQ,GAAG,EAAA,OAItB/7C,EAAIhQ,EAAIA,KAAWC,MAAYA,GAE/B4nB,EAAK,IAAIkkC,KACA9rD,EAAIA,EAAID,EAAIA,GAAKgQ,KACjBhQ,EAAIgQ,GAAG1L,aAEb,IAAIynD,MAAelkC,KAAU,GAAMA,OAQ5C6zC,KAAQ,eAIF17D,EAAIX,QACJY,EAAIZ,WAEE,IAANY,SACK,IAAI8rD,EAAQxrD,KAAKc,MAAM,EAAGrB,GAAI,OAGnCgQ,EAAIhQ,EAAIA,EAAIC,EAAIA,SACN,IAAN+P,EACE,IAAI+7C,EACE/rD,EAAIgQ,GACH/P,EAAI+P,GAAGmjD,OACd,IAAIpH,EACS,IAAN/rD,EAAWA,EAAI,EAAI,EACb,IAANC,GAAYA,EAAI,EAAI,GAAGkzD,QAQ1CwI,KAAQ,eAIF37D,EAAIX,QACJY,EAAIZ,WAEE,IAANW,GAAiB,IAANC,SACN,IAAI8rD,EAAQ,EAAGzpC,EAAAA,OAGpBtS,EAAIhQ,EAAIA,EAAIC,EAAIA,SACN,IAAN+P,EACE,IAAI+7C,EACE/rD,EAAIgQ,GACH/P,EAAI+P,GAAGlH,OACd,IAAIijD,EACS,IAAN/rD,EAAWA,EAAI,EAAI,EACb,IAANC,GAAYA,EAAI,EAAI,GAAG6I,QAQ1C8yD,KAAQ,eAIF57D,EAAIX,QACJY,EAAIZ,WAEE,IAANW,GAAiB,IAANC,SACN,IAAI8rD,EAAQxrD,KAAKe,GAAK,EAAGghB,EAAAA,OAG9BtS,EAAIhQ,EAAIA,EAAIC,EAAIA,SACN,IAAN+P,EACE,IAAI+7C,EACE/rD,EAAIgQ,GACH/P,EAAI+P,GAAG6F,OACd,IAAIk2C,EACS,IAAN/rD,EAAWA,EAAI,EAAI,EACb,IAANC,GAAYA,EAAI,EAAI,GAAG4V,QAQ1Cg8C,KAAQ,eAIF7xD,EAAIX,QACJY,EAAIZ,eAED,IAAI0sD,EACH0O,EAAKz6D,GAAKO,KAAK+B,IAAIrC,GACnBu6D,EAAKx6D,GAAKO,KAAKgC,IAAItC,KAQ7BuxD,KAAQ,eAIFxxD,EAAIX,QACJY,EAAIZ,eAED,IAAI0sD,EACHyO,EAAKx6D,GAAKO,KAAK+B,IAAIrC,GACnBw6D,EAAKz6D,GAAKO,KAAKgC,IAAItC,KAQ7BkyD,KAAQ,eAIFnyD,EAAI,EAAIX,QACRY,EAAI,EAAIZ,QACR2Q,EAAIwqD,EAAKx6D,GAAKO,KAAK+B,IAAIrC,UAEpB,IAAI8rD,EACH0O,EAAKz6D,GAAKgQ,EACVzP,KAAKgC,IAAItC,GAAK+P,IAQxB6rD,KAAQ,eAIF77D,EAAI,EAAIX,QACRY,EAAI,EAAIZ,QACR2Q,EAAIwqD,EAAKx6D,GAAKO,KAAK+B,IAAIrC,UAEpB,IAAI8rD,EACH0O,EAAKz6D,GAAKgQ,GACTzP,KAAKgC,IAAItC,GAAK+P,IAQzB8rD,KAAQ,eAIF97D,EAAIX,QACJY,EAAIZ,QACJ2Q,EAAIzP,KAAK+B,IAAI,EAAIrC,GAAKu6D,EAAK,EAAIx6D,UAE5B,IAAI+rD,KACE0O,EAAKz6D,GAAKO,KAAK+B,IAAIrC,GAAK+P,EAC7B,EAAIwqD,EAAKx6D,GAAKO,KAAKgC,IAAItC,GAAK+P,IAQtC+rD,KAAQ,eAIF/7D,EAAIX,QACJY,EAAIZ,QACJ2Q,EAAIzP,KAAK+B,IAAI,EAAIrC,GAAKu6D,EAAK,EAAIx6D,UAE5B,IAAI+rD,EACH,EAAIyO,EAAKx6D,GAAKO,KAAK+B,IAAIrC,GAAK+P,KACvByqD,EAAKz6D,GAAKO,KAAKgC,IAAItC,GAAK+P,IAQvC6iD,MAAS,eAIHz/C,EAAM/T,iBACIA,gBACD+T,MACT4oD,EAAM38D,4BAEIA,gBACD+T,IACP4oD,WAEOA,UACD5oD,EACL4oD,GAQTvJ,MAAS,eAIHuJ,EAAM38D,eACN28D,MAAa,EAAG,KACd5oD,EAAM4oD,WACGA,UACD5oD,OAERA,EAAM4oD,WACGA,UACD5oD,SAEP4oD,GAQTjJ,MAAS,eAIH/yD,EAAIX,QACJY,EAAIZ,QAEJ48D,EAAOj8D,EAAI,GAAW,IAANC,EAChBi8D,EAAW,EAAIl8D,EACfm8D,EAAU,EAAIn8D,EACdgQ,EAAIksD,EAAWA,EAAWj8D,EAAIA,EAE9Bd,EAAW,IAAN6Q,EACC,IAAI+7C,KACamQ,EAAWj8D,EAAIA,GAAK+P,KAC1BksD,EAAWC,EAAUl8D,GAAK+P,GACrC,IAAI+7C,OACG/rD,EAAaA,EAAI,EAAK,EAChB,IAANC,EAAYA,EAAI,EAAK,GAElCk2D,EAAOh3D,iBACD+7D,EAAS/7D,KAASA,MAAW,OAC7BoB,KAAKc,MAAMlC,KAASg3D,GAAQ,EAClC8F,UACS98D,MAENA,GAQTi9D,MAAS,eAIHp8D,EAAIX,QACJY,EAAIZ,WAEE,IAANW,GAAiB,IAANC,SACN,IAAI8rD,EAAQ,EAAGxrD,KAAKe,GAAK,OAG9B0O,EAAIhQ,EAAIA,EAAIC,EAAIA,SACN,IAAN+P,EACE,IAAI+7C,EACE/rD,EAAIgQ,GACH/P,EAAI+P,GAAG+iD,QACd,IAAIhH,EACS,IAAN/rD,EAAWA,EAAI,EAAI,EACb,IAANC,GAAYA,EAAI,EAAI,GAAG8yD,SAQ1CsJ,MAAS,eAIHr8D,EAAIX,QACJY,EAAIZ,WAEE,IAANY,SAEK,IAAI8rD,EACI,IAAN/rD,EACCO,KAAK+D,IAAItE,EAAIO,KAAKY,KAAKnB,EAAIA,EAAI,IAC/BsiB,EAAAA,EAAU,OAGlBtS,EAAIhQ,EAAIA,EAAIC,EAAIA,SACN,IAAN+P,EACE,IAAI+7C,EACE/rD,EAAIgQ,GACH/P,EAAI+P,GAAG6iD,QACd,IAAI9G,EACS,IAAN/rD,EAAWA,EAAI,EAAI,EACb,IAANC,GAAYA,EAAI,EAAI,GAAG4yD,SAQ1CyJ,MAAS,eAIHt8D,EAAIX,QACJY,EAAIZ,WAEJA,qBACK0sD,eAGL/7C,EAAIhQ,EAAIA,EAAIC,EAAIA,SACN,IAAN+P,EACE,IAAI+7C,EACE/rD,EAAIgQ,GACH/P,EAAI+P,GAAGyiD,QACd,IAAI1G,EACS,IAAN/rD,EAAWA,EAAI,EAAI,EACb,IAANC,GAAYA,EAAI,EAAI,GAAGwyD,SAQ1C8J,QAAW,cAGLl9D,qBACK0sD,cAGL1sD,yBACK0sD,WAGL/rD,EAAIX,QACJY,EAAIZ,QAEJ2Q,EAAIhQ,EAAIA,EAAIC,EAAIA,SAEb,IAAI8rD,EAAQ/rD,EAAIgQ,GAAI/P,EAAI+P,IAQjC7G,UAAa,kBAEJ,IAAI4iD,EAAQ1sD,SAAaA,UAQlCgxD,IAAO,kBAEE,IAAItE,GAAS1sD,SAAaA,UAQnC4B,KAAQ,SAASu7D,YAENj8D,KAAK8D,IAAI,GAAIm4D,GAAU,GAEzB,IAAIzQ,EACHxrD,KAAKU,KAAK5B,QAAam9D,GAAUA,EACjCj8D,KAAKU,KAAK5B,QAAam9D,GAAUA,IAQ3Cx7D,MAAS,SAASw7D,YAEPj8D,KAAK8D,IAAI,GAAIm4D,GAAU,GAEzB,IAAIzQ,EACHxrD,KAAKS,MAAM3B,QAAam9D,GAAUA,EAClCj8D,KAAKS,MAAM3B,QAAam9D,GAAUA,IAQ5Ct7D,MAAS,SAASs7D,YAEPj8D,KAAK8D,IAAI,GAAIm4D,GAAU,GAEzB,IAAIzQ,EACHxrD,KAAKW,MAAM7B,QAAam9D,GAAUA,EAClCj8D,KAAKW,MAAM7B,QAAam9D,GAAUA,IAU5Ct5C,OAAU,SAASljB,EAAGC,OAEhBoF,EAAI,IAAI0mD,EAAQ/rD,EAAGC,UAEhBM,KAAKa,IAAIiE,KAAUhG,UAAe0sD,WACjCxrD,KAAKa,IAAIiE,KAAUhG,UAAe0sD,WAQ5Cle,MAAS,kBAEA,IAAIke,EAAQ1sD,QAAYA,UAQjCyD,SAAY,eAEN9C,EAAIX,QACJY,EAAIZ,QACJo9D,EAAM,UAENp9D,aACK,MAGLA,kBACK,YAGLkB,KAAKa,IAAIpB,GAAK+rD,cACZ,GAGFxrD,KAAKa,IAAInB,GAAK8rD,cACZ,GAII,IAAN9rD,EACKw8D,EAAMz8D,GAGL,IAANA,MACIA,KACA,IACFC,EAAI,MACDA,KACC,QAEA,OAEF,KACGA,EAAI,OACRA,KACC,KAGJ,IAAMA,OACFA,GAEDw8D,EAAM,OAQfC,SAAY,iBAEH,CAACr9D,QAAYA,UAQtBw4C,QAAW,kBAEU,IAAfx4C,QACKA,QAEF,MAQTy4B,MAAS,kBACAA,MAAMz4B,UAAey4B,MAAMz4B,UASpCynD,OAAU,kBACc,IAAfznD,SAAmC,IAAfA,SAS7B+0B,SAAY,kBACHA,SAAS/0B,UAAe+0B,SAAS/0B,UAS1Cs9D,WAAc,iCACgBt9D,0BAId,IAAI0sD,EAAQ,EAAG,SAChB,IAAIA,EAAQ,EAAG,OACjB,IAAIA,EAAQ,EAAG,QACd,IAAIA,EAAQxrD,KAAKe,GAAI,OACtB,IAAIyqD,EAAQxrD,KAAKq8D,EAAG,cACb,IAAI7Q,EAAQzpC,EAAAA,EAAUA,EAAAA,SAC3B,IAAIypC,EAAQ0D,IAAKA,eACb,aAOZ/W,eAAeqT,EAAS,aAAc,CAACzsD,OAAS,cAClCysD,YACAA,aACDA,EAp1CvB,yBC7BU8Q,MAFA,UACQ,IACwD,QAIjEn6D,UAAU6/B,KAAO,aACjB7/B,UAAUqzC,WAAY,KAOtBrzC,UAAU4pD,OAAS,iBAClB,CACLC,OAAQ,UACRsO,GAAIx7D,KAAKw7D,GACTC,GAAIz7D,KAAKy7D,QAULp4D,UAAUo6D,QAAU,iBACnB,CACLl0D,EAAGvJ,KAAK+B,MACR8L,IAAK7N,KAAKqgD,WAcNh9C,UAAUilD,OAAS,SAAU9a,OAE/BiuB,EAAKz7D,KAAKy7D,GACVD,EAAKx7D,KAAKw7D,GACVkC,EAAQpV,GAAOtoD,KAAKw7D,GAAIhuB,GACxBmwB,EAAQrV,GAAOtoD,KAAKy7D,GAAIjuB,GAExB6I,EAAYsP,GAASnY,GAAWA,EAAUA,EAAUA,EAAQ6I,UAAY,QAE1D,OAAdA,EAAoB,KAClB9nC,EAAUrN,KAAK8D,IAAI,IAAKqxC,GAExBn1C,KAAKa,IAAIy5D,EAAKC,GAAMltD,MACjB,GAGHrN,KAAKa,IAAI05D,EAAKD,GAAMjtD,MACjB,UAIE,IAAPktD,EAEIiC,EACU,IAAPlC,EAEE,IAAPC,EACI,SACGA,EACH,KAEAkC,EAAQ,IAIZlC,EAAK,OACHA,EACIiC,EAAQ,OAERA,EAAQ,MAAQC,EAAM7V,UAAU,GAAK,IAGlC,IAAP2T,EACIiC,EAAQ,OAERA,EAAQ,MAAQC,EAAQ,QAoB9BC,UAAY,SAAU3f,UACpBhvC,UAAUxN,aACX,MAEG4+C,EAAMpxC,UAAU,MAED,iBAARoxC,SACF2L,GAAQ3L,SAET,IAAI5H,UAAU,uDAIrB,MAEGlvC,EAAI0F,UAAU,GACdpB,EAAMoB,UAAU,MAEhB02C,GAASp8C,GAAI,IACXqtC,GAAO/oC,IAAQA,EAAIgwD,QAAQ,aAEvBhwD,EAAI8+C,SAAS,QAGjBhH,GAAS93C,UACJ,IAAIm+C,GAAQ,CACjBziD,EAAAA,EACAsE,IAAAA,UAIE,IAAI4qC,UAAU,gDAEd,IAAIA,UAAU,2CAKlB,IAAI2E,YAAY,wDAIpB/5C,UAAUm1C,QAAUwT,GAAQ3oD,UAAUI,YAUtC0pD,SAAW,SAAUC,UACpB,IAAIpB,GAAQoB,OAmBb0K,QAAU,SAAUn3D,EAAGC,UACzBD,EAAE66D,GAAK56D,EAAE46D,GACJ,EAGL76D,EAAE66D,GAAK56D,EAAE46D,MAIT76D,EAAE86D,GAAK76D,EAAE66D,GACJ,EAGL96D,EAAE86D,GAAK76D,EAAE66D,MAIN,GAGFzP,KACN,CACDqB,SAAS;;;;;;;;gBCzKV,SAAS6N,OAUJ4C,EAAI,CACNp9D,EAAK,EACLmD,EAAK,EACL8M,EAAK,cAGcyQ,oBAGb01C,EAAO12D,MAAM4/B,MAAMhgC,KAAMiP,kBACdjP,UAAeohB,aACd01C,qBACEA,iCASEzzD,UAAYjD,MAAMiD,YACvBA,UAAY,IAAI06D,EAE1BC,MAGLC,EAAiBrR,iBAA6B3I,EAAY,kBAC1Dia,EAAmBtR,mBAA+B3I,EAAY,+BAElDpgD,EAAGnD,UAEb+3B,MAAM50B,EAAIyd,SAASzd,EAAG,UAGnBA,EAAInD,qBAIL,IAAIw9D,aAGOvJ,WAEbwJ,EAAU,GAEVt6D,EAAI8wD,EACJnxD,EAAI,EACJ9C,EAAI,EAEDA,GAAKmD,GAAG,MAENA,EAAIL,GAAM,MACVA,IACGA,MAAcA,IAAM,GAAK,KAE9B,EAAI,EAAIA,WAGXK,IAAM8wD,EACJ9wD,EAAI,MACAA,MAAcA,IAAM,GAAK,KAEzB8wD,MAAgBA,IAAQ,GAAK,EAEhCwJ,MAGL5rB,EAAQ,SAAS3rB,EAAIC,OASnBu3C,EAPAv6D,EAAI,EAAG8M,EAAI,EAAGjQ,EAAI,EAClBJ,EAAI,EAAGC,EAAI,EAAGT,EAAI,EAAGC,EAAI,EAAGiG,EAAI,EAEhCq4D,EAAI,EAAGC,EAAI,EACXC,EAAI,EAAGC,EAAI,EAEXC,EAAI,OAGJ73C,MAAAA,gBAEc,IAAPC,OACLD,MACAC,sBAGWD,OAER,SAEG,MAAOA,GAAM,MAAOA,KAClBA,MACAA,IACA,MAAOA,OACJA,MACE,KAAKA,KACVA,EAAG,GACH,KAAKA,MACHA,EAAG,WAIP/iB,EAAI8M,YAGP,YAEGiW,EAAK,MACHA,KACEA,GAGJA,EAAK,GAAM,IACTA,UACKA,EAAK,EAAG,KAEbA,GAAM,SACJ1lB,KAAK8D,IAAI,GAAI9D,KAAKS,MAAM,EAAIT,KAAK+D,IAAI2hB,GAAM1lB,KAAKssD,QAO/C8Q,GAAKG,GAAKD,GAAKC,GAAG,IAGnB73C,UAFK23C,MAAUC,IAEL,CACRF,EAAIE,GAAKC,KACPJ,EAAIE,IACJD,EAAIE,GACCA,EAAIF,KACTC,IACAC,MAEAH,IACAC,SAMF13C,EAAKw3C,MACFG,KACAC,OAEAH,KACAC,GAGHA,EAAIG,KACFF,IACAC,MAEAH,IACAC,MAILt4D,OACIyyB,MAAM7R,IAAO6R,MAAM5R,QACxBhjB,EAAIusD,eAIT,YAIS,UAFNxpC,EAAGi1B,MAAM,gBAKA,MAATyiB,EAAED,cAGc,MAATC,EAAED,QAITC,EAAE78D,SAAW48D,EAAI,IACfrgC,EAAOsgC,EAAED,KAAM39D,GACG,MAAb49D,EAAED,EAAI,IAAuB,MAATC,EAAED,IAElB,MAATC,EAAED,OACArgC,EAAOsgC,EAAED,KAAM39D,SAKb,IAAM49D,EAAE78D,QAAuB,MAAb68D,EAAED,EAAI,IAA2B,MAAbC,EAAED,EAAI,IAA2B,MAAbC,EAAED,EAAI,IAA2B,MAAbC,EAAED,EAAI,QACtFrgC,EAAOsgC,EAAED,GAAI39D,KACbQ,KAAK8D,IAAI,GAAIs5D,EAAED,GAAG58D,cAKX,MAAT68D,EAAED,IAA2B,MAAbC,EAAED,EAAI,IAAuB,MAATC,EAAED,IAA2B,MAAbC,EAAED,EAAI,QACxDrgC,EAAOsgC,EAAED,EAAI,GAAI39D,KACjBQ,KAAK8D,IAAI,GAAIs5D,EAAED,EAAI,GAAG58D,QAAU,KAC/B,IAGe,MAAb68D,EAAED,EAAI,IAA2B,MAAbC,EAAED,EAAI,MAC/BrgC,EAAOsgC,EAAED,GAAI39D,KACbs9B,EAAOsgC,EAAED,EAAI,GAAI,MAChB,GACiB,MAAbC,EAAED,EAAI,IAA2B,MAAbC,EAAED,EAAI,OAC/BrgC,EAAOsgC,EAAED,GAAI39D,KACbs9B,EAAOsgC,EAAED,EAAI,GAAI39D,KACjBs9B,EAAOsgC,EAAED,EAAI,GAAI,MAChB,GAGHC,EAAE78D,QAAU48D,EAAG,GAGjBx6D,EAAI/D,KAFAC,EAAIiG,GAEI1F,EAAI0F,EAAIzF,uBAUpB,IAANoQ,QACI,IAAIstD,MAGHv9D,EAAI,KAAS,MACbQ,KAAKa,IAAI8B,OACT3C,KAAKa,IAAI4O,eAgEPhQ,EAAGC,OAETD,SACIC,MACJA,SACID,SAEC,SACHC,UAEIA,UACJD,UAEIA,cAWKA,EAAGC,wBAEGgsD,UACb,IAAIA,EAASjsD,EAAGC,KAGnBD,EAAGC,KAELgsD,SACE8R,EAAIZ,IAAQA,KAEZ,SAGMA,WACAA,IAASn9D,SACTm9D,IAASn9D,WAOF,IAEZ0C,UAAY,CAEnB3C,EAAK,EACLmD,EAAK,EACL8M,EAAK,EAOL5O,IAAO,kBAEE,IAAI6qD,EAAS5sD,OAAWA,SAQjCgxD,IAAO,kBAEE,IAAIpE,GAAU5sD,OAAYA,OAAWA,SAQ9CujB,IAAO,SAAS5iB,EAAGC,YAEXD,EAAGC,GACF,IAAIgsD,EACT5sD,OAAYA,OAAY89D,IAASA,IAAS99D,OAAY89D,IACtD99D,OAAY89D,MAShBxwD,IAAO,SAAS3M,EAAGC,YAEXD,EAAGC,GACF,IAAIgsD,EACT5sD,OAAYA,OAAY89D,IAASA,IAAS99D,OAAY89D,IACtD99D,OAAY89D,MAShBvW,IAAO,SAAS5mD,EAAGC,YAEXD,EAAGC,GACF,IAAIgsD,EACT5sD,OAAY89D,IAAS99D,OAAY89D,IACjC99D,OAAY89D,MAShBlM,IAAO,SAASjxD,EAAGC,YAEXD,EAAGC,GACF,IAAIgsD,EACT5sD,OAAY89D,IAAS99D,OAAY89D,IACjC99D,OAAY89D,MAShBtvB,MAAS,kBACA,IAAIoe,EAAS5sD,OAQtBk1D,IAAO,SAASv0D,EAAGC,UAEb63B,MAAMz4B,SAAcy4B,MAAMz4B,QACrB,IAAI4sD,EAASwD,UAGZ,IAANzvD,EACK,IAAIisD,EAAS5sD,OAAYA,OAAYA,OAAW,MAGnDW,EAAGC,GACL,IAAAk9D,KAAgB,IAAA99D,UACT,EAAG,GAiBP,IAAI4sD,EACT5sD,YAAsBA,aAAuBA,QAC7C89D,IAAS99D,UASb0+D,IAAO,SAAS/9D,EAAGC,YAEXD,EAAGC,GAIF,IAAIgsD,EAAS8R,EAAIZ,IAAQ99D,QAAa0+D,EAAIZ,IAAQ99D,QAAY89D,IAAS99D,SAQhF2+D,IAAO,SAASh+D,EAAGC,YAEXD,EAAGC,GAIM,IAAXk9D,KAA8B,IAAd99D,OACX,IAAI4sD,EAEN,IAAIA,EAASkR,IAAS99D,OAAW0+D,EAAIZ,IAAQ99D,QAAa0+D,EAAIZ,IAAQ99D,UAQ/E4B,KAAQ,SAASu7D,YAENj8D,KAAK8D,IAAI,GAAIm4D,GAAU,GAE5B1kC,MAAMz4B,SAAcy4B,MAAMz4B,QACrB,IAAI4sD,EAASwD,KAEf,IAAIxD,EAAS1rD,KAAKU,KAAKu7D,EAASn9D,OAAYA,OAAYA,QAAYm9D,IAQ7Ex7D,MAAS,SAASw7D,YAEPj8D,KAAK8D,IAAI,GAAIm4D,GAAU,GAE5B1kC,MAAMz4B,SAAcy4B,MAAMz4B,QACrB,IAAI4sD,EAASwD,KAEf,IAAIxD,EAAS1rD,KAAKS,MAAMw7D,EAASn9D,OAAYA,OAAYA,QAAYm9D,IAQ9Et7D,MAAS,SAASs7D,YAEPj8D,KAAK8D,IAAI,GAAIm4D,GAAU,GAE5B1kC,MAAMz4B,SAAcy4B,MAAMz4B,QACrB,IAAI4sD,EAASwD,KAEf,IAAIxD,EAAS1rD,KAAKW,MAAMs7D,EAASn9D,OAAYA,OAAYA,QAAYm9D,IAQ9ED,QAAW,kBAEF,IAAItQ,EAAS5sD,OAAYA,OAAWA,SAQ7CgF,IAAO,SAASrE,EAAGC,QAEXD,EAAGC,GAIM,IAAXk9D,WAEEA,IAAS,EACJ,IAAIlR,EAAS1rD,KAAK8D,IAAIhF,OAAYA,OAAW89D,KAAS58D,KAAK8D,IAAIhF,OAAW89D,MAE1E,IAAIlR,EAAS1rD,KAAK8D,IAAIhF,OAAYA,OAAW89D,KAAS58D,KAAK8D,IAAIhF,OAAW89D,SAUjF99D,OAAY,SAAU,SAGtBy+D,EAAIG,EAAU5+D,QACdw+D,EAAII,EAAU5+D,QAGd6D,EAAI,EACJ8M,EAAI,UACCizB,KAAK66B,KACF,MAAN76B,MACM,MAANA,EAAW,GACT,aAGJA,IAAKk6B,IAEHW,EAAE76B,GAAKk6B,KAAW,SAER,OADVl6B,IAAKk6B,OAEL58D,KAAK8D,IAAI4+B,EAAG66B,EAAE76B,YAGXA,KAAK46B,KACF,MAAN56B,QACFA,IAAKk6B,IAEHU,EAAE56B,GAAKk6B,KAAW,SAER,OADVl6B,IAAKk6B,OAEL58D,KAAK8D,IAAI4+B,EAAG46B,EAAE56B,WAGhBk6B,IAAS,EACJ,IAAIlR,EAASj8C,EAAG9M,GAElB,IAAI+oD,EAAS/oD,EAAG8M,IAQzBkT,OAAU,SAASljB,EAAGC,YAEdD,EAAGC,GACFZ,OAAYA,OAAY89D,KAAWA,IAASA,IAAS99D,QAQ9D83D,QAAW,SAASn3D,EAAGC,KAEfD,EAAGC,OACLkD,EAAK9D,OAAYA,OAAY89D,IAASA,IAASA,IAAS99D,gBAChD8D,MAAU,IAGxB+6D,SAAY,SAASC,MAIfrmC,MAAMz4B,SAAcy4B,MAAMz4B,eACrBA,SAGL++D,EAAO/+D,oCAIEW,UACM,IAAbA,EAAEc,OACG,IAAImrD,EAASjsD,EAAE,IACjBq+D,EAAIr+D,EAAE0hB,MAAM,kBAAwB1hB,EAAE,MALzCm+D,GAAO,aAQJt7D,EAAI,EAAGA,EAAIu7D,EAAKt9D,OAAQ+B,IAAK,KAChCuQ,EAAMirD,EAAID,EAAK18C,MAAM,EAAG7e,EAAI,OAC5BuQ,MAAW/T,kBAAwBw4C,UAAYsmB,SAC1C/qD,MAAW/T,eAGfA,MAQTi/D,UAAa,SAASt+D,EAAGC,YAEjBD,EAAGC,WACWZ,SAAgBA,OAAY89D,SAAoB99D,UAQtEw4C,QAAW,kBAEFx4C,OAAYA,OAAYA,QAQjCi2D,WAAc,SAASiJ,OAEjBC,EAAOvjB,EAAM,GACb/3C,EAAI7D,OACJ2Q,EAAI3Q,cACJA,OAAY,OACP,KAGC,IAAN2Q,KACK9M,GAGHq7D,MAAyBh+D,KAAKS,MAAMkC,EAAI8M,IAAM,OACzCwuD,KACA,OACFxuD,MAGA9M,KACA,OACA8M,GAEFirC,GAQTwjB,QAAW,SAASF,OAEdC,EAAOvjB,EAAM,GACb/3C,EAAI7D,OACJ2Q,EAAI3Q,cACJA,OAAY,OACP,KAGC,IAAN2Q,KACK9M,GAGHq7D,MAAyBh+D,KAAKS,MAAMkC,EAAI8M,IAAM,OACzCwuD,KACFxuD,MAGA,aACA9M,KACA,QACA8M,KACA,KAEFirC,GAQTyjB,YAAe,eAETv7D,EACAnD,EAAIX,OACJY,EAAIZ,OACJ28D,EAAM,MAENlkC,MAAM93B,IAAM83B,MAAM73B,UACb+7D,OAIH9sC,KAAK3uB,KAAKS,MAAMhB,EAAIC,MACpBD,EAAIC,IACJA,IACAkD,QACS,IAANnD,UAEFg8D,GAQTl5D,SAAY,SAAS67D,OAEfh/C,EACAm+C,EAAIz+D,OACJw+D,EAAIx+D,UAEJy4B,MAAMgmC,IAAMhmC,MAAM+lC,SACb,MAGJ5R,gBACC8R,EAAID,EAAGD,MAENl+C,KAGDg/C,GAAO,OAETC,WAljBU17D,EAAG8M,QAEZA,EAAI,GAAM,EACfA,GAAK,QAGAA,EAAI,GAAM,EACfA,GAAK,MAGG,IAANA,SACK,UAOL2mD,EAAM,GAAK3mD,EACX7M,EAAI,EAEO,IAARwzD,EAAWxzD,SACJ,GAANwzD,EAAW3mD,EAEb7M,EAnRY,WAoRP,SAEJA,EAuhBQ07D,CAASf,EAAGD,GACrBiB,WAphBY57D,EAAG8M,EAAGhJ,WAEpB+3D,EAAO,EACPC,WA/CU/+D,EAAGI,EAAGD,WAEhBwI,EAAI,EACDvI,EAAI,EAAGJ,EAAKA,EAAIA,EAAKG,EAAGC,IAAM,EAE3B,EAAJA,MACGuI,EAAI3I,EAAKG,UAGXwI,EAsCIq2D,CAAO,GAAIj4D,EAAKgJ,GAElB7M,EAAI,EAAGA,EAAI,IAAKA,IAAK,IAGxB47D,IAASC,SACJ77D,IAEK,GAAP47D,EAAY/uD,IACL,GAAPgvD,EAAYhvD,SAEd,EAsgBQkvD,CAAWpB,EAAGD,EAAGe,GAE1B3jB,OAAM57C,OAAmB,IAAM,SAE5By+D,EAAID,EAAI,KAEVA,MACA,SAGI,KAELe,EAAQ,SAED/7D,EAAIi8D,EAAQj8D,QACZi7D,EAAID,EAAI,KACVA,KACA,MAEA,QACEh7D,EAAI+7D,EAAQ/7D,QACZi7D,EAAID,EAAI,KACVA,KACA,MAEA,aAEEh7D,EAAI87D,EAAKb,GAAKj7D,QACdi7D,EAAID,EAAI,KACVA,KACA,UAGF5iB,WASFvC,eAAeuT,EAAU,aAAc,CAAE3sD,OAAS,cACnC2sD,aACCA,YACHA,EAl2BvB,8BCnCUkT,MAFA,WACQ,IACyD,QAIjEz8D,UAAU6/B,KAAO,cACjB7/B,UAAUszC,YAAa,KAOvBtzC,UAAU4pD,OAAS,iBACnB,CACLC,OAAQ,WACRrpD,EAAG7D,KAAKU,EAAIV,KAAK6D,EACjB8M,EAAG3Q,KAAK2Q,OAWHw8C,SAAW,SAAUC,UACrB,IAAIlB,GAASkB,IAGflB,KACN,CACDmB,SAAS,IChCA0S,MAFA,QACQ,IACsD,gBAgCxD91C,EAAOC,EAAKvgB,wBACHq2D,SACd,IAAI5iB,YAAY,wDAGpB6iB,EAAWh2C,MAAAA,EACXi2C,EAASh2C,MAAAA,EACTi2C,EAAUx2D,MAAAA,KAEVs2D,KACEzpB,GAAYvsB,KACNA,EAAM0iC,mBACY,iBAAV1iC,QACV,IAAIwuB,UAAU,uCAIpBynB,KACE1pB,GAAYtsB,KACRA,EAAIyiC,mBACc,iBAARziC,QACV,IAAIuuB,UAAU,qCAIpB0nB,KACE3pB,GAAY7sC,KACPA,EAAKgjD,mBACa,iBAAThjD,QACV,IAAI8uC,UAAU,wCAInBxuB,MAAQg2C,EAAWh/C,WAAWgJ,GAAS,OACvCC,IAAMg2C,EAASj/C,WAAWiJ,GAAO,OACjCvgB,KAAOw2D,EAAUl/C,WAAWtX,GAAQ,WAOrCtG,UAAU6/B,KAAO,UACjB7/B,UAAU4zC,SAAU,IAWpB1E,MAAQ,SAAUqJ,MACH,iBAARA,SACF,SAILwkB,EADOxkB,EAAIF,MAAM,KACLnD,KAAI,SAAU8H,UACrBp/B,WAAWo/B,SAEN+f,EAAK/iB,MAAK,SAAUsX,UACzBl8B,MAAMk8B,aAIN,YAGDyL,EAAK3+D,aACN,SACI,IAAIu+D,EAAMI,EAAK,GAAIA,EAAK,SAE5B,SACI,IAAIJ,EAAMI,EAAK,GAAIA,EAAK,GAAIA,EAAK,mBAGjC,SASP/8D,UAAUmrC,MAAQ,kBACf,IAAIwxB,EAAMhgE,KAAKiqB,MAAOjqB,KAAKkqB,IAAKlqB,KAAK2J,SAUxCtG,UAAUg9D,KAAO,eACjB14D,EAAM,EACNsiB,EAAQjqB,KAAKiqB,MACbtgB,EAAO3J,KAAK2J,KAEZk4B,EADM7hC,KAAKkqB,IACED,SAEb4Q,GAAKlxB,KAAUkxB,GAAKgH,KAChB3gC,KAAKU,KAAKigC,EAAOl4B,GACL,IAATk4B,MACH,GAGJpJ,MAAM9wB,OACF,GAGD,CAACA,MASJtE,UAAUlC,IAAM,eAChBqgB,EAAOxhB,KAAKqgE,OAAO,UAEnB7+C,EAAO,EACLxhB,KAAK2J,KAAO,EAEP3J,KAAKiqB,MAGLjqB,KAAKiqB,SAAgB,GAAKjqB,KAAK2J,eAatCtG,UAAUjC,IAAM,eAChBogB,EAAOxhB,KAAKqgE,OAAO,UAEnB7+C,EAAO,EACLxhB,KAAK2J,KAAO,EAEP3J,KAAKiqB,SAAgB,GAAKjqB,KAAK2J,KAG/B3J,KAAKiqB,gBAeZ5mB,UAAU42C,QAAU,SAAU9uC,OAC9BrL,EAAIE,KAAKiqB,MACTtgB,EAAO3J,KAAK2J,KACZugB,EAAMlqB,KAAKkqB,IACX1mB,EAAI,KAEJmG,EAAO,OACF7J,EAAIoqB,KACApqB,EAAG,CAAC0D,GAAIxD,SACZ2J,cAGEA,EAAO,OACT7J,EAAIoqB,KACApqB,EAAG,CAAC0D,GAAIxD,SACZ2J,SAgBLtG,UAAUk1C,IAAM,SAAUptC,OAC1B1I,EAAQ,eACPw3C,SAAQ,SAAUh6C,EAAOE,EAAO6mC,KAC7B7mC,EAAM,IAAMgL,EAASlL,EAAOE,EAAO6mC,MAEpCvkC,KASHY,UAAUi9D,QAAU,eACpB79D,EAAQ,eACPw3C,SAAQ,SAAUh6C,EAAOE,KACtBA,EAAM,IAAMF,KAEbwC,KASHY,UAAUm1C,QAAU,kBAEjBx4C,KAAKsgE,aAcRj9D,UAAUilD,OAAS,SAAU9a,OAC7BoO,EAAM0M,GAAOtoD,KAAKiqB,MAAOujB,UAEX,IAAdxtC,KAAK2J,UACA,IAAM2+C,GAAOtoD,KAAK2J,KAAM6jC,OAG1B,IAAM8a,GAAOtoD,KAAKkqB,IAAKsjB,MAU1BnqC,UAAUI,SAAW,kBAClBzD,KAAKsoD,YAURjlD,UAAU4pD,OAAS,iBAChB,CACLC,OAAQ,QACRjjC,MAAOjqB,KAAKiqB,MACZC,IAAKlqB,KAAKkqB,IACVvgB,KAAM3J,KAAK2J,SAYTwjD,SAAW,SAAUC,UAClB,IAAI4S,EAAM5S,EAAKnjC,MAAOmjC,EAAKljC,IAAKkjC,EAAKzjD,OAGvCq2D,IACN,CACD3S,SAAS,IC3UAkT,MAFA,SACQ,IACuD,uCAwBhDC,SACd,IAAIpjB,YAAY,6DAQnB/5C,UAAU6/B,KAAO,WACjB7/B,UAAUyzC,UAAW,IAUrBzzC,UAAUo9D,QAAU,iBAEnB,IAAIrgE,MAAM,kDAYXiD,UAAUq9D,SAAW,iBAEpB,IAAItgE,MAAM,mDASXiD,UAAU6hD,OAAS,SAAUnG,EAAM2hB,SAClC,IAAItgE,MAAM,iDAiBXiD,UAAUs9D,OAAS,SAAUxgE,EAAOygE,EAAa5X,SAEhD,IAAI5oD,MAAM,iDASXiD,UAAUowB,IAAM,SAAUtzB,SAEzB,IAAIC,MAAM,8CAaXiD,UAAU0C,IAAM,SAAU5F,EAAOF,EAAO+oD,SAEvC,IAAI5oD,MAAM,8CAgBXiD,UAAUw9D,OAAS,SAAUr/C,EAAMwnC,SAElC,IAAI5oD,MAAM,iDAaXiD,UAAUy9D,QAAU,SAAUt/C,EAAMwnC,SAEnC,IAAI5oD,MAAM,kDAQXiD,UAAUmrC,MAAQ,iBAEjB,IAAIpuC,MAAM,gDAQXiD,UAAUg9D,KAAO,iBAEhB,IAAIjgE,MAAM,+CAcXiD,UAAUk1C,IAAM,SAAUptC,EAAU41D,SAEnC,IAAI3gE,MAAM,8CAUXiD,UAAU42C,QAAU,SAAU9uC,SAE7B,IAAI/K,MAAM,kDAQXiD,UAAUi9D,QAAU,iBAEnB,IAAIlgE,MAAM,kDAQXiD,UAAUm1C,QAAU,iBAEnB,IAAIp4C,MAAM,kDAYXiD,UAAUilD,OAAS,SAAU9a,SAE5B,IAAIptC,MAAM,iDAQXiD,UAAUI,SAAW,iBAEpB,IAAIrD,MAAM,iDAGXogE,IACN,CACDnT,SAAS,IC/OA2T,MAFA,cACQ,CAAC,WAC4DlV,QAC1E0U,OACFA,GACE1U,aAMiB/M,EAAM2hB,wBACHzU,SACd,IAAI7O,YAAY,uDAGpBsjB,IAAatY,GAASsY,SAClB,IAAItgE,MAAM,qBAAuBsgE,MAGrC5pB,GAASiI,GAEO,gBAAdA,EAAK7b,WAEF+9B,MAAQzyB,GAAMuQ,EAAKkiB,YACnBx3B,MAAQ+E,GAAMuQ,EAAKtV,YACnBy3B,UAAYR,GAAY3hB,EAAKmiB,iBAG7BD,MAAQliB,EAAKuhB,eACb72B,MAAQsV,EAAKshB,YACba,UAAYR,GAAY3hB,EAAKmiB,mBAE3BniB,GAAQlI,GAAQkI,EAAKA,OAASlI,GAAQkI,EAAKshB,WAE/CY,MAAQliB,EAAKA,UACbtV,MAAQsV,EAAKshB,QAETrgE,KAAKihE,MAAOjhE,KAAKypC,YACrBy3B,UAAYR,GAAY3hB,EAAK2hB,iBACzB7pB,GAAQkI,QAEZkiB,MAAQE,EAAWpiB,QAEnBtV,MAAQmgB,GAAU5pD,KAAKihE,UAEnBjhE,KAAKihE,MAAOjhE,KAAKypC,YAErBy3B,UAAYR,UACR3hB,QAEH,IAAItG,UAAU,6BAA+B2oB,GAAOriB,GAAQ,UAG7DkiB,MAAQ,QACRx3B,MAAQ,CAAC,QACTy3B,UAAYR,cA0LPvqD,EAAQhW,OACf+2C,GAAQ/2C,SACL,IAAIs4C,UAAU,oBAGPt4C,EAAMkhE,kBAIZlrD,EAAOsd,IAAItzB,EAAMgB,WAGpBqgB,EAAOrhB,EAAMkgE,UAEb7+C,EAAK/f,SAAW0U,EAAOszB,MAAMhoC,aACzB,IAAIgnD,GAAejnC,EAAK/f,OAAQ0U,EAAOszB,MAAMhoC,gBAIjDJ,EAAMlB,EAAMgB,MACZG,EAAMnB,EAAMiB,MAEPoC,EAAI,EAAGs9C,EAAK3qC,EAAOszB,MAAMhoC,OAAQ+B,EAAIs9C,EAAIt9C,OAClCnC,EAAImC,GAAI2S,EAAOszB,MAAMjmC,OACrBlC,EAAIkC,GAAI2S,EAAOszB,MAAMjmC,WAK9B,IAAIyoD,EAAYqV,EAAcnrD,EAAO8qD,MAAO9gE,EAAOqhB,EAAK/f,OAAQ,GAAI0U,EAAO+qD,sBAgB/DniB,EAAM5+C,EAAO+pD,EAAMrB,OACpCtL,EAAOsL,IAAQqB,EAAO,EACtBrlD,EAAQ1E,EAAMohE,UAAU1Y,UAExBtL,EACK14C,EAAM0zC,KAAI,SAAU/0C,aACXA,EAAGu7C,EAAKt9C,QACfs9C,EAAKv7C,MACXg1C,UAEI3zC,EAAM0zC,KAAI,SAAU/0C,aACXA,EAAGu7C,EAAKt9C,QAEf6/D,EADKviB,EAAKv7C,GACWrD,EAAO+pD,EAAMrB,EAAM,MAC9CrQ,qBAiBOriC,EAAQhW,EAAOqhE,EAAWxY,OACjC7oD,IAA2B,IAAlBA,EAAM+2C,cACZ,IAAIuB,UAAU,qBAOlBgpB,EAHAC,EAAQvhE,EAAMkgE,OACdgB,EAAWlhE,EAAMkhE,cAIjBvqB,GAAS0qB,MACHA,EAAUnB,SACNmB,EAAUhpB,aAEdoR,GAAU4X,GAGhBH,EAAU,IAGS,IAAjBI,EAAMhgE,aACF,IAAIg3C,UAAU,qBAGf1yC,IAAI5F,EAAMgB,MAAOqgE,EAAWxY,OAC9B,IAGD0Y,EAAMjgE,OAAS0U,EAAOszB,MAAMhoC,aACxB,IAAIgnD,GAAeiZ,EAAMjgE,OAAQ0U,EAAOszB,MAAMhoC,OAAQ,QAG1DggE,EAAMhgE,OAASigE,EAAMjgE,OAAQ,SAE3B+B,EAAI,EACJ2mD,EAAQ,EAEQ,IAAbuX,EAAMl+D,IAAyB,IAAbi+D,EAAMj+D,aAIX,IAAbk+D,EAAMl+D,cAMDm+D,GAAUH,EAAWE,EAAMjgE,OAAQ0oD,EAAOsX,OAInD1oB,GAAgB2oB,EAAOD,SACpB,IAAIhZ,GAAeiZ,EAAOD,EAAO,OAQpCtrD,EAJMhW,EAAMiB,MAAMm3C,KAAI,SAAUohB,UAC5BA,EAAI,KAGM3Q,OAGfkB,EAAOwX,EAAMjgE,SAGH0U,EAAO8qD,MAAO9gE,EAAOqhE,EAAWtX,EAFpC,UAKL/zC,aAcc4oC,EAAM5+C,EAAOqhE,EAAWtX,EAAMrB,OAC/CtL,EAAOsL,IAAQqB,EAAO,EACtBrlD,EAAQ1E,EAAMohE,UAAU1Y,GAExBtL,IACItD,SAAQ,SAAU2nB,EAAWC,MACnBD,KACTA,GAAaJ,EAAUK,EAAS,SAGjC5nB,SAAQ,SAAU2nB,EAAWC,MACnBD,KAEA7iB,EAAK6iB,GAAYzhE,EAAOqhE,EAAUK,EAAS,IAAK3X,EAAMrB,EAAM,iBAmC/D1yC,EAAQqL,EAAMwnC,MAET,IAAhBxnC,EAAK/f,OAAc,SAEjBnB,EAAI6V,EAAO8qD,MAERpqB,GAAQv2C,MACTA,EAAE,UAGDA,WAIFmpC,MAAQjoB,EAAKa,MAAM,KAEnB4+C,MAAQJ,GAAO1qD,EAAO8qD,MAAO9qD,EAAOszB,MAAOuf,GAE3C7yC,aAmCKA,EAAQqL,EAAMwnC,WAE1B8Y,EAAU3rD,EAAOszB,MAAMpnB,MAAM,GAEzBqe,GAAU,EAEPohC,EAAQrgE,OAAS+f,EAAK/f,UACnBouB,KAAK,MACH,UAIHrsB,EAAI,EAAGs9C,EAAKt/B,EAAK/f,OAAQ+B,EAAIs9C,EAAIt9C,IACpCge,EAAKhe,GAAKs+D,EAAQt+D,OACZA,GAAKge,EAAKhe,MACR,GAIVk9B,KAEMvqB,EAAQ2rD,EAAS9Y,cAgYTjK,WACTv7C,EAAI,EAAGs9C,EAAK/B,EAAKt9C,OAAQ+B,EAAIs9C,EAAIt9C,IAAK,KACzCylD,EAAOlK,EAAKv7C,GAEZqzC,GAAQoS,KACLzlD,GAAK29D,EAAWlY,GACZA,IAA0B,IAAlBA,EAAKnS,aACjBtzC,GAAK29D,EAAWlY,EAAKzQ,mBAIvBuG,WA31BG17C,UAAY,IAAIm9D,IAKhBn9D,UAAU0+D,kBAAoB,SAAUhjB,EAAM2hB,UACjD,IAAIzU,EAAYlN,EAAM2hB,MAOnBr9D,UAAU6/B,KAAO,gBACjB7/B,UAAU0zC,eAAgB,IAW1B1zC,UAAU2+D,YAAc,kBAC3BtX,GAAiB1qD,KAAKihE,MAAOG,OAa1B/9D,UAAUo9D,QAAU,iBACvB,WAaGp9D,UAAUq9D,SAAW,kBACxB1gE,KAAKkhE,aAUF79D,UAAU6hD,OAAS,SAAUnG,EAAM2hB,UACtC,IAAIzU,EAAYlN,EAAM2hB,MAkBnBr9D,UAAUs9D,OAAS,SAAUxgE,EAAOygE,EAAa5X,UACnD/5C,UAAUxN,aACX,SACIwgE,EAAKjiE,KAAMG,QAGf,OACA,SACI+hE,EAAKliE,KAAMG,EAAOygE,EAAa5X,iBAGhC,IAAI5L,YAAY,iCAWhB/5C,UAAUowB,IAAM,SAAUtzB,OAC/B02C,GAAQ12C,SACL,IAAIs4C,UAAU,qBAGlBt4C,EAAMsB,SAAWzB,KAAKypC,MAAMhoC,aACxB,IAAIgnD,GAAetoD,EAAMsB,OAAQzB,KAAKypC,MAAMhoC,gBAI3C3B,EAAI,EAAGA,EAAIK,EAAMsB,OAAQ3B,OAClBK,EAAML,GAAIE,KAAKypC,MAAM3pC,YAGjCi/C,EAAO/+C,KAAKihE,MAEPz9D,EAAI,EAAGs9C,EAAK3gD,EAAMsB,OAAQ+B,EAAIs9C,EAAIt9C,IAAK,KAC1C2+D,EAAShiE,EAAMqD,MACL2+D,EAAQpjB,EAAKt9C,UACpBs9C,EAAKojB,UAGPpjB,KAcG17C,UAAU0C,IAAM,SAAU5F,EAAOF,EAAO+oD,OAC7CnS,GAAQ12C,SACL,IAAIs4C,UAAU,qBAGlBt4C,EAAMsB,OAASzB,KAAKypC,MAAMhoC,aACtB,IAAIgnD,GAAetoD,EAAMsB,OAAQzB,KAAKypC,MAAMhoC,OAAQ,SAGxD+B,EAAGs9C,EAAIqhB,IAMNniE,KAJMG,EAAMo4C,KAAI,SAAUohB,UACtBA,EAAI,KAGI3Q,OAGbjK,EAAO/+C,KAAKihE,UAEXz9D,EAAI,EAAGs9C,EAAK3gD,EAAMsB,OAAS,EAAG+B,EAAIs9C,EAAIt9C,SAChCrD,EAAMqD,GACOu7C,EAAKt9C,UACpBs9C,EAAKojB,eAILhiE,EAAMA,EAAMsB,OAAS,GACRs9C,EAAKt9C,UACtB0gE,GAAUliE,EACRD,QA2MGqD,UAAUw9D,OAAS,SAAUr/C,EAAMwnC,EAAct+C,OAEtD03D,GAAa5gD,SACV,IAAIi3B,UAAU,gCAIlB4pB,EAAY7gD,EAAKg3B,UAAUD,QACtBtd,MAAM4b,QAAQ52C,IAA2B,IAAjBA,EAAMwB,OAAexB,EAAM,GAAKA,WAK1DqiE,EAFC53D,EAAO1K,KAAKwuC,QAAUxuC,KAEZqiE,EAAWrZ,MAuCnB3lD,UAAUy9D,QAAU,SAAUt/C,EAAM9W,OAC1C3J,EAAI2J,EAAO1K,KAAKwuC,QAAUxuC,cAC5BihE,MAAQH,GAAQ//D,EAAEkgE,MAAOz/C,KACzBioB,MAAQjoB,EAAKa,MAAM,GACdthB,KA4CGsC,UAAUmrC,MAAQ,kBACpB,IAAIyd,EAAY,CACtBlN,KAAMvQ,GAAMxuC,KAAKihE,OACjBZ,KAAM7xB,GAAMxuC,KAAKypC,OACjBi3B,SAAU1gE,KAAKkhE,eAWP79D,UAAUg9D,KAAO,kBACpBrgE,KAAKypC,MAAMpnB,MAAM,MAcdhf,UAAUk1C,IAAM,SAAUptC,OAEhCgF,EAAKnQ,KAcL++C,EAZU,WAAiB9+C,EAAOE,UAChC02C,GAAQ52C,GACHA,EAAMs4C,KAAI,SAAUjc,EAAO94B,UACzB++D,EAAQjmC,EAAOn8B,EAAM88C,OAAOz5C,OAG9B2H,EAASlL,EAAOE,EAAOgQ,GAMvBqyD,CAAQxiE,KAAKihE,MAAO,WAExB,IAAIhV,EAAYlN,OADW,IAAnB/+C,KAAKkhE,UAA0BxW,GAAiB3L,EAAMqiB,SAAU,MAYrE/9D,UAAU42C,QAAU,SAAU9uC,OAEpCgF,EAAKnQ,MAEK,WAAiBC,EAAOE,GAChC02C,GAAQ52C,KACJg6C,SAAQ,SAAU3d,EAAO94B,KACrB84B,EAAOn8B,EAAM88C,OAAOz5C,SAGrBvD,EAAOE,EAAOgQ,IAInBnQ,KAAKihE,MAAO,OASV59D,UAAUi9D,QAAU,kBACvB9xB,GAAMxuC,KAAKihE,UASR59D,UAAUm1C,QAAU,kBACvBx4C,KAAKihE,SAaF59D,UAAUilD,OAAS,SAAU9a,UAChC8a,GAAOtoD,KAAKihE,MAAOzzB,MAShBnqC,UAAUI,SAAW,kBACxB6kD,GAAOtoD,KAAKihE,UAST59D,UAAU4pD,OAAS,iBACtB,CACLC,OAAQ,cACRnO,KAAM/+C,KAAKihE,MACXZ,KAAMrgE,KAAKypC,MACXi3B,SAAU1gE,KAAKkhE,cAaP79D,UAAUo/D,SAAW,SAAU7+B,MAErCA,MAEE4S,GAAY5S,OACVA,EAAE+oB,aAIHhH,GAAS/hB,KAAOmlB,GAAUnlB,SACvB,IAAI6U,UAAU,oDAIlB,UAGFiqB,EAAS9+B,EAAI,EAAIA,EAAI,EACrB++B,EAAO/+B,EAAI,GAAKA,EAAI,EAEpBg/B,EAAO5iE,KAAKypC,MAAM,GAClBo5B,EAAU7iE,KAAKypC,MAAM,GAErB5lC,EAAI3C,KAAKC,IAAIyhE,EAAOD,EAAME,EAAUH,GAEpC3jB,EAAO,GAEFv7C,EAAI,EAAGA,EAAIK,EAAGL,MAChBA,GAAKxD,KAAKihE,MAAMz9D,EAAIm/D,GAAMn/D,EAAIk/D,UAI9B,IAAIzW,EAAY,CACrBlN,KAAAA,EACAshB,KAAM,CAACx8D,GACP68D,SAAU1gE,KAAKkhE,eAiBPuB,SAAW,SAAUjhD,EAAMvhB,EAAO2jC,EAAGolB,OAC1CnS,GAAQr1B,SACL,IAAIi3B,UAAU,qCAGF,IAAhBj3B,EAAK/f,aACD,IAAIrB,MAAM,iDAIXohB,EAAK+2B,KAAI,SAAU73C,MAEpB81C,GAAY91C,OAEVA,EAAEisD,aAIHhH,GAASjlD,KAAOqoD,GAAUroD,IAAMA,EAAI,QACjC,IAAIN,MAAM,gDAGXM,KAGLkjC,MAEE4S,GAAY5S,OACVA,EAAE+oB,aAIHhH,GAAS/hB,KAAOmlB,GAAUnlB,SACvB,IAAI6U,UAAU,oDAIlB,MAWFU,EARAupB,EAAS9+B,EAAI,EAAIA,EAAI,EACrB++B,EAAO/+B,EAAI,GAAKA,EAAI,EAEpBg/B,EAAOphD,EAAK,GACZqhD,EAAUrhD,EAAK,GAEf3d,EAAI3C,KAAKC,IAAIyhE,EAAOD,EAAME,EAAUH,MAKpC7rB,GAAQ52C,GAAQ,IAEdA,EAAMwB,SAAWoC,QAEb,IAAIzD,MAAM,gCAIT,SAAgBoD,UAEhBvD,EAAMuD,YAENszC,GAAS72C,GAAQ,KAEtB6iE,EAAK7iE,EAAMogE,UAEG,IAAdyC,EAAGrhE,QAAgBqhE,EAAG,KAAOj/D,QAEzB,IAAIzD,MAAM,2BAIT,SAAgBoD,UAEhBvD,EAAMwzB,IAAI,CAACjwB,YAIX,kBAEAvD,GAKN+oD,MAEYxS,GAAY2C,EAAO,IAAMA,EAAO,GAAGoO,IAAI,GACpD,OAIAxI,EAAO,MAEPv9B,EAAK/f,OAAS,EAAG,GAEZo/D,GAAO9hB,EAAMv9B,EAAMwnC,WAEjBr4C,EAAI,EAAGA,EAAI9M,EAAG8M,MAChBA,EAAIgyD,GAAMhyD,EAAI+xD,GAAUvpB,EAAOxoC,UAKjC,IAAIs7C,EAAY,CACrBlN,KAAAA,EACAshB,KAAM,CAACuC,EAAMC,QAaL1V,SAAW,SAAUC,UACxB,IAAInB,EAAYmB,MAab/pD,UAAU0/D,SAAW,SAAUv/D,EAAGkjB,QAEvCi/B,GAASniD,IAAOulD,GAAUvlD,IAAOmiD,GAASj/B,IAAOqiC,GAAUriC,UACxD,IAAItmB,MAAM,0CAIQ,IAAtBJ,KAAKypC,MAAMhoC,aACP,IAAIrB,MAAM,sDAIJoD,EAAGxD,KAAKypC,MAAM,OACd/iB,EAAG1mB,KAAKypC,MAAM,MAEhBu5B,UAAUx/D,EAAGkjB,EAAG1mB,KAAKihE,OAG1BjhE,QAWGgjE,UAAY,SAAUx/D,EAAGkjB,EAAGq4B,OAElCkkB,EAAKlkB,EAAKv7C,KACTA,GAAKu7C,EAAKr4B,KACVA,GAAKu8C,GAyBLhX,IACN,CACDoB,SAAS,IC52BJ,YAAiB5qD,EAAO0I,EAAU41D,UACnCt+D,GAA8B,mBAAdA,EAAM81C,IAEjB91C,EAAM81C,KAAI,SAAUz4C,UAClBojE,GAAQpjE,EAAGqL,MAGbA,EAAS1I,GC7DpB,IAAI0gE,GAAK,SACLC,GAAK,iBACF,YAAmBziE,UACjBO,KAAKa,IAAIpB,GAGX,YAAmBA,EAAGC,UACpBD,EAAIC,EAON,YAAwBD,EAAGC,UACzBD,EAAIC,EAON,YAA0Bd,UACvBA,EAWH,YAAoBA,UAClBoB,KAAKU,KAAK9B,GA6HZ,YAAmBA,EAAGC,MACvBA,EAAI,SAICD,EAAIC,EAAImB,KAAKS,MAAM7B,EAAIC,MACf,IAANA,SACFD,QAID,IAAIM,MAAM,+CAmIb,YAAmBN,EAAGC,UAGvBD,EAAIA,EAAI,GAAKC,IAAMkjB,EAAAA,GAAYnjB,EAAIA,EAAI,GAAKC,SACvC,EAGFmB,KAAK8D,IAAIlF,EAAGC,GAWd,YAAqBE,OACtBumD,EAAWv3C,UAAUxN,OAAS,QAAsB,IAAjBwN,UAAU,GAAmBA,UAAU,GAAK,SAC5EgS,WAAW2kC,GAAQ3lD,EAAOumD,IA7TnC6c,GAAU7nB,UAAY2nB,GAItBG,GAAU9nB,UAAY4nB,GAQtBG,GAAe/nB,UAAY4nB,GAQ3BI,GAAiBhoB,UAAY2nB,GAY7BM,GAAWjoB,UAAY2nB,GAyIvBO,GAAUloB,UAAY4nB,GAyItBO,GAAUnoB,UAAY4nB,GAatBQ,GAAYpoB,UAAY4nB,GCnUxB,IAEWS,MAFA,YACQ,CAAC,UACqD/X,QACnEhR,MACFA,GACEgR,SA+BGhR,EApCE,YAoCU,CACjBgpB,0CAA2C,kBAClC,GAETC,oDAAqD,kBAC5C,GAETC,iBAAkB,SAAqBlkE,UAC9BojE,GAAQpjE,EAAGE,YCrCjB,YAAqBF,EAAGC,EAAGwO,MAE5BA,MAAAA,SACKzO,EAAE0xD,GAAGzxD,MAIVD,EAAE0xD,GAAGzxD,UACA,KAILD,EAAE24B,SAAW14B,EAAE04B,eACV,KAIL34B,EAAEi1B,YAAch1B,EAAEg1B,WAAY,KAE5B8M,EAAO/hC,EAAE+wD,MAAM9wD,GAAGgC,SAElB8/B,EAAK4lB,gBACA,MAGHnmD,EAAMxB,EAAEO,YAAYe,IAAItB,EAAEiC,MAAOhC,EAAEgC,cAChC8/B,EAAKwxB,IAAI/xD,EAAIqvD,MAAMpiD,WAKvB,ECpCT,IAAIisC,GAAO,cAEAypB,MAA2CzpB,GADnC,CAAC,QAAS,WAC8CsR,QACrEhR,MACFA,EACA6f,UACE7O,SAUGhR,EAAMN,GAAM,CACjB0pB,mBAAoB,SAAwBpkE,EAAGC,UACtCD,IAAMC,GAEfokE,iBAAkB,SAAsBrkE,EAAGC,UAClCqkE,GAAYtkE,EAAGC,EAAGg+B,EAAOxvB,UAElC81D,uBAAwB,SAA4BvkE,EAAGC,UAC9CD,EAAE0xD,GAAGzxD,IAAMukE,GAAexkE,EAAGC,EAAGg+B,EAAOxvB,UAEhDg2D,qBAAsB,SAA0BzkE,EAAGC,UAC1CD,EAAE+jB,OAAO9jB,IAElBykE,mBAAoB,SAAwB1kE,EAAGC,UCvB5C,SAAuBD,EAAGC,EAAGwO,UAC3B61D,GAAYtkE,EAAE07D,GAAIz7D,EAAEy7D,GAAIjtD,IAAY61D,GAAYtkE,EAAE27D,GAAI17D,EAAE07D,GAAIltD,GDuBxDk2D,CAAc3kE,EAAGC,EAAGg+B,EAAOxvB,UAEpCm2D,aAAc,SAAkB5kE,EAAGC,OAC5BD,EAAE6kE,UAAU5kE,SACT,IAAIK,MAAM,mDAGXJ,KAAKF,EAAEG,MAAOF,EAAEE,aAIQ2kE,GAAQpqB,GAAM,CAAC,QAAS,WAAYqqB,QACnE/pB,MACFA,EACA6f,UACEkK,SACG/pB,EAAMN,GAAM,CACjB2pB,iBAAkB,SAAsBrkE,EAAGC,UAClCqkE,GAAYtkE,EAAGC,EAAGg+B,EAAOxvB,eE7CtC,IAEWu2D,MAFA,eACQ,CAAC,QAAS,cAAe,WACqChZ,QAC3EhR,MACFA,cACAiqB,SACAvE,GACE1U,aAOkB/M,EAAM2hB,wBACJsE,SACd,IAAI5nB,YAAY,uDAGpBsjB,IAAatY,GAASsY,SAClB,IAAItgE,MAAM,qBAAuBsgE,MAGrC5pB,GAASiI,aA0BY5oC,EAAQ8uD,EAAQvE,GAErB,iBAAhBuE,EAAO/hC,QAEFgiC,QAAUD,EAAOC,QAAU12B,GAAMy2B,EAAOC,cAAW,IACnDC,OAAS32B,GAAMy2B,EAAOE,UACtBC,KAAO52B,GAAMy2B,EAAOG,QACpB37B,MAAQ+E,GAAMy2B,EAAOx7B,SACrBy3B,UAAYR,GAAYuE,EAAO/D,aAGrB/qD,EAAQ8uD,EAAOzsB,UAAWkoB,GAAYuE,EAAO/D,YAnC5ClhE,KAAM++C,EAAM2hB,WACrB3hB,GAAQlI,GAAQkI,EAAK5+C,QAAU02C,GAAQkI,EAAKsmB,MAAQxuB,GAAQkI,EAAKshB,WAErE6E,QAAUnmB,EAAK5nB,YACfguC,OAASpmB,EAAK5+C,WACdilE,KAAOrmB,EAAKsmB,SACZ57B,MAAQsV,EAAKshB,UACba,UAAYR,GAAY3hB,EAAK2hB,iBACzB7pB,GAAQkI,KAEA/+C,KAAM++C,EAAM2hB,WACpB3hB,QAEH,IAAItG,UAAU,6BAA+B2oB,GAAOriB,GAAQ,UAG7DmmB,QAAU,QACVC,OAAS,QACTC,KAAO,CAAC,QACR37B,MAAQ,CAAC,EAAG,QACZy3B,UAAYR,cAmBKvqD,EAAQ4oC,EAAM2hB,KAE/BwE,QAAU,KACVC,OAAS,KACTC,KAAO,KACPlE,UAAYR,MAEfkC,EAAO7jB,EAAKt9C,OACZohE,EAAU,EAEVrR,EAAKuT,EAELO,EAAO,KAEPld,GAASsY,OAEN5lB,EAAMsK,KAAK2f,EAAa,CAACrE,EAAUA,KAAcqE,IAE/CjqB,EAAMkB,QAAQ,EAAG0kB,IAItBkC,EAAO,EAAG,KAERl8C,EAAI,IAEL,GAEM0+C,KAAKv1C,KAAK1Z,EAAOgvD,OAAO1jE,gBAGtB+B,EAAI,EAAGA,EAAIo/D,EAAMp/D,IAAK,KAEzB+hE,EAAMxmB,EAAKv7C,MAEXqzC,GAAQ0uB,OAEA,IAAN7+C,GAAWm8C,EAAU0C,EAAI9jE,WACjB8jE,EAAI9jE,QAIZilB,EAAI6+C,EAAI9jE,OAAQ,KAEdnB,EAAIilE,EAAI7+C,GAEP8qC,EAAGlxD,EAAGglE,OAEFJ,QAAQr1C,KAAKvvB,KAGb6kE,OAAOt1C,KAAKrsB,UAKb,IAANkjB,GAAWm8C,EAAU,MACb,GAIPrR,EAAG+T,EAAKD,OAEJJ,QAAQr1C,KAAK01C,KAGbJ,OAAOt1C,KAAKrsB,cAOlBkjB,EAAIm8C,KAIRuC,KAAKv1C,KAAK1Z,EAAOgvD,OAAO1jE,UAGxBgoC,MAAQ,CAACm5B,EAAMC,cA6HJ1sD,EAAQqvD,OAErBtuB,GAAQsuB,SACL,IAAI/sB,UAAU,oBAGP+sB,EAAInE,kBAIVlrD,EAAOsd,IAAI+xC,EAAIrkE,WAWpBqC,EAAGs9C,EAAIld,EAAG6hC,EAPVjkD,EAAOgkD,EAAInF,UAEX7+C,EAAK/f,SAAW0U,EAAOszB,MAAMhoC,aACzB,IAAIgnD,GAAejnC,EAAK/f,OAAQ0U,EAAOszB,MAAMhoC,YAMjDJ,EAAMmkE,EAAIrkE,MACVG,EAAMkkE,EAAIpkE,UAEToC,EAAI,EAAGs9C,EAAK3qC,EAAOszB,MAAMhoC,OAAQ+B,EAAIs9C,EAAIt9C,OAC9BnC,EAAImC,GAAI2S,EAAOszB,MAAMjmC,OACrBlC,EAAIkC,GAAI2S,EAAOszB,MAAMjmC,QAIjCkiE,EAAUvvD,EAAO+uD,QACjBS,EAASxvD,EAAOgvD,OAChBS,EAAOzvD,EAAOivD,KAEdxC,EAAO4C,EAAIjE,UAAU,GACrBsB,EAAU2C,EAAIjE,UAAU,GAExBhhE,EAAI,GACJslE,EAAK,KAEJ5rB,SAAQ,SAAU0f,EAAGpwD,KAErBowD,GAAKpwD,EAAE,KAERowD,IAAK,SAGLzf,EAASwrB,EAAU,QAAK,EACxBvlE,EAAQ,GACRklE,EAAM,YAEFprB,SAAQ,SAAUvzB,SAEpBmJ,KAAK1vB,EAAMsB,QAEVmiC,EAAIgiC,EAAKl/C,GAAI++C,EAAKG,EAAKl/C,EAAI,GAAIkd,EAAI6hC,EAAI7hC,MAEtC+hC,EAAO/hC,IAEE,IAATrjC,EAAEiD,OAEEqsB,KAAKg2C,EAAGriE,IAEV02C,KACKrqB,KAAK61C,EAAQ9hC,UAMxB/T,KAAK1vB,EAAMsB,QAER,IAAIujE,EAAa,CACtB7tC,OAAQ+iB,EACR/5C,MAAAA,EACAklE,IAAAA,EACAhF,KAAM7+C,EACNk/C,SAAUvqD,EAAO+qD,uBAID/qD,EAAQhW,EAAOqhE,EAAWxY,OAEvC7oD,IAA2B,IAAlBA,EAAM+2C,cACZ,IAAIuB,UAAU,qBAOlBgpB,EAHAC,EAAQvhE,EAAMkgE,OACdgB,EAAWlhE,EAAMkhE,cAIjBvqB,GAAS0qB,MAEHA,EAAUnB,SAENmB,EAAUlB,aAGd1W,GAAU4X,GAIhBH,EAAU,IAES,IAAjBI,EAAMhgE,aACF,IAAIg3C,UAAU,qBAIf1yC,IAAI5F,EAAMgB,MAAOqgE,EAAWxY,OAC9B,IAEgB,IAAjB0Y,EAAMjgE,QAAiC,IAAjBigE,EAAMjgE,aACxB,IAAIgnD,GAAeiZ,EAAMjgE,OAAQ0U,EAAOszB,MAAMhoC,OAAQ,QAI1DggE,EAAMhgE,OAASigE,EAAMjgE,OAAQ,SAE3B+B,EAAI,EACJ2mD,EAAQ,EAEQ,IAAbuX,EAAMl+D,IAAyB,IAAbi+D,EAAMj+D,aAIX,IAAbk+D,EAAMl+D,cAMDm+D,GAAUH,EAAWE,EAAMjgE,OAAQ0oD,EAAOsX,OAInD1oB,GAAgB2oB,EAAOD,SACpB,IAAIhZ,GAAeiZ,EAAOD,EAAO,aAIrC16D,EAAK5G,EAAMgB,MAAM,GACjB6F,EAAK7G,EAAMgB,MAAM,GAEjBJ,EAAI0gE,EAAM,GACV59D,EAAI49D,EAAM,GAEL3hE,EAAI,EAAGA,EAAIiB,EAAGjB,YAEZC,EAAI,EAAGA,EAAI8D,EAAG9D,IAAK,KAEtBO,EAAIkhE,EAAU1hE,GAAGC,KAEdgG,IAAI,CAACjG,EAAIiH,EAAIhH,EAAIiH,GAAK1G,EAAG0oD,WAK/B7yC,aAsHe3S,EAAGsS,EAAKC,EAAQ5V,MAElC4V,EAASD,GAAQ,SACZC,UAIAxM,EAAIuM,EAAKvM,EAAIwM,EAAQxM,OAExBpJ,EAAMoJ,KAAO/F,SACR+F,SAKJuM,aAaQ8tB,EAAGpgC,EAAGkjB,EAAGpmB,EAAG45C,EAAQ/5C,EAAOklE,KAEnC9f,OAAO3hB,EAAG,EAAGtjC,KAEdilD,OAAO3hB,EAAG,EAAGpgC,WAEV1D,EAAI4mB,EAAI,EAAG5mB,EAAIulE,EAAI5jE,OAAQ3B,MAC9BA,gBA6CSqW,EAAQysD,EAAMC,EAAS7Z,OAElC/oD,EAAQ+oD,GAAgB,EAExBwI,EAAKuT,EAELO,EAAO,EAEPld,GAASjyC,EAAO+qD,eAEbpmB,EAAMsK,KAAK2f,EAAa,CAAC5uD,EAAO+qD,UAAW/qD,EAAO+qD,aAAe6D,IAE/DjqB,EAAMkB,QAAQ,EAAG7lC,EAAO+qD,aAEvBpmB,EAAMkB,QAAQ/7C,EAAOkW,EAAO+qD,gBAQlC19D,EAAGkjB,EAAGkd,EAJNkiC,GAAOtU,EAAGvxD,EAAOqlE,GAEjB/7D,EAAI4M,EAAOszB,MAAM,GACjBzmC,EAAImT,EAAOszB,MAAM,MAGjBo5B,EAAU7/D,EAAG,KAEV0jB,EAAI1jB,EAAG0jB,EAAIm8C,EAASn8C,SAEhB0+C,KAAK1+C,GAAKvQ,EAAO+uD,QAAQzjE,OAE5BqkE,MAEGtiE,EAAI,EAAGA,EAAI+F,EAAG/F,MAEV0hE,QAAQr1C,KAAK5vB,KAGbklE,OAAOt1C,KAAKrsB,KAMlB4hE,KAAKvC,GAAW1sD,EAAO+uD,QAAQzjE,YAC7BohE,EAAU7/D,MAEZoiE,KAAK7f,OAAOsd,EAAU,EAAG7/D,EAAI6/D,KAG7BqC,QAAQ3f,OAAOpvC,EAAOivD,KAAKvC,GAAU1sD,EAAO+uD,QAAQzjE,UAEpD0jE,OAAO5f,OAAOpvC,EAAOivD,KAAKvC,GAAU1sD,EAAOgvD,OAAO1jE,cAIvDohE,EAEAD,EAAOr5D,MAELu8D,EAAK,KAEHjiE,EAAI,MAEH6iB,EAAI,EAAGA,EAAI1jB,EAAG0jB,IAAK,GAEf0+C,KAAK1+C,GAAKvQ,EAAOivD,KAAK1+C,GAAK7iB,IAE9BsS,EAAOivD,KAAK1+C,EAAI,GAAK7iB,MAErBmG,EAAI,MAEHxG,EAAI+F,EAAG/F,EAAIo/D,EAAMp/D,IAAKwG,MAElBk7D,QAAQ3f,OAAO3hB,EAAI55B,EAAG,EAAG/J,KAGzBklE,OAAO5f,OAAO3hB,EAAI55B,EAAG,EAAGxG,SAQ5B4hE,KAAKpiE,GAAKmT,EAAO+uD,QAAQzjE,gBAEzBmhE,EAAOr5D,EAAG,KAEfoH,EAAI,MAEH+V,EAAI,EAAGA,EAAI1jB,EAAG0jB,IAAK,GAEf0+C,KAAK1+C,GAAKvQ,EAAOivD,KAAK1+C,GAAK/V,MAE9Bo1D,EAAK5vD,EAAOivD,KAAK1+C,GACjBs/C,EAAK7vD,EAAOivD,KAAK1+C,EAAI,GAAK/V,MAEzBizB,EAAImiC,EAAIniC,EAAIoiC,EAAIpiC,OAEfztB,EAAOgvD,OAAOvhC,IAEVg/B,EAAO,MAENsC,QAAQ3f,OAAO3hB,EAAG,KAGlBuhC,OAAO5f,OAAO3hB,EAAG,UASvBwhC,KAAK1+C,GAAKvQ,EAAO+uD,QAAQzjE,gBAI3BgoC,MAAM,GAAKm5B,IACXn5B,MAAM,GAAKo5B,EAEX1sD,aA4TS+jC,EAAQ/5C,EAAOklE,EAAK7jD,EAAM9W,OAOtClH,EAAGkjB,EALHk8C,EAAOphD,EAAK,GACZqhD,EAAUrhD,EAAK,GAEf7gB,EAAI,OAIH6C,EAAI,EAAGA,EAAIo/D,EAAMp/D,UAClBA,GAAK,GAEFkjB,EAAI,EAAGA,EAAIm8C,EAASn8C,MACrBljB,GAAGkjB,GAAK,MAKTA,EAAI,EAAGA,EAAIm8C,EAASn8C,YAEnBq/C,EAAKV,EAAI3+C,GACTs/C,EAAKX,EAAI3+C,EAAI,GAERkd,EAAImiC,EAAIniC,EAAIoiC,EAAIpiC,QAEnBzjC,EAAMyjC,IAELld,GAAKwzB,EAASxvC,EAAO8jC,GAAM0L,EAAOtW,IAAMsW,EAAOtW,GAAK,SAItDjjC,WAv7BI0C,UAAY,IAAIm9D,IAKhBn9D,UAAU4iE,mBAAqB,SAAUlnB,EAAM2hB,UACnD,IAAIsE,EAAajmB,EAAM2hB,MAOnBr9D,UAAU6/B,KAAO,iBACjB7/B,UAAU2zC,gBAAiB,IAW3B3zC,UAAU2+D,YAAc,kBAC5BtX,GAAiB1qD,KAAKklE,QAAS9D,OAa3B/9D,UAAUo9D,QAAU,iBACxB,YAaIp9D,UAAUq9D,SAAW,kBACzB1gE,KAAKkhE,aAUD79D,UAAU6hD,OAAS,SAAUnG,EAAM2hB,UACvC,IAAIsE,EAAajmB,EAAM2hB,MAanBr9D,UAAU6iE,QAAU,eAE3BtD,EAAO5iE,KAAKypC,MAAM,GAClBo5B,EAAU7iE,KAAKypC,MAAM,UAET,IAATm5B,GAA0B,IAAZC,EAAgB7iE,KAAKmlE,OAAO1jE,UAAiBohE,GAAW,KAkBlEx/D,UAAUs9D,OAAS,SAAUxgE,EAAOygE,EAAa5X,OAEvDhpD,KAAKklE,cACF,IAAI9kE,MAAM,wDAIV6O,UAAUxN,aACX,SACI0kE,EAAWnmE,KAAMG,QAGrB,OACA,SACIimE,EAAWpmE,KAAMG,EAAOygE,EAAa5X,iBAGtC,IAAI5L,YAAY,iCAgLf/5C,UAAUowB,IAAM,SAAUtzB,OAChC02C,GAAQ12C,SACL,IAAIs4C,UAAU,qBAGlBt4C,EAAMsB,SAAWzB,KAAKypC,MAAMhoC,aACxB,IAAIgnD,GAAetoD,EAAMsB,OAAQzB,KAAKypC,MAAMhoC,YAI/CzB,KAAKklE,cACF,IAAI9kE,MAAM,kDAIdoD,EAAIrD,EAAM,GACVumB,EAAIvmB,EAAM,MAEAqD,EAAGxD,KAAKypC,MAAM,OACd/iB,EAAG1mB,KAAKypC,MAAM,QAExB7F,EAAIyiC,EAAe7iE,EAAGxD,KAAKolE,KAAK1+C,GAAI1mB,KAAKolE,KAAK1+C,EAAI,GAAI1mB,KAAKmlE,eAG3DvhC,EAAI5jC,KAAKolE,KAAK1+C,EAAI,IAAM1mB,KAAKmlE,OAAOvhC,KAAOpgC,EACtCxD,KAAKklE,QAAQthC,GAGf,KAcIvgC,UAAU0C,IAAM,SAAU5F,EAAOG,EAAG0oD,OAC1CnS,GAAQ12C,SACL,IAAIs4C,UAAU,qBAGlBt4C,EAAMsB,SAAWzB,KAAKypC,MAAMhoC,aACxB,IAAIgnD,GAAetoD,EAAMsB,OAAQzB,KAAKypC,MAAMhoC,YAI/CzB,KAAKklE,cACF,IAAI9kE,MAAM,kDAIdoD,EAAIrD,EAAM,GACVumB,EAAIvmB,EAAM,GAEVyiE,EAAO5iE,KAAKypC,MAAM,GAClBo5B,EAAU7iE,KAAKypC,MAAM,GAErB+nB,EAAKuT,EAELO,EAAO,EAEPld,GAASpoD,KAAKkhE,eAEXpmB,EAAMsK,KAAK2f,EAAa,CAAC/kE,KAAKkhE,UAAWlhE,KAAKkhE,aAAe6D,IAE3DjqB,EAAMkB,QAAQ,EAAGh8C,KAAKkhE,aAI3B19D,EAAIo/D,EAAO,GAAKl8C,EAAIm8C,EAAU,OAExB7iE,KAAMkB,KAAKE,IAAIoC,EAAI,EAAGo/D,GAAO1hE,KAAKE,IAAIslB,EAAI,EAAGm8C,GAAU7Z,KAGxDhpD,KAAKypC,MAAM,KACRzpC,KAAKypC,MAAM,OAITjmC,EAAGo/D,MACHl8C,EAAGm8C,OAEbj/B,EAAIyiC,EAAe7iE,EAAGxD,KAAKolE,KAAK1+C,GAAI1mB,KAAKolE,KAAK1+C,EAAI,GAAI1mB,KAAKmlE,eAG3DvhC,EAAI5jC,KAAKolE,KAAK1+C,EAAI,IAAM1mB,KAAKmlE,OAAOvhC,KAAOpgC,EAExCguD,EAAGlxD,EAAGglE,YAiCE1hC,EAAGld,EAAGwzB,EAAQ/5C,EAAOklE,KAE7B9f,OAAO3hB,EAAG,KACX2hB,OAAO3hB,EAAG,WAEP9jC,EAAI4mB,EAAI,EAAG5mB,EAAIulE,EAAI5jE,OAAQ3B,MAC9BA,MAlCM8jC,EAAGld,EAAG1mB,KAAKklE,QAASllE,KAAKmlE,OAAQnlE,KAAKolE,WAHzCF,QAAQthC,GAAKtjC,IAOZsjC,EAAGpgC,EAAGkjB,EAAGpmB,EAAGN,KAAKklE,QAASllE,KAAKmlE,OAAQnlE,KAAKolE,MAG/CplE,QAwDIqD,UAAUw9D,OAAS,SAAUr/C,EAAMwnC,EAAct+C,OAEvD03D,GAAa5gD,SACV,IAAIi3B,UAAU,gCAIlB4pB,EAAY7gD,EAAKg3B,UAAUD,QACtBtd,MAAM4b,QAAQ52C,IAA2B,IAAjBA,EAAMwB,OAAexB,EAAM,GAAKA,OAGxC,IAArBoiE,EAAU5gE,aACN,IAAIrB,MAAM,qDAIR65C,SAAQ,SAAUh6C,OACrB0lD,GAAS1lD,KAAW8oD,GAAU9oD,IAAUA,EAAQ,QAC7C,IAAIw4C,UAAU,uDAA8D6P,GAAO+Z,GAAa,QAMnGC,EAFC53D,EAAO1K,KAAKwuC,QAAUxuC,KAEZqiE,EAAU,GAAIA,EAAU,GAAIrZ,MA+InC3lD,UAAUy9D,QAAU,SAAUt/C,EAAM9W,OAE1CmsC,GAAQr1B,SACL,IAAIi3B,UAAU,qBAGF,IAAhBj3B,EAAK/f,aACD,IAAIrB,MAAM,+DAIb65C,SAAQ,SAAUh6C,OAChB0lD,GAAS1lD,KAAW8oD,GAAU9oD,IAAUA,EAAQ,QAC7C,IAAIw4C,UAAU,uDAA8D6P,GAAO9mC,GAAQ,QAIjGxhB,KAAKypC,MAAM,GAAKzpC,KAAKypC,MAAM,IAAOjoB,EAAK,GAAKA,EAAK,SAC7C,IAAIphB,MAAM,2EAIdW,EAAI2J,EAAO1K,KAAKwuC,QAAUxuC,QAE1BA,KAAKypC,MAAM,KAAOjoB,EAAK,IAAMxhB,KAAKypC,MAAM,KAAOjoB,EAAK,UAC/CzgB,UAILulE,EAAW,GAEN9iE,EAAI,EAAGA,EAAIzC,EAAEqkE,KAAK3jE,OAAQ+B,YACxBkjB,EAAI,EAAGA,EAAI3lB,EAAEqkE,KAAK5hE,EAAI,GAAKzC,EAAEqkE,KAAK5hE,GAAIkjB,MACpCmJ,KAAKrsB,WAKd02C,EAASn5C,EAAEmkE,QAAQ7iD,QAGnBkkD,EAAWxlE,EAAEokE,OAAO9iD,QAGfmkD,EAAK,EAAGA,EAAKzlE,EAAEokE,OAAO1jE,OAAQ+kE,IAAM,KACvCC,EAAKF,EAASC,GACdp+D,EAAKk+D,EAASE,GACdhd,EAAOid,EAAK1lE,EAAE0oC,MAAM,GAAKrhC,IACpBo+D,GAAMhd,EAAOhoC,EAAK,KAClBglD,GAAMtlE,KAAKS,MAAM6nD,EAAOhoC,EAAK,MAQtC0jD,QAAQzjE,OAAS,IACjB0jE,OAAO1jE,OAAS,IAChB2jE,KAAK3jE,OAAS+f,EAAK,GAAK,IACxBioB,MAAQjoB,EAAKa,gBAENqkD,EAAM,EAAGA,EAAM3lE,EAAEqkE,KAAK3jE,OAAQilE,MACnCtB,KAAKsB,GAAO,UAKPxwD,EAAI,EAAGA,EAAIgkC,EAAOz4C,OAAQyU,IAAK,KAClCywD,EAAMJ,EAASrwD,GACf0wD,EAAKN,EAASpwD,GACd5V,EAAI45C,EAAOhkC,KAEPmwD,EAAeM,EAAK5lE,EAAEqkE,KAAKwB,GAAK7lE,EAAEqkE,KAAKwB,EAAK,GAAI7lE,EAAEokE,QAE/CwB,EAAKC,EAAItmE,EAAGS,EAAEmkE,QAASnkE,EAAEokE,OAAQpkE,EAAEqkE,aAIzCrkE,KASIsC,UAAUmrC,MAAQ,kBACrB,IAAIw2B,EAAa,CACvB7tC,OAAQn3B,KAAKklE,QAAU12B,GAAMxuC,KAAKklE,cAAW,EAC7C/kE,MAAOquC,GAAMxuC,KAAKmlE,QAClBE,IAAK72B,GAAMxuC,KAAKolE,MAChB/E,KAAM7xB,GAAMxuC,KAAKypC,OACjBi3B,SAAU1gE,KAAKkhE,eAWN79D,UAAUg9D,KAAO,kBACrBrgE,KAAKypC,MAAMpnB,MAAM,MAebhf,UAAUk1C,IAAM,SAAUptC,EAAU41D,OAE1C/gE,KAAKklE,cACF,IAAI9kE,MAAM,kDAId+P,EAAKnQ,qBAmBGmW,EAAQ0wD,EAAQC,EAAQC,EAAWC,EAAW77D,EAAU41D,OAEhE7mB,EAAS,GACT/5C,EAAQ,GACRklE,EAAM,GAEN7T,EAAKuT,EAELO,EAAO,EAEPld,GAASjyC,EAAO+qD,eAEbpmB,EAAMsK,KAAK2f,EAAa,CAAC5uD,EAAO+qD,UAAW/qD,EAAO+qD,aAAe6D,IAE/DjqB,EAAMkB,QAAQ,EAAG7lC,EAAO+qD,oBAI7B+F,EAAS,SAAgB3mE,EAAGR,EAAGC,KAE7BoL,EAAS7K,EAAGR,EAAGC,GAEdyxD,EAAGlxD,EAAGglE,OAEFz1C,KAAKvvB,KAENuvB,KAAK/vB,KAKN4mB,EAAIqgD,EAAWrgD,GAAKsgD,EAAWtgD,IAAK,GAEvCmJ,KAAKqqB,EAAOz4C,YAEZskE,EAAK5vD,EAAOivD,KAAK1+C,GACjBs/C,EAAK7vD,EAAOivD,KAAK1+C,EAAI,MAErBq6C,UAEOn9B,EAAImiC,EAAIniC,EAAIoiC,EAAIpiC,IAAK,KAExBpgC,EAAI2S,EAAOgvD,OAAOvhC,GAElBpgC,GAAKqjE,GAAUrjE,GAAKsjE,KAEf3wD,EAAO+uD,QAAQthC,GAAIpgC,EAAIqjE,EAAQngD,EAAIqgD,OAGzC,SAED7B,EAAU,GAELgC,EAAKnB,EAAImB,EAAKlB,EAAIkB,IAAM,GACrB/wD,EAAOgvD,OAAO+B,IACT/wD,EAAO+uD,QAAQgC,WAKvBC,EAAMN,EAAQM,GAAOL,EAAQK,IAAO,GAC/BA,KAAOjC,EAAUA,EAAQiC,GAAO,EAC9BA,EAAMN,EAAQngD,EAAIqgD,cAMlCl3C,KAAKqqB,EAAOz4C,QAET,IAAIujE,EAAa,CACtB7tC,OAAQ+iB,EACR/5C,MAAAA,EACAklE,IAAAA,EACAhF,KAAM,CAACyG,EAASD,EAAS,EAAGG,EAAYD,EAAY,KAlF/CK,CAAKpnE,KAAM,EATPA,KAAKypC,MAAM,GASM,EAAG,EARjBzpC,KAAKypC,MAAM,GAQmB,GAN/B,SAAgBnpC,EAAGkD,EAAGkjB,UAE1Bvb,EAAS7K,EAAG,CAACkD,EAAGkjB,GAAIvW,KAI0B4wD,MA+F5C19D,UAAU42C,QAAU,SAAU9uC,EAAU41D,OAE9C/gE,KAAKklE,cACF,IAAI9kE,MAAM,0DAMdwiE,EAAO5iE,KAAKypC,MAAM,GAClBo5B,EAAU7iE,KAAKypC,MAAM,GAEhB/iB,EAAI,EAAGA,EAAIm8C,EAASn8C,IAAK,KAE5Bq/C,EAAK/lE,KAAKolE,KAAK1+C,GACfs/C,EAAKhmE,KAAKolE,KAAK1+C,EAAI,MAEnBq6C,UAEOn9B,EAAImiC,EAAIniC,EAAIoiC,EAAIpiC,IAAK,KAExBpgC,EAAIxD,KAAKmlE,OAAOvhC,KAEX5jC,KAAKklE,QAAQthC,GAAI,CAACpgC,EAAGkjB,GAhB3B1mB,UAkBA,SAEDk6C,EAAS,GAEJmtB,EAAMtB,EAAIsB,EAAMrB,EAAIqB,IAAO,GACxBrnE,KAAKmlE,OAAOkC,IACRrnE,KAAKklE,QAAQmC,WAKpBC,EAAM,EAAGA,EAAM1E,EAAM0E,IAAO,GACvBA,KAAOptB,EAASA,EAAOotB,GAAO,EAC1B,CAACA,EAAK5gD,GA/BnB1mB,YA2CEqD,UAAUi9D,QAAU,kBACxBiH,EAASvnE,KAAKklE,QAASllE,KAAKmlE,OAAQnlE,KAAKolE,KAAMplE,KAAKypC,OAAO,MASvDpmC,UAAUm1C,QAAU,kBACxB+uB,EAASvnE,KAAKklE,QAASllE,KAAKmlE,OAAQnlE,KAAKolE,KAAMplE,KAAKypC,OAAO,MA+CvDpmC,UAAUilD,OAAS,SAAU9a,WAEpCo1B,EAAO5iE,KAAKypC,MAAM,GAClBo5B,EAAU7iE,KAAKypC,MAAM,GAErBy8B,EAAUlmE,KAAKkmE,UAEftqB,EAAM,kBAAoB0M,GAAOsa,EAAMp1B,GAAW,MAAQ8a,GAAOua,EAASr1B,GAAW,cAAgB8a,GAAO4d,EAAS14B,GAAW,KAE3H9mB,EAAI,EAAGA,EAAIm8C,EAASn8C,YAEvBq/C,EAAK/lE,KAAKolE,KAAK1+C,GACfs/C,EAAKhmE,KAAKolE,KAAK1+C,EAAI,GAEdkd,EAAImiC,EAAIniC,EAAIoiC,EAAIpiC,IAAK,IAIrB,UAAY0kB,GAFXtoD,KAAKmlE,OAAOvhC,GAES4J,GAAW,KAAO8a,GAAO5hC,EAAG8mB,GAAW,eAAiB03B,QAAU5c,GAAOtoD,KAAKklE,QAAQthC,GAAI4J,GAAW,YAI/HoO,KASIv4C,UAAUI,SAAW,kBACzB6kD,GAAOtoD,KAAKsgE,cASRj9D,UAAU4pD,OAAS,iBACvB,CACLC,OAAQ,eACR/1B,OAAQn3B,KAAKklE,QACb/kE,MAAOH,KAAKmlE,OACZE,IAAKrlE,KAAKolE,KACV/E,KAAMrgE,KAAKypC,MACXi3B,SAAU1gE,KAAKkhE,cAaN79D,UAAUo/D,SAAW,SAAU7+B,MAEtCA,MAEE4S,GAAY5S,OACVA,EAAE+oB,aAIHhH,GAAS/hB,KAAOmlB,GAAUnlB,SACvB,IAAI6U,UAAU,oDAIlB,MAGFiqB,EAAS9+B,EAAI,EAAIA,EAAI,EACrB++B,EAAO/+B,EAAI,GAAKA,EAAI,EAEpBg/B,EAAO5iE,KAAKypC,MAAM,GAClBo5B,EAAU7iE,KAAKypC,MAAM,GAErB5lC,EAAI3C,KAAKC,IAAIyhE,EAAOD,EAAME,EAAUH,GAEpCxoB,EAAS,GACT/5C,EAAQ,GACRklE,EAAM,KAEN,GAAK,UAEA3+C,EAAIg8C,EAAQh8C,EAAIm8C,GAAW3oB,EAAOz4C,OAASoC,EAAG6iB,YAEjDq/C,EAAK/lE,KAAKolE,KAAK1+C,GACfs/C,EAAKhmE,KAAKolE,KAAK1+C,EAAI,GAEd5mB,EAAIimE,EAAIjmE,EAAIkmE,EAAIlmE,IAAK,KAExB0D,EAAIxD,KAAKmlE,OAAOrlE,MAEhB0D,IAAMkjB,EAAIg8C,EAASC,EAAM,GAEpB9yC,KAAK7vB,KAAKklE,QAAQplE,MAEnBo6C,EAAOz4C,OAAS,GAAK+B,EAAIm/D,kBAQjC9yC,KAAKqqB,EAAOz4C,QAET,IAAIujE,EAAa,CACtB7tC,OAAQ+iB,EACR/5C,MAAAA,EACAklE,IAAAA,EACAhF,KAAM,CAACx8D,EAAG,QAaDspD,SAAW,SAAUC,UACzB,IAAI4X,EAAa5X,MAgBbqV,SAAW,SAAUjhD,EAAMvhB,EAAO2jC,EAAGolB,EAAc0X,OACzD7pB,GAAQr1B,SACL,IAAIi3B,UAAU,qCAGF,IAAhBj3B,EAAK/f,aACD,IAAIrB,MAAM,iDAIXohB,EAAK+2B,KAAI,SAAU73C,MAEpB81C,GAAY91C,OAEVA,EAAEisD,aAIHhH,GAASjlD,KAAOqoD,GAAUroD,IAAMA,EAAI,QACjC,IAAIN,MAAM,gDAGXM,KAGLkjC,MAEE4S,GAAY5S,OACVA,EAAE+oB,aAIHhH,GAAS/hB,KAAOmlB,GAAUnlB,SACvB,IAAI6U,UAAU,oDAIlB,MAIF+Y,EAAKuT,EAELO,EAAO,EAEPld,GAASsY,OAEN5lB,EAAMsK,KAAK2f,EAAa,CAACrE,EAAUA,KAAcqE,IAE/CjqB,EAAMkB,QAAQ,EAAG0kB,QAWtBvnB,EARAupB,EAAS9+B,EAAI,EAAIA,EAAI,EACrB++B,EAAO/+B,EAAI,GAAKA,EAAI,EAEpBg/B,EAAOphD,EAAK,GACZqhD,EAAUrhD,EAAK,GAEf3d,EAAI3C,KAAKC,IAAIyhE,EAAOD,EAAME,EAAUH,MAKpC7rB,GAAQ52C,GAAQ,IAEdA,EAAMwB,SAAWoC,QAEb,IAAIzD,MAAM,gCAIT,SAAgBu5D,UAEhB15D,EAAM05D,YAEN7iB,GAAS72C,GAAQ,KAEtB6iE,EAAK7iE,EAAMogE,UAEG,IAAdyC,EAAGrhE,QAAgBqhE,EAAG,KAAOj/D,QAEzB,IAAIzD,MAAM,2BAIT,SAAgBu5D,UAEhB15D,EAAMwzB,IAAI,CAACkmC,YAIX,kBAEA15D,WAKPi6C,EAAS,GACT/5C,EAAQ,GACRklE,EAAM,GAED3+C,EAAI,EAAGA,EAAIm8C,EAASn8C,IAAK,GAE5BmJ,KAAKqqB,EAAOz4C,YAEZ+B,EAAIkjB,EAAIg8C,KAERl/D,GAAK,GAAKA,EAAIK,EAAG,KAEfvD,EAAI64C,EAAO31C,GAGVguD,EAAGlxD,EAAGglE,OAEHz1C,KAAKrsB,EAAIm/D,KAER9yC,KAAKvvB,cAMduvB,KAAKqqB,EAAOz4C,QAET,IAAIujE,EAAa,CACtB7tC,OAAQ+iB,EACR/5C,MAAAA,EACAklE,IAAAA,EACAhF,KAAM,CAACuC,EAAMC,QAcJx/D,UAAU0/D,SAAW,SAAUv/D,EAAGkjB,QAExCi/B,GAASniD,IAAOulD,GAAUvlD,IAAOmiD,GAASj/B,IAAOqiC,GAAUriC,UACxD,IAAItmB,MAAM,0CAIQ,IAAtBJ,KAAKypC,MAAMhoC,aACP,IAAIrB,MAAM,sDAIJoD,EAAGxD,KAAKypC,MAAM,OACd/iB,EAAG1mB,KAAKypC,MAAM,MAEfu5B,UAAUx/D,EAAGkjB,EAAG1mB,KAAKypC,MAAM,GAAIzpC,KAAKklE,QAASllE,KAAKmlE,OAAQnlE,KAAKolE,MAGrEplE,QAaIwnE,YAAc,SAAU9gD,EAAGwzB,EAAQ/5C,EAAOklE,EAAKl6D,WAEtD46D,EAAKV,EAAI3+C,GACTs/C,EAAKX,EAAI3+C,EAAI,GAERkd,EAAImiC,EAAIniC,EAAIoiC,EAAIpiC,MAEdzjC,EAAMyjC,GAAIsW,EAAOtW,OAejBo/B,UAAY,SAAUljE,EAAGC,EAAG8iE,EAAS3oB,EAAQ/5C,EAAOklE,WAEtD3+C,EAAI,EAAGA,EAAIm8C,EAASn8C,IAAK,KAE5Bq/C,EAAKV,EAAI3+C,GACTs/C,EAAKX,EAAI3+C,EAAI,GAEb+gD,EAAKpB,EAAevmE,EAAGimE,EAAIC,EAAI7lE,GAG/BunE,EAAKrB,EAAetmE,EAAGgmE,EAAIC,EAAI7lE,MAG/BsnE,EAAKzB,GAAM0B,EAAK1B,GAAM7lE,EAAMsnE,KAAQ3nE,GAAKK,EAAMunE,KAAQ3nE,MAErDm6C,EAAQ,KACN55C,EAAI45C,EAAOutB,KACRA,GAAMvtB,EAAOwtB,KACbA,GAAMpnE,WAQbmnE,EAAKzB,GAAM7lE,EAAMsnE,KAAQ3nE,OAAYkmE,GAAM7lE,EAAMunE,KAAQ3nE,QAEvD4nE,EAAKztB,EAASA,EAAOutB,QAAM,IAEzBliB,OAAOmiB,EAAI,EAAG3nE,GAEhBm6C,KACKqL,OAAOmiB,EAAI,EAAGC,KAIjBpiB,OAAOmiB,GAAMD,EAAKA,EAAK,EAAIA,EAAI,GAEjCvtB,KACKqL,OAAOmiB,GAAMD,EAAKA,EAAK,EAAIA,EAAI,WAQtCC,EAAK1B,GAAM7lE,EAAMunE,KAAQ3nE,OAAYimE,GAAM7lE,EAAMsnE,KAAQ3nE,GAAI,KAE3D8nE,EAAK1tB,EAASA,EAAOwtB,QAAM,IAEzBniB,OAAOkiB,EAAI,EAAG3nE,GAEhBo6C,KACKqL,OAAOkiB,EAAI,EAAGG,KAIjBriB,OAAOkiB,GAAMC,EAAKA,EAAK,EAAIA,EAAI,GAEjCxtB,KACKqL,OAAOkiB,GAAMC,EAAKA,EAAK,EAAIA,EAAI,MAMvC1C,IACN,CACD3X,SAAS,ICz/CAwa,MAFA,SACQ,CAAC,UACkD/b,QAChEhR,MACFA,GACEgR,EA2BA3Y,EAAS2H,EAAM,SAAU,CAC3B,GAAI,kBACK,GAET3H,OAAQ,SAAgBrzC,UACfA,GAETkhB,OAAQ,SAAgBlhB,MACZ,QAANA,SAAoBswD,QACpBuE,EAAMltD,OAAO3H,MAEb24B,MAAMk8B,SACF,IAAIvX,YAAY,WAAat9C,EAAI,2BAGrC,CAAC,KAAM,KAAM,MAAMizC,SAASjzC,EAAEgoD,UAAU,EAAG,IAAK,IAC9C6M,EAAM,GAAK,GAAK,QACZ,IAAIvX,YAAY,WAAYH,OAAOn9C,EAAG,sBAGpC,WAAN60D,aACiB,WAIhBA,GAET5I,UAAW,SAAmBjsD,UACrBA,EAAE6sD,YAEXT,SAAU,SAAkBpsD,UACnBA,EAAE04C,WAEXsvB,KAAM,SAAchoE,SACZ,IAAIM,MAAM,iDAElB2nE,KAAM,SAAejoE,UACZ,GAETkoE,sBAAuB,SAAwB91B,EAAM+1B,UAC5C/1B,EAAKya,SAASsb,IAEvBjE,iBAAkB,SAAqBlkE,UAC9BojE,GAAQpjE,EAAGE,kBAQfmtD,SAAW,SAAUC,UACnBnsC,WAAWmsC,EAAKntD,QAGlBkzC,KCrFE+0B,MAFA,YACQ,CAAC,QAAS,cAC4Cpc,QACnEhR,MACFA,YACAiR,GACED,SA2BGhR,EAAM,YAAa,CACxB,GAAI,kBACK,IAAIiR,EAAU,IAEvB5Y,OAAQ,SAAgBrzC,UAEf,IAAIisD,EAAUjsD,EAAI,KAE3BkhB,OAAQ,SAAgBlhB,UACf,IAAIisD,EAAUjsD,IAEvBisD,UAAW,SAAmBjsD,UAErBA,GAETosD,SAAU,SAAkBpsD,UACnB,IAAIisD,EAAUjsD,EAAE+D,GAAG+tD,IAAI9xD,EAAE6Q,GAAGggD,MAAM7wD,EAAEY,IAE7CqnE,KAAM,SAAejoE,UACZ,IAAIisD,EAAU,IAEvBiY,iBAAkB,SAAqBlkE,UAC9BojE,GAAQpjE,EAAGE,YCrDbmoE,MAFA,WACQ,CAAC,QAAS,aAC2Crc,QAClEhR,MACFA,EACAoR,YACEJ,SA2BGhR,EAAM,WAAY,CACvB3H,OAAQ,SAAgBrzC,OACjBi1B,SAASj1B,IAAM24B,MAAM34B,SAClB,IAAIM,MAAMN,EAAI,+CAGf,IAAI8sD,EAAS9sD,IAEtBkhB,OAAQ,SAAgBlhB,UACf,IAAI8sD,EAAS9sD,IAEtBqkE,iBAAkB,SAAsBxL,EAAWzrD,UAC1C,IAAI0/C,EAAS+L,EAAWzrD,IAEjC66D,KAAM,SAAejoE,UACZ,IAAI8sD,EAAS,IAEtBb,UAAW,SAAmBjsD,UACrB,IAAI8sD,EAAS9sD,EAAE2D,aAExByoD,SAAU,SAAkBpsD,UACnBA,GAETmsB,OAAQ,SAAgBnsB,UACf,IAAI8sD,EAAS9sD,IAEtBkkE,iBAAkB,SAAqBlkE,UAC9BojE,GAAQpjE,EAAGE,YC3DbooE,MAFA,SACQ,CAAC,QAAS,SAAU,cAAe,iBACgBtc,QAChEhR,MACFA,SACA0lB,cACAvU,eACA+Y,GACElZ,SAkCGhR,EA1CE,SA0CU,CACjB,GAAI,kBACKutB,EAAQ,KAEjBrnD,OAAQ,SAAgBsnD,UACfD,EAAQ,GAAIC,IAErBC,iBAAkB,SAAsBD,EAAQ5H,UACvC2H,EAAQ,GAAIC,EAAQ5H,IAE7BzlC,MAAO,SAAe8jB,UACbspB,EAAQtpB,IAEjByhB,OAAQ,SAAgBzhB,UACfspB,EAAQtpB,EAAMA,EAAK0hB,YAE5B+H,yBAA0BH,EAC1BI,iCAAkCJ,eAWnBtpB,EAAMupB,EAAQ5H,MAEd,UAAX4H,GAAiC,YAAXA,QAAmC,IAAXA,SACzC,IAAIrc,EAAYlN,EAAM2hB,MAGhB,WAAX4H,SACK,IAAItD,EAAajmB,EAAM2hB,SAG1B,IAAIjoB,UAAU,uBAAyB2B,KAAKC,UAAUiuB,GAAU,SC5E/DI,MAFA,aACQ,CAAC,UACsD5c,QACpEhR,MACFA,GACEgR,SAyBGhR,EA9BE,aA8BU,CACjB3H,OAAQqwB,GACRxX,QAAS,SAAiBlsD,UACjBA,EAAEkxD,OAEXjF,UAAW,SAAmBjsD,UACrBA,EAAEkxD,OAEX9E,SAAU,SAAkBpsD,UACnBA,EAAEkxD,OAEX8W,KAAM,SAAchoE,OACd68D,EAAM78D,EAAE0uC,iBACRvuC,MAAQD,KAAKF,EAAEG,OACZ08D,GAETqH,iBAAkB,SAAqBlkE,UAE9BojE,GAAQpjE,EAAGE,YC9Cb2oE,MAFA,MACQ,CAAC,UAC+C7c,QAC7DhR,MACFA,GACEgR,SA0BGhR,EA/BE,MA+BU,CACjB3H,OAAQkwB,GACRrX,QAAS,SAAiBlsD,UACjBA,EAAEiC,OAEXgqD,UAAW,SAAmBjsD,UACrBA,EAAEiC,OAEXmqD,SAAU,SAAkBpsD,UACnBA,EAAEiC,OAEXiiE,iBAAkB,SAAqBlkE,UAE9BojE,GAAQpjE,EAAGE,OAEpB8nE,KAAM,SAAchoE,UACXA,EAAEiC,YC9CJ6mE,MAFA,YACQ,CAAC,UACqD9c,QACnEhR,MACFA,GACEgR,SAcGhR,EAnBE,YAmBU,CACjBqpB,iBAAkBb,GAClBkB,mBAAoB,SAAwB1kE,EAAGC,UACtCD,EAAEyjB,IAAIxjB,IAEfskE,uBAAwB,SAA4BvkE,EAAGC,UAC9CD,EAAEgxD,KAAK/wD,IAEhBwkE,qBAAsB,SAA0BzkE,EAAGC,UAC1CD,EAAEyjB,IAAIxjB,IAEf2kE,aAAc,SAAkB5kE,EAAGC,MACjB,OAAZD,EAAEG,YAA8B,IAAZH,EAAEG,YAA2B,IAAIG,MAAM,uDAC/C,OAAZL,EAAEE,YAA8B,IAAZF,EAAEE,YAA2B,IAAIG,MAAM,wDAC1DN,EAAE6kE,UAAU5kE,SAAU,IAAIK,MAAM,0BACjCu8D,EAAM78D,EAAE0uC,iBACRvuC,MAAQD,KAAK28D,EAAI18D,MAAOF,EAAEE,SAC1B4oE,WAAY,EACTlM,QCpCFmM,MAFA,cACQ,CAAC,QAAS,gBAC8Chd,QACrEhR,MACFA,cACAiqB,GACEjZ,SAqBG,SAAqBprD,EAAGE,EAAGuK,EAAU+xD,OAEtC6L,EAAUroE,EAAEwkE,QACZ8D,EAAStoE,EAAEykE,OACX8D,EAAOvoE,EAAE0kE,KACT8D,EAAQxoE,EAAE+oC,MACV0/B,EAAMzoE,EAAEwgE,cAEP6H,QACG,IAAI3oE,MAAM,0EAOdmE,EAHAq+D,EAAOsG,EAAM,GACbrG,EAAUqG,EAAM,GAIhB1X,EAAKuT,EAELO,EAAO,EAEPr0D,EAAK9F,EAEU,iBAARg+D,MAEJA,IAEAruB,EAAMsK,KAAK2f,EAAa,CAACxgE,EAAIA,MAE3Bu2C,EAAMkB,QAAQ,EAAGz3C,KAEpBu2C,EAAMkB,QAAQp7C,EAAG2D,KAEhBu2C,EAAMsK,KAAKj6C,EAAU,CAAC5G,EAAIA,aAI7B6kE,EAAU,GACVC,EAAS,GACTC,EAAO,GAEF5iD,EAAI,EAAGA,EAAIm8C,EAASn8C,IAAK,GAE3BA,GAAK2iD,EAAO5nE,eAERskE,EAAKkD,EAAKviD,GAAIs/C,EAAKiD,EAAKviD,EAAI,GAAIkd,EAAImiC,EAAIniC,EAAIoiC,EAAIpiC,IAAK,KAExDpgC,EAAIwlE,EAAOplC,GAEXtjC,EAAI48D,EAAUjsD,EAAGrQ,EAAGmoE,EAAQnlC,IAAM3yB,EAAG83D,EAAQnlC,GAAIhjC,GAEhD4wD,EAAGlxD,EAAGglE,OAEFz1C,KAAKrsB,KACJqsB,KAAKvvB,cAMduiE,GAAWwG,EAAO5nE,OAEhBf,EAAEulE,mBAAmB,CAC1B9uC,OAAQiyC,EACRjpE,MAAOkpE,EACPhE,IAAKiE,EACLjJ,KAAM,CAACuC,EAAMC,GACbnC,SAAUn8D,QC5FLglE,MAFA,cACQ,CAAC,UACuDzd,QACrEhR,MACFA,GACEgR,SAiBG,SAAqBnrD,EAAGC,EAAGuK,EAAU+xD,OAMtC34D,EAJAilE,EAAQ7oE,EAAEsgE,MACViI,EAAQvoE,EAAE8oC,MACV0/B,EAAMxoE,EAAEugE,UAIRjwD,EAAK9F,EAEU,iBAARg+D,MAEJA,IAEDruB,EAAMkB,QAAQp7C,EAAG2D,KAEhBu2C,EAAMsK,KAAKj6C,EAAU,CAAC5G,EAAIA,SAI7BklE,EAAQP,EAAMznE,OAAS,EAAIioE,EAASz4D,EAAI,EAAGi4D,EAAOA,EAAM,GAAIM,EAAO5oE,EAAGs8D,GAAW,UAE9Ev8D,EAAEohE,kBAAkB,CACzBhjB,KAAM0qB,EACNpJ,KAAM7xB,GAAM06B,GACZxI,SAAUn8D,gBAIIsD,EAAG8hE,EAAOjpE,EAAGmD,EAAG+lE,EAAIC,EAAI3M,OAEpC4M,EAAK,MAELH,IAAUjpE,EAAEe,OAAS,UAEd+B,EAAI,EAAGA,EAAIK,EAAGL,MAElBA,GAAK05D,EAAUr1D,EAAEgiE,EAAID,EAAGpmE,IAAMqE,EAAE+hE,EAAGpmE,GAAIqmE,gBAInCnjD,EAAI,EAAGA,EAAI7iB,EAAG6iB,MAElBA,GAAKgjD,EAAS7hE,EAAG8hE,EAAQ,EAAGjpE,EAAGA,EAAEipE,EAAQ,GAAIC,EAAGljD,GAAImjD,EAAI3M,UAIxD4M,MC7DAC,MAFA,OACQ,CAAC,QAAS,SAAU,QAAS,SAAU,gBACUje,QAC9DhR,MACFA,EACA6f,SACA94D,eACAsU,cACA4uD,GACEjZ,EACAke,EAAclB,GAAkB,CAClChuB,MAAAA,EACAiqB,YAAAA,IAEEkF,EAAcV,GAAkB,CAClCzuB,MAAAA,WAwCKA,EAAM,OAAQ,CACnB3H,OAAQ,SAAgBrzC,UAClBskE,GAAYtkE,EAAGoqE,EAAMpqE,GAAIi+B,EAAOxvB,SAC3B27D,EAAMpqE,GAEN2jE,GAAW3jE,IAGtBqkE,iBAAkB,SAAsBrkE,EAAG+D,MACrCugE,GAAYtkE,EAAGoqE,EAAMpqE,EAAG+D,GAAIk6B,EAAOxvB,gBAC9B27D,EAAMpqE,EAAG+D,OAEXsvC,EAAQ+S,GAAY,GAAGjJ,OAAOn9C,EAAG,KAAK47C,MAAM,KAC7CnN,EAASrtC,KAAKU,KAAK6F,OAAO,GAAGw1C,OAAO9J,EAAQ,KAAK8J,OAAOx1C,OAAOy+C,GAAYriD,YAC9EsvC,EAAQ+S,GAAY,GAAGjJ,OAAO1O,EAAQ,KAAKmN,MAAM,KAC3Cj0C,OAAO,GAAGw1C,OAAO9J,EAAQ,KAAK8J,OAAOx1C,OAAOy+C,GAAYriD,KAGnEmoD,QAAS,SAAiBlsD,UACjBA,EAAE8B,QAEXuoE,kBAAmB,SAAuBrqE,EAAG+D,UACpC/D,EAAE8B,KAAKiC,IAEhBkoD,UAAW,SAAmBjsD,UACxBwkE,GAAexkE,EAAGoqE,EAAMpqE,GAAIi+B,EAAOxvB,SAC9B27D,EAAMpqE,GAENA,EAAE8B,QAGbyiE,uBAAwB,SAA4BvkE,EAAG+D,UACjDygE,GAAexkE,EAAGoqE,EAAMpqE,EAAG+D,GAAIk6B,EAAOxvB,SACjC27D,EAAMpqE,EAAG+D,GAET/D,EAAEg2D,gBAAgBjyD,EAAE8oD,WAAY2M,GAAQa,aAGnDjO,SAAU,SAAkBpsD,UACnBA,EAAE8B,QAEXwoE,mBAAoB,SAAwBtqE,EAAG+D,UACtC/D,EAAE8B,KAAKiC,IAEhBmgE,iBAAkB,SAAqBlkE,UAE9BojE,GAAQpjE,EAAGE,OAEpBqqE,yBAA0B,SAA2BvqE,EAAG+D,UAE/Cq/D,GAAQpjE,MAAQE,KAAKwD,EAAGK,MAEjCymE,mCAAoC,SAAqCxqE,EAAGC,UACnEiqE,EAAYlqE,EAAGC,EAAGC,MAAM,IAEjCuqE,kCAAmC,SAAoCzqE,EAAGC,UACjEkqE,EAAYnqE,EAAGC,EAAGC,MAAM,IAEjCwqE,sCAAuC,SAAqC1qE,EAAGC,UAEtEkqE,EAAY9zD,EAAOpW,GAAID,EAAGE,MAAM,GAAMw4C,gBCtHxCiyB,MAFA,MACQ,CAAC,QAAS,UAAW,SAAU,OAAQ,UACS3e,QAC7DhR,MACFA,EACAkR,QAAS0e,SACTv0D,EACAvU,OACAD,SACEmqD,EACAme,EAAcV,GAAkB,CAClCzuB,MAAAA,WAsCKA,EAAM,MAAO,CAClB3H,OAAQ,SAAgBrzC,UACfA,EAAI,EAAI6qE,EAAM7qE,GAAK8qE,EAAK9qE,IAEjC+qE,6BAA8B,SAA+B/qE,EAAG+D,UACvD/D,EAAI,EAAI6qE,EAAM7qE,EAAG+D,GAAK+mE,EAAK9qE,EAAG+D,IAEvCmoD,QAAS,SAAiBlsD,UACjB,IAAI4qE,EAAS5qE,EAAE07D,GAAK,EAAIt6D,KAAKS,MAAM7B,EAAE07D,IAAMt6D,KAAKU,KAAK9B,EAAE07D,IAAK17D,EAAE27D,GAAK,EAAIv6D,KAAKS,MAAM7B,EAAE27D,IAAMv6D,KAAKU,KAAK9B,EAAE27D,MAE/GqP,8BAA+B,SAAgChrE,EAAG+D,UACzD,IAAI6mE,EAAS5qE,EAAE07D,GAAK,EAAImP,EAAM7qE,EAAE07D,GAAI33D,GAAK+mE,EAAK9qE,EAAE07D,GAAI33D,GAAI/D,EAAE27D,GAAK,EAAIkP,EAAM7qE,EAAE27D,GAAI53D,GAAK+mE,EAAK9qE,EAAE27D,GAAI53D,KAExGkoD,UAAW,SAAmBjsD,UACrBA,EAAEo0D,aAAe0W,EAAK9qE,GAAK6qE,EAAM7qE,IAE1CirE,gCAAiC,SAAkCjrE,EAAG+D,UAC7D/D,EAAEo0D,aAAe0W,EAAK9qE,EAAG+D,GAAK8mE,EAAM7qE,EAAG+D,IAEhDqoD,SAAU,SAAkBpsD,UACnBA,EAAEY,EAAI,EAAIZ,EAAE8B,OAAS9B,EAAE6B,SAEhCqpE,+BAAgC,SAAiClrE,EAAG+D,UAC3D/D,EAAEY,EAAI,EAAIZ,EAAE8B,KAAKiC,GAAK/D,EAAE6B,MAAMkC,IAEvCmgE,iBAAkB,SAAqBlkE,UAE9BojE,GAAQpjE,EAAGE,OAEpBirE,qCAAsC,SAAoCnrE,EAAG+D,UAEpEq/D,GAAQpjE,MAAQE,KAAKwD,EAAGK,MAEjC2mE,sCAAuC,SAAqC1qE,EAAGC,UAEtEkqE,EAAY9zD,EAAOpW,GAAID,EAAGE,MAAM,GAAMw4C,gBC9ExC0yB,MAFA,QACQ,CAAC,QAAS,SAAU,QAAS,SAAU,gBACWpf,QAC/DhR,MACFA,EACA6f,SACA94D,eACAsU,cACA4uD,GACEjZ,EACAke,EAAclB,GAAkB,CAClChuB,MAAAA,EACAiqB,YAAAA,IAEEkF,EAAcV,GAAkB,CAClCzuB,MAAAA,WAuCKA,EAAM,QAAS,CACpB3H,OAAQ,SAAgBrzC,UAClBskE,GAAYtkE,EAAGoqE,EAAMpqE,GAAIi+B,EAAOxvB,SAC3B27D,EAAMpqE,GAENoB,KAAKS,MAAM7B,IAGtBqkE,iBAAkB,SAAsBrkE,EAAG+D,MACrCugE,GAAYtkE,EAAGoqE,EAAMpqE,EAAG+D,GAAIk6B,EAAOxvB,gBAC9B27D,EAAMpqE,EAAG+D,OAEXsvC,EAAQ+S,GAAY,GAAGjJ,OAAOn9C,EAAG,KAAK47C,MAAM,KAC7CnN,EAASrtC,KAAKS,MAAM8F,OAAO,GAAGw1C,OAAO9J,EAAQ,KAAK8J,OAAOx1C,OAAOy+C,GAAYriD,YAC/EsvC,EAAQ+S,GAAY,GAAGjJ,OAAO1O,EAAQ,KAAKmN,MAAM,KAC3Cj0C,OAAO,GAAGw1C,OAAO9J,EAAQ,KAAK8J,OAAOx1C,OAAOy+C,GAAYriD,KAGnEmoD,QAAS,SAAiBlsD,UACjBA,EAAE6B,SAEXwoE,kBAAmB,SAAuBrqE,EAAG+D,UACpC/D,EAAE6B,MAAMkC,IAEjBkoD,UAAW,SAAmBjsD,UACxBwkE,GAAexkE,EAAGoqE,EAAMpqE,GAAIi+B,EAAOxvB,SAC9B27D,EAAMpqE,GAENA,EAAE6B,SAGb0iE,uBAAwB,SAA4BvkE,EAAG+D,UACjDygE,GAAexkE,EAAGoqE,EAAMpqE,EAAG+D,GAAIk6B,EAAOxvB,SACjC27D,EAAMpqE,EAAG+D,GAET/D,EAAEg2D,gBAAgBjyD,EAAE8oD,WAAY2M,GAAQc,cAGnDlO,SAAU,SAAkBpsD,UACnBA,EAAE6B,SAEXyoE,mBAAoB,SAAwBtqE,EAAG+D,UACtC/D,EAAE6B,MAAMkC,IAEjBmgE,iBAAkB,SAAqBlkE,UAE9BojE,GAAQpjE,EAAGE,OAEpBqqE,yBAA0B,SAA2BvqE,EAAG+D,UAE/Cq/D,GAAQpjE,MAAQE,KAAKwD,EAAGK,MAEjCymE,mCAAoC,SAAqCxqE,EAAGC,UACnEiqE,EAAYlqE,EAAGC,EAAGC,MAAM,IAEjCuqE,kCAAmC,SAAoCzqE,EAAGC,UACjEkqE,EAAYnqE,EAAGC,EAAGC,MAAM,IAEjCwqE,sCAAuC,SAAqC1qE,EAAGC,UAEtEkqE,EAAY9zD,EAAOpW,GAAID,EAAGE,MAAM,GAAMw4C,gBCrHxC2yB,MAFA,cACQ,CAAC,UACuDrf,QACrEhR,MACFA,GACEgR,SAqBG,SAAoBsf,EAAaC,EAAclgE,EAAU+xD,OAE1DsM,EAAQ4B,EAAYnK,MACpBiI,EAAQkC,EAAY3hC,MACpB0/B,EAAMiC,EAAYlK,UAElBoK,EAAUD,EAAanG,QACvBqG,EAASF,EAAalG,OACtBqG,EAAOH,EAAajG,KACpBqG,EAAQJ,EAAa5hC,MACrBiiC,EAAML,EAAanK,aAEnBgI,EAAMznE,SAAWgqE,EAAMhqE,aACnB,IAAIgnD,GAAeygB,EAAMznE,OAAQgqE,EAAMhqE,WAI3CynE,EAAM,KAAOuC,EAAM,IAAMvC,EAAM,KAAOuC,EAAM,SACxC,IAAIjgB,WAAW,iCAAmC0d,EAAQ,0BAA4BuC,EAAQ,SAIjGH,QACG,IAAIlrE,MAAM,0EAWdoD,EAAGkjB,EAPHk8C,EAAOsG,EAAM,GACbrG,EAAUqG,EAAM,GAEhB3kE,EAAoB,iBAAR4kE,GAAoBA,IAAQuC,EAAMvC,OAAM,EAEpDl4D,EAAK1M,EAAKu2C,EAAMsK,KAAKj6C,EAAU,CAAC5G,EAAIA,IAAO4G,EAI3Cs+D,EAAQ,OAEPjmE,EAAI,EAAGA,EAAIo/D,EAAMp/D,MACdA,GAAK,OAIT1D,EAAI,GAEJS,EAAI,OAEHmmB,EAAI,EAAGA,EAAIm8C,EAASn8C,IAAK,SAExBilD,EAAOjlD,EAAI,EAENq/C,EAAKyF,EAAK9kD,GAAIs/C,EAAKwF,EAAK9kD,EAAI,GAAIkd,EAAImiC,EAAIniC,EAAIoiC,EAAIpiC,QAEnD2nC,EAAO3nC,IAEJs5B,EAAUjsD,EAAGq6D,EAAQ1nC,GAAI4lC,EAAMhmE,GAAGkjB,IAAMzV,EAAGu4D,EAAMhmE,GAAGkjB,GAAI4kD,EAAQ1nC,MAErEpgC,GAAKmoE,MAIJnoE,EAAI,EAAGA,EAAIo/D,EAAMp/D,IAEhBjD,EAAEiD,KAAOmoE,IAELnoE,GAAGkjB,GAAK5mB,EAAE0D,KAGVA,GAAGkjB,GAAK8iD,EAAMhmE,GAAGkjB,UAMtB0kD,EAAYrJ,kBAAkB,CACnChjB,KAAM0qB,EACNpJ,KAAM,CAACuC,EAAMC,GACbnC,SAAUn8D,QCrGLqnE,MAFA,cACQ,CAAC,QAAS,gBAC8C9f,QACrEhR,MACFA,cACAiqB,GACEjZ,SAoBG,SAAqBnrD,EAAGC,EAAGuK,OAE5B49D,EAAUpoE,EAAEukE,QACZ8D,EAASroE,EAAEwkE,OACX8D,EAAOtoE,EAAEykE,KACT8D,EAAQvoE,EAAE8oC,MACV0/B,EAAMxoE,EAAEugE,UAERoK,EAAU1qE,EAAEskE,QACZqG,EAAS3qE,EAAEukE,OACXqG,EAAO5qE,EAAEwkE,KACTqG,EAAQ7qE,EAAE6oC,MACViiC,EAAM9qE,EAAEsgE,aAERgI,EAAMznE,SAAWgqE,EAAMhqE,aACnB,IAAIgnD,GAAeygB,EAAMznE,OAAQgqE,EAAMhqE,WAI3CynE,EAAM,KAAOuC,EAAM,IAAMvC,EAAM,KAAOuC,EAAM,SACxC,IAAIjgB,WAAW,iCAAmC0d,EAAQ,0BAA4BuC,EAAQ,SAOlGlnE,EAHAq+D,EAAOsG,EAAM,GACbrG,EAAUqG,EAAM,GAIhB1X,EAAKuT,EAELO,EAAO,EAEPr0D,EAAK9F,EAEU,iBAARg+D,GAAoBA,IAAQuC,MAEhCvC,IAEAruB,EAAMsK,KAAK2f,EAAa,CAACxgE,EAAIA,MAE3Bu2C,EAAMkB,QAAQ,EAAGz3C,KAEnBu2C,EAAMsK,KAAKj6C,EAAU,CAAC5G,EAAIA,SAc7Bf,EAAGkjB,EAAGkd,EAAGmiC,EAAIC,EAVboD,EAAUL,GAAWuC,EAAU,QAAK,EACpCjC,EAAS,GACTC,EAAO,GAEPuC,EAAK9C,GAAWuC,EAAU,QAAK,EAC/BQ,EAAK/C,GAAWuC,EAAU,QAAK,EAE/BS,EAAK,GACLC,EAAK,OAIJtlD,EAAI,EAAGA,EAAIm8C,EAASn8C,IAAK,GAEvBA,GAAK2iD,EAAO5nE,WAEbkqE,EAAOjlD,EAAI,MAEVq/C,EAAKkD,EAAKviD,GAAIs/C,EAAKiD,EAAKviD,EAAI,GAAIkd,EAAImiC,EAAIniC,EAAIoiC,EAAIpiC,MAE/ColC,EAAOplC,KAEJ/T,KAAKrsB,KAETA,GAAKmoE,EAEJE,MACCroE,GAAKulE,EAAQnlC,QAKfmiC,EAAKyF,EAAK9kD,GAAIs/C,EAAKwF,EAAK9kD,EAAI,GAAIkd,EAAImiC,EAAIniC,EAAIoiC,EAAIpiC,OAI/CmoC,IAFAR,EAAO3nC,MAEG+nC,MAERE,EAAI,KAEFvrE,EAAI2Q,EAAG46D,EAAGroE,GAAI8nE,EAAQ1nC,IAErB4tB,EAAGlxD,EAAGglE,KAKN9hE,GAAK,OAHLA,GAAKlD,UAQLuvB,KAAKrsB,KAETA,GAAKmoE,EAEJG,MACCtoE,GAAK8nE,EAAQ1nC,OAMlBioC,GAAMC,QAEJxC,EAAK5iD,GAEFkd,EAAIylC,EAAO5nE,QAIZsqE,IAFA1C,EAAOzlC,MAEG+nC,KAEJ/nC,GAAKioC,EAAGroE,QAGPwoE,EAAGxoE,KAAOmoE,KAEX/nC,GAAKkoC,EAAGtoE,UAKT+hD,OAAO3hB,EAAG,YAOpBi/B,GAAWwG,EAAO5nE,OAEhBd,EAAEslE,mBAAmB,CAC1B9uC,OAAQiyC,EACRjpE,MAAOkpE,EACPhE,IAAKiE,EACLjJ,KAAM,CAACuC,EAAMC,GACbnC,SAAUn8D,QCzKL0nE,MAFA,cACQ,CAAC,QAAS,gBAC8CngB,QACrEhR,MACFA,cACAmR,GACEH,SAqBG,SAAqBprD,EAAGE,EAAGuK,EAAU+xD,OAEtC6L,EAAUroE,EAAEwkE,QACZ8D,EAAStoE,EAAEykE,OACX8D,EAAOvoE,EAAE0kE,KACT8D,EAAQxoE,EAAE+oC,MACV0/B,EAAMzoE,EAAEwgE,cAEP6H,QACG,IAAI3oE,MAAM,0EAOdmE,EAHAq+D,EAAOsG,EAAM,GACbrG,EAAUqG,EAAM,GAIhBj4D,EAAK9F,EAEU,iBAARg+D,MAEJA,IAEDruB,EAAMkB,QAAQp7C,EAAG2D,KAEhBu2C,EAAMsK,KAAKj6C,EAAU,CAAC5G,EAAIA,aAI7BklE,EAAQ,GAER3pE,EAAI,GAEJS,EAAI,GAECmmB,EAAI,EAAGA,EAAIm8C,EAASn8C,IAAK,SAE5BilD,EAAOjlD,EAAI,EAENq/C,EAAKkD,EAAKviD,GAAIs/C,EAAKiD,EAAKviD,EAAI,GAAIkd,EAAImiC,EAAIniC,EAAIoiC,EAAIpiC,IAAK,KAExDr6B,EAAIy/D,EAAOplC,KAEbr6B,GAAKw/D,EAAQnlC,KACbr6B,GAAKoiE,UAIAnoE,EAAI,EAAGA,EAAIo/D,EAAMp/D,IAEd,IAANkjB,MAEIljB,GAAK,IAITjD,EAAEiD,KAAOmoE,IAELnoE,GAAGkjB,GAAKw2C,EAAUjsD,EAAGrQ,EAAGd,EAAE0D,IAAMyN,EAAGnR,EAAE0D,GAAI5C,KAGzC4C,GAAGkjB,GAAK9lB,SAMb,IAAIqrD,EAAY,CACrBlN,KAAM0qB,EACNpJ,KAAM,CAACuC,EAAMC,GACbnC,SAAUn8D,QC/FL2nE,MAFA,cACQ,CAAC,UACuDpgB,QACrEhR,MACFA,GACEgR,SAgBG,SAAqBnrD,EAAGC,EAAGuK,OA4B5B5G,EA1BAilE,EAAQ7oE,EAAEsgE,MACViI,EAAQvoE,EAAE8oC,MACV0/B,EAAMxoE,EAAEugE,UAERiL,EAAQvrE,EAAEqgE,MACVwK,EAAQ7qE,EAAE6oC,MACViiC,EAAM9qE,EAAEsgE,UAERkL,EAAQ,MAERlD,EAAMznE,SAAWgqE,EAAMhqE,aACnB,IAAIgnD,GAAeygB,EAAMznE,OAAQgqE,EAAMhqE,gBAItCf,EAAI,EAAGA,EAAIwoE,EAAMznE,OAAQf,IAAK,IAEjCwoE,EAAMxoE,KAAO+qE,EAAM/qE,SACf,IAAI8qD,WAAW,iCAAmC0d,EAAQ,0BAA4BuC,EAAQ,OAIhG/qE,GAAKwoE,EAAMxoE,OAMfuQ,EAAK9F,EAEU,iBAARg+D,GAAoBA,IAAQuC,MAEhCvC,IAEAruB,EAAMsK,KAAKj6C,EAAU,CAAC5G,EAAIA,SAI7BklE,EAAQ2C,EAAM3qE,OAAS,EAAIioE,EAASz4D,EAAI,EAAGm7D,EAAOA,EAAM,GAAI5C,EAAO2C,GAAS,UAEzExrE,EAAEohE,kBAAkB,CACzBhjB,KAAM0qB,EACNpJ,KAAM+L,EACN1L,SAAUn8D,gBAIIsD,EAAG8hE,EAAOjpE,EAAGmD,EAAG+lE,EAAIC,OAEhCC,EAAK,MAELH,IAAUjpE,EAAEe,OAAS,UAEd+B,EAAI,EAAGA,EAAIK,EAAGL,MAElBA,GAAKqE,EAAE+hE,EAAGpmE,GAAIqmE,EAAGrmE,iBAIbkjB,EAAI,EAAGA,EAAI7iB,EAAG6iB,MAElBA,GAAKgjD,EAAS7hE,EAAG8hE,EAAQ,EAAGjpE,EAAGA,EAAEipE,EAAQ,GAAIC,EAAGljD,GAAImjD,EAAGnjD,WAIvDojD,MCtFAuC,MAFA,cACQ,CAAC,QAAS,gBAC8CvgB,QACrEhR,MACFA,cACAiqB,GACEjZ,SAqBG,SAAqBsf,EAAaC,EAAclgE,EAAU+xD,OAE3DsM,EAAQ4B,EAAYnK,MACpBiI,EAAQkC,EAAY3hC,MACpB0/B,EAAMiC,EAAYlK,UAElBoK,EAAUD,EAAanG,QACvBqG,EAASF,EAAalG,OACtBqG,EAAOH,EAAajG,KACpBqG,EAAQJ,EAAa5hC,MACrBiiC,EAAML,EAAanK,aAEnBgI,EAAMznE,SAAWgqE,EAAMhqE,aACnB,IAAIgnD,GAAeygB,EAAMznE,OAAQgqE,EAAMhqE,WAI3CynE,EAAM,KAAOuC,EAAM,IAAMvC,EAAM,KAAOuC,EAAM,SACxC,IAAIjgB,WAAW,iCAAmC0d,EAAQ,0BAA4BuC,EAAQ,SAIjGH,QACG,IAAIlrE,MAAM,0EAOdmE,EAHAq+D,EAAOsG,EAAM,GACbrG,EAAUqG,EAAM,GAIhB1X,EAAKuT,EAELO,EAAO,EAEPr0D,EAAK9F,EAEU,iBAARg+D,GAAoBA,IAAQuC,MAEhCvC,IAEAruB,EAAMsK,KAAK2f,EAAa,CAACxgE,EAAIA,MAE3Bu2C,EAAMkB,QAAQ,EAAGz3C,KAEnBu2C,EAAMsK,KAAKj6C,EAAU,CAAC5G,EAAIA,aAI7B6kE,EAAU,GACVC,EAAS,GACTC,EAAO,GAEF5iD,EAAI,EAAGA,EAAIm8C,EAASn8C,IAAK,GAE3BA,GAAK2iD,EAAO5nE,eAERskE,EAAKyF,EAAK9kD,GAAIs/C,EAAKwF,EAAK9kD,EAAI,GAAIkd,EAAImiC,EAAIniC,EAAIoiC,EAAIpiC,IAAK,KAExDpgC,EAAI+nE,EAAO3nC,GAEX0oC,EAAMpP,EAAUjsD,EAAGq6D,EAAQ1nC,GAAI4lC,EAAMhmE,GAAGkjB,IAAMzV,EAAGu4D,EAAMhmE,GAAGkjB,GAAI4kD,EAAQ1nC,IAErE4tB,EAAG8a,EAAKhH,OAEJz1C,KAAKrsB,KACJqsB,KAAKy8C,cAMdzJ,GAAWwG,EAAO5nE,OAEhB4pE,EAAapF,mBAAmB,CACrC9uC,OAAQiyC,EACRjpE,MAAOkpE,EACPhE,IAAKiE,EACLjJ,KAAM,CAACuC,EAAMC,GACbnC,SAAUn8D,QCzGLgoE,MAFA,cACQ,CAAC,UACuDzgB,QACrEhR,MACFA,GACEgR,SAqBG,SAAqBsf,EAAaC,EAAclgE,EAAU+xD,OAE3DsM,EAAQ4B,EAAYnK,MACpBiI,EAAQkC,EAAY3hC,MACpB0/B,EAAMiC,EAAYlK,UAElBoK,EAAUD,EAAanG,QACvBqG,EAASF,EAAalG,OACtBqG,EAAOH,EAAajG,KACpBqG,EAAQJ,EAAa5hC,MACrBiiC,EAAML,EAAanK,aAEnBgI,EAAMznE,SAAWgqE,EAAMhqE,aACnB,IAAIgnD,GAAeygB,EAAMznE,OAAQgqE,EAAMhqE,WAI3CynE,EAAM,KAAOuC,EAAM,IAAMvC,EAAM,KAAOuC,EAAM,SACxC,IAAIjgB,WAAW,iCAAmC0d,EAAQ,0BAA4BuC,EAAQ,SAIjGH,QACG,IAAIlrE,MAAM,0EAOdmE,EAHAq+D,EAAOsG,EAAM,GACbrG,EAAUqG,EAAM,GAIhB5D,EAAO,EAEPr0D,EAAK9F,EAEU,iBAARg+D,GAAoBA,IAAQuC,MAEhCvC,IAEEruB,EAAMkB,QAAQ,EAAGz3C,KAEnBu2C,EAAMsK,KAAKj6C,EAAU,CAAC5G,EAAIA,aAI7BklE,EAAQ,GAEHzjE,EAAI,EAAGA,EAAI48D,EAAM58D,MAElBA,GAAK,WAITlG,EAAI,GAEJS,EAAI,GAECmmB,EAAI,EAAGA,EAAIm8C,EAASn8C,IAAK,SAE5BilD,EAAOjlD,EAAI,EAENq/C,EAAKyF,EAAK9kD,GAAIs/C,EAAKwF,EAAK9kD,EAAI,GAAIkd,EAAImiC,EAAIniC,EAAIoiC,EAAIpiC,IAAK,KAExDpgC,EAAI+nE,EAAO3nC,KAEbpgC,GAAK05D,EAAUjsD,EAAGq6D,EAAQ1nC,GAAI4lC,EAAMhmE,GAAGkjB,IAAMzV,EAAGu4D,EAAMhmE,GAAGkjB,GAAI4kD,EAAQ1nC,MACrEpgC,GAAKmoE,UAIA5rE,EAAI,EAAGA,EAAI6iE,EAAM7iE,IAEpBQ,EAAER,KAAO4rE,IAEL5rE,GAAG2mB,GAAK5mB,EAAEC,KAGVA,GAAG2mB,GAAKw2C,EAAUjsD,EAAGq0D,EAAMkE,EAAMzpE,GAAG2mB,IAAMzV,EAAGu4D,EAAMzpE,GAAG2mB,GAAI4+C,UAM/D8F,EAAYrJ,kBAAkB,CACnChjB,KAAM0qB,EACNpJ,KAAM,CAACuC,EAAMC,GACbnC,SAAUn8D,QC/GLioE,MAFA,cACQ,CAAC,QAAS,gBAC8C1gB,QACrEhR,MACFA,cACAiqB,GACEjZ,SAoBG,SAAqBnrD,EAAGC,EAAGuK,OAE5B49D,EAAUpoE,EAAEukE,QACZ8D,EAASroE,EAAEwkE,OACX8D,EAAOtoE,EAAEykE,KACT8D,EAAQvoE,EAAE8oC,MACV0/B,EAAMxoE,EAAEugE,UAERoK,EAAU1qE,EAAEskE,QACZqG,EAAS3qE,EAAEukE,OACXqG,EAAO5qE,EAAEwkE,KACTqG,EAAQ7qE,EAAE6oC,MACViiC,EAAM9qE,EAAEsgE,aAERgI,EAAMznE,SAAWgqE,EAAMhqE,aACnB,IAAIgnD,GAAeygB,EAAMznE,OAAQgqE,EAAMhqE,WAI3CynE,EAAM,KAAOuC,EAAM,IAAMvC,EAAM,KAAOuC,EAAM,SACxC,IAAIjgB,WAAW,iCAAmC0d,EAAQ,0BAA4BuC,EAAQ,SAOlGlnE,EAHAq+D,EAAOsG,EAAM,GACbrG,EAAUqG,EAAM,GAIhB1X,EAAKuT,EAELO,EAAO,EAEPr0D,EAAK9F,EAEU,iBAARg+D,GAAoBA,IAAQuC,MAEhCvC,IAEAruB,EAAMsK,KAAK2f,EAAa,CAACxgE,EAAIA,MAE3Bu2C,EAAMkB,QAAQ,EAAGz3C,KAEnBu2C,EAAMsK,KAAKj6C,EAAU,CAAC5G,EAAIA,SAc7Bf,EAAGkjB,EAAGkd,EAAGoiC,EAVToD,EAAUL,GAAWuC,EAAU,QAAK,EACpCjC,EAAS,GACTC,EAAO,GAEPuC,EAAKzC,EAAU,QAAK,EACpB0C,EAAK1C,EAAU,QAAK,EAEpB2C,EAAK,GACLC,EAAK,OAIJtlD,EAAI,EAAGA,EAAIm8C,EAASn8C,IAAK,GAEvBA,GAAK2iD,EAAO5nE,WAEbkqE,EAAOjlD,EAAI,MAEVkd,EAAIqlC,EAAKviD,GAAIs/C,EAAKiD,EAAKviD,EAAI,GAAIkd,EAAIoiC,EAAIpiC,MAEtColC,EAAOplC,KAEJ/T,KAAKrsB,KAETA,GAAKmoE,EAEJE,MACCroE,GAAKulE,EAAQnlC,QAKfA,EAAI4nC,EAAK9kD,GAAIs/C,EAAKwF,EAAK9kD,EAAI,GAAIkd,EAAIoiC,EAAIpiC,IAItCmoC,IAFAR,EAAO3nC,MAEG+nC,KAEL97C,KAAKrsB,KAIXA,GAAKmoE,EAEJG,MACCtoE,GAAK8nE,EAAQ1nC,OAKhBwlC,QAEEE,EAAK5iD,GAEFkd,EAAIylC,EAAO5nE,QAAQ,KAIpBgrE,EAAMV,IAFN1C,EAAOzlC,IAGP8oC,EAAMV,EAAGxoE,MAETipE,IAAQd,GAAQe,IAAQf,EAAM,KAK5BgB,EAAK17D,EAHAw7D,IAAQd,EAAOE,EAAGroE,GAAK8hE,EACvBoH,IAAQf,EAAOG,EAAGtoE,GAAK8hE,GAI3B9T,EAAGmb,EAAIrH,KAOH/f,OAAO3hB,EAAG,MALT/T,KAAK88C,mBAalB9J,GAAWwG,EAAO5nE,OAEhBd,EAAEslE,mBAAmB,CAC1B9uC,OAAQiyC,EACRjpE,MAAOkpE,EACPhE,IAAKiE,EACLjJ,KAAM,CAACuC,EAAMC,GACbnC,SAAUn8D,QClKLqoE,MAFA,cACQ,CAAC,QAAS,gBAC8C9gB,QACrEhR,MACFA,cACAmR,GACEH,SAqBG,SAAqBprD,EAAGE,EAAGuK,EAAU+xD,OAEtC6L,EAAUroE,EAAEwkE,QACZ8D,EAAStoE,EAAEykE,OACX8D,EAAOvoE,EAAE0kE,KACT8D,EAAQxoE,EAAE+oC,MACV0/B,EAAMzoE,EAAEwgE,cAEP6H,QACG,IAAI3oE,MAAM,0EAOdmE,EAHAq+D,EAAOsG,EAAM,GACbrG,EAAUqG,EAAM,GAIhBj4D,EAAK9F,EAEU,iBAARg+D,MAEJA,IAEDruB,EAAMkB,QAAQp7C,EAAG2D,KAEhBu2C,EAAMsK,KAAKj6C,EAAU,CAAC5G,EAAIA,aAI7BklE,EAAQ,GAER3pE,EAAI,GAEJS,EAAI,GAECmmB,EAAI,EAAGA,EAAIm8C,EAASn8C,IAAK,SAE5BilD,EAAOjlD,EAAI,EAENq/C,EAAKkD,EAAKviD,GAAIs/C,EAAKiD,EAAKviD,EAAI,GAAIkd,EAAImiC,EAAIniC,EAAIoiC,EAAIpiC,IAAK,KAExDr6B,EAAIy/D,EAAOplC,KAEbr6B,GAAKw/D,EAAQnlC,KACbr6B,GAAKoiE,UAIAnoE,EAAI,EAAGA,EAAIo/D,EAAMp/D,IAEd,IAANkjB,MAEIljB,GAAK,IAITjD,EAAEiD,KAAOmoE,IAELnoE,GAAGkjB,GAAKw2C,EAAUjsD,EAAGrQ,EAAGd,EAAE0D,IAAMyN,EAAGnR,EAAE0D,GAAI5C,KAGzC4C,GAAGkjB,GAAKw2C,EAAUjsD,EAAGrQ,EAAG,GAAKqQ,EAAG,EAAGrQ,UAMxC,IAAIqrD,EAAY,CACrBlN,KAAM0qB,EACNpJ,KAAM,CAACuC,EAAMC,GACbnC,SAAUn8D,QCxFLsoE,MAFA,MACQ,CAAC,QAAS,SAAU,cAAe,gBACa/gB,QAC7DhR,MACFA,SACA3kC,cACA4uD,cACA9Y,GACEH,EACAghB,EAAcT,GAAkB,CAClCvxB,MAAAA,EACAiqB,YAAAA,IAEEgI,EAAcR,GAAkB,CAClCzxB,MAAAA,IAEEkyB,EAAcR,GAAkB,CAClC1xB,MAAAA,EACAiqB,YAAAA,IAEEiF,EAAclB,GAAkB,CAClChuB,MAAAA,EACAiqB,YAAAA,IAEEkI,EAAcL,GAAkB,CAClC9xB,MAAAA,EACAmR,YAAAA,IAEEihB,EAAchB,GAAkB,CAClCpxB,MAAAA,IAEEmvB,EAAcV,GAAkB,CAClCzuB,MAAAA,WAsCKA,EAtEE,MAsEU,CACjBqpB,iBAAkBT,GAClBW,uBAAwB,SAA4BvkE,EAAGC,MACjDA,EAAEkzD,cACE,IAAI7yD,MAAM,sDAGXL,EAAE0nD,SAAW3nD,EAAIA,EAAEo1D,IAAIn1D,IAEhCwkE,qBAAsB,SAA0BzkE,EAAGC,MAC7CA,EAAE+3D,QAAQ,GAAK,QACX,IAAI13D,MAAM,sDAIXN,EAAEg4D,QAAQ,IAAM,EAAIh4D,EAAEo1D,IAAIn1D,GAAKD,EAAEo1D,IAAIn1D,GAAGwjB,IAAIxjB,GAAGm1D,IAAIn1D,IAE5DotE,6BAA8B,SAAkCrtE,EAAGC,UAC1DitE,EAAYltE,EAAGC,EAAGC,MAAM,IAEjCotE,4BAA6B,SAAiCttE,EAAGC,UACxD+sE,EAAY/sE,EAAGD,EAAGE,MAAM,IAEjCqtE,4BAA6B,SAAiCvtE,EAAGC,UACxDgtE,EAAYjtE,EAAGC,EAAGC,MAAM,IAEjCstE,2BAA4B,SAAgCxtE,EAAGC,UACtDmtE,EAAYptE,EAAGC,EAAGC,OAE3ButE,eAAgB,SAAoBztE,EAAGC,UAE9BC,KAAKmW,EAAOrW,GAAIqW,EAAOpW,IAAIy4C,WAEpCg1B,gBAAiB,SAAqB1tE,EAAGC,UAEhCC,KAAKmW,EAAOrW,GAAIC,IAEzB0tE,gBAAiB,SAAqB3tE,EAAGC,UAEhCC,KAAKF,EAAGqW,EAAOpW,KAExB2tE,oBAAqB,SAAyB5tE,EAAGC,UACxCiqE,EAAYlqE,EAAGC,EAAGC,MAAM,IAEjC2tE,mBAAoB,SAAwB7tE,EAAGC,UACtCkqE,EAAYnqE,EAAGC,EAAGC,MAAM,IAEjC4tE,oBAAqB,SAAyB9tE,EAAGC,UACxCktE,EAAYltE,EAAGD,EAAGE,MAAM,IAEjC6tE,mBAAoB,SAAwB/tE,EAAGC,UACtCkqE,EAAYlqE,EAAGD,EAAGE,MAAM,IAEjC8tE,aAAc,SAAkBhuE,EAAGC,UAE1BkqE,EAAY9zD,EAAOrW,GAAIC,EAAGC,MAAM,GAAOw4C,WAEhDu1B,aAAc,SAAkBjuE,EAAGC,UAE1BkqE,EAAY9zD,EAAOpW,GAAID,EAAGE,MAAM,GAAMw4C,gBCtIxCw1B,MAFA,iBACQ,CAAC,UAC0DliB,QACxEhR,MACFA,GACEgR,SAcGhR,EAAM,iBAAkB,CAC7BqpB,iBAAkBZ,GAClBiB,mBAAoB,SAAwB1kE,EAAGC,UACtCD,EAAEynD,IAAIxnD,IAEfskE,uBAAwB,SAA4BvkE,EAAGC,UAC9CD,EAAE6wD,MAAM5wD,IAEjBwkE,qBAAsB,SAA0BzkE,EAAGC,UAC1CD,EAAEynD,IAAIxnD,IAEfkuE,gDAAiD,SAA4CnuE,EAAGC,OAC1F48D,EAAM58D,EAAEyuC,iBACRvuC,MAAsB,OAAd08D,EAAI18D,MAAiB08D,EAAIuR,WAAWpuE,GAAKE,KAAK28D,EAAI18D,MAAOH,GAC9D68D,GAETwR,gDAAiD,SAA4CruE,EAAGC,OAC1F48D,EAAM78D,EAAE0uC,iBACRvuC,MAAsB,OAAd08D,EAAI18D,MAAiB08D,EAAIuR,WAAWnuE,GAAKC,KAAK28D,EAAI18D,MAAOF,GAC9D48D,GAET+H,aAAc,SAAkB5kE,EAAGC,UAC1BD,EAAEm8B,SAASl8B,SCnCbquE,MAFA,WACQ,CAAC,QAAS,SAAU,YAAa,iBAAkB,cAAe,QACbtiB,QAClEhR,MACFA,SACA3kC,YACAyN,iBACA9iB,cACAikE,MACAv7D,GACEsiD,EACAke,EAAclB,GAAkB,CAClChuB,MAAAA,EACAiqB,YAAAA,IAEEkF,EAAcV,GAAkB,CAClCzuB,MAAAA,eAGiCuzB,EAAO7sD,UAEhC6sD,EAAM5sE,aACP,SAEK+f,EAAM/f,aACP,KAEC4sE,EAAM,KAAO7sD,EAAM,SAEf,IAAIgqC,WAAW,sFAKpB,KAEC6iB,EAAM,KAAO7sD,EAAM,SAEf,IAAIgqC,WAAW,wDAA0D6iB,EAAM,GAAK,6BAA+B7sD,EAAM,GAAK,yBAMhI,IAAIphB,MAAM,+DAAiEohB,EAAM/f,OAAS,2BAKjG,SAEK+f,EAAM/f,aACP,KAEC4sE,EAAM,KAAO7sD,EAAM,SAEf,IAAIgqC,WAAW,yDAA2D6iB,EAAM,GAAK,+BAAiC7sD,EAAM,GAAK,gBAKtI,KAEC6sD,EAAM,KAAO7sD,EAAM,SAEf,IAAIgqC,WAAW,2DAA6D6iB,EAAM,GAAK,+BAAiC7sD,EAAM,GAAK,yBAMrI,IAAIphB,MAAM,+DAAiEohB,EAAM/f,OAAS,oCAM9F,IAAIrB,MAAM,+DAAiEiuE,EAAM5sE,OAAS,4BA+BvEd,EAAGC,MAEZ,UAAhBA,EAAE6/D,gBACE,IAAIrgE,MAAM,4DAegBO,EAAGC,OAajC2D,EAXAilE,EAAQ7oE,EAAEsgE,MACViI,EAAQvoE,EAAE8oC,MACV0/B,EAAMxoE,EAAEugE,UAERiL,EAAQvrE,EAAEqgE,MACVwK,EAAQ7qE,EAAE6oC,MACViiC,EAAM9qE,EAAEsgE,UAERoN,EAAUpF,EAAM,GAChBqF,EAAW9C,EAAM,GAIjB56D,EAAK+S,EAEL4qD,EAAK1tE,EAELqoE,GAAOuC,GAAOvC,IAAQuC,GAAsB,iBAARvC,MAEjCA,IAEAruB,EAAMsK,KAAKxhC,EAAW,CAACrf,EAAIA,MAC3Bu2C,EAAMsK,KAAKtkD,EAAgB,CAACyD,EAAIA,aAInCvB,EAAI,GAEC0jB,EAAI,EAAGA,EAAI6nD,EAAU7nD,IAAK,SAE7B+xC,EAAM+V,EAAGhF,EAAM,GAAI2C,EAAM,GAAGzlD,IAEvBljB,EAAI,EAAGA,EAAI8qE,EAAS9qE,MAErBqN,EAAG4nD,EAAK+V,EAAGhF,EAAMhmE,GAAI2oE,EAAM3oE,GAAGkjB,OAGpCA,GAAK+xC,SAIF93D,EAAEohE,kBAAkB,CACzBhjB,KAAM/7C,EACNq9D,KAAM,CAACkO,GACP7N,SAAUn8D,IA1DLkqE,CAA2B9tE,EAAGC,OAuEnC8tE,EAAwB5zB,EAAM,wBAAyB,CACzD6yB,4BA6BkChtE,EAAGC,OAYjC2D,EAVAilE,EAAQ7oE,EAAEsgE,MACViI,EAAQvoE,EAAE8oC,MACV0/B,EAAMxoE,EAAEugE,UAERiL,EAAQvrE,EAAEqgE,MACVyK,EAAM9qE,EAAEsgE,UAERyN,EAAQzF,EAAM,GACd0F,EAAW1F,EAAM,GAIjBr4D,EAAK+S,EAEL4qD,EAAK1tE,EAELqoE,GAAOuC,GAAOvC,IAAQuC,GAAsB,iBAARvC,MAEjCA,IAEAruB,EAAMsK,KAAKxhC,EAAW,CAACrf,EAAIA,MAC3Bu2C,EAAMsK,KAAKtkD,EAAgB,CAACyD,EAAIA,aAInCvB,EAAI,GAECQ,EAAI,EAAGA,EAAImrE,EAAOnrE,IAAK,SAE1B+hE,EAAMiE,EAAMhmE,GAEZi1D,EAAM+V,EAAGjJ,EAAI,GAAI4G,EAAM,IAElBzlD,EAAI,EAAGA,EAAIkoD,EAAUloD,MAEtB7V,EAAG4nD,EAAK+V,EAAGjJ,EAAI7+C,GAAIylD,EAAMzlD,OAG/BljB,GAAKi1D,SAIF93D,EAAEohE,kBAAkB,CACzBhjB,KAAM/7C,EACNq9D,KAAM,CAACsO,GACPjO,SAAUn8D,KA3EZmpE,6BA0QmC/sE,EAAGC,OAElCmoE,EAAUpoE,EAAEukE,QACZ8D,EAASroE,EAAEwkE,OACX8D,EAAOtoE,EAAEykE,KACT+D,EAAMxoE,EAAEugE,cAEP6H,QACG,IAAI3oE,MAAM,8DAcdmE,EAVA4nE,EAAQvrE,EAAEqgE,MACVyK,EAAM9qE,EAAEsgE,UAERyN,EAAQhuE,EAAE8oC,MAAM,GAChBolC,EAAQjuE,EAAE6oC,MAAM,GAEhB2/B,EAAU,GACVC,EAAS,GACTC,EAAO,GAIPz4D,EAAK+S,EAEL4qD,EAAK1tE,EAEL0wD,EAAKuT,EAELO,EAAO,EAEP6D,GAAOuC,GAAOvC,IAAQuC,GAAsB,iBAARvC,MAEjCA,IAEAruB,EAAMsK,KAAKxhC,EAAW,CAACrf,EAAIA,MAC3Bu2C,EAAMsK,KAAKtkD,EAAgB,CAACyD,EAAIA,MAChCu2C,EAAMsK,KAAK2f,EAAa,CAACxgE,EAAIA,MAE3Bu2C,EAAMkB,QAAQ,EAAGz3C,QAItBzE,EAAI,GAEJS,EAAI,KAEH,GAAK,UAEDuuE,EAAK,EAAGA,EAAKD,EAAOC,IAAM,KAE7BC,EAAM5C,EAAM2C,OAEXtd,EAAGud,EAAKzJ,WAEF0J,EAAM/F,EAAK6F,GAAKG,EAAMhG,EAAK6F,EAAK,GAAII,EAAKF,EAAKE,EAAKD,EAAKC,IAAM,KAEjEC,EAAKnG,EAAOkG,GAEX3uE,EAAE4uE,KASHA,GAAMt+D,EAAG/Q,EAAEqvE,GAAKX,EAAGO,EAAKhG,EAAQmG,QAPhCC,IAAM,IAEDt/C,KAAKs/C,KAEVA,GAAMX,EAAGO,EAAKhG,EAAQmG,cAUvBtoD,EAAKyiD,EAAO5nE,OAAQuI,EAAI,EAAGA,EAAI4c,EAAI5c,IAAK,KAE3ColE,EAAK/F,EAAOr/D,KAERA,GAAKlK,EAAEsvE,YAIZ,GAAK/F,EAAO5nE,OAEVd,EAAEslE,mBAAmB,CAC1B9uC,OAAQiyC,EACRjpE,MAAOkpE,EACPhE,IAAKiE,EACLjJ,KAAM,CAACsO,EAAO,GACdjO,SAAUn8D,OAzVV8qE,EAAwBv0B,EAAM,wBAAyB,CACzDwyB,oCA2EuC3sE,EAAGC,OActC2D,EAZAilE,EAAQ7oE,EAAEsgE,MACViI,EAAQvoE,EAAE8oC,MACV0/B,EAAMxoE,EAAEugE,UAERiL,EAAQvrE,EAAEqgE,MACVwK,EAAQ7qE,EAAE6oC,MACViiC,EAAM9qE,EAAEsgE,UAERyN,EAAQzF,EAAM,GACd0F,EAAW1F,EAAM,GACjBqF,EAAW9C,EAAM,GAIjB56D,EAAK+S,EAEL4qD,EAAK1tE,EAELqoE,GAAOuC,GAAOvC,IAAQuC,GAAsB,iBAARvC,MAEjCA,IAEAruB,EAAMsK,KAAKxhC,EAAW,CAACrf,EAAIA,MAC3Bu2C,EAAMsK,KAAKtkD,EAAgB,CAACyD,EAAIA,aAInCvB,EAAI,GAECQ,EAAI,EAAGA,EAAImrE,EAAOnrE,IAAK,KAE1B+hE,EAAMiE,EAAMhmE,KAEdA,GAAK,WAEEkjB,EAAI,EAAGA,EAAI6nD,EAAU7nD,IAAK,SAE7B+xC,EAAM+V,EAAGjJ,EAAI,GAAI4G,EAAM,GAAGzlD,IAErB5mB,EAAI,EAAGA,EAAI8uE,EAAU9uE,MAEtB+Q,EAAG4nD,EAAK+V,EAAGjJ,EAAIzlE,GAAIqsE,EAAMrsE,GAAG4mB,OAGlCljB,GAAGkjB,GAAK+xC,UAKP93D,EAAEohE,kBAAkB,CACzBhjB,KAAM/7C,EACNq9D,KAAM,CAACsO,EAAOJ,GACd7N,SAAUn8D,KAhIZ8oE,qCA6IwC1sE,EAAGC,OAEvC4oE,EAAQ7oE,EAAEsgE,MACViI,EAAQvoE,EAAE8oC,MACV0/B,EAAMxoE,EAAEugE,UAERoK,EAAU1qE,EAAEskE,QACZqG,EAAS3qE,EAAEukE,OACXqG,EAAO5qE,EAAEwkE,KACTqG,EAAQ7qE,EAAE6oC,MACViiC,EAAM9qE,EAAEsgE,cAEPoK,QACG,IAAIlrE,MAAM,8DAOdmE,EAHAoqE,EAAQzF,EAAM,GACdqF,EAAW9C,EAAM,GAIjB56D,EAAK+S,EAEL4qD,EAAK1tE,EAEL0wD,EAAKuT,EAELO,EAAO,EAEP6D,GAAOuC,GAAOvC,IAAQuC,GAAsB,iBAARvC,MAEjCA,IAEAruB,EAAMsK,KAAKxhC,EAAW,CAACrf,EAAIA,MAC3Bu2C,EAAMsK,KAAKtkD,EAAgB,CAACyD,EAAIA,MAChCu2C,EAAMsK,KAAK2f,EAAa,CAACxgE,EAAIA,MAE3Bu2C,EAAMkB,QAAQ,EAAGz3C,YAItB6kE,EAAU,GACVC,EAAS,GACTC,EAAO,GAEPtmE,EAAIpC,EAAEqlE,mBAAmB,CAC3B9uC,OAAQiyC,EACRjpE,MAAOkpE,EACPhE,IAAKiE,EACLjJ,KAAM,CAACsO,EAAOJ,GACd7N,SAAUn8D,IAGH+qE,EAAK,EAAGA,EAAKf,EAAUe,IAAM,GAE/BA,GAAMjG,EAAO5nE,WAEd8tE,EAAM/D,EAAK8D,GACXE,EAAMhE,EAAK8D,EAAK,MAEhBE,EAAMD,UAEJhyB,EAAO,EAEF/5C,EAAI,EAAGA,EAAImrE,EAAOnrE,IAAK,SAE1BmoE,EAAOnoE,EAAI,EAEX8oE,OAAM,EAEDmD,EAAKF,EAAKE,EAAKD,EAAKC,IAAM,KAE7BX,EAAKvD,EAAOkE,GAEZlyB,IAASouB,KAEL6C,EAAGhF,EAAMhmE,GAAGsrE,GAAKxD,EAAQmE,MAExB9D,KAGD96D,EAAGy7D,EAAKkC,EAAGhF,EAAMhmE,GAAGsrE,GAAKxD,EAAQmE,KAKvClyB,IAASouB,GAASna,EAAG8a,EAAKhH,OAErBz1C,KAAKrsB,KACJqsB,KAAKy8C,cAOhBiC,GAAYlF,EAAO5nE,OAEjBuB,GA/OPoqE,qCAmWwCzsE,EAAGC,OAEvCmoE,EAAUpoE,EAAEukE,QACZ8D,EAASroE,EAAEwkE,OACX8D,EAAOtoE,EAAEykE,KACT+D,EAAMxoE,EAAEugE,cAEP6H,QACG,IAAI3oE,MAAM,8DAWdmE,EAPA4nE,EAAQvrE,EAAEqgE,MACVyK,EAAM9qE,EAAEsgE,UAERyN,EAAQhuE,EAAE8oC,MAAM,GAChBolC,EAAQjuE,EAAE6oC,MAAM,GAChB8kC,EAAW3tE,EAAE6oC,MAAM,GAInB54B,EAAK+S,EAEL4qD,EAAK1tE,EAEL0wD,EAAKuT,EAELO,EAAO,EAEP6D,GAAOuC,GAAOvC,IAAQuC,GAAsB,iBAARvC,MAEjCA,IAEAruB,EAAMsK,KAAKxhC,EAAW,CAACrf,EAAIA,MAC3Bu2C,EAAMsK,KAAKtkD,EAAgB,CAACyD,EAAIA,MAChCu2C,EAAMsK,KAAK2f,EAAa,CAACxgE,EAAIA,MAE3Bu2C,EAAMkB,QAAQ,EAAGz3C,YAItB6kE,EAAU,GACVC,EAAS,GACTC,EAAO,GAEPtmE,EAAIrC,EAAEslE,mBAAmB,CAC3B9uC,OAAQiyC,EACRjpE,MAAOkpE,EACPhE,IAAKiE,EACLjJ,KAAM,CAACsO,EAAOJ,GACd7N,SAAUn8D,IAGRzE,EAAI,GAEJS,EAAI,GAEC+uE,EAAK,EAAGA,EAAKf,EAAUe,IAAM,GAE/BA,GAAMjG,EAAO5nE,eAEdkqE,EAAO2D,EAAK,EAEPR,EAAK,EAAGA,EAAKD,EAAOC,IAAM,KAE7BY,EAAOvD,EAAM2C,GAAIQ,OAEhB9d,EAAGke,EAAMpK,WAEH0J,EAAM/F,EAAK6F,GAAKG,EAAMhG,EAAK6F,EAAK,GAAII,EAAKF,EAAKE,EAAKD,EAAKC,IAAM,KAEjEC,EAAKnG,EAAOkG,GAEZ3uE,EAAE4uE,KAAQxD,KAEVwD,GAAMxD,IAED97C,KAAKs/C,KAEVA,GAAMX,EAAGkB,EAAM3G,EAAQmG,OAGvBC,GAAMt+D,EAAG/Q,EAAEqvE,GAAKX,EAAGkB,EAAM3G,EAAQmG,cAOlCvoD,EAAK2iD,EAAKgG,GAAK1oD,EAAKyiD,EAAO5nE,OAAQuI,EAAI2c,EAAI3c,EAAI4c,EAAI5c,IAAK,KAE3DolE,EAAK/F,EAAOr/D,KAERA,GAAKlK,EAAEsvE,aAKdb,GAAYlF,EAAO5nE,OAEjBuB,GAtcPmqE,sCAkdyCxsE,EAAGC,OAiBxC2D,EAfAwkE,EAAUpoE,EAAEukE,QACZ8D,EAASroE,EAAEwkE,OACX8D,EAAOtoE,EAAEykE,KACT+D,EAAMxoE,EAAEugE,UAERoK,EAAU1qE,EAAEskE,QACZqG,EAAS3qE,EAAEukE,OACXqG,EAAO5qE,EAAEwkE,KACTsG,EAAM9qE,EAAEsgE,UAERyN,EAAQhuE,EAAE8oC,MAAM,GAChB8kC,EAAW3tE,EAAE6oC,MAAM,GAEnByQ,EAAS6uB,GAAWuC,EAIpBz6D,EAAK+S,EAEL4qD,EAAK1tE,EAELqoE,GAAOuC,GAAOvC,IAAQuC,GAAsB,iBAARvC,MAEjCA,IAEAruB,EAAMsK,KAAKxhC,EAAW,CAACrf,EAAIA,MAC3Bu2C,EAAMsK,KAAKtkD,EAAgB,CAACyD,EAAIA,aAoBnC2qE,EAAIF,EAAKC,EAAKQ,EAAIF,EAAKC,EAAKL,EAAIL,EAhBhC1F,EAAUlvB,EAAS,QAAK,EACxBmvB,EAAS,GACTC,EAAO,GAEPtmE,EAAIrC,EAAEslE,mBAAmB,CAC3B9uC,OAAQiyC,EACRjpE,MAAOkpE,EACPhE,IAAKiE,EACLjJ,KAAM,CAACsO,EAAOJ,GACd7N,SAAUn8D,IAGRzE,EAAIo6C,EAAS,QAAK,EAElB35C,EAAI,GAIC+uE,EAAK,EAAGA,EAAKf,EAAUe,IAAM,GAE/BA,GAAMjG,EAAO5nE,WAEdkqE,EAAO2D,EAAK,MAEXC,EAAM/D,EAAK8D,GAAKE,EAAMhE,EAAK8D,EAAK,GAAIG,EAAKF,EAAKE,EAAKD,EAAKC,SAEtDlE,EAAOkE,GAERv1B,MAEG80B,EAAM/F,EAAK6F,GAAKG,EAAMhG,EAAK6F,EAAK,GAAII,EAAKF,EAAKE,EAAKD,EAAKC,MAEtDlG,EAAOkG,GAER3uE,EAAE4uE,KAAQxD,KAEVwD,GAAMxD,IAED97C,KAAKs/C,KAEVA,GAAMX,EAAGlD,EAAQmE,GAAK1G,EAAQmG,OAG9BC,GAAMt+D,EAAG/Q,EAAEqvE,GAAKX,EAAGlD,EAAQmE,GAAK1G,EAAQmG,cAKzCF,EAAM/F,EAAK6F,GAAKG,EAAMhG,EAAK6F,EAAK,GAAII,EAAKF,EAAKE,EAAKD,EAAKC,MAEtDlG,EAAOkG,GAER3uE,EAAE4uE,KAAQxD,MAEVwD,GAAMxD,IAED97C,KAAKs/C,OAOhBj1B,UAEOvzB,EAAK2iD,EAAKgG,GAAK1oD,EAAKyiD,EAAO5nE,OAAQuI,EAAI2c,EAAI3c,EAAI4c,EAAI5c,IAAK,KAE3DolE,EAAK/F,EAAOr/D,KAERA,GAAKlK,EAAEsvE,aAMhBb,GAAYlF,EAAO5nE,OAEjBuB,YAqCF83C,EA/yBE,WA+yBU60B,GAAO,CAExBpC,eAAgB,SAAoBztE,EAAGC,KAEX6pD,GAAU9pD,GAAI8pD,GAAU7pD,QAG9CgB,EAAIf,KAAKmW,EAAOrW,GAAIqW,EAAOpW,WAExB+2C,GAAS/1C,GAAKA,EAAEy3C,UAAYz3C,GAErC6uE,iBAAkB,SAAsB9vE,EAAGC,OAErC8vE,EAAQ/vE,EAAEugE,OACVyP,EAAQ/vE,EAAEsgE,gBAEYwP,EAAOC,GAGZ,IAAjBD,EAAMpuE,OAEa,IAAjBquE,EAAMruE,gBA1uBed,EAAGC,EAAGiD,MAEzB,IAANA,QACI,IAAIzD,MAAM,4CAGXoJ,EAAI7I,EAAGC,GAsuBDmvE,CAAsBjwE,EAAGC,EAAG8vE,EAAM,IAIpCG,EAAsBlwE,EAAGC,GAIb,IAAjB+vE,EAAMruE,OAEDitE,EAAsB5uE,EAAGC,GAI3BsvE,EAAsBvvE,EAAGC,IAElC0tE,gBAAiB,SAAqB3tE,EAAGC,UAEhCC,KAAKF,EAAGqW,EAAOpW,KAExBytE,gBAAiB,SAAqB1tE,EAAGC,UAEhCC,KAAKmW,EAAOrW,EAAGC,EAAE0gE,WAAY1gE,IAEtC2tE,oBAAqB,SAAyB5tE,EAAGC,UACxCiqE,EAAYlqE,EAAGC,EAAGe,GAAgB,IAE3C6sE,mBAAoB,SAAwB7tE,EAAGC,UACtCkqE,EAAYnqE,EAAGC,EAAGe,GAAgB,IAE3C8sE,oBAAqB,SAAyB9tE,EAAGC,UACxCiqE,EAAYjqE,EAAGD,EAAGgB,GAAgB,IAE3C+sE,mBAAoB,SAAwB/tE,EAAGC,UACtCkqE,EAAYlqE,EAAGD,EAAGgB,GAAgB,IAE3CgtE,aAAc,SAAkBhuE,EAAGC,UAE1BkqE,EAAY9zD,EAAOrW,GAAIC,EAAGe,GAAgB,GAAO03C,WAE1Du1B,aAAc,SAAkBjuE,EAAGC,UAE1BkqE,EAAY9zD,EAAOpW,GAAID,EAAGgB,GAAgB,GAAM03C,WAEzDy3B,WAAYnvE,EACZovE,mBAAoB,SAAmBpwE,EAAGC,EAAGowE,WACvC5hC,EAASvuC,KAAKF,EAAGC,GAEZyD,EAAI,EAAGA,EAAI2sE,EAAK1uE,OAAQ+B,MACtBxD,KAAKuuC,EAAQ4hC,EAAK3sE,WAGtB+qC,IAERztC,EAAe26C,gBCx3BT20B,MAFA,WACQ,CAAC,QAAS,SAAU,cAAe,YAAa,aAAc,gBACTtkB,QAClEhR,MACFA,SACA3kC,cACA4uD,YACAnhD,aACAysD,cACApkB,GACEH,EAEAwkB,EAAcnF,GAAkB,CAClCrwB,MAAAA,IAEEiyB,EAAcR,GAAkB,CAClCzxB,MAAAA,IAEEkyB,EAAcR,GAAkB,CAClC1xB,MAAAA,EACAiqB,YAAAA,IAEEwL,EAActE,GAAkB,CAClCnxB,MAAAA,EACAmR,YAAAA,IAEEihB,EAAchB,GAAkB,CAClCpxB,MAAAA,IAEEmvB,EAAcV,GAAkB,CAClCzuB,MAAAA,WAoCKA,EAlEE,WAkEU,CACjBqpB,iBAAkB,SAAsBrkE,EAAGC,UAClCD,EAAIC,GAEbykE,mBAAoB,SAAwB1kE,EAAGC,UACtCD,EAAEwN,IAAIvN,IAEfskE,uBAAwB,SAA4BvkE,EAAGC,UAC9CD,EAAE+wD,MAAM9wD,IAEjBwkE,qBAAsB,SAA0BzkE,EAAGC,UAC1CD,EAAEwN,IAAIvN,IAEf2kE,aAAc,SAAkB5kE,EAAGC,MACjB,OAAZD,EAAEG,YACE,IAAIG,MAAM,uDAGF,OAAZL,EAAEE,YACE,IAAIG,MAAM,wDAGbN,EAAE6kE,UAAU5kE,SACT,IAAIK,MAAM,0BAGdu8D,EAAM78D,EAAE0uC,iBACRvuC,MAAQD,KAAK28D,EAAI18D,MAAOF,EAAEE,SAC1B4oE,WAAY,EACTlM,GAETwQ,6BAA8B,SAAkCrtE,EAAGC,aAC5CD,EAAGC,GACjBitE,EAAYltE,EAAGC,EAAGC,OAE3BotE,4BAA6B,SAAiCttE,EAAGC,aAC1CD,EAAGC,GACjBgtE,EAAYhtE,EAAGD,EAAGE,MAAM,IAEjCqtE,4BAA6B,SAAiCvtE,EAAGC,aAC1CD,EAAGC,GACjBuwE,EAAYxwE,EAAGC,EAAGC,MAAM,IAEjCstE,2BAA4B,SAAgCxtE,EAAGC,aACxCD,EAAGC,GACjBmtE,EAAYptE,EAAGC,EAAGC,OAE3ButE,eAAgB,SAAoBztE,EAAGC,UAE9BC,KAAKmW,EAAOrW,GAAIqW,EAAOpW,IAAIy4C,WAEpCg1B,gBAAiB,SAAqB1tE,EAAGC,UAEhCC,KAAKmW,EAAOrW,GAAIC,IAEzB0tE,gBAAiB,SAAqB3tE,EAAGC,UAEhCC,KAAKF,EAAGqW,EAAOpW,KAExB2tE,oBAAqB,SAAyB5tE,EAAGC,UACxCwwE,EAAYzwE,EAAGuwE,EAAWtwE,GAAI6jB,IAEvC+pD,mBAAoB,SAAwB7tE,EAAGC,UACtCkqE,EAAYnqE,EAAGC,EAAGC,OAE3B4tE,oBAAqB,SAAyB9tE,EAAGC,UACxCwwE,EAAYxwE,EAAGD,EAAGE,MAAM,IAEjC6tE,mBAAoB,SAAwB/tE,EAAGC,UACtCkqE,EAAYlqE,EAAGD,EAAGE,MAAM,IAEjC8tE,aAAc,SAAkBhuE,EAAGC,UAE1BkqE,EAAY9zD,EAAOrW,GAAIC,EAAGC,MAAM,GAAOw4C,WAEhDu1B,aAAc,SAAkBjuE,EAAGC,UAE1BkqE,EAAY9zD,EAAOpW,GAAID,EAAGE,MAAM,GAAMw4C,gBAWnD,YAA8B14C,EAAGC,OAC3B8vE,EAAQ/vE,EAAEugE,OACVyP,EAAQ/vE,EAAEsgE,UAEVwP,EAAMpuE,SAAWquE,EAAMruE,aACnB,IAAIgnD,GAAeonB,EAAMpuE,OAAQquE,EAAMruE,QCrKjD,IAEW+uE,MAFA,cACQ,CAAC,QAAS,gBAC8C1kB,QACrEhR,MACFA,cACAmR,GACEH,SAgBG,SAAqBnrD,EAAGC,EAAGuK,OAE5B+9D,EAAQvoE,EAAE8oC,MACV0/B,EAAMxoE,EAAEugE,UAERuK,EAAQ7qE,EAAE6oC,MACViiC,EAAM9qE,EAAEsgE,aAERgI,EAAMznE,SAAWgqE,EAAMhqE,aACnB,IAAIgnD,GAAeygB,EAAMznE,OAAQgqE,EAAMhqE,WAI3CynE,EAAM,KAAOuC,EAAM,IAAMvC,EAAM,KAAOuC,EAAM,SACxC,IAAIjgB,WAAW,iCAAmC0d,EAAQ,0BAA4BuC,EAAQ,SAOlGlnE,EAgBAf,EAAGkjB,EAnBHk8C,EAAOsG,EAAM,GACbrG,EAAUqG,EAAM,GAIhB5D,EAAO,EAEPr0D,EAAK9F,EAEU,iBAARg+D,GAAoBA,IAAQuC,MAEhCvC,IAEEruB,EAAMkB,QAAQ,EAAGz3C,KAEnBu2C,EAAMsK,KAAKj6C,EAAU,CAAC5G,EAAIA,SAM7BklE,EAAQ,OAEPjmE,EAAI,EAAGA,EAAIo/D,EAAMp/D,MACdA,GAAK,OAITqoE,EAAK,GACLC,EAAK,GAELC,EAAK,GACLC,EAAK,OAEJtlD,EAAI,EAAGA,EAAIm8C,EAASn8C,IAAK,KAExBilD,EAAOjlD,EAAI,QAEN/lB,EAAG+lB,EAAGqlD,EAAIF,EAAIF,KAGd/qE,EAAG8lB,EAAGslD,EAAIF,EAAIH,GAGlBnoE,EAAI,EAAGA,EAAIo/D,EAAMp/D,IAAK,KAErBitE,EAAK1E,EAAGvoE,KAAOmoE,EAAOE,EAAGroE,GAAK8hE,EAC9BoL,EAAK1E,EAAGxoE,KAAOmoE,EAAOG,EAAGtoE,GAAK8hE,IAE5B9hE,GAAGkjB,GAAKzV,EAAGw/D,EAAIC,WAKlB,IAAIzkB,EAAY,CACrBlN,KAAM0qB,EACNpJ,KAAM,CAACuC,EAAMC,GACbnC,SAAUn8D,gBAIIxD,EAAG2lB,EAAGnmB,EAAGT,EAAG6rE,WAExBzxB,EAASn5C,EAAEmkE,QACX/kE,EAAQY,EAAEokE,OACVE,EAAMtkE,EAAEqkE,KAEHxhC,EAAIyhC,EAAI3+C,GAAIs/C,EAAKX,EAAI3+C,EAAI,GAAIkd,EAAIoiC,EAAIpiC,IAAK,KAE7CpgC,EAAIrD,EAAMyjC,KAEZpgC,GAAKmoE,IACLnoE,GAAK02C,EAAOtW,QC9GT+sC,MAFA,OACQ,CAAC,UACgD7kB,QAC9DhR,MACFA,GACEgR,SA2BGhR,EAhCE,OAgCU,CACjB3H,OAAQ,SAAgBrzC,UACfA,GAETisD,UAAW,SAAmBjsD,UACrBA,GAETksD,QAAS,SAAiBlsD,UACjBA,EAAEgK,aAEXk6D,iBAAkB,SAAqBlkE,UAC9BojE,GAAQpjE,EAAGE,YC1CjB,YAAkB+7D,OACnBv6C,EAAO,EACPgzC,EAAO,EACP1lB,EAAQ7iB,OAAOi5B,OAAO,MACtB0rB,EAAM3kD,OAAOi5B,OAAO,MACpB/kD,EAAQ,EAER0wE,EAAM,SAAaC,OACjBC,EAAWH,EAAIE,MACdC,WACEjiC,EAAMiiC,UACNH,EAAIE,KACTtvD,EACEgzC,IAASuc,QAERvvD,WACK,SACD,SAIDo3B,eAAea,KAAK3K,IAAS0lB,iBAK/BtzD,KAAKa,IAAIg6D,GACV,CACLiV,IAAK,SAAaF,OACZC,EAAWH,EAAIE,GACfG,IAAY9wE,OACV8wE,GAAWH,IACbA,GAAMG,GAELF,EAAU,MACXvvD,GACUu6C,kBACPjtB,EAAM0lB,KACPsc,GACGA,YAGFhiC,EAAMiiC,GACTvc,IAASuc,QAELn4B,eAAea,KAAK3K,IAAS0lB,OAMvCnjB,OAAQw/B,EACR3wC,MAAO,aACE//B,EAAQ,IACR,IACC8rB,OAAOi5B,OAAO,QAChBj5B,OAAOi5B,OAAO,QCzCnB,YAAiB3J,OAEpB21B,eACAnV,GACE9sD,UAAUxN,OAAS,QAAsB,IAAjBwN,UAAU,GAAmBA,UAAU,GAAK,YACvD,MAAT8sD,EAAgBt0D,OAAO0pE,kBAAoBpV,IAChC,MAAVqV,EAAiBh3B,KAAKC,UAAY+2B,EACpC,aACwB,iBAAlBC,EAAQC,UACTA,MAAQ,CACdn6C,OAAQ,IAAIma,IACZigC,IAAKC,GAASzV,GAASt0D,OAAO0pE,6BAI9BlzB,EAAO,GAEFz6C,EAAI,EAAGA,EAAIyL,UAAUxN,OAAQ+B,MAC/BA,GAAKyL,UAAUzL,OAGlBiuE,EAAOL,EAAOnzB,MAEdozB,EAAQC,MAAMn6C,OAAOuG,IAAI+zC,YACnBH,MAAMC,IAAIP,IAAIS,GACfJ,EAAQC,MAAMn6C,OAAO1D,IAAIg+C,OAG9BC,EAASn2B,EAAGvb,MAAMub,EAAI0C,YAClBqzB,MAAMn6C,OAAOpxB,IAAI0rE,EAAMC,KACvBJ,MAAMn6C,OAAOka,OAAOggC,EAAQC,MAAMC,IAAIP,IAAIS,IAC3CC,GC7CX,IAEWC,MAFA,WACQ,CAAC,QAAS,SAAU,SAAU,YAAa,cAAe,iBACL7lB,QAClEhR,MACFA,EACA6f,gBACAxkD,YACA41C,cACAE,eACA+Y,GACElZ,SAgCGhR,EA1CE,WA0CU,CACjB,GAAI,iBACuB,WAAlB/c,EAAO5nB,OAAsBA,EAAO,IAAM,IAEnD6K,OAAQ,SAAgBsnD,UACfnyD,EAAOmyD,IAEhBsJ,qBAAsB,SAAyBhP,UACtCiP,EAAUjP,EAAMA,EAAwB,WAAlB7kC,EAAO5nB,OAAsB,aAAU,IAEtE27D,6BAA8B,SAA+BlP,EAAM0F,UAC1DuJ,EAAUjP,EAAMA,EAAM0F,IAE/ByJ,yCAA0C,SAAwCnP,EAAMoP,UAC/EH,EAAUjP,EAAMoP,EAAwB,WAAlBj0C,EAAO5nB,OAAsB,aAAU,IAEtE87D,iDAAkD,SAA8CrP,EAAMoP,EAAM1J,UACnGuJ,EAAUjP,EAAMoP,EAAM1J,IAE/BrtC,MAAO,SAAezZ,UACb0wD,EAAgB1wD,IAEzB2wD,gBAAiB,SAAqB3wD,EAAM8mD,UACnC4J,EAAgB1wD,EAAM8mD,IAE/B9H,OAAQ,SAAgBh/C,UACf0wD,EAAgB1wD,EAAKg3B,UAAWh3B,EAAKi/C,YAE9C2R,iBAAkB,SAAsB5wD,EAAM8mD,UACrC4J,EAAgB1wD,EAAKg3B,UAAW8vB,iBAIlB9mD,EAAM8mD,UACrB9mD,EAAK/f,aACN,SACI6mE,EAASnyD,EAAOmyD,GAAU,QAE9B,SACIuJ,EAAUrwD,EAAK,GAAIA,EAAK,GAAI8mD,QAEhC,SACIuJ,EAAUrwD,EAAK,GAAIA,EAAK,GAAI8mD,iBAG7B,IAAIloE,MAAM,qDAaHwiE,EAAMoP,EAAM1J,OAEzB+J,EAAM77B,GAAYosB,IAASpsB,GAAYw7B,GAAQjmB,EAAY,QAC3DvV,GAAYosB,OAAcA,EAAKjW,YAC/BnW,GAAYw7B,OAAcA,EAAKrlB,aAE9B5D,GAAU6Z,IAASA,EAAO,QACvB,IAAIxiE,MAAM,iEAGb2oD,GAAUipB,IAASA,EAAO,QACvB,IAAI5xE,MAAM,iEAGdgyD,EAAMigB,EAAM,IAAItmB,EAAU,GAAK,EAC/B/C,EAAeqpB,EAAM,IAAIA,EAAI,GAAK,EAClC7wD,EAAO,CAACohD,EAAMoP,MAEd1J,EAAQ,IAEK,WAAXA,SACKtD,EAAavC,SAASjhD,EAAM4wC,EAAK,EAAGpJ,MAG9B,UAAXsf,SACKrc,EAAYwW,SAASjhD,EAAM4wC,EAAK,EAAGpJ,SAGtC,IAAIvQ,UAAU,wBAAyBwE,OAAOqrB,EAAQ,cAI1D3L,EAAMkE,GAAO,GAAIr/C,EAAMwnC,GAEvBspB,EAAU1P,EAAOoP,EAAOpP,EAAOoP,EAE1BrhE,EAAI,EAAGA,EAAI2hE,EAAS3hE,MACvBA,GAAGA,GAAKyhD,SAGPuK,MChJJ,oBACC,IAAIv8D,MAAM,2CAEX,oBACC,IAAIA,MAAM,0CCKX,YAAwBm7C,EAAIj3B,EAAOjjB,EAAKC,wBACvBixE,UACd,IAAIn1B,YAAY,yDAGnB7B,GAAKA,OACLj3B,MAAQA,OACRnjB,IAAME,OACND,IAAME,OACNonD,QAAU,yCAA2CnN,EAAK,KAAOj3B,EAAQ,cAAgBjjB,WAA2C,IAAMC,EAAM,IAAM,kBACtJqnD,OAAQ,IAAIvoD,OAAQuoD,MAE3B4pB,GAAelvE,UAAY,IAAIjD,MAC/BmyE,GAAelvE,UAAUhD,YAAcD,MACvCmyE,GAAelvE,UAAUm3C,KAAO,iBAChC+3B,GAAelvE,UAAUmvE,kBAAmB,ECrB5C,IAEWC,MAFA,OACQ,CAAC,QAAS,SAAU,YAC6B3mB,QAC9DhR,MACFA,EACA6f,gBACAxkD,GACE21C,SAyBGhR,EAhCE,OAgCU,CACjB0lB,OAAQ,SAAgB1gE,UACfA,EAAEolD,OAAOplD,EAAEugE,SAEpBplC,MAAO2uB,GACP5oC,OAAQ,SAAgBlhB,SACG,UAAlBi+B,EAAO5nB,OAAqB,CAACrW,EAAE2B,QAAU0U,EAAO,CAACrW,EAAE2B,UAE5DixE,uDAAwD,SAA+C5yE,SAE5E,UAAlBi+B,EAAO5nB,OAAqB,GAAKA,EAASA,EAAO,IFvCvD,iBACC,IAAI/V,MAAM,wCEsCkDuyE,SCnCpE,YAAyBpuD,EAAQs0B,MAE3B+5B,GAAcruD,IAAWsuD,GAAetuD,EAAQs0B,UAC3Ct0B,EAAOs0B,MAGY,mBAAjBt0B,EAAOs0B,IAAwBi6B,GAAavuD,EAAQs0B,SACvD,IAAIz4C,MAAM,yBAA2By4C,EAAO,yBAG9C,IAAIz4C,MAAM,0BAA4By4C,EAAO,KAcrD,YAAyBt0B,EAAQs0B,EAAM54C,MAEjC2yE,GAAcruD,IAAWsuD,GAAetuD,EAAQs0B,YAC3CA,GAAQ54C,EACRA,QAGH,IAAIG,MAAM,0BAA4By4C,EAAO,KAUrD,YAAwBt0B,EAAQs0B,YACzBt0B,GAA4B,iBAAXA,OAMlBq0B,GAAem6B,GAAsBl6B,MAMrCA,KAAQ5sB,OAAO5oB,cASfw1C,KAAQC,SAASz1C,YAgCvB,YAAsBkhB,EAAQyuD,UACxBzuD,MAAAA,GAAqE,mBAAnBA,EAAOyuD,OAOzDp6B,GAAer0B,EAAQyuD,IAAW/mD,OAAOwqB,gBAAkBu8B,KAAU/mD,OAAOwqB,eAAelyB,QAM3Fq0B,GAAeq6B,GAAmBD,MAMlCA,KAAU/mD,OAAO5oB,cASjB2vE,KAAUl6B,SAASz1C,aAUzB,YAAuBkhB,SACI,iBAAXA,GAAuBA,GAAUA,EAAOlkB,cAAgB4rB,OAGxE,IAAI8mD,GAAuB,CACzBtxE,QAAQ,EACR+4C,MAAM,GAEJy4B,GAAoB,CACtBxvE,UAAU,EACV+0C,SAAS,EACT06B,gBAAgB,GCnJPC,MAFA,SACQ,CAAC,QAAS,WACyCrnB,QAChEhR,MACFA,SACA3kC,GACE21C,SAoCGhR,EA1CE,SA0CU,CAEjBs4B,eAAgB,SAAoBnzE,EAAOE,OAErCwgE,EADIxqD,EAAOlW,GACA0gE,OAAOxgE,UAEfA,EAAMkhE,WAAaV,EAASA,EAAOnoB,WAE5C66B,gBAAiB,SAAqBpzE,EAAOE,UACpCF,EAAM0gE,OAAOxgE,IAEtBmzE,gBAAiBC,GACjBC,gBAAiBC,GAEjBC,oBAAqB,SAAuBzzE,EAAOE,EAAOygE,UACjDzqD,EAAOq4B,GAAMvuC,IAAQ0gE,OAAOxgE,EAAOygE,OAAa,GAAWpoB,WAEpEm7B,yBAA0B,SAA0B1zE,EAAOE,EAAOygE,EAAa5X,UACtE7yC,EAAOq4B,GAAMvuC,IAAQ0gE,OAAOxgE,EAAOygE,EAAa5X,GAAcxQ,WAEvEo7B,qBAAsB,SAAwB3zE,EAAOE,EAAOygE,UACnD3gE,EAAMuuC,QAAQmyB,OAAOxgE,EAAOygE,IAErCiT,0BAA2B,SAA2B5zE,EAAOE,EAAOygE,EAAa5X,UACxE/oD,EAAMuuC,QAAQmyB,OAAOxgE,EAAOygE,EAAa5X,IAElD8qB,wBAAyBC,GACzBC,gCAAiCD,GACjCE,qBAAsBC,QAW1B,YAAuBt4B,EAAKz7C,OACrB+2C,GAAQ/2C,SAEL,IAAIs4C,UAAU,qBAGM,IAAxBt4C,EAAMkgE,OAAO5+D,aACT,IAAIgnD,GAAetoD,EAAMkgE,OAAO5+D,OAAQ,OAI5C0yE,EAASv4B,EAAIn6C,UACHtB,EAAMgB,MAAM,GAAIgzE,MAChBh0E,EAAMiB,MAAM,GAAI+yE,OAC1BtvE,EAAQ1E,EAAMohE,UAAU,GACxB6S,EAAS,YACPn6B,SAAQ,SAAU35C,MACZs7C,EAAIn6B,OAAOnhB,MAEhB8zE,EAcT,YAAuBx4B,EAAKz7C,EAAOygE,EAAa5X,OACzC7oD,IAA2B,IAAlBA,EAAM+2C,cAEZ,IAAIuB,UAAU,qBAGM,IAAxBt4C,EAAMkgE,OAAO5+D,aACT,IAAIgnD,GAAetoD,EAAMkgE,OAAO5+D,OAAQ,WAG3B,IAAjBunD,MAC0B,iBAAjBA,GAAqD,IAAxBA,EAAavnD,aAC7C,IAAIg3C,UAAU,oDAGP,QAGb5zC,EAAQ1E,EAAMohE,UAAU,MAClB18D,EAAMw7D,OAAO,KAEXO,EAAYn/D,aAChB,IAAIgnD,GAAe5jD,EAAMw7D,OAAO,GAAIO,EAAYn/D,YAIpD0yE,EAASv4B,EAAIn6C,UACHtB,EAAMgB,MAAM,OACZhB,EAAMiB,MAAM,YAEtBizE,EAAQ,GAEH7wE,EAAI,EAAGA,EAAI2wE,EAAQ3wE,MACpBA,GAAKo4C,EAAIn6B,OAAOje,QAGlBy2C,SAAQ,SAAU35C,EAAGq5D,KACnBr5D,GAAKsgE,EAAYn/C,OAAOk4C,EAAE,OAG9B0a,EAAM5yE,OAAS0yE,UACR3N,EAAK2N,EAAS,EAAGG,EAAOD,EAAM5yE,OAAQ+kE,EAAK8N,EAAM9N,IACnD6N,EAAM7N,OACHA,GAAMxd,UAKXqrB,EAAM/5B,KAAK,IAWpB,YAA4B/1B,EAAQpkB,MACN,IAAxBA,EAAMkgE,OAAO5+D,aACT,IAAIgnD,GAAetoD,EAAMkgE,OAAQ,OAGrC18B,EAAMxjC,EAAMohE,UAAU,MAEP,iBAAR59B,QACH,IAAI8U,UAAU,kEAGf87B,GAAgBhwD,EAAQof,GAYjC,YAA4Bpf,EAAQpkB,EAAOygE,MACb,IAAxBzgE,EAAMkgE,OAAO5+D,aACT,IAAIgnD,GAAetoD,EAAMkgE,OAAQ,OAGrC18B,EAAMxjC,EAAMohE,UAAU,MAEP,iBAAR59B,QACH,IAAI8U,UAAU,+DAIlB+7B,EAAUhmC,GAAMjqB,aACJiwD,EAAS7wC,EAAKi9B,GACvB4T,ECpNT,IAEWC,MAFA,QACQ,CAAC,QAAS,SAAU,SAAU,cACoB3oB,QAC/DhR,MACFA,EACA6f,gBACAxkD,YACA41C,GACED,SAiCGhR,EAzCE,QAyCU,CACjB,GAAI,iBACuB,UAAlB/c,EAAO5nB,OAAqBu+D,EAAO,IAAMA,EAAO,GAAI,YAI7DC,iCAAkC,SAA+BnzD,MAG3C,iBAFTA,EAAKA,EAAK/f,OAAS,GAEA,KACxB6mE,EAAS9mD,EAAKigB,aACXizC,EAAOlzD,EAAM8mD,SACO,UAAlBvqC,EAAO5nB,OACTu+D,EAAOlzD,GAEPkzD,EAAOlzD,EAAM,YAGxByZ,MAAOy5C,EACPlU,OAAQ,SAAgBh/C,OAClB8mD,EAAS9mD,EAAKi/C,iBACXiU,EAAOlzD,EAAKg3B,UAAW8vB,IAEhCE,yBAA0B,SAA2BhnD,EAAM8mD,UAClDoM,EAAOlzD,EAAKg3B,UAAW8vB,iBAWlB9mD,EAAM8mD,OAGhBtf,WA0BcxnC,OACdozD,GAAgB,WACf36B,SAAQ,SAAUh6C,EAAOE,EAAO8uB,GAC/BunB,GAAYv2C,QACE,IACZE,GAASF,EAAM0sD,eAGhBioB,EApCa1G,CAAW1sD,GAEI,IAAIuqC,EAAU,GAAK,cAsCrCvqC,KACZy4B,SAAQ,SAAUh6C,MACA,iBAAVA,IAAuB8oD,GAAU9oD,IAAUA,EAAQ,QACtD,IAAIG,MAAM,8DAvCVohB,GAEN8mD,EAAQ,KAENvnE,EAAIoV,EAAOmyD,UAEX9mD,EAAK/f,OAAS,EACTV,EAAE8/D,OAAOr/C,EAAMwnC,GAGjBjoD,MAGHkuB,EAAM,UAENzN,EAAK/f,OAAS,EACTo/D,GAAO5xC,EAAKzN,EAAMwnC,GAGpB/5B,MCpGF4lD,MAFA,SACQ,CAAC,UACkD/oB,QAChEhR,MACFA,GACEgR,SAuGGhR,EA5GE,SA4GU,CACjBg6B,IAAKC,GACLC,kCAAmCD,QC3G5BE,MAFA,UACQ,CAAC,SAAU,aAAc,cAC2BnpB,QAEnE3Y,OAAQ+hC,YACRC,EACAjtB,YACE4D,EACAspB,EAAkB,CACpBp0D,QAAQ,EACRmyB,QAAQ,EACR4Y,WAAW,EACXG,UAAU,GAGRmpB,EAAmB,CACrBliC,UAAa+hC,EAAQp1E,GACrBisD,UAAWopB,KAAiBA,EAAUr1E,GAAKw1E,GAC3CppB,SAAUqpB,KAAgBA,EAASz1E,GAAK01E,WA+BnC,SAAiBv1E,EAAOw1E,OACzBC,EAAYtU,GAAOnhE,aAEJm1E,SACX,IAAI38B,UAAU,kBAAoBx4C,EAAQ,aAAey1E,EAAY,4BAA8BzpD,OAAOytB,KAAK07B,GAAiB96B,KAAK,iBAGzH+6B,SACZ,IAAI58B,UAAU,kBAAoBx4C,EAAQ,aAAew1E,EAAa,6BAA+BxpD,OAAOytB,KAAK27B,GAAkB/6B,KAAK,cAG5Im7B,IAAeC,EACVz1E,EAEAo1E,EAAiBI,GAAYx1E,OC9D/B01E,MAFA,eACQ,CAAC,QAAS,YAC+C7pB,QACtEhR,MACFA,EACA86B,WACE9pB,SAcGhR,EApBE,eAoBU,CACjBqpB,iBAAkB,SAAsBrkE,EAAGC,UAClCD,EAAIC,GAEbykE,mBAAoB,SAAwB1kE,EAAGC,UACtCD,EAAE8xD,IAAI7xD,IAEfskE,uBAAwB,SAA4BvkE,EAAGC,UAC9CD,EAAE8xD,IAAI7xD,IAEfwkE,qBAAsB,SAA0BzkE,EAAGC,UAC1CD,EAAE8xD,IAAI7xD,IAEf81E,sCAAuC,SAAqC/1E,EAAGC,OACzE48D,EAAM78D,EAAE0uC,QAER4jB,EAAM0jB,EAAQ,EAAG1U,GAAOrhE,aACxBE,MAAQD,KAAmB,OAAd28D,EAAI18D,MAAiB08D,EAAIuR,WAAW9b,GAAOuK,EAAI18D,MAAOF,GAChE48D,GAEToZ,sCAAuC,SAAqCj2E,EAAGC,OACzE48D,EAAM58D,EAAEyuC,UACNmuB,EAAI33D,YAENotD,EAAM0jB,EAAQ,EAAG1U,GAAOthE,aACxBG,MAAQD,KAAKF,EAAe,OAAZC,EAAEE,MAAiBF,EAAEmuE,WAAW9b,GAAOryD,EAAEE,OACtD08D,GAET+H,aAAc,SAAkB5kE,EAAGC,UAC1BD,EAAEyxD,OAAOxxD,SC7CXi2E,MAFA,MACQ,CAAC,QAAS,SAAU,WAAY,WAAY,SAAU,WAAY,SAAU,YAC5BlqB,QAC7DhR,MACFA,EACA6f,kBACA/jC,WACAqF,SACA9lB,SACAg9B,EACA+U,WACA8D,WACEF,SAkCGhR,EA9CE,MA8CU,CACjBqpB,iBAAkB8R,EAClBzR,mBAAoB,SAAwB1kE,EAAGC,UACtCD,EAAEkF,IAAIjF,IAEfskE,uBAAwB,SAA4BvkE,EAAGC,UACjDA,EAAEgpD,aAAejpD,GAAK,GAAKi+B,EAAOuY,YAC7Bx2C,EAAEkF,IAAIjF,GAEN,IAAI2sD,EAAQ5sD,EAAE6sD,WAAY,GAAG3nD,IAAIjF,EAAE4sD,WAAY,IAG1D4X,qBAAsB,SAA0BzkE,EAAGC,MACrC,IAARA,EAAE4Q,EAAS,IACTotB,EAAOuY,kBACH,IAAIl2C,MAAM,6EAET61E,EAAKn2E,EAAE04C,UAAWz4C,EAAEy4C,kBAGtB14C,EAAEkF,IAAIjF,IAGjBm2E,gBAAiBC,EACjBC,mBAAoB,SAAwBt2E,EAAGC,UACtCo2E,EAAUr2E,EAAGC,EAAE4sD,aAExB0pB,iBAAkBC,EAClBC,oBAAqB,SAAyBz2E,EAAGC,UACxCu2E,EAAWx2E,EAAGC,EAAE4sD,aAEzB6pB,2BAA4B,SAA6B12E,EAAGC,UACnDD,EAAEkF,IAAIjF,iBAWHD,EAAGC,MAGXg+B,EAAOuY,cAAgByS,GAAUhpD,IAAMD,EAAI,UAGvC22E,EAAQlB,EAASx1E,GACjB22E,EAAOvjC,EAAOsjC,OAEd12E,IAAM22E,GAAQx1E,KAAKa,OAAS20E,GAAQ32E,GAAK,QACvC02E,EAAM9lE,EAAI,GAAM,WACJ9M,EAAI,GAAM,EAAI,MAAU3C,KAAK8D,KAAKlF,EAAGC,SAGhD42E,WAQP54C,EAAOuY,oBAA0Bv2C,IAAMkjB,EAAAA,GAAYnjB,MAAUA,EAAI,GAAKC,UACjEqwD,IAGLrH,GAAUhpD,IAAMD,GAAK,GAAKi+B,EAAOuY,YAC5BqtB,GAAU7jE,EAAGC,GAKhBD,EAAIA,EAAI,GAAKC,IAAMkjB,EAAAA,GAAYnjB,EAAIA,EAAI,GAAKC,SACvC,EAGF,IAAI2sD,EAAQ5sD,EAAG,GAAGkF,IAAIjF,EAAG,cAYjBD,EAAGC,OACfgpD,GAAUhpD,IAAMA,EAAI,QACjB,IAAI04C,UAAU,mDAAqD14C,EAAI,SAI3EW,EAAI2/D,GAAKvgE,MAEI,IAAbY,EAAEe,aACE,IAAIrB,MAAM,2CAA6CM,EAAEe,OAAS,mBAGtEf,EAAE,KAAOA,EAAE,SACP,IAAIN,MAAM,sCAAwCM,EAAE,GAAK,IAAMA,EAAE,GAAK,aAG1Ei8D,EAAM/lC,EAASl2B,EAAE,IAAI83C,UACrBwb,EAAKl0D,EAEFC,GAAK,GACM,IAAP,SACDk8B,EAAS+3B,EAAI2I,QAGf,IACD1gC,EAAS+3B,EAAIA,UAGb2I,aAWW78D,EAAGC,UACdoW,EAAOggE,EAAUr2E,EAAE04C,UAAWz4C,QCrLzC,YAAiBwkB,EAAQqyD,OAAsBl9B,EAAOztB,OAAOytB,KAAKn1B,MAAa0H,OAAO4qD,sBAAuB,KAAMC,EAAU7qD,OAAO4qD,sBAAsBtyD,GAAaqyD,MAA0BE,EAAQx6B,QAAO,SAAUy6B,UAAc9qD,OAAO+qD,yBAAyBzyD,EAAQwyD,GAAKx9B,iBAAqB1pB,KAAKmQ,MAAM0Z,EAAMo9B,UAAmBp9B,EAE9U,YAAuB9nC,WAAmBpO,EAAI,EAAGA,EAAIyL,UAAUxN,OAAQ+B,IAAK,KAAMyhE,EAAyB,MAAhBh2D,UAAUzL,GAAayL,UAAUzL,GAAK,GAAQA,EAAI,KAAayoB,OAAOg5C,IAAS,GAAMhrB,SAAQ,SAAUtW,MAAuB/xB,EAAQ+xB,EAAKshC,EAAOthC,OAAsB1X,OAAOgrD,iCAAoCC,iBAAiBtlE,EAAQqa,OAAOgrD,0BAA0BhS,OAA2Bh5C,OAAOg5C,IAAShrB,SAAQ,SAAUtW,UAAc0V,eAAeznC,EAAQ+xB,EAAK1X,OAAO+qD,yBAAyB/R,EAAQthC,cAAsB/xB,EAE7gB,YAAyBo1B,EAAKrD,EAAK1jC,UAAa0jC,KAAOqD,SAAcqS,eAAerS,EAAKrD,EAAK,CAAE1jC,MAAAA,EAAcs5C,YAAY,EAAMD,cAAc,EAAM69B,UAAU,MAAsBxzC,GAAO1jC,EAAgB+mC,EAS3M,IAAIowC,GAAS,0DAGFC,MAFA,QACQ,CAAC,QAAS,SAAU,cAAe,QAAS,YAAa,gBACPvrB,QAC/DhR,MACFA,SACA3kC,cACA4uD,EACAle,kBACAkF,cACAE,GACEH,EACAke,EAAclB,GAAkB,CAClChuB,MAAAA,EACAiqB,YAAAA,IAEEkI,EAAcL,GAAkB,CAClC9xB,MAAAA,EACAmR,YAAAA,IAEEge,EAAcV,GAAkB,CAClCzuB,MAAAA,WAsCKA,EA1DE,QA0DUw8B,GAAcA,GAAc,GAAIC,IAAwB,GAAI,CAC7EvrB,QAAS,SAAiBlsD,UACjBA,EAAE+B,SAEXsoE,kBAAmB,SAAuBrqE,EAAG+D,MACvCA,EAAI,QACA,IAAI40C,UAAU2+B,WAGft3E,EAAE+B,MAAMgC,IAEjB2zE,qBAAsB,SAA0B13E,EAAG+D,OAC5CA,EAAEklD,kBACC,IAAItQ,UAAU2+B,QAGlBK,EAAK5zE,EAAE8oD,kBAEJ7sD,EAAE+B,MAAM41E,IAEjBC,oBAAqB,SAAyB53E,EAAG+D,OAC1CA,EAAEklD,kBACC,IAAItQ,UAAU2+B,WAGf,IAAIrrB,EAAUjsD,GAAGg2D,gBAAgBjyD,EAAE8oD,aAE5CZ,UAAW,SAAmBjsD,UACrBA,EAAEg2D,gBAAgB,IAE3BuO,uBAAwB,SAA4BvkE,EAAG+D,OAChDA,EAAEklD,kBACC,IAAItQ,UAAU2+B,WAGft3E,EAAEg2D,gBAAgBjyD,EAAE8oD,aAE7BT,SAAU,SAAkBpsD,UACnBA,EAAE+B,SAEXuoE,mBAAoB,SAAwBtqE,EAAG+D,MACzCA,EAAI,QACA,IAAI40C,UAAU2+B,WAGft3E,EAAE+B,MAAMgC,IAEjBmgE,iBAAkB,SAAqBlkE,UAE9BojE,GAAQpjE,EAAGE,OAEpBsqE,mCAAoC,SAAqCxqE,EAAGC,UACnEiqE,EAAYlqE,EAAGC,EAAGC,MAAM,IAEjCuqE,kCAAmC,SAAoCzqE,EAAGC,UACjEkqE,EAAYnqE,EAAGC,EAAGC,MAAM,IAEjC23E,6CAA8C,SAA4C73E,EAAGC,UAEvFglE,EAAYjlE,EAAG,GAEVknD,EAAMjnD,EAAEsgE,OAAQtgE,EAAE0gE,WAGpBwM,EAAYltE,EAAGD,EAAGE,MAAM,IAEjC43E,4CAA6C,SAA2C93E,EAAGC,UAErFglE,EAAYjlE,EAAG,GAEVknD,EAAMjnD,EAAEsgE,OAAQtgE,EAAE0gE,WAGpBwJ,EAAYlqE,EAAGD,EAAGE,MAAM,IAEjC63E,4BAA6B,SAA8B/3E,EAAGC,UAErDkqE,EAAY9zD,EAAOrW,GAAIC,EAAGC,MAAM,GAAOw4C,WAEhDgyB,sCAAuC,SAAqC1qE,EAAGC,UAEtEkqE,EAAY9zD,EAAOpW,GAAID,EAAGE,MAAM,GAAMw4C,iBAI/C++B,GAAwB,CAC1BpkC,OAAQywB,GACRO,iBAAkB,SAAsBrkE,EAAG+D,OACpCklD,GAAUllD,SACP,IAAI40C,UAAU2+B,OAGlBvzE,EAAI,GAAKA,EAAI,SACT,IAAIzD,MAAM,2EAGXwjE,GAAY9jE,EAAG+D,KChKfi0E,MAFA,QACQ,CAAC,QAAS,SAAU,cAAe,gBACehsB,QAC/DhR,MACFA,SACA3kC,cACA4uD,cACA9Y,GACEH,EACAihB,EAAcR,GAAkB,CAClCzxB,MAAAA,IAEEi9B,EAAcvH,GAAkB,CAClC11B,MAAAA,EACAmR,YAAAA,IAEEghB,EAAcL,GAAkB,CAClC9xB,MAAAA,EACAmR,YAAAA,IAEEihB,EAAchB,GAAkB,CAClCpxB,MAAAA,IAEEmvB,EAAcV,GAAkB,CAClCzuB,MAAAA,WA+CKA,EAvEE,QAuEU,CACjBm1B,WAAY,SAAgBnwE,EAAGC,UAEnB,OAAND,EACW,OAANC,EAGC,OAANA,EACW,OAAND,OAGC,IAANA,OACW,IAANC,OAGC,IAANA,OACW,IAAND,EAGFilE,EAAYjlE,EAAGC,IAExBotE,6BAA8B,SAAkCrtE,EAAGC,UAC1Dg4E,EAAYj4E,EAAGC,EAAGglE,IAE3BqI,4BAA6B,SAAiCttE,EAAGC,UACxDgtE,EAAYhtE,EAAGD,EAAGilE,GAAa,IAExCsI,4BAA6B,SAAiCvtE,EAAGC,UACxDgtE,EAAYjtE,EAAGC,EAAGglE,GAAa,IAExCuI,2BAA4B,SAAgCxtE,EAAGC,UACtDmtE,EAAYptE,EAAGC,EAAGglE,IAE3BwI,eAAgB,SAAoBztE,EAAGC,UAE9BC,KAAKmW,EAAOrW,GAAIqW,EAAOpW,IAAIy4C,WAEpCg1B,gBAAiB,SAAqB1tE,EAAGC,UAEhCC,KAAKmW,EAAOrW,GAAIC,IAEzB0tE,gBAAiB,SAAqB3tE,EAAGC,UAEhCC,KAAKF,EAAGqW,EAAOpW,KAExB2tE,oBAAqB,SAAyB5tE,EAAGC,UACxCktE,EAAYntE,EAAGC,EAAGglE,GAAa,IAExC4I,mBAAoB,SAAwB7tE,EAAGC,UACtCkqE,EAAYnqE,EAAGC,EAAGglE,GAAa,IAExC6I,oBAAqB,SAAyB9tE,EAAGC,UACxCktE,EAAYltE,EAAGD,EAAGilE,GAAa,IAExC8I,mBAAoB,SAAwB/tE,EAAGC,UACtCkqE,EAAYlqE,EAAGD,EAAGilE,GAAa,IAExC+I,aAAc,SAAkBhuE,EAAGC,UAE1BkqE,EAAY9zD,EAAOrW,GAAIC,EAAGglE,GAAa,GAAOvsB,WAEvDu1B,aAAc,SAAkBjuE,EAAGC,UAE1BkqE,EAAY9zD,EAAOpW,GAAID,EAAGilE,GAAa,GAAMvsB,gBAI3BosB,GA1IpB,QA0IkC,CAAC,QAAS,gBAAiBC,QAClE/pB,MACFA,cACAiqB,GACEF,SACG/pB,EA/IE,QA+IU,CACjBm1B,WAAY,SAAgBnwE,EAAGC,UAEnB,OAAND,EACW,OAANC,EAGC,OAANA,EACW,OAAND,OAGC,IAANA,OACW,IAANC,OAGC,IAANA,OACW,IAAND,EAGFilE,EAAYjlE,EAAGC,SChK5B,IAEWi4E,MAFA,UACQ,CAAC,QAAS,SAAU,SAAU,gBACsBlsB,QACjEhR,MACFA,EACA6f,gBACAxkD,cACA81C,GACEH,EACAihB,EAAcR,GAAkB,CAClCzxB,MAAAA,IAEEi9B,EAAcvH,GAAkB,CAClC11B,MAAAA,EACAmR,YAAAA,IAEEghB,EAAcL,GAAkB,CAClC9xB,MAAAA,EACAmR,YAAAA,IAEEihB,EAAchB,GAAkB,CAClCpxB,MAAAA,IAEEmvB,EAAcV,GAAkB,CAClCzuB,MAAAA,WAkCKA,EA1DE,UA0DU,CACjBopB,mBAAoB,SAAwBpkE,EAAGC,UACtCD,EAAIC,GAEbokE,iBAAkB,SAAsBrkE,EAAGC,UAClCD,EAAIC,IAAMqkE,GAAYtkE,EAAGC,EAAGg+B,EAAOxvB,UAE5C81D,uBAAwB,SAA4BvkE,EAAGC,UAC9CD,EAAEkiC,GAAGjiC,KAAOukE,GAAexkE,EAAGC,EAAGg+B,EAAOxvB,UAEjDg2D,qBAAsB,SAA0BzkE,EAAGC,cAC1CD,EAAEg4D,QAAQ/3D,IAEnBykE,mBAAoB,SAAwB1kE,EAAGC,SACvC,IAAI04C,UAAU,wDAEtBisB,aAAc,SAAkB5kE,EAAGC,OAC5BD,EAAE6kE,UAAU5kE,SACT,IAAIK,MAAM,mDAGXJ,KAAKF,EAAEG,MAAOF,EAAEE,QAEzBktE,6BAA8B,SAAkCrtE,EAAGC,UAC1Dg4E,EAAYj4E,EAAGC,EAAGC,OAE3BotE,4BAA6B,SAAiCttE,EAAGC,UACxDgtE,EAAYhtE,EAAGD,EAAGE,MAAM,IAEjCqtE,4BAA6B,SAAiCvtE,EAAGC,UACxDgtE,EAAYjtE,EAAGC,EAAGC,MAAM,IAEjCstE,2BAA4B,SAAgCxtE,EAAGC,UACtDmtE,EAAYptE,EAAGC,EAAGC,OAE3ButE,eAAgB,SAAoBztE,EAAGC,UAE9BC,KAAKmW,EAAOrW,GAAIqW,EAAOpW,IAAIy4C,WAEpCg1B,gBAAiB,SAAqB1tE,EAAGC,UAEhCC,KAAKmW,EAAOrW,GAAIC,IAEzB0tE,gBAAiB,SAAqB3tE,EAAGC,UAEhCC,KAAKF,EAAGqW,EAAOpW,KAExB2tE,oBAAqB,SAAyB5tE,EAAGC,UACxCktE,EAAYntE,EAAGC,EAAGC,MAAM,IAEjC2tE,mBAAoB,SAAwB7tE,EAAGC,UACtCkqE,EAAYnqE,EAAGC,EAAGC,MAAM,IAEjC4tE,oBAAqB,SAAyB9tE,EAAGC,UACxCktE,EAAYltE,EAAGD,EAAGE,MAAM,IAEjC6tE,mBAAoB,SAAwB/tE,EAAGC,UACtCkqE,EAAYlqE,EAAGD,EAAGE,MAAM,IAEjC8tE,aAAc,SAAkBhuE,EAAGC,UAE1BkqE,EAAY9zD,EAAOrW,GAAIC,EAAGC,MAAM,GAAOw4C,WAEhDu1B,aAAc,SAAkBjuE,EAAGC,UAE1BkqE,EAAY9zD,EAAOpW,GAAID,EAAGE,MAAM,GAAMw4C,gBCzHxCy/B,MAFA,SACQ,CAAC,QAAS,SAAU,SAAU,gBACqBnsB,QAChEhR,MACFA,EACA6f,gBACAxkD,cACA81C,GACEH,EACAihB,EAAcR,GAAkB,CAClCzxB,MAAAA,IAEEi9B,EAAcvH,GAAkB,CAClC11B,MAAAA,EACAmR,YAAAA,IAEEghB,EAAcL,GAAkB,CAClC9xB,MAAAA,EACAmR,YAAAA,IAEEihB,EAAchB,GAAkB,CAClCpxB,MAAAA,IAEEmvB,EAAcV,GAAkB,CAClCzuB,MAAAA,WAkCKA,EA1DE,SA0DU,CACjBopB,mBAAoB,SAAwBpkE,EAAGC,UACtCD,EAAIC,GAEbokE,iBAAkB,SAAsBrkE,EAAGC,UAClCD,EAAIC,IAAMqkE,GAAYtkE,EAAGC,EAAGg+B,EAAOxvB,UAE5C81D,uBAAwB,SAA4BvkE,EAAGC,UAC9CD,EAAEiiC,GAAGhiC,KAAOukE,GAAexkE,EAAGC,EAAGg+B,EAAOxvB,UAEjDg2D,qBAAsB,SAA0BzkE,EAAGC,UACzB,IAAjBD,EAAEg4D,QAAQ/3D,IAEnBykE,mBAAoB,iBACZ,IAAI/rB,UAAU,wDAEtBisB,aAAc,SAAkB5kE,EAAGC,OAC5BD,EAAE6kE,UAAU5kE,SACT,IAAIK,MAAM,mDAGXJ,KAAKF,EAAEG,MAAOF,EAAEE,QAEzBktE,6BAA8B,SAAkCrtE,EAAGC,UAC1Dg4E,EAAYj4E,EAAGC,EAAGC,OAE3BotE,4BAA6B,SAAiCttE,EAAGC,UACxDgtE,EAAYhtE,EAAGD,EAAGE,MAAM,IAEjCqtE,4BAA6B,SAAiCvtE,EAAGC,UACxDgtE,EAAYjtE,EAAGC,EAAGC,MAAM,IAEjCstE,2BAA4B,SAAgCxtE,EAAGC,UACtDmtE,EAAYptE,EAAGC,EAAGC,OAE3ButE,eAAgB,SAAoBztE,EAAGC,UAE9BC,KAAKmW,EAAOrW,GAAIqW,EAAOpW,IAAIy4C,WAEpCg1B,gBAAiB,SAAqB1tE,EAAGC,UAEhCC,KAAKmW,EAAOrW,GAAIC,IAEzB0tE,gBAAiB,SAAqB3tE,EAAGC,UAEhCC,KAAKF,EAAGqW,EAAOpW,KAExB2tE,oBAAqB,SAAyB5tE,EAAGC,UACxCktE,EAAYntE,EAAGC,EAAGC,MAAM,IAEjC2tE,mBAAoB,SAAwB7tE,EAAGC,UACtCkqE,EAAYnqE,EAAGC,EAAGC,MAAM,IAEjC4tE,oBAAqB,SAAyB9tE,EAAGC,UACxCktE,EAAYltE,EAAGD,EAAGE,MAAM,IAEjC6tE,mBAAoB,SAAwB/tE,EAAGC,UACtCkqE,EAAYlqE,EAAGD,EAAGE,MAAM,IAEjC8tE,aAAc,SAAkBhuE,EAAGC,UAE1BkqE,EAAY9zD,EAAOrW,GAAIC,EAAGC,MAAM,GAAOw4C,WAEhDu1B,aAAc,SAAkBjuE,EAAGC,UAE1BkqE,EAAY9zD,EAAOpW,GAAID,EAAGE,MAAM,GAAMw4C,gBChIxC0/B,MAFA,gBACQ,CAAC,UAAW,WACmDpsB,QAC5EqsB,QACFA,SACAC,GACEtsB,EACAusB,EAAgB,EAAMn3E,KAAK+D,OAAW/D,KAAKY,KAAK,IAAQ,qCAQpCw2E,SACd,IAAIl7B,YAAY,yDAInBm7B,SAAW,UACX9uC,MAAQ,aA8LD6oC,EAAS5+C,EAAMqI,KAEtBnmB,KAAKC,MAAQ6d,EAAK7d,QAClBA,MAAMD,KAAO8d,EAAK9d,OAChB+sB,SAEH5G,EAAOO,QAAU5I,MACZ4I,MAAQ5I,EAAK7d,OAIA,IAAlBkmB,EAAO4G,WACFrG,MAAQ,QAIZ1mB,KAAO08D,IACPz8D,MAAQy8D,EAAQz8D,QACbA,MAAQ6d,IACX7d,MAAMD,KAAO8d,IAEbqI,OAAS,OAET4vC,MAAO,aAUS2G,EAAS5+C,OAE1BqI,EAASrI,EAAKqI,OAEbA,IAKArI,EAAKi4C,QAIH2G,EAAS5+C,EAAMqI,KAGNA,MANT4vC,MAAO,KAlOFtoE,UAAU6/B,KAAO,kBACjB7/B,UAAUm1E,iBAAkB,IAQ5Bn1E,UAAUo1E,OAAS,SAAU90C,EAAK1jC,OAE1CyzB,EAAO,CACTiQ,IAAAA,EACA1jC,MAAAA,EACA0iC,OAAQ,MAGN3iC,KAAKu4E,SAAU,KAEbjG,EAAUtyE,KAAKu4E,WAEd3iE,KAAO08D,IACPz8D,MAAQy8D,EAAQz8D,QACbA,MAAQ6d,IACX7d,MAAMD,KAAO8d,EAEdykD,EAAQx0C,EAAK2uC,EAAQ3uC,YAElB40C,SAAW7kD,UAIb9d,KAAO8d,IACP7d,MAAQ6d,OAER6kD,SAAW7kD,cAIb+V,QAEE/V,KAQKrwB,UAAUg9D,KAAO,kBACtBrgE,KAAKypC,SAQApmC,UAAU68B,MAAQ,gBACzBq4C,SAAW,UACX9uC,MAAQ,KAQDpmC,UAAUogB,QAAU,kBACV,IAAfzjB,KAAKypC,SASApmC,UAAUq1E,eAAiB,eAEnChlD,EAAO1zB,KAAKu4E,YAEH,OAAT7kD,SACKA,UAIL4+C,EAAUtyE,KAAKu4E,SAEfI,EAAmBjlD,EAAKiP,OAExB7iC,EAAI4zB,EAAK4I,MAENq8C,EAAmB,GAAG,KAEvBC,EAAY94E,EAAE+V,QAEhBD,KAAKC,MAAQ/V,EAAE+V,QACfA,MAAMD,KAAO9V,EAAE8V,OAEfA,KAAO08D,IACPz8D,MAAQy8D,EAAQz8D,QACVA,MAAQ/V,IACd+V,MAAMD,KAAO9V,IAEbi8B,OAAS,OACP68C,eAKDhjE,KAAKC,MAAQ6d,EAAK7d,QAClBA,MAAMD,KAAO8d,EAAK9d,OAEnB8d,IAASA,EAAK7d,MAEN,cAqJYy8D,EAAS9wD,OAoB7BzhB,EAlBA84E,EAAY33E,KAAKS,MAAMT,KAAK+D,IAAIuc,GAAQ62D,GAAiB,EAEzD51E,EAAQ,IAAIw4B,MAAM49C,GAElBC,EAAW,EACXh5E,EAAIwyE,KAEJxyE,YAEEA,EAAE+V,MAEC/V,IAAMwyE,SAEPxyE,EAAE+V,WAOHijE,EAAW,GAAG,SAEfnoE,EAAI7Q,EAAE6iC,OAEN0nB,EAAOvqD,EAAE+V,QAIPpT,EAAMkO,IAFC,IASPynE,EAAOt4E,EAAE6jC,IAAK5jC,EAAE4jC,KAAM,KACpBmzB,EAAO/2D,IACPD,IACAg3D,IAIK/2D,EAAGD,KAGR6Q,GAAK,WAKPA,GAAK7Q,IAEPuqD,QAKI,aAED7mD,EAAI,EAAGA,EAAIq1E,EAAWr1E,OAEzBf,EAAMe,MAON8uE,KAEA18D,KAAKC,MAAQ9V,EAAE8V,QACfA,MAAMD,KAAO7V,EAAE6V,OAEfA,KAAO08D,IACPz8D,MAAQy8D,EAAQz8D,QACVA,MAAQ9V,IACd8V,MAAMD,KAAO7V,EAEXo4E,EAAQp4E,EAAE4jC,IAAK2uC,EAAQ3uC,SACf5jC,MAGFA,UAIPuyE,EAxOKyG,GAFArlD,EAAK7d,MAEqB7V,KAAKypC,YAItCA,aAEA8uC,SAAWjG,EAET5+C,KAWKrwB,UAAU21E,OAAS,SAAUtlD,QAEpC6kD,kBAYejG,EAAS5+C,EAAMiQ,KAE9BA,IAAMA,MAEP5H,EAASrI,EAAKqI,OAEdA,GAAUo8C,EAAQzkD,EAAKiQ,IAAK5H,EAAO4H,SAEhC2uC,EAAS5+C,EAAMqI,KAGNu2C,EAASv2C,IAIrBo8C,EAAQzkD,EAAKiQ,IAAK2uC,EAAQ3uC,SAClBjQ,UAIL4+C,EAhCS2G,CAAaj5E,KAAKu4E,SAAU7kD,WAEvCglD,sBAiGHQ,EAAa,SAAoBxlD,EAAMqI,KAEpCnmB,KAAKC,MAAQ6d,EAAK7d,QAClBA,MAAMD,KAAO8d,EAAK9d,OAElBmmB,OAASA,EAETA,EAAOO,SAKL1mB,KAAOmmB,EAAOO,QACdzmB,MAAQkmB,EAAOO,MAAMzmB,QACnBymB,MAAMzmB,MAAQ6d,IAChB7d,MAAMD,KAAO8d,MAPX4I,MAAQ5I,IACV7d,MAAQ6d,IACR9d,KAAO8d,KASPiP,WAEFgpC,MAAO,UA8FP2M,IACN,CACDjrB,SAAS,IChYA8rB,MAFA,MACQ,CAAC,YAAa,cAAe,kBACwBrtB,QAClEloC,UACFA,cACAmhD,gBACAuT,GACExsB,oCAOoBstB,SACd,IAAIh8B,YAAY,yDAInB8nB,QAAU,QACVmU,MAAQ,IAAIf,WAOfj1E,UAAU6/B,KAAO,QACjB7/B,UAAUi2E,OAAQ,IAQlBj2E,UAAU0C,IAAM,SAAUvC,EAAGlD,MAE1BN,KAAKklE,QAAQ1hE,QAQX0hE,QAAQ1hE,GAAGvD,MAAQK,MARJ,KAEhBozB,EAAO1zB,KAAKq5E,MAAMZ,OAAOj1E,EAAGlD,QAG3B4kE,QAAQ1hE,GAAKkwB,MAOlBrwB,UAAUowB,IAAM,SAAUjwB,OACxBkwB,EAAO1zB,KAAKklE,QAAQ1hE,UAEpBkwB,EACKA,EAAKzzB,MAGP,KAGLoD,UAAUk2E,WAAa,SAAU/1E,EAAGlD,OAElCozB,EAAO1zB,KAAKklE,QAAQ1hE,GAEnBkwB,IAOEzzB,MAAQ2jB,EAAU8P,EAAKzzB,MAAOK,MAL5BN,KAAKq5E,MAAMZ,OAAOj1E,EAAGlD,QAEvB4kE,QAAQ1hE,GAAKkwB,MAOlBrwB,UAAU42C,QAAU,SAAU3L,EAAMD,EAAIljC,OAEtCquE,EAAOx5E,KAAKq5E,MACZn/B,EAASl6C,KAAKklE,QAEduU,EAAQ,GAER/lD,EAAO8lD,EAAKd,qBAEZhlD,KACI7D,KAAK6D,GAINA,GAAQA,EAAKiQ,KAAO0K,GAErB3a,EAAKiQ,KAAO2K,IAETy2B,EAAYrxC,EAAKzzB,MAAO,MAElByzB,EAAKiQ,IAAKjQ,EAAKzzB,MAAOD,UAK5Bw5E,EAAKd,qBAGJ7oD,KAAK6D,WAKNlwB,EAAI,EAAGA,EAAIi2E,EAAMh4E,OAAQ+B,IAAK,KAEjCK,EAAI41E,EAAMj2E,QAEPg2E,EAAKf,OAAO50E,EAAE8/B,IAAK9/B,EAAE5D,QAEhB0jC,KAAOjQ,MAInBrwB,UAAUq2E,KAAO,SAAUl2E,EAAGkjB,OAE5BizD,EAAQ35E,KAAKklE,QAAQ1hE,GACrBo2E,EAAQ55E,KAAKklE,QAAQx+C,OAEpBizD,GAASC,IAEJ55E,KAAKq5E,MAAMZ,OAAOj1E,EAAGo2E,EAAM35E,YAE9Bo5E,MAAML,OAAOY,QAGb1U,QAAQ1hE,GAAKm2E,OACbzU,QAAQx+C,QAAK,UACTizD,IAAUC,IAEX55E,KAAKq5E,MAAMZ,OAAO/xD,EAAGizD,EAAM15E,YAE9Bo5E,MAAML,OAAOW,QAGbzU,QAAQx+C,GAAKkzD,OACb1U,QAAQ1hE,QAAK,UACTm2E,GAASC,EAAO,KAErBt5E,EAAIq5E,EAAM15E,QACRA,MAAQ25E,EAAM35E,QACdA,MAAQK,IAIX84E,IACN,CACD/rB,SAAS,ICjJmBp9B,IAAQ,SAAU87B,UACvC,IAAIA,EAAU,GAAGtnD,QACvB,CACDysE,OAAAA,KAQ8BjhD,IAAQ,SAAU87B,UACzC,IAAIA,EAAU,GAAG+E,KAAK,IAAI/E,EAAU,GAAGjqD,QAAQ8vD,IAAI,KACzD,CACDsf,OAAAA,KAQK,IAAI2I,GAAoB5pD,IAAQ,SAAU87B,UACxCA,EAAUtiD,WAChB,CACDynE,OAAAA,KAsBF,YAAgBjzB,UACPA,EAAK,GAAG5H,UCvDjB,wBAAiCpqB,OAAO+R,QAAU,SAAUpsB,WAAmBpO,EAAI,EAAGA,EAAIyL,UAAUxN,OAAQ+B,IAAK,KAAMyhE,EAASh2D,UAAUzL,WAAamgC,KAAOshC,EAAch5C,OAAO5oB,UAAUu1C,eAAea,KAAKwrB,EAAQthC,OAAeA,GAAOshC,EAAOthC,WAAmB/xB,IAA2BouB,MAAMhgC,KAAMiP,WAEhT,YAAiBsV,EAAQqyD,OAAsBl9B,EAAOztB,OAAOytB,KAAKn1B,MAAa0H,OAAO4qD,sBAAuB,KAAMC,EAAU7qD,OAAO4qD,sBAAsBtyD,GAAaqyD,MAA0BE,EAAQx6B,QAAO,SAAUy6B,UAAc9qD,OAAO+qD,yBAAyBzyD,EAAQwyD,GAAKx9B,iBAAqB1pB,KAAKmQ,MAAM0Z,EAAMo9B,UAAmBp9B,EAE9U,YAAuB9nC,WAAmBpO,EAAI,EAAGA,EAAIyL,UAAUxN,OAAQ+B,IAAK,KAAMyhE,EAAyB,MAAhBh2D,UAAUzL,GAAayL,UAAUzL,GAAK,GAAQA,EAAI,KAAayoB,OAAOg5C,IAAS,GAAMhrB,SAAQ,SAAUtW,MAAuB/xB,EAAQ+xB,EAAKshC,EAAOthC,OAAsB1X,OAAOgrD,iCAAoCC,iBAAiBtlE,EAAQqa,OAAOgrD,0BAA0BhS,OAA2Bh5C,OAAOg5C,IAAShrB,SAAQ,SAAUtW,UAAc0V,eAAeznC,EAAQ+xB,EAAK1X,OAAO+qD,yBAAyB/R,EAAQthC,cAAsB/xB,EAE7gB,YAAyBo1B,EAAKrD,EAAK1jC,UAAa0jC,KAAOqD,SAAcqS,eAAerS,EAAKrD,EAAK,CAAE1jC,MAAAA,EAAcs5C,YAAY,EAAMD,cAAc,EAAM69B,UAAU,MAAsBxzC,GAAO1jC,EAAgB+mC,EDkC3K/W,IAAQ,SAAU87B,UACzC8tB,GAAkB9tB,GAAW4E,MAAM,KACzC,CACDugB,OAAAA,KC7BF,IAEW4I,MAFA,OACQ,CAAC,MAAO,SAAU,YAAa,WAAY,iBAAkB,eAAgB,MAAO,MAAO,MAAO,QAAS,QAAS,YAAa,SAAU,SAAU,UAAW,YAAa,aACvHhuB,QAyFnElE,EAAMznD,EAAO6C,GAxFbi4D,GACFA,EACAN,mBACA/2C,WACAm2D,iBACAj5E,eACAY,EACAsD,MACAjD,UACAi4E,EACAn4E,cACAo4E,YACAC,EACA5xB,gBACAnV,EACA6Y,UACAD,UAAWouB,EACXjuB,SAAUkuB,GACRtuB,EACAa,EAAWxZ,aAqBDlzC,EAAOmhB,wBACG0mD,SACd,IAAI1nE,MAAM,iEAG6B85E,EAAUj6E,KAAUy2C,GAAUz2C,SACrE,IAAIw4C,UAAU,0GAGT,IAATr3B,IAAuC,iBAATA,GAA8B,KAATA,SAC/C,IAAIq3B,UAAU,iEAGT,IAATr3B,EAAoB,KAClB6M,EAAI65C,EAAKv1B,MAAMnxB,QACdi5D,MAAQpsD,EAAEosD,WACVC,WAAarsD,EAAEqsD,eACf,MACAD,MAAQ,CAAC,CACZnoC,KAAMqoC,EACNC,OAAQC,EAASC,KAEjB1vC,MAAO,SAEJsvC,WAAa,WAET92E,EAAI,EAAGA,EAAIm3E,EAAgBl5E,OAAQ+B,SACrC82E,WAAW92E,GAAK,OAIpBvD,MAAQA,MAAAA,EAAwCD,KAAKkuE,WAAWjuE,GAAS,UACzE4oE,WAAY,OAMZ+R,6BAA8B,oBAatB,MAAN53E,GAAmB,OAANA,kBASLqF,UACRA,GAAK,KAAOA,GAAK,uBAKpBu/C,EAAKnmC,OAAOthB,cAGF4wE,KACNA,IACJnpB,EAAKnmC,OAAOthB,oBAfEkI,EAmBdwyE,EAAS,GACT9J,EAAW5wE,KAEL,MAAN6C,MAEa,MAANA,OACCA,UAzBMqF,EA6BFrF,IA5BJ,KAAOqF,GAAK,KAAa,MAANA,YA8BtB0oE,GACA,QAIC,MAAN/tE,SACQA,OAGL83E,EAAQ93E,YAEJ+tE,GACA,SAEJ,MACE+J,EAAQ93E,OACHA,MAIF,MAANA,OACQA,YAKP83E,EAAQ93E,OACHA,SAKF,MAANA,GAAmB,MAANA,EAAW,KAEtB+3E,EAAkB,GAClBC,EAAiB76E,QACF6C,MAGT,MAANA,GAAmB,MAANA,OACIA,QAKhB83E,EAAQ93E,YAEJg4E,GACAH,SAISE,EAEXD,EAAQ93E,OACHA,aAKP63E,uBAIHI,EAAW,GAERH,EAAQ93E,IAAM8kE,EAAKoT,aAAal4E,OACzBA,UAKVm4E,EAASF,EAASx5D,OAAO,UAEzBqmD,EAAKoT,aAAaC,GACbF,EAEA,gBAIaG,UAClBp4E,IAAMo4E,OAEDA,GAEA,OAhIN/3E,UAAU6/B,KAAO,SACjB7/B,UAAUuzC,QAAS,IA8InBrE,MAAQ,SAAUqJ,EAAKpO,QAChBA,GAAW,UAGjB,GAEgB,mBAJboO,SAKC,IAAInD,UAAU,uDAGlB4iC,EAAO,IAAIvT,IACVuS,MAAQ,OACTiB,EAAyB,EACzBC,GAAgB,cAgBhB/zB,EAAWg0B,IACXv7E,EAAQ,QAERunD,EAAU,IACU,cAAlBzpB,EAAOoV,SACD,IAAIgnC,EAAW3yB,WACI,aAAlBzpB,EAAOoV,aAGN,IAAIinC,EAAU5yB,SACfhJ,KACCv9B,WAAWumC,UAIbvmC,WAAWumC,OAMjBi0B,EAAe,QACQ,KACT,GACPA,EAAe,eAER,WAKhBC,EAAuB,GAEvBC,EAA8B,IAErB,SAIE,MAAN34E,KACgB6sB,KAAKyrD,MACKA,IACN,cAMvBM,OAAO,MAEP54E,YACE64E,EAAO74E,KAGE,UAFN84E,WAGC,IAAI1+B,YAAY,eAAiBy+B,EAAO,SAAWj0B,EAAO,cAAgBznD,EAAMsD,gBAQtFk5D,EAAMof,EAAUH,MAER,OAARjf,QAEI,IAAIvf,YAAY,SAAWw+B,EAAO,oBAGtC5wC,EAAQswC,EAAyBK,SAIjCF,EAAe,KAAM,SAEnBzxE,EAAIwxE,OAEE,OAANxxE,QAEI,IAAIozC,YAAY,OAASxB,EAAM,yDAG9B5xC,IAINqwE,MAAMxqD,KAAK,CACdqiB,KAAMyqB,EAAIzqB,KACVsoC,OAAQ7d,EAAI6d,OACZxvC,MAAAA,YAGOxnC,EAAI,EAAGA,EAAIm3E,EAAgBl5E,OAAQ+B,MACrC82E,WAAW92E,OAAW0uC,KAAKooC,WAAW92E,IAAM,GAAKwnC,UAO3C,MAANhoC,GAAW,IACoB,IAAhC04E,EAAqBj6E,aACjB,IAAI27C,YAAY,qBAAuBwK,EAAO,cAAgBznD,EAAMsD,eAG7Ci4E,EAAqBj6C,oBAOtC,EAEZg6C,EAAe,QAEQ,KACT,GACPA,EAAe,cAGR,KAGS,EAIvB9e,EAAIzqB,KAAKsiB,KAAM,KACbwnB,EAAUrf,EAAIzqB,KAAKsiB,KAAK7wB,MACfs4C,KAAKD,GAAW,CAC3B9pC,KAAMyqB,EAAIzqB,KACVsoC,OAAQ7d,EAAI6d,gBAQdx3E,QACI,IAAIo6C,YAAY,qBAAuBxB,EAAM,QAIjD2/B,QACI,IAAIn+B,YAAY,yBAA2BxB,EAAM,QAIrB,IAAhC8/B,EAAqBj6E,aACjB,IAAI27C,YAAY,qBAAuBwK,EAAO,QAI5B,IAAtByzB,EAAKhB,MAAM54E,SAAiB+rC,EAAQ0uC,mBAChC,IAAI9+B,YAAY,IAAMxB,EAAM,gCAG/B37C,WAAkB,IAAVA,EAAsBo7E,EAAKnN,WAAWjuE,GAAS,KACrDo7E,KASJh4E,UAAUmrC,MAAQ,eACjB6sC,EAAO,IAAIvT,IACVe,UAAY7oE,KAAK6oE,YACjB+R,4BAA8B56E,KAAK46E,8BACnC36E,MAAQuuC,GAAMxuC,KAAKC,SACnBq6E,WAAat6E,KAAKs6E,WAAWj4D,MAAM,KACnCg4D,MAAQ,WAEJ72E,EAAI,EAAGA,EAAIxD,KAAKq6E,MAAM54E,OAAQ+B,YAG5BwG,OAFJqwE,MAAM72E,GAAK,GAEFxD,KAAKq6E,MAAM72E,GACnBo1C,GAAe54C,KAAKq6E,MAAM72E,GAAIwG,OAC3BqwE,MAAM72E,GAAGwG,GAAKhK,KAAKq6E,MAAM72E,GAAGwG,WAKhCqxE,KASJh4E,UAAU84E,WAAa,kBACA,IAAtBn8E,KAAKq6E,MAAM54E,SAIRzB,KAAKq6E,MAAM54E,OAAS,GAAKP,KAAKa,IAAI/B,KAAKq6E,MAAM,GAAGrvC,MAAQ,GAAO,UAWnE3nC,UAAU6qE,WAAa,SAAUjuE,OAChCm8E,EAAWC,EAAYC,EAAWC,EAClCvgC,KAEA/7C,MAAAA,GAA+D,IAAtBD,KAAKq6E,MAAM54E,cAC/CxB,KACED,KAAKm8E,aAAc,KAGxBxf,EAAM18D,IACA6nE,EAAK0U,oBAAoBpb,GAAOnhE,YAEjCuD,EAAI,EAAGA,EAAIxD,KAAKq6E,MAAM54E,OAAQ+B,MACzBw4C,EAAQh8C,KAAKq6E,MAAM72E,GAAG0uC,KAAKjyC,SACrB+7C,EAAQh8C,KAAKq6E,MAAM72E,GAAGg3E,OAAOv6E,SACnC+7C,EAAQh8C,KAAKq6E,MAAM72E,GAAGwnC,SAC5BlqC,EAAe67D,EAAKnE,EAAI13D,EAAes7E,EAAWG,GAAkBD,WAGrE3f,cAGGmL,EAAK0U,oBAAoBpb,GAAOnhE,KAEtBD,KAAKq6E,MAAM,GAAGnoC,KAAKjyC,SAC1B+7C,EAAQh8C,KAAKq6E,MAAM,GAAGnoC,KAAKxvC,UACtBs5C,EAAQh8C,KAAKq6E,MAAM,GAAGG,OAAOv6E,OACxCa,EAAe8iB,EAAU3jB,EAAOo8E,GAAav7E,EAAes7E,EAAWG,OAa7El5E,UAAUo5E,aAAe,SAAUx8E,EAAOy8E,OACzCN,EAAWC,EAAYC,EAAWC,EAClCvgC,KAEA/7C,MAAAA,GAA+D,IAAtBD,KAAKq6E,MAAM54E,cAC/CxB,KACED,KAAKm8E,aAAc,KAIxBxf,EAAM18D,IACA6nE,EAAK0U,oBAAoBpb,GAAOnhE,YAEjCuD,EAAI,EAAGA,EAAIxD,KAAKq6E,MAAM54E,OAAQ+B,MACzBw4C,EAAQh8C,KAAKq6E,MAAM72E,GAAG0uC,KAAKjyC,SACrB+7C,EAAQh8C,KAAKq6E,MAAM72E,GAAGg3E,OAAOv6E,SACnC+7C,EAAQh8C,KAAKq6E,MAAM72E,GAAGwnC,SAC5BtpC,EAAai7D,EAAKnE,EAAI13D,EAAes7E,EAAWG,GAAkBD,WAGnE3f,cAGGmL,EAAK0U,oBAAoBpb,GAAOnhE,KAEtBD,KAAKq6E,MAAM,GAAGnoC,KAAKjyC,SACrB+7C,EAAQh8C,KAAKq6E,MAAM,GAAGG,OAAOv6E,SAClC+7C,EAAQh8C,KAAKq6E,MAAM,GAAGnoC,KAAKxvC,QAG/Bq3E,EAASr4E,EAAaA,EAAazB,EAAOm8E,GAD/CM,MAAAA,EAC2DH,EAEAG,GAFkBL,QAgBjFN,EAAY9rD,WAEV2oB,GAAe+jC,EAAO/gC,GAAM,KAC1By/B,EAAOsB,EAAM/gC,SAEV,CACL1J,OACAsoC,OAHWa,EAAKuB,SAAS,aAOpBl+B,KAASi+B,KACZ/jC,GAAe+jC,EAAOj+B,IACpBm+B,GAASjhC,EAAK8C,GAAQ,KACpBo+B,EAAQH,EAAMj+B,GACdq+B,EAAYnhC,EAAIn6C,OAASi9C,EAAMj9C,OAC/Bu7E,EAAaphC,EAAIkM,UAAU,EAAGi1B,GAE9BE,EAAUrkC,GAAekkC,EAAMF,SAAUI,GAAcF,EAAMF,SAASI,QAAc,UAExE,IAAZC,QAEK,CACL/qC,KAAM4qC,EACNtC,OAAQyC,UAOX,OACN,CACD/L,UAAgBjzB,EAAK,GACrB8d,MAAO,iBA0LqBsf,UACxBA,EAAK1W,UAAUuY,EAAWxC,OAAwB,OAAfW,EAAKp7E,QAAmB89B,EAAOuY,YAC7D+kC,EAAKp7E,MAELo7E,IAlLN8B,gBAAkB,SAAU/7D,UACJ,OAApB26D,EAAU36D,MAUd/d,UAAUw6D,QAAU,SAAUrJ,MACb,iBAATA,MACF0oB,EAAW1oB,KAGfA,SACI,UAIAhxD,EAAI,EAAGA,EAAIm3E,EAAgBl5E,OAAQ+B,OACtCtC,KAAKa,UAAUu4E,WAAW92E,IAAM,MAAW82E,WAAW92E,IAAM,IAAM,aAC7D,SAIJ,KAWJH,UAAUshE,UAAY,SAAUyY,WAE1B55E,EAAI,EAAGA,EAAIm3E,EAAgBl5E,OAAQ+B,OACtCtC,KAAKa,UAAUu4E,WAAW92E,IAAM,MAAY82E,WAAW92E,IAAM,IAAM,aAC9D,SAIJ,KAUJH,UAAUwgB,OAAS,SAAUu5D,UACzBp9E,KAAK2kE,UAAUyY,IAAUnD,EAAMj6E,KAAKC,MAAOm9E,EAAMn9E,UAUrDoD,UAAU44B,SAAW,SAAUmhD,WAC9BzgB,EAAM38D,KAAKwuC,QAENhrC,EAAI,EAAGA,EAAIm3E,EAAgBl5E,OAAQ+B,MAEtC82E,WAAW92E,SAAW82E,WAAW92E,IAAM,MAAY82E,WAAW92E,IAAM,WAIjEgjE,EAAK,EAAGA,EAAK4W,EAAM/C,MAAM54E,OAAQ+kE,IAAM,KAE1C6W,EAAW/F,GAAc,GAAI8F,EAAM/C,MAAM7T,MAEzC6T,MAAMxqD,KAAKwtD,MAIE,OAAfr9E,KAAKC,OAAkC,OAAhBm9E,EAAMn9E,MAAgB,KAC3Cq9E,EAAyB,OAAft9E,KAAKC,MAAiBD,KAAKkuE,WAAW,GAAKluE,KAAKC,MAC1Ds9E,EAA2B,OAAhBH,EAAMn9E,MAAiBm9E,EAAMlP,WAAW,GAAKkP,EAAMn9E,QAC9DA,MAAQa,EAAew8E,EAASC,UAEhCt9E,MAAQ,cAGV26E,6BAA8B,EAC3B4C,EAAqB7gB,MAUzBt5D,UAAUkuD,OAAS,SAAU6rB,WAC5BzgB,EAAM38D,KAAKwuC,QAENhrC,EAAI,EAAGA,EAAIm3E,EAAgBl5E,OAAQ+B,MAEtC82E,WAAW92E,SAAW82E,WAAW92E,IAAM,MAAY82E,WAAW92E,IAAM,WAIjEkjE,EAAM,EAAGA,EAAM0W,EAAM/C,MAAM54E,OAAQilE,IAAO,KAE7C2W,EAAW/F,GAAcA,GAAc,GAAI8F,EAAM/C,MAAM3T,IAAO,GAAI,CACpE17B,OAAQoyC,EAAM/C,MAAM3T,GAAK17B,UAGvBqvC,MAAMxqD,KAAKwtD,MAIE,OAAfr9E,KAAKC,OAAkC,OAAhBm9E,EAAMn9E,MAAgB,KAC3Cq9E,EAAyB,OAAft9E,KAAKC,MAAiBD,KAAKkuE,WAAW,GAAKluE,KAAKC,MAC1Ds9E,EAA2B,OAAhBH,EAAMn9E,MAAiBm9E,EAAMlP,WAAW,GAAKkP,EAAMn9E,QAC9DA,MAAQyB,EAAa47E,EAASC,UAE9Bt9E,MAAQ,cAGV26E,6BAA8B,EAC3B4C,EAAqB7gB,MAUzBt5D,UAAU2B,IAAM,SAAUgF,WACzB2yD,EAAM38D,KAAKwuC,QAENhrC,EAAI,EAAGA,EAAIm3E,EAAgBl5E,OAAQ+B,MAEtC82E,WAAW92E,SAAW82E,WAAW92E,IAAM,GAAKwG,UAIzC28D,EAAM,EAAGA,EAAMhK,EAAI0d,MAAM54E,OAAQklE,MACpC0T,MAAM1T,GAAK37B,OAAShhC,SAGR,OAAd2yD,EAAI18D,QACFA,MAAQu4D,EAAImE,EAAI18D,MAAO+J,KAMvB/J,MAAQ,OAGV26E,6BAA8B,EAC3B4C,EAAqB7gB,MAwBzBt5D,UAAUtB,IAAM,eAGfq7D,EAAMp9D,KAAKwuC,gBAGNhrC,OAFLvD,MAAsB,OAAdm9D,EAAIn9D,MAAiB07D,EAAIyB,EAAIn9D,OAAS,KAEpCm9D,EAAIid,MACe,OAA3Bjd,EAAIid,MAAM72E,GAAG0uC,KAAKsI,MAA4C,QAA3B4iB,EAAIid,MAAM72E,GAAG0uC,KAAKsI,SACnD6/B,MAAM72E,GAAG0uC,KAAOyqC,EAAMc,UAIvBrgB,KAUJ/5D,UAAUgrC,GAAK,SAAU45B,OACxBmV,EACAn9E,EAAuB,OAAfD,KAAKC,MAAiBD,KAAKkuE,WAAW,GAAKluE,KAAKC,SAE/B,iBAAlBgoE,EAA4B,MAE7BH,EAAKv1B,MAAM01B,IAEdjoE,KAAK2kE,UAAUyY,SACZ,IAAIh9E,MAAM,wBAAwB68C,OAAOmgC,EAAM35E,WAAY,UAAUw5C,OAAOj9C,KAAKyD,WAAY,UAGjF,OAAhB25E,EAAMn9E,YACF,IAAIG,MAAM,kDAGZH,MAAQuuC,GAAMvuC,KACd4oE,WAAY,IACZ+R,6BAA8B,EAC7BwC,KACExmC,GAAOqxB,GAAgB,KAC3BjoE,KAAK2kE,UAAUsD,SACZ,IAAI7nE,MAAM,wBAAwB68C,OAAOgrB,EAAcxkE,WAAY,UAAUw5C,OAAOj9C,KAAKyD,WAAY,UAGjF,OAAxBwkE,EAAchoE,YACV,IAAIG,MAAM,kDAGV6nE,EAAcz5B,SAChBvuC,MAAQuuC,GAAMvuC,KACd4oE,WAAY,IACZ+R,6BAA8B,EAC7BwC,QAED,IAAIh9E,MAAM,2CAYfiD,UAAUspD,SAAW,SAAUsb,UAC3Btb,EAAS3sD,KAAK09E,UAAUzV,OAU5B5kE,UAAUq6E,UAAY,SAAUzV,OAC/BmV,WAEAnV,EAEMjoE,KAAKquC,GAAG45B,GAERjoE,KAAKwuC,SAGL2tC,cAAuC,IAAvBiB,EAAM/C,MAAM54E,OAC7B27E,EAAMX,aAAaW,EAAMn9E,OAEzBm9E,EAAMX,aAAaW,EAAMn9E,MAAOm9E,EAAM/C,MAAM,GAAGG,OAAOv6E,UAU5DoD,UAAUI,SAAW,kBACjBzD,KAAKsoD,YAUTjlD,UAAU4pD,OAAS,iBACf,CACLC,OAAQ,OACRjtD,MAAOD,KAAKy8E,aAAaz8E,KAAKC,OAC9BiyC,KAAMlyC,KAAK29E,cACX9U,UAAW7oE,KAAK6oE,cAYf1b,SAAW,SAAUC,OACpBiuB,EAAO,IAAIvT,EAAK1a,EAAKntD,MAAOmtD,EAAKlb,eAChC22B,UAAYzb,EAAKyb,YAAa,EAC5BwS,KASJh4E,UAAUm1C,QAAUsvB,EAAKzkE,UAAUI,WAMnCJ,UAAUw7D,SAAW,eAIpB+e,EAcEC,EAjBFzgB,EAAMp9D,KAAKwuC,QACXsvC,EAAmB,WAIdC,KAAOC,KACVplC,GAAeolC,EAAmBD,IAChC3gB,EAAIS,QAAQqf,EAAWa,IAAO,GACjBA,WAMA,SAAjBH,IACEvD,MAAQ,WAIRuD,GAEEhlC,GAAeolC,EAAmBJ,OACrBI,EAAkBJ,IAIjCC,IACExD,MAAQ,CAAC,CACXnoC,KAAM2rC,EAAa3rC,KACnBsoC,OAAQqD,EAAarD,OACrBxvC,MAAO,QAEJ,SAIDizC,GAAiB,EAEZz6E,EAAI,EAAGA,EAAIm3E,EAAgBl5E,OAAQ+B,IAAK,KAC3Cw4E,EAAUrB,EAAgBn3E,GAE1BtC,KAAKa,IAAIq7D,EAAIkd,WAAW92E,IAAM,GAAK,QACjCo1C,GAAeolC,EAAmBhC,KACnBnsD,KAAK,CACpBqiB,KAAM8rC,EAAkBhC,GAAS9pC,KACjCsoC,OAAQwD,EAAkBhC,GAASxB,OACnCxvC,MAAOoyB,EAAIkd,WAAW92E,IAAM,OAGb,GAMnBs6E,EAAiBr8E,OAAS27D,EAAIid,MAAM54E,SAAWw8E,MAE7C5D,MAAQyD,UAKX1gB,KAOJ/5D,UAAU66E,KAAO,mBAChB9gB,EAAMp9D,KAAKwuC,QACXsvC,EAAmB,GAIdt6E,EAAI,EAAGA,EAAIm3E,EAAgBl5E,OAAQ+B,IAAK,KAC3Cw4E,EAAUrB,EAAgBn3E,MAE1BtC,KAAKa,IAAIq7D,EAAIkd,WAAW92E,IAAM,GAAK,MAAO,KACxCo1C,GAAeulC,EAAaC,GAAIpC,SAO5B,IAAI57E,MAAM,8BAAgC47E,EAAU,kBANzCnsD,KAAK,CACpBqiB,KAAMisC,EAAaC,GAAGpC,GAAS9pC,KAC/BsoC,OAAQ2D,EAAaC,GAAGpC,GAASxB,OACjCxvC,MAAOoyB,EAAIkd,WAAW92E,IAAM,cAShC62E,MAAQyD,IACRjV,WAAY,IACZ+R,6BAA8B,EAC3Bxd,KASJ/5D,UAAUs6E,YAAc,mBACvBU,EAAS,GACTC,EAAS,GACTC,EAAO,EACPC,EAAO,EAEFh7E,EAAI,EAAGA,EAAIxD,KAAKq6E,MAAM54E,OAAQ+B,IACjCxD,KAAKq6E,MAAM72E,GAAGwnC,MAAQ,UAEd,IAAMhrC,KAAKq6E,MAAM72E,GAAGg3E,OAAOhgC,KAAOx6C,KAAKq6E,MAAM72E,GAAG0uC,KAAKsI,KAE3Dt5C,KAAKa,IAAI/B,KAAKq6E,MAAM72E,GAAGwnC,MAAQ,GAAO,WAC9B,IAAMhrC,KAAKq6E,MAAM72E,GAAGwnC,QAEvBhrC,KAAKq6E,MAAM72E,GAAGwnC,MAAQ,UAK/BwzC,EAAO,UACAC,EAAM,EAAGA,EAAMz+E,KAAKq6E,MAAM54E,OAAQg9E,IACrCz+E,KAAKq6E,MAAMoE,GAAKzzC,MAAQ,IACtBuzC,EAAO,MACC,IAAMv+E,KAAKq6E,MAAMoE,GAAKjE,OAAOhgC,KAAOx6C,KAAKq6E,MAAMoE,GAAKvsC,KAAKsI,KAE/Dt5C,KAAKa,IAAI/B,KAAKq6E,MAAMoE,GAAKzzC,MAAQ,GAAO,WAChC,KAAOhrC,KAAKq6E,MAAMoE,GAAKzzC,YAGzB,IAAMhrC,KAAKq6E,MAAMoE,GAAKjE,OAAOhgC,KAAOx6C,KAAKq6E,MAAMoE,GAAKvsC,KAAKsI,QACzD,IAAMx6C,KAAKq6E,MAAMoE,GAAKzzC,UAO/BqzC,EAAOjK,OAAO,KACdkK,EAAOlK,OAAO,GAEnBmK,EAAO,GAAKC,EAAO,MACZ,IAAMH,EAAS,KAGtBG,EAAO,GAAKD,EAAO,MACZ,IAAMD,EAAS,SAGtB1iC,EAAMyiC,SAENE,EAAO,GAAKC,EAAO,OACd,UAGFF,KAcJj7E,UAAUilD,OAAS,SAAU9a,OAG5BkxC,EAAO1+E,KAAK46E,6BAA8C,OAAf56E,KAAKC,MAAiBD,KAAKwuC,QAAUxuC,KAAK6+D,WAErF8f,GAAc,UAOTn7E,UALiB,IAAfk7E,EAAKz+E,OAAwC,OAAfy+E,EAAKz+E,OAAkBy2C,GAAUgoC,EAAKz+E,WAE/DiB,KAAKa,IAAI28E,EAAKz+E,MAAMu7D,IAAM,OAG5BkjB,EAAKrE,MACbzhC,GAAe8lC,EAAKrE,MAAO72E,IACzBk7E,EAAKrE,MAAM72E,GAAG0uC,OACgB,OAA5BwsC,EAAKrE,MAAM72E,GAAG0uC,KAAKsI,MAAiBmkC,IACjCtE,MAAM72E,GAAG0uC,KAAOyqC,EAAMiC,IACU,QAA5BF,EAAKrE,MAAM72E,GAAG0uC,KAAKsI,MAAmBmkC,MAC1CtE,MAAM72E,GAAG0uC,KAAOyqC,EAAMkC,KAQT,IAAtBH,EAAKrE,MAAM54E,QAAiBi9E,EAAK7V,WAG/B3nE,KAAKa,IAAI28E,EAAKrE,MAAM,GAAGrvC,MAAQ9pC,KAAKW,MAAM68E,EAAKrE,MAAM,GAAGrvC,QAAU,UAE/DqvC,MAAM,GAAGG,OAASkE,EAAKI,mBAI5B7+E,EAAQy+E,EAAKjC,aAAaiC,EAAKz+E,OAE/B27C,EAAqB,OAAf8iC,EAAKz+E,MAAiBqoE,EAAOroE,EAAOutC,GAAW,IAAM,GAC3DuxC,EAAUL,EAAKf,qBAEfe,EAAKz+E,OAASy2C,GAAUgoC,EAAKz+E,WACzB,IAAM27C,EAAM,KAGhBmjC,EAAQt9E,OAAS,GAAKm6C,EAAIn6C,OAAS,OAC9B,QAGFs9E,KAWJ17E,UAAUy7E,YAAc,cACD,IAAtB9+E,KAAKq6E,MAAM54E,aACP,IAAIrB,MAAM,+GAGdc,KAAKa,IAAI/B,KAAKq6E,MAAM,GAAGrvC,MAAQ9pC,KAAKW,MAAM7B,KAAKq6E,MAAM,GAAGrvC,SAAW,YAC/D,IAAI5qC,MAAM,gHAUd4+E,EAA0B,OAAfh/E,KAAKC,MAAiB07D,EAAI37D,KAAKC,OAAS,EACnDg/E,EAAetjB,EAAI37D,KAAKq6E,MAAM,GAAGnoC,KAAKjyC,OACtCi/E,EAAal/E,KAAKq6E,MAAM,GAAGG,UAEd,IAAbwE,SACKE,MAGLl0C,EAAQhrC,KAAKq6E,MAAM,GAAGrvC,MACtBm0C,EAAWj+E,KAAK+D,IAAI+5E,EAAW99E,KAAK8D,IAAIk6E,EAAWj/E,MAAQg/E,EAAcj0C,IAAU9pC,KAAKssD,KAAO,OAC/F2xB,aAAwBA,EAAW,gBAAiBD,IAE7Ch+E,KAAKa,IAAIo9E,OAChBvC,EAAW58E,KAAKq6E,MAAM,GAAGnoC,KAAK0qC,iBAEzB5yE,KAAK4yE,KACRhkC,GAAegkC,EAAU5yE,GAAI,KAC3BwwE,EAASoC,EAAS5yE,MAElBwwE,EAAO4E,WAAY,KACjBv9C,EAAO3gC,KAAKa,IAAIb,KAAK+D,IAAI+5E,EAAW99E,KAAK8D,IAAIw1E,EAAOv6E,MAAQg/E,EAAcj0C,IAAU9pC,KAAKssD,KAAO,MAEhG3rB,EAAOs9C,GAAYt9C,IAASs9C,GAAY3E,EAAOhgC,KAAK/4C,OAASy9E,EAAW1kC,KAAK/4C,YAGlE+4E,IACF34C,WAMZq9C,KAiBJ77E,UAAUg8E,UAAY,SAAUC,WAC/Bx/E,EAAIE,KAAKwuC,QACT4uB,EAAM,GAED55D,EAAI,EAAGA,EAAI87E,EAAM79E,WAEpB3B,EAAEuuC,GAAGixC,EAAM97E,IACXA,IAAM87E,EAAM79E,OAAS,GAHO+B,IAAK,KAKjC+7E,EAAWz/E,EAAE49E,YAGb8B,EAAWtV,EAAMqV,GAUjBx/E,EAAI,IAAI+nE,EARQmS,EAAMuF,EAAUD,GAGzBC,EAEAxF,EAAIl6E,EAAE49E,aAGQ4B,EAAM97E,GAAGC,cAC9BosB,KAAK9vB,KACLg6E,EAASj6E,EAAGC,WAOd0/E,EAAU,EAELtY,EAAM,EAAGA,EAAM/J,EAAI37D,OAAQ0lE,MACxBvjD,EAAU67D,EAASriB,EAAI+J,GAAKlnE,cAGpCg6E,EAAMwF,EAASz/E,KAAKC,WACpBA,MAAQ,KAGR4vB,KAAK/vB,GACFs9D,OAGLqd,EAAW,CACbC,KAAM,CACJ,GAAI,CACFlgC,KAAM,GACNv6C,MAAO,EACPm/E,YAAY,IAGhBM,MAAO,CACL,GAAI,CACFllC,KAAM,GACNv6C,MAAO,EACPm/E,YAAY,GAEdO,GAAI,CACFnlC,KAAM,KACNv6C,MAAO,GACPm/E,YAAY,GAEdlpE,EAAG,CACDskC,KAAM,IACNv6C,MAAO,IACPm/E,YAAY,GAEdx7C,EAAG,CACD4W,KAAM,IACNv6C,MAAO,IACPm/E,YAAY,GAEdhhB,EAAG,CACD5jB,KAAM,IACNv6C,MAAO,IACPm/E,YAAY,GAEdQ,EAAG,CACDplC,KAAM,IACNv6C,MAAO,IACPm/E,YAAY,GAEdS,EAAG,CACDrlC,KAAM,IACNv6C,MAAO,KACPm/E,YAAY,GAEdvwB,EAAG,CACDrU,KAAM,IACNv6C,MAAO,KACPm/E,YAAY,GAEd7hB,EAAG,CACD/iB,KAAM,IACNv6C,MAAO,KACPm/E,YAAY,GAEdU,EAAG,CACDtlC,KAAM,IACNv6C,MAAO,KACPm/E,YAAY,GAEdW,EAAG,CACDvlC,KAAM,IACNv6C,MAAO,KACPm/E,YAAY,GAEdzuE,EAAG,CACD6pC,KAAM,IACNv6C,MAAO,GACPm/E,YAAY,GAEd55D,EAAG,CACDg1B,KAAM,IACNv6C,MAAO,IACPm/E,YAAY,GAEdr+E,EAAG,CACDy5C,KAAM,IACNv6C,MAAO,KACPm/E,YAAY,GAEdnxD,EAAG,CACDusB,KAAM,IACNv6C,MAAO,KACPm/E,YAAY,GAEdv7E,EAAG,CACD22C,KAAM,IACNv6C,MAAO,KACPm/E,YAAY,GAEdp1E,EAAG,CACDwwC,KAAM,IACNv6C,MAAO,MACPm/E,YAAY,GAEdv3E,EAAG,CACD2yC,KAAM,IACNv6C,MAAO,MACPm/E,YAAY,GAEd75D,EAAG,CACDi1B,KAAM,IACNv6C,MAAO,MACPm/E,YAAY,GAEdp5E,EAAG,CACDw0C,KAAM,IACNv6C,MAAO,MACPm/E,YAAY,GAEdr/E,EAAG,CACDy6C,KAAM,IACNv6C,MAAO,MACPm/E,YAAY,IAGhBY,KAAM,CACJ,GAAI,CACFxlC,KAAM,GACNv6C,MAAO,EACPm/E,YAAY,GAEda,KAAM,CACJzlC,KAAM,OACNv6C,MAAO,GACPm/E,YAAY,GAEdc,MAAO,CACL1lC,KAAM,QACNv6C,MAAO,IACPm/E,YAAY,GAEde,KAAM,CACJ3lC,KAAM,OACNv6C,MAAO,IACPm/E,YAAY,GAEdgB,KAAM,CACJ5lC,KAAM,OACNv6C,MAAO,IACPm/E,YAAY,GAEdiB,KAAM,CACJ7lC,KAAM,OACNv6C,MAAO,IACPm/E,YAAY,GAEdkB,KAAM,CACJ9lC,KAAM,OACNv6C,MAAO,KACPm/E,YAAY,GAEdmB,KAAM,CACJ/lC,KAAM,OACNv6C,MAAO,KACPm/E,YAAY,GAEdoB,IAAK,CACHhmC,KAAM,MACNv6C,MAAO,KACPm/E,YAAY,GAEdqB,MAAO,CACLjmC,KAAM,QACNv6C,MAAO,KACPm/E,YAAY,GAEdsB,MAAO,CACLlmC,KAAM,QACNv6C,MAAO,KACPm/E,YAAY,GAEduB,KAAM,CACJnmC,KAAM,OACNv6C,MAAO,GACPm/E,YAAY,GAEdwB,MAAO,CACLpmC,KAAM,QACNv6C,MAAO,IACPm/E,YAAY,GAEdyB,MAAO,CACLrmC,KAAM,QACNv6C,MAAO,KACPm/E,YAAY,GAEd0B,MAAO,CACLtmC,KAAM,QACNv6C,MAAO,KACPm/E,YAAY,GAEd2B,KAAM,CACJvmC,KAAM,OACNv6C,MAAO,KACPm/E,YAAY,GAEd4B,KAAM,CACJxmC,KAAM,OACNv6C,MAAO,MACPm/E,YAAY,GAEd6B,MAAO,CACLzmC,KAAM,QACNv6C,MAAO,MACPm/E,YAAY,GAEd8B,KAAM,CACJ1mC,KAAM,OACNv6C,MAAO,MACPm/E,YAAY,GAEd+B,MAAO,CACL3mC,KAAM,QACNv6C,MAAO,MACPm/E,YAAY,GAEdgC,MAAO,CACL5mC,KAAM,QACNv6C,MAAO,MACPm/E,YAAY,IAGhBiC,QAAS,CACP,GAAI,CACF7mC,KAAM,GACNv6C,MAAO,EACPm/E,YAAY,GAEdO,GAAI,CACFnlC,KAAM,KACNv6C,MAAO,IACPm/E,YAAY,GAEdlpE,EAAG,CACDskC,KAAM,IACNv6C,MAAO,IACPm/E,YAAY,GAEdx7C,EAAG,CACD4W,KAAM,IACNv6C,MAAO,IACPm/E,YAAY,GAEdhhB,EAAG,CACD5jB,KAAM,IACNv6C,MAAO,KACPm/E,YAAY,GAEdQ,EAAG,CACDplC,KAAM,IACNv6C,MAAO,KACPm/E,YAAY,GAEdS,EAAG,CACDrlC,KAAM,IACNv6C,MAAO,KACPm/E,YAAY,GAEdvwB,EAAG,CACDrU,KAAM,IACNv6C,MAAO,KACPm/E,YAAY,GAEd7hB,EAAG,CACD/iB,KAAM,IACNv6C,MAAO,KACPm/E,YAAY,GAEdU,EAAG,CACDtlC,KAAM,IACNv6C,MAAO,KACPm/E,YAAY,GAEdW,EAAG,CACDvlC,KAAM,IACNv6C,MAAO,KACPm/E,YAAY,GAEdzuE,EAAG,CACD6pC,KAAM,IACNv6C,MAAO,IACPm/E,YAAY,GAEd55D,EAAG,CACDg1B,KAAM,IACNv6C,MAAO,KACPm/E,YAAY,GAEdr+E,EAAG,CACDy5C,KAAM,IACNv6C,MAAO,KACPm/E,YAAY,GAEdnxD,EAAG,CACDusB,KAAM,IACNv6C,MAAO,MACPm/E,YAAY,GAEdv7E,EAAG,CACD22C,KAAM,IACNv6C,MAAO,MACPm/E,YAAY,GAEdp1E,EAAG,CACDwwC,KAAM,IACNv6C,MAAO,MACPm/E,YAAY,GAEdv3E,EAAG,CACD2yC,KAAM,IACNv6C,MAAO,MACPm/E,YAAY,GAEd75D,EAAG,CACDi1B,KAAM,IACNv6C,MAAO,MACPm/E,YAAY,GAEdp5E,EAAG,CACDw0C,KAAM,IACNv6C,MAAO,MACPm/E,YAAY,GAEdr/E,EAAG,CACDy6C,KAAM,IACNv6C,MAAO,MACPm/E,YAAY,IAGhBkC,MAAO,CACL,GAAI,CACF9mC,KAAM,GACNv6C,MAAO,EACPm/E,YAAY,GAEdO,GAAI,CACFnlC,KAAM,KACNv6C,MAAO,IACPm/E,YAAY,GAEdlpE,EAAG,CACDskC,KAAM,IACNv6C,MAAO,IACPm/E,YAAY,GAEdx7C,EAAG,CACD4W,KAAM,IACNv6C,MAAO,IACPm/E,YAAY,GAEdhhB,EAAG,CACD5jB,KAAM,IACNv6C,MAAO,KACPm/E,YAAY,GAEdQ,EAAG,CACDplC,KAAM,IACNv6C,MAAO,KACPm/E,YAAY,GAEdS,EAAG,CACDrlC,KAAM,IACNv6C,MAAO,KACPm/E,YAAY,GAEdvwB,EAAG,CACDrU,KAAM,IACNv6C,MAAO,KACPm/E,YAAY,GAEd7hB,EAAG,CACD/iB,KAAM,IACNv6C,MAAO,KACPm/E,YAAY,GAEdU,EAAG,CACDtlC,KAAM,IACNv6C,MAAO,KACPm/E,YAAY,GAEdW,EAAG,CACDvlC,KAAM,IACNv6C,MAAO,KACPm/E,YAAY,GAEdzuE,EAAG,CACD6pC,KAAM,IACNv6C,MAAO,KACPm/E,YAAY,GAEd55D,EAAG,CACDg1B,KAAM,IACNv6C,MAAO,KACPm/E,YAAY,GAEdr+E,EAAG,CACDy5C,KAAM,IACNv6C,MAAO,KACPm/E,YAAY,GAEdnxD,EAAG,CACDusB,KAAM,IACNv6C,MAAO,MACPm/E,YAAY,GAEdv7E,EAAG,CACD22C,KAAM,IACNv6C,MAAO,MACPm/E,YAAY,GAEdp1E,EAAG,CACDwwC,KAAM,IACNv6C,MAAO,MACPm/E,YAAY,GAEdv3E,EAAG,CACD2yC,KAAM,IACNv6C,MAAO,MACPm/E,YAAY,GAEd75D,EAAG,CACDi1B,KAAM,IACNv6C,MAAO,MACPm/E,YAAY,GAEdp5E,EAAG,CACDw0C,KAAM,IACNv6C,MAAO,MACPm/E,YAAY,GAEdr/E,EAAG,CACDy6C,KAAM,IACNv6C,MAAO,MACPm/E,YAAY,IAGhBmC,gBAAiB,CACf,GAAI,CACF/mC,KAAM,GACNv6C,MAAO,EACPm/E,YAAY,GAEdx7C,EAAG,CACD4W,KAAM,IACNv6C,MAAO,IACPm/E,YAAY,GAEdhhB,EAAG,CACD5jB,KAAM,IACNv6C,MAAO,IACPm/E,YAAY,GAEdQ,EAAG,CACDplC,KAAM,IACNv6C,MAAO,IACPm/E,YAAY,GAEdS,EAAG,CACDrlC,KAAM,IACNv6C,MAAO,KACPm/E,YAAY,GAEdvwB,EAAG,CACDrU,KAAM,IACNv6C,MAAO,KACPm/E,YAAY,GAEd7hB,EAAG,CACD/iB,KAAM,IACNv6C,MAAO,KACPm/E,YAAY,GAEdU,EAAG,CACDtlC,KAAM,IACNv6C,MAAO,KACPm/E,YAAY,GAEdW,EAAG,CACDvlC,KAAM,IACNv6C,MAAO,KACPm/E,YAAY,IAGhBoC,iBAAkB,CAChB,GAAI,CACFhnC,KAAM,GACNv6C,MAAO,EACPm/E,YAAY,GAEdqC,GAAI,CACFjnC,KAAM,KACNv6C,MAAO,KACPm/E,YAAY,GAEdsC,GAAI,CACFlnC,KAAM,KACNv6C,MAAOiB,KAAK8D,IAAI,KAAM,GACtBo6E,YAAY,GAEduC,GAAI,CACFnnC,KAAM,KACNv6C,MAAOiB,KAAK8D,IAAI,KAAM,GACtBo6E,YAAY,GAEdwC,GAAI,CACFpnC,KAAM,KACNv6C,MAAOiB,KAAK8D,IAAI,KAAM,GACtBo6E,YAAY,GAEdyC,GAAI,CACFrnC,KAAM,KACNv6C,MAAOiB,KAAK8D,IAAI,KAAM,GACtBo6E,YAAY,GAEd0C,GAAI,CACFtnC,KAAM,KACNv6C,MAAOiB,KAAK8D,IAAI,KAAM,GACtBo6E,YAAY,GAEd2C,GAAI,CACFvnC,KAAM,KACNv6C,MAAOiB,KAAK8D,IAAI,KAAM,GACtBo6E,YAAY,GAEd4C,GAAI,CACFxnC,KAAM,KACNv6C,MAAOiB,KAAK8D,IAAI,KAAM,GACtBo6E,YAAY,IAGhB6C,eAAgB,CACd,GAAI,CACFznC,KAAM,GACNv6C,MAAO,EACPm/E,YAAY,GAEde,KAAM,CACJ3lC,KAAM,OACNv6C,MAAO,IACPm/E,YAAY,GAEdgB,KAAM,CACJ5lC,KAAM,OACNv6C,MAAO,IACPm/E,YAAY,GAEdiB,KAAM,CACJ7lC,KAAM,OACNv6C,MAAO,IACPm/E,YAAY,GAEdkB,KAAM,CACJ9lC,KAAM,OACNv6C,MAAO,KACPm/E,YAAY,GAEdmB,KAAM,CACJ/lC,KAAM,OACNv6C,MAAO,KACPm/E,YAAY,GAEdoB,IAAK,CACHhmC,KAAM,MACNv6C,MAAO,KACPm/E,YAAY,GAEdqB,MAAO,CACLjmC,KAAM,QACNv6C,MAAO,KACPm/E,YAAY,GAEdsB,MAAO,CACLlmC,KAAM,QACNv6C,MAAO,KACPm/E,YAAY,IAGhB8C,gBAAiB,CACf,GAAI,CACF1nC,KAAM,GACNv6C,MAAO,EACPm/E,YAAY,GAEd+C,KAAM,CACJ3nC,KAAM,OACNv6C,MAAO,KACPm/E,YAAY,GAEdgD,KAAM,CACJ5nC,KAAM,OACNv6C,MAAOiB,KAAK8D,IAAI,KAAM,GACtBo6E,YAAY,GAEdiD,KAAM,CACJ7nC,KAAM,OACNv6C,MAAOiB,KAAK8D,IAAI,KAAM,GACtBo6E,YAAY,GAEdkD,KAAM,CACJ9nC,KAAM,OACNv6C,MAAOiB,KAAK8D,IAAI,KAAM,GACtBo6E,YAAY,GAEdmD,KAAM,CACJ/nC,KAAM,OACNv6C,MAAOiB,KAAK8D,IAAI,KAAM,GACtBo6E,YAAY,GAEdoD,IAAK,CACHhoC,KAAM,MACNv6C,MAAOiB,KAAK8D,IAAI,KAAM,GACtBo6E,YAAY,GAEdqD,KAAM,CACJjoC,KAAM,OACNv6C,MAAOiB,KAAK8D,IAAI,KAAM,GACtBo6E,YAAY,GAEdsD,KAAM,CACJloC,KAAM,OACNv6C,MAAOiB,KAAK8D,IAAI,KAAM,GACtBo6E,YAAY,IAGhBuD,IAAK,CACH,GAAI,CACFnoC,KAAM,GACNv6C,MAAO,EACPm/E,YAAY,GAEdwD,GAAI,CACFpoC,KAAM,KACNv6C,MAAO,IACPm/E,YAAY,OAITyD,UAAYC,GAAS,GAAIrI,EAASiF,MAAOjF,EAASuF,QAClD+C,aAAeD,GAAS,GAAIrI,EAAS8G,gBAAiB9G,EAAS+G,oBAC/DwB,YAAcF,GAAS,GAAIrI,EAASwH,eAAgBxH,EAASyH,qBAiBlEvH,EAAkB,CAAC,OAAQ,SAAU,OAAQ,UAAW,cAAe,qBAAsB,sBAAuB,QAAS,OAC7HuC,EAAa,CACfxC,KAAM,CACJJ,WAAY,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAEvC2I,KAAM,CACJ3I,WAAY,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAEvC4I,OAAQ,CACN5I,WAAY,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAEvC6I,KAAM,CACJ7I,WAAY,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAEvC8I,QAAS,CACP9I,WAAY,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAEvC+I,YAAa,CACX/I,WAAY,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAEvCgJ,mBAAoB,CAClBhJ,WAAY,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAEvCiJ,oBAAqB,CACnBjJ,WAAY,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAEvCkJ,MAAO,CACLlJ,WAAY,CAAC,EAAG,KAAO,EAAG,EAAG,EAAG,EAAG,EAAG,IAExCmJ,QAAS,CACPnJ,WAAY,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAEvCoJ,OAAQ,CACNpJ,WAAY,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAEvCqJ,OAAQ,CACNrJ,WAAY,CAAC,EAAG,KAAO,EAAG,EAAG,EAAG,EAAG,EAAG,IAExCsJ,MAAO,CACLtJ,WAAY,CAAC,EAAG,KAAO,EAAG,EAAG,EAAG,EAAG,EAAG,IAExCuJ,SAAU,CACRvJ,WAAY,CAAC,QAAW,EAAG,EAAG,EAAG,EAAG,EAAG,IAEzCwJ,gBAAiB,CACfxJ,WAAY,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAEvCyJ,qBAAsB,CACpBzJ,WAAY,OAAS,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAEzC0J,mBAAoB,CAClB1J,WAAY,CAAC,EAAG,QAAW,EAAG,EAAG,EAAG,EAAG,IAEzC2J,oBAAqB,CACnB3J,WAAY,CAAC,EAAG,QAAW,EAAG,EAAG,EAAG,EAAG,IAEzC4J,oBAAqB,CACnB5J,WAAY,CAAC,EAAG,QAAW,EAAG,EAAG,EAAG,EAAG,IAEzC6J,qBAAsB,CACpB7J,WAAY,OAAS,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAEzC8J,cAAe,CACb9J,WAAY,CAAC,EAAG,QAAW,EAAG,EAAG,EAAG,EAAG,IAEzC+J,sBAAuB,CACrB/J,WAAY,CAAC,EAAG,QAAW,EAAG,EAAG,EAAG,EAAG,IAEzCgK,UAAW,CACThK,WAAY,CAAC,EAAG,KAAO,EAAG,EAAG,EAAG,EAAG,EAAG,IAExCiK,MAAO,CACLjK,WAAY,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAEvCkK,IAAK,CACHlK,WAAY,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,aAIhC32C,KAAOu5C,EACVtkC,GAAeskC,EAAYv5C,OAClBA,GAAKA,IAAMA,OAKtB42C,EAAY,CACd//B,KAAM,GACNga,KAHmB,GAInBv0D,MAAO,EACPyC,OAAQ,EACR43E,WAAYK,EAAgBpiC,QAAS,KAEnCokC,EAAQ,CAEV72C,MAAO,CACL0U,KAAM,QACNga,KAAM0oB,EAAWgG,OACjBtG,SAAUnC,EAASuF,KACnB//E,MAAO,EACPyC,OAAQ,GAEV+hF,KAAM,CACJjqC,KAAM,OACNga,KAAM0oB,EAAWgG,OACjBtG,SAAUnC,EAASC,KACnBz6E,MAAO,MACPyC,OAAQ,GAEVgiF,KAAM,CACJlqC,KAAM,OACNga,KAAM0oB,EAAWgG,OACjBtG,SAAUnC,EAASC,KACnBz6E,MAAO,MACPyC,OAAQ,GAEViiF,KAAM,CACJnqC,KAAM,OACNga,KAAM0oB,EAAWgG,OACjBtG,SAAUnC,EAASC,KACnBz6E,MAAO,MACPyC,OAAQ,GAEVkiF,KAAM,CACJpqC,KAAM,OACNga,KAAM0oB,EAAWgG,OACjBtG,SAAUnC,EAASC,KACnBz6E,MAAO,SACPyC,OAAQ,GAEVmiF,KAAM,CACJrqC,KAAM,OACNga,KAAM0oB,EAAWgG,OACjBtG,SAAUnC,EAASC,KACnBz6E,MAAO,QACPyC,OAAQ,GAEVoiF,IAAK,CACHtqC,KAAM,MACNga,KAAM0oB,EAAWgG,OACjBtG,SAAUnC,EAASC,KACnBz6E,MAAO,OACPyC,OAAQ,GAEVqiF,MAAO,CACLvqC,KAAM,QACNga,KAAM0oB,EAAWgG,OACjBtG,SAAUnC,EAASC,KACnBz6E,MAAO,QACPyC,OAAQ,GAEVsiF,SAAU,CACRxqC,KAAM,WACNga,KAAM0oB,EAAWgG,OACjBtG,SAAUnC,EAASC,KACnBz6E,MAAO,MACPyC,OAAQ,GAEV3B,EAAG,CACDy5C,KAAM,IACNga,KAAM0oB,EAAWgG,OACjBtG,SAAUnC,EAASiF,MACnBz/E,MAAO,EACPyC,OAAQ,GAEVuiF,GAAI,CACFzqC,KAAM,KACNga,KAAM0oB,EAAWgG,OACjBtG,SAAUnC,EAASC,KACnBz6E,MAAO,MACPyC,OAAQ,GAEVwiF,GAAI,CACF1qC,KAAM,KACNga,KAAM0oB,EAAWgG,OACjBtG,SAAUnC,EAASC,KACnBz6E,MAAO,MACPyC,OAAQ,GAEVutD,GAAI,CACFzV,KAAM,KACNga,KAAM0oB,EAAWgG,OACjBtG,SAAUnC,EAASC,KACnBz6E,MAAO,MACPyC,OAAQ,GAEVyiF,GAAI,CACF3qC,KAAM,KACNga,KAAM0oB,EAAWgG,OACjBtG,SAAUnC,EAASC,KACnBz6E,MAAO,SACPyC,OAAQ,GAEV0iF,GAAI,CACF5qC,KAAM,KACNga,KAAM0oB,EAAWgG,OACjBtG,SAAUnC,EAASC,KACnBz6E,MAAO,QACPyC,OAAQ,GAEV0sD,GAAI,CACF5U,KAAM,KACNga,KAAM0oB,EAAWgG,OACjBtG,SAAUnC,EAASC,KACnBz6E,MAAO,QACPyC,OAAQ,GAEV2iF,GAAI,CACF7qC,KAAM,KACNga,KAAM0oB,EAAWgG,OACjBtG,SAAUnC,EAASC,KACnBz6E,MAAO,QACPyC,OAAQ,GAEV4iF,IAAK,CACH9qC,KAAM,MACNga,KAAM0oB,EAAWgG,OACjBtG,SAAUnC,EAASC,KACnBz6E,MAAO,OACPyC,OAAQ,GAIV6iF,GAAI,CACF/qC,KAAM,KACNga,KAAM0oB,EAAWuG,QACjB7G,SAAUnC,EAAS4G,QACnBphF,MAAO,EACPyC,OAAQ,GAEV8iF,KAAM,CACJhrC,KAAM,OACNga,KAAM0oB,EAAWuG,QACjB7G,SAAUnC,EAASC,KACnBz6E,MAAO,SACPyC,OAAQ,GAGV+iF,KAAM,CACJjrC,KAAM,OACNga,KAAM0oB,EAAWuG,QACjB7G,SAAUnC,EAASC,KACnBz6E,MAAO,UACPyC,OAAQ,GAGVgjF,KAAM,CACJlrC,KAAM,OACNga,KAAM0oB,EAAWuG,QACjB7G,SAAUnC,EAASC,KACnBz6E,MAAO,UACPyC,OAAQ,GAGVijF,KAAM,CACJnrC,KAAM,OACNga,KAAM0oB,EAAWuG,QACjB7G,SAAUnC,EAASC,KACnBz6E,MAAO,eACPyC,OAAQ,GAGVkjF,KAAM,CACJprC,KAAM,OACNga,KAAM0oB,EAAWuG,QACjB7G,SAAUnC,EAASC,KACnBz6E,MAAO,SACPyC,OAAQ,GAGVmjF,KAAM,CACJrrC,KAAM,OACNga,KAAM0oB,EAAWuG,QACjB7G,SAAUnC,EAASC,KACnBz6E,MAAO,SACPyC,OAAQ,GAGVojF,MAAO,CACLtrC,KAAM,QACNga,KAAM0oB,EAAWuG,QACjB7G,SAAUnC,EAASC,KACnBz6E,MAAO,WACPyC,OAAQ,GAGVqjF,KAAM,CACJvrC,KAAM,OACNga,KAAM0oB,EAAWuG,QACjB7G,SAAUnC,EAASC,KACnBz6E,MAAO,QACPyC,OAAQ,GAGVsjF,QAAS,CACPxrC,KAAM,UACNga,KAAM0oB,EAAWuG,QACjB7G,SAAUnC,EAASC,KACnBz6E,MAAO,IACPyC,OAAQ,GAIVujF,GAAI,CACFzrC,KAAM,KACNga,KAAM0oB,EAAWwG,OACjB9G,SAAUnC,EAAS6G,MACnBrhF,MAAO,EACPyC,OAAQ,GAEVwjF,EAAG,CACD1rC,KAAM,IACNga,KAAM0oB,EAAWwG,OACjB9G,SAAUnC,EAASiF,MACnBz/E,MAAO,KACPyC,OAAQ,GAGVqH,EAAG,CACDywC,KAAM,IACNga,KAAM0oB,EAAWwG,OACjB9G,SAAUnC,EAASiF,MACnBz/E,MAAO,KACPyC,OAAQ,GAGVyjF,MAAO,CACL3rC,KAAM,QACNga,KAAM0oB,EAAWwG,OACjB9G,SAAUnC,EAASuF,KACnB//E,MAAO,KACPyC,OAAQ,GAEV0jF,KAAM,CACJ5rC,KAAM,OACNga,KAAM0oB,EAAWwG,OACjB9G,SAAUnC,EAASC,KACnBz6E,MAAO,aACPyC,OAAQ,GAGV2jF,KAAM,CACJ7rC,KAAM,OACNga,KAAM0oB,EAAWwG,OACjB9G,SAAUnC,EAASC,KACnBz6E,MAAO,cACPyC,OAAQ,GAGV4jF,KAAM,CACJ9rC,KAAM,OACNga,KAAM0oB,EAAWwG,OACjB9G,SAAUnC,EAASC,KACnBz6E,MAAO,cACPyC,OAAQ,GAGV6jF,SAAU,CACR/rC,KAAM,WACNga,KAAM0oB,EAAWwG,OACjB9G,SAAUnC,EAASC,KACnBz6E,MAAO,KACPyC,OAAQ,GAGV8jF,WAAY,CACVhsC,KAAM,aACNga,KAAM0oB,EAAWwG,OACjB9G,SAAUnC,EAASC,KACnBz6E,MAAO,MACPyC,OAAQ,GAIV+jF,KAAM,CACJjsC,KAAM,OACNga,KAAM0oB,EAAWwG,OACjB9G,SAAUnC,EAASC,KACnBz6E,MAAO,KACPyC,OAAQ,GAGVgkF,IAAK,CACHlsC,KAAM,MACNga,KAAM0oB,EAAWwG,OACjB9G,SAAUnC,EAASC,KACnBz6E,MAAO,KACPyC,OAAQ,GAIVikF,MAAO,CACLnsC,KAAM,QACNga,KAAM0oB,EAAWwG,OACjB9G,SAAUnC,EAASC,KACnBz6E,MAAO,YACPyC,OAAQ,GAGVkkF,UAAW,CACTpsC,KAAM,YACNga,KAAM0oB,EAAWwG,OACjB9G,SAAUnC,EAASC,KACnBz6E,MAAO,aACPyC,OAAQ,GAGVmkF,WAAY,CACVrsC,KAAM,aACNga,KAAM0oB,EAAWwG,OACjB9G,SAAUnC,EAASC,KACnBz6E,MAAO,YACPyC,OAAQ,GAGVokF,KAAM,CACJtsC,KAAM,OACNga,KAAM0oB,EAAWwG,OACjB9G,SAAUnC,EAASC,KACnBz6E,MAAO,YACPyC,OAAQ,GAGVqkF,GAAI,CACFvsC,KAAM,KACNga,KAAM0oB,EAAWwG,OACjB9G,SAAUnC,EAASC,KACnBz6E,MAAO,KACPyC,OAAQ,GAGVskF,IAAK,CACHxsC,KAAM,MACNga,KAAM0oB,EAAWwG,OACjB9G,SAAUnC,EAASC,KACnBz6E,MAAO,YACPyC,OAAQ,GAGVukF,KAAM,CACJzsC,KAAM,OACNga,KAAM0oB,EAAWwG,OACjB9G,SAAUnC,EAASC,KACnBz6E,MAAO,YACPyC,OAAQ,GAGVwkF,MAAO,CACL1sC,KAAM,QACNga,KAAM0oB,EAAWwG,OACjB9G,SAAUnC,EAASC,KACnBz6E,MAAO,YACPyC,OAAQ,GAGVykF,OAAQ,CACN3sC,KAAM,SACNga,KAAM0oB,EAAWwG,OACjB9G,SAAUnC,EAASC,KACnBz6E,MAAO,WACPyC,OAAQ,GAGV0kF,WAAY,CACV5sC,KAAM,aACNga,KAAM0oB,EAAWwG,OACjB9G,SAAUnC,EAASC,KACnBz6E,MAAO,SACPyC,OAAQ,GAGV2kF,UAAW,CACT7sC,KAAM,YACNga,KAAM0oB,EAAWwG,OACjB9G,SAAUnC,EAASC,KACnBz6E,MAAO,SACPyC,OAAQ,GAGV4kF,SAAU,CACR9sC,KAAM,WACNga,KAAM0oB,EAAWwG,OACjB9G,SAAUnC,EAASC,KACnBz6E,MAAO,QACPyC,OAAQ,GAIV6kF,KAAM,CACJ/sC,KAAM,OACNga,KAAM0oB,EAAWwG,OACjB9G,SAAUnC,EAASC,KACnBz6E,MAAO,aACPyC,OAAQ,GAGV8kF,KAAM,CACJhtC,KAAM,OACNga,KAAM0oB,EAAWwG,OACjB9G,SAAUnC,EAASC,KACnBz6E,MAAO,YACPyC,OAAQ,GAGV+kF,GAAI,CACFjtC,KAAM,KACNga,KAAM0oB,EAAWwG,OACjB9G,SAAUnC,EAASC,KACnBz6E,MAAO,YACPyC,OAAQ,GAGVglF,GAAI,CACFltC,KAAM,KACNga,KAAM0oB,EAAWwG,OACjB9G,SAAUnC,EAASC,KACnBz6E,MAAO,YACPyC,OAAQ,GAGVilF,GAAI,CACFntC,KAAM,KACNga,KAAM0oB,EAAWwG,OACjB9G,SAAUnC,EAASC,KACnBz6E,MAAO,YACPyC,OAAQ,GAGVklF,GAAI,CACFptC,KAAM,KACNga,KAAM0oB,EAAWwG,OACjB9G,SAAUnC,EAASC,KACnBz6E,MAAO,YACPyC,OAAQ,GAGVmlF,IAAK,CACHrtC,KAAM,MACNga,KAAM0oB,EAAWwG,OACjB9G,SAAUnC,EAASC,KACnBz6E,MAAO,WACPyC,OAAQ,GAGVolF,IAAK,CACHttC,KAAM,MACNga,KAAM0oB,EAAWwG,OACjB9G,SAAUnC,EAASC,KACnBz6E,MAAO,SACPyC,OAAQ,GAGVqlF,IAAK,CACHvtC,KAAM,MACNga,KAAM0oB,EAAWwG,OACjB9G,SAAUnC,EAASC,KACnBz6E,MAAO,SACPyC,OAAQ,GAKV4d,EAAG,CACDk6B,KAAM,IACNga,KAAM0oB,EAAW+F,KACjBrG,SAAUnC,EAASiF,MACnBz/E,MAAO,KACPyC,OAAQ,GAEVslF,KAAM,CACJxtC,KAAM,OACNga,KAAM0oB,EAAW+F,KACjBrG,SAAUnC,EAASuF,KACnB//E,MAAO,KACPyC,OAAQ,GAEVulF,IAAK,CACHztC,KAAM,MACNga,KAAM0oB,EAAW+F,KACjBrG,SAAUnC,EAASiF,MACnBz/E,MAAO,UACPyC,OAAQ,GAEVoB,EAAG,CACD02C,KAAM,IACNga,KAAM0oB,EAAW+F,KACjBrG,SAAUnC,EAASiF,MACnBz/E,MAAO,IACPyC,OAAQ,GAEVwlF,MAAO,CACL1tC,KAAM,QACNga,KAAM0oB,EAAW+F,KACjBrG,SAAUnC,EAASuF,KACnB//E,MAAO,IACPyC,OAAQ,GAEVylF,MAAO,CACL3tC,KAAM,QACNga,KAAM0oB,EAAW+F,KACjBrG,SAAUnC,EAASC,KACnBz6E,MAAO,YACPyC,OAAQ,GAEV0lF,KAAM,CACJ5tC,KAAM,OACNga,KAAM0oB,EAAW+F,KACjBrG,SAAUnC,EAASC,KACnBz6E,MAAO,kBACPyC,OAAQ,GAEV2lF,MAAO,CACL7tC,KAAM,QACNga,KAAM0oB,EAAW+F,KACjBrG,SAAUnC,EAASC,KACnBz6E,MAAO,cACPyC,OAAQ,GAEV4lF,UAAW,CACT9tC,KAAM,YACNga,KAAM0oB,EAAW+F,KACjBrG,SAAUnC,EAASC,KACnBz6E,MAAO,UACPyC,OAAQ,GAEV6lF,cAAe,CACb/tC,KAAM,gBACNga,KAAM0oB,EAAW+F,KACjBrG,SAAUnC,EAASC,KACnBz6E,MAAO,UACPyC,OAAQ,GAEV8lF,MAAO,CACLhuC,KAAM,QACNga,KAAM0oB,EAAW+F,KACjBrG,SAAUnC,EAASC,KACnBz6E,MAAO,KACPyC,OAAQ,GAEV+lF,MAAO,CACLjuC,KAAM,QACNga,KAAM0oB,EAAW+F,KACjBrG,SAAUnC,EAASC,KACnBz6E,MAAO,WACPyC,OAAQ,GAEVgmF,GAAI,CACFluC,KAAM,KACNga,KAAM0oB,EAAW+F,KACjBrG,SAAUnC,EAASC,KACnBz6E,MAAO,YACPyC,OAAQ,GAEVimF,GAAI,CACFnuC,KAAM,KACNga,KAAM0oB,EAAW+F,KACjBrG,SAAUnC,EAASC,KACnBz6E,MAAO,kBACPyC,OAAQ,GAEVkmF,GAAI,CACFpuC,KAAM,KACNga,KAAM0oB,EAAW+F,KACjBrG,SAAUnC,EAASC,KACnBz6E,MAAO,cACPyC,OAAQ,GAEVmmF,IAAK,CACHruC,KAAM,MACNga,KAAM0oB,EAAW+F,KACjBrG,SAAUnC,EAASC,KACnBz6E,MAAO,UACPyC,OAAQ,GAEVomF,IAAK,CACHtuC,KAAM,MACNga,KAAM0oB,EAAW+F,KACjBrG,SAAUnC,EAASC,KACnBz6E,MAAO,UACPyC,OAAQ,GAGVhC,EAAG,CACD85C,KAAM,IACNga,KAAM0oB,EAAWiG,KACjBvG,SAAUnC,EAASiF,MACnBz/E,MAAO,EACPyC,OAAQ,GAEVvB,IAAK,CACHq5C,KAAM,MACNga,KAAM0oB,EAAWiG,KACjBvG,SAAUnC,EAASC,KACnBz6E,MAAO,GACPyC,OAAQ,GAEVwT,EAAG,CACDskC,KAAM,IACNga,KAAM0oB,EAAWiG,KACjBvG,SAAUnC,EAASC,KACnBz6E,MAAO,KACPyC,OAAQ,GAEVqmF,OAAQ,CACNvuC,KAAM,SACNga,KAAM0oB,EAAWiG,KACjBvG,SAAUnC,EAASuF,KACnB//E,MAAO,EACPyC,OAAQ,GAEVw5D,IAAK,CACH1hB,KAAM,MACNga,KAAM0oB,EAAWiG,KACjBvG,SAAUnC,EAASuF,KACnB//E,MAAO,EACPyC,OAAQ,GAEVsmF,OAAQ,CACNxuC,KAAM,SACNga,KAAM0oB,EAAWiG,KACjBvG,SAAUnC,EAASC,KACnBz6E,MAAO,GACPyC,OAAQ,GAEVumF,KAAM,CACJzuC,KAAM,OACNga,KAAM0oB,EAAWiG,KACjBvG,SAAUnC,EAASC,KACnBz6E,MAAO,KACPyC,OAAQ,GAEVwmF,IAAK,CACH1uC,KAAM,MACNga,KAAM0oB,EAAWiG,KACjBvG,SAAUnC,EAASC,KACnBz6E,MAAO,MACPyC,OAAQ,GAEVymF,KAAM,CACJ3uC,KAAM,OACNga,KAAM0oB,EAAWiG,KACjBvG,SAAUnC,EAASC,KACnBz6E,MAAO,OACPyC,OAAQ,GAEV0mF,MAAO,CACL5uC,KAAM,QACNga,KAAM0oB,EAAWiG,KACjBvG,SAAUnC,EAASC,KACnBz6E,MAAO,QAEPyC,OAAQ,GAEV2mF,KAAM,CACJ7uC,KAAM,OACNga,KAAM0oB,EAAWiG,KACjBvG,SAAUnC,EAASC,KACnBz6E,MAAO,SAEPyC,OAAQ,GAEV4mF,OAAQ,CACN9uC,KAAM,SACNga,KAAM0oB,EAAWiG,KACjBvG,SAAUnC,EAASC,KACnBz6E,MAAO,SAEPyC,OAAQ,GAEV6mF,QAAS,CACP/uC,KAAM,UACNga,KAAM0oB,EAAWiG,KACjBvG,SAAUnC,EAASC,KACnBz6E,MAAO,SAEPyC,OAAQ,GAEV8mF,WAAY,CACVhvC,KAAM,aACNga,KAAM0oB,EAAWiG,KACjBvG,SAAUnC,EAASC,KACnBz6E,MAAO,SAEPyC,OAAQ,GAGV+mF,MAAO,CACLjvC,KAAM,QACNga,KAAM0oB,EAAWoH,UACjB1H,SAAUnC,EAASuF,KACnB//E,MAAO,EACPyC,OAAQ,EACRgnF,YAAY,GAEdC,GAAI,CACFnvC,KAAM,KACNga,KAAM0oB,EAAWoH,UACjB1H,SAAUnC,EAASiF,MACnBz/E,MAAO,EACPyC,OAAQ,EACRgnF,YAAY,GAGdE,IAAK,CACHpvC,KAAM,MACNga,KAAM0oB,EAAWqH,MACjB3H,SAAUnC,EAASiF,MACnBz/E,MAAO,EACPyC,OAAQ,GAEVmnF,OAAQ,CACNrvC,KAAM,SACNga,KAAM0oB,EAAWqH,MACjB3H,SAAUnC,EAASuF,KACnB//E,MAAO,EACPyC,OAAQ,GAGV+/B,IAAK,CACH+X,KAAM,MACNga,KAAM0oB,EAAWqH,MACjB3H,SAAUnC,EAASiF,MACnBz/E,MAAO,KAEPyC,OAAQ,GAEVigC,OAAQ,CACN6X,KAAM,SACNga,KAAM0oB,EAAWqH,MACjB3H,SAAUnC,EAASuF,KACnB//E,MAAO,KAEPyC,OAAQ,GAGVonF,KAAM,CACJtvC,KAAM,OACNga,KAAM0oB,EAAWqH,MACjB3H,SAAUnC,EAASiF,MACnBz/E,MAAO,KAEPyC,OAAQ,GAEVqnF,QAAS,CACPvvC,KAAM,UACNga,KAAM0oB,EAAWqH,MACjB3H,SAAUnC,EAASuF,KACnB//E,MAAO,KAEPyC,OAAQ,GAGVsnF,MAAO,CACLxvC,KAAM,QACNga,KAAM0oB,EAAWqH,MACjB3H,SAAUnC,EAASC,KACnBz6E,MAAO,KAEPyC,OAAQ,GAGVunF,OAAQ,CACNzvC,KAAM,SACNga,KAAM0oB,EAAWqH,MACjB3H,SAAUnC,EAASC,KACnBz6E,MAAO,KAEPyC,OAAQ,GAGVwnF,OAAQ,CACN1vC,KAAM,SACNga,KAAM0oB,EAAWqH,MACjB3H,SAAUnC,EAASC,KACnBz6E,MAAO,KAEPyC,OAAQ,GAGV27D,EAAG,CACD7jB,KAAM,IACNga,KAAM0oB,EAAWkG,QACjBxG,SAAUnC,EAASiF,MACnBz/E,MAAO,EACPyC,OAAQ,GAEVynF,OAAQ,CACN3vC,KAAM,SACNga,KAAM0oB,EAAWkG,QACjBxG,SAAUnC,EAASuF,KACnB//E,MAAO,EACPyC,OAAQ,GAMV0nF,EAAG,CACD5vC,KAAM,IACNga,KAAM0oB,EAAWmG,YACjBzG,SAAUnC,EAASC,KACnBz6E,MAAO,EACPyC,OAAQ,GAEV2nF,KAAM,CACJ7vC,KAAM,OACNga,KAAM0oB,EAAWmG,YACjBzG,SAAUnC,EAASC,KACnBz6E,MAAO,EACPyC,OAAQ,QAEV4nF,KAAM,CACJ9vC,KAAM,OACNga,KAAM0oB,EAAWmG,YACjBzG,SAAUnC,EAASC,KACnBz6E,MAAO,EAAI,IACXyC,OAAQ,QAEV6nF,KAAM,CACJ/vC,KAAM,OACNga,KAAM0oB,EAAWmG,YACjBzG,SAAUnC,EAASC,KACnBz6E,MAAO,EAAI,IACXyC,OAAQ,GAEV8nF,OAAQ,CACNhwC,KAAM,SACNga,KAAM0oB,EAAWmG,YACjBzG,SAAUnC,EAASC,KACnBz6E,MAAO,EACPyC,OAAQ,GAEV+nF,QAAS,CACPjwC,KAAM,UACNga,KAAM0oB,EAAWmG,YACjBzG,SAAUnC,EAASC,KACnBz6E,MAAO,EACPyC,OAAQ,QAEVgoF,WAAY,CACVlwC,KAAM,aACNga,KAAM0oB,EAAWmG,YACjBzG,SAAUnC,EAASC,KACnBz6E,MAAO,EAAI,IACXyC,OAAQ,QAEVioF,QAAS,CACPnwC,KAAM,UACNga,KAAM0oB,EAAWmG,YACjBzG,SAAUnC,EAASC,KACnBz6E,MAAO,EAAI,IACXyC,OAAQ,GAGVkoF,IAAK,CACHpwC,KAAM,MACNga,KAAM0oB,EAAWqG,oBACjB3G,SAAUnC,EAASiF,MACnBz/E,MAAO,EACPyC,OAAQ,GAEVmoF,KAAM,CACJrwC,KAAM,OACNga,KAAM0oB,EAAWqG,oBACjB3G,SAAUnC,EAASuF,KACnB//E,MAAO,EACPyC,OAAQ,GAGVooF,GAAI,CACFtwC,KAAM,KACNga,KAAM0oB,EAAWoG,mBACjB1G,SAAUnC,EAASiF,MACnBz/E,MAAO,EACPyC,OAAQ,GAEVqoF,QAAS,CACPvwC,KAAM,UACNga,KAAM0oB,EAAWoG,mBACjB1G,SAAUnC,EAASuF,KACnB//E,MAAO,EACPyC,OAAQ,GAMV+7D,EAAG,CACDjkB,KAAM,IACNga,KAAM0oB,EAAWsG,MACjB5G,SAAUnC,EAASiF,MACnBz/E,MAAO,EACPyC,OAAQ,GAEVsoF,OAAQ,CACNxwC,KAAM,SACNga,KAAM0oB,EAAWsG,MACjB5G,SAAUnC,EAASuF,KACnB//E,MAAO,EACPyC,OAAQ,GAEVuoF,IAAK,CACHzwC,KAAM,MACNga,KAAM0oB,EAAWsG,MACjB5G,SAAUnC,EAASiF,MACnBz/E,MAAO,KACPyC,OAAQ,GAEVwoF,KAAM,CACJ1wC,KAAM,OACNga,KAAM0oB,EAAWsG,MACjB5G,SAAUnC,EAASuF,KACnB//E,MAAO,KACPyC,OAAQ,GAEVyoF,IAAK,CACH3wC,KAAM,MACNga,KAAM0oB,EAAWsG,MACjB5G,SAAUnC,EAASC,KACnBz6E,MAAO,gBACPyC,OAAQ,GAEV0oF,WAAY,CACV5wC,KAAM,aACNga,KAAM0oB,EAAWsG,MACjB5G,SAAUnC,EAASC,KACnBz6E,MAAO,gBACPyC,OAAQ,GAEV2oF,IAAK,CACH7wC,KAAM,MACNga,KAAM0oB,EAAWsG,MACjB5G,SAAUnC,EAASuF,KACnB//E,MAAO,UACPyC,OAAQ,GAEV4oF,cAAe,CACb9wC,KAAM,gBACNga,KAAM0oB,EAAWsG,MACjB5G,SAAUnC,EAASC,KACnBz6E,MAAO,QACPyC,OAAQ,GAGV6oF,EAAG,CACD/wC,KAAM,IACNga,KAAM0oB,EAAWyG,OACjB/G,SAAUnC,EAASiF,MACnBz/E,MAAO,EACPyC,OAAQ,GAEV8oF,MAAO,CACLhxC,KAAM,QACNga,KAAM0oB,EAAWyG,OACjB/G,SAAUnC,EAASiF,MACnBz/E,MAAO,EACPyC,OAAQ,GAEV+oF,IAAK,CACHjxC,KAAM,MACNga,KAAM0oB,EAAWyG,OACjB/G,SAAUnC,EAASC,KACnBz6E,MAAO,KACPyC,OAAQ,GAEVgpF,GAAI,CACFlxC,KAAM,KACNga,KAAM0oB,EAAWyG,OACjB/G,SAAUnC,EAASiF,MACnBz/E,MAAO,KACPyC,OAAQ,GAEVigF,IAAK,CACHnoC,KAAM,MACNga,KAAM0oB,EAAWyG,OACjB/G,SAAUnC,EAASkI,IACnB1iF,MAAO,cACPyC,OAAQ,GAEVipF,GAAI,CACFnxC,KAAM,KACNga,KAAM0oB,EAAWyG,OACjB/G,SAAUnC,EAASiF,MACnBz/E,MAAO,eACPyC,OAAQ,GAEVkpF,aAAc,CACZpxC,KAAM,eACNga,KAAM0oB,EAAWyG,OACjB/G,SAAUnC,EAASuF,KACnB//E,MAAO,eACPyC,OAAQ,GAGV+6E,EAAG,CACDjjC,KAAM,IACNga,KAAM0oB,EAAW0G,MACjBhH,SAAUnC,EAASiF,MACnBz/E,MAAO,EACPyC,OAAQ,GAEVmpF,KAAM,CACJrxC,KAAM,OACNga,KAAM0oB,EAAW0G,MACjBhH,SAAUnC,EAASuF,KACnB//E,MAAO,EACPyC,OAAQ,GAEVopF,GAAI,CACFtxC,KAAM,KACNga,KAAM0oB,EAAW0G,MACjBhH,SAAUnC,EAASC,KACnBz6E,MAAO,eACPyC,OAAQ,GAGVk8E,IAAK,CACHpkC,KAAM,MACNga,KAAM0oB,EAAW0G,MACjBhH,SAAUnC,EAASiF,MACnBz/E,MAAOysD,EAAQq/B,EACfrpF,OAAQ,GAEVm8E,GAAI,CACFrkC,KAAM,KACNga,KAAM0oB,EAAW0G,MACjBhH,SAAUnC,EAASiF,MACnBz/E,MAAO,EACPyC,OAAQ,GAGVspF,GAAI,CACFxxC,KAAM,KACNga,KAAM0oB,EAAW2G,SACjBjH,SAAUnC,EAASiF,MACnBz/E,MAAO,EACPyC,OAAQ,GAEVupF,IAAK,CACHzxC,KAAM,MACNga,KAAM0oB,EAAW2G,SACjBjH,SAAUnC,EAASC,KACnBz6E,MAAO,iBACPyC,OAAQ,GAEVwpF,IAAK,CACH1xC,KAAM,MACNga,KAAM0oB,EAAW2G,SACjBjH,SAAUnC,EAASC,KACnBz6E,MAAO,OACPyC,OAAQ,GAEVypF,IAAK,CACH3xC,KAAM,MACNga,KAAM0oB,EAAW2G,SACjBjH,SAAUnC,EAASoI,UACnB5iF,MAAO,IACPyC,OAAQ,GAEV0pF,KAAM,CACJ5xC,KAAM,OACNga,KAAM0oB,EAAW2G,SACjBjH,SAAUnC,EAASC,KACnBz6E,MAAO,QACPyC,OAAQ,GAEV2pF,KAAM,CACJ7xC,KAAM,OACNga,KAAM0oB,EAAW2G,SACjBjH,SAAUnC,EAASC,KACnBz6E,MAAO,QACPyC,OAAQ,GAEV4pF,MAAO,CACL9xC,KAAM,QACNga,KAAM0oB,EAAW2G,SACjBjH,SAAUnC,EAASC,KACnBz6E,MAAO,QACPyC,OAAQ,GAEV6pF,MAAO,CACL/xC,KAAM,QACNga,KAAM0oB,EAAW2G,SACjBjH,SAAUnC,EAASC,KACnBz6E,MAAO,QACPyC,OAAQ,GAGV8pF,QAAS,CACPhyC,KAAM,UACNga,KAAM0oB,EAAW4G,gBACjBlH,SAAUnC,EAASuF,KACnB//E,MAAO,EACPyC,OAAQ,GAEV67D,EAAG,CACD/jB,KAAM,IACNga,KAAM0oB,EAAW4G,gBACjBlH,SAAUnC,EAASiF,MACnBz/E,MAAO,EACPyC,OAAQ,GAGV+pF,MAAO,CACLjyC,KAAM,QACNga,KAAM0oB,EAAW6G,qBACjBnH,SAAUnC,EAASuF,KACnB//E,MAAO,EACPyC,OAAQ,GAEVgqF,EAAG,CACDlyC,KAAM,IACNga,KAAM0oB,EAAW6G,qBACjBnH,SAAUnC,EAASiF,MACnBz/E,MAAO,EACPyC,OAAQ,GAGViqF,KAAM,CACJnyC,KAAM,OACNga,KAAM0oB,EAAW8G,mBACjBpH,SAAUnC,EAASuF,KACnB//E,MAAO,EACPyC,OAAQ,GAEVkqF,EAAG,CACDpyC,KAAM,IACNga,KAAM0oB,EAAW8G,mBACjBpH,SAAUnC,EAASiF,MACnBz/E,MAAO,EACPyC,OAAQ,GAGVmqF,IAAK,CACHryC,KAAM,MACNga,KAAM0oB,EAAW+G,oBACjBrH,SAAUnC,EAASoI,UAEnB5iF,MAAO,EACPyC,OAAQ,GAcVoqF,MAAO,CACLtyC,KAAM,QACNga,KAAM0oB,EAAWgH,oBACjBtH,SAAUnC,EAASuF,KACnB//E,MAAO,EACPyC,OAAQ,GAEVqqF,EAAG,CACDvyC,KAAM,IACNga,KAAM0oB,EAAWgH,oBACjBtH,SAAUnC,EAASiF,MACnBz/E,MAAO,EACPyC,OAAQ,GAGVsqF,QAAS,CACPxyC,KAAM,UACNga,KAAM0oB,EAAWiH,qBACjBvH,SAAUnC,EAASuF,KACnB//E,MAAO,EACPyC,OAAQ,GAEVuqF,EAAG,CACDzyC,KAAM,IACNga,KAAM0oB,EAAWiH,qBACjBvH,SAAUnC,EAASiF,MACnBz/E,MAAO,EACPyC,OAAQ,GAGVwqF,MAAO,CACL1yC,KAAM,QACNga,KAAM0oB,EAAWkH,cACjBxH,SAAUnC,EAASuF,KACnB//E,MAAO,EACPyC,OAAQ,GAEVyqF,GAAI,CACF3yC,KAAM,KACNga,KAAM0oB,EAAWkH,cACjBxH,SAAUnC,EAASiF,MACnBz/E,MAAO,EACPyC,OAAQ,GAGV0qF,MAAO,CACL5yC,KAAM,QACNga,KAAM0oB,EAAWmH,sBACjBzH,SAAUnC,EAASuF,KACnB//E,MAAO,EACPyC,OAAQ,GAEVm9E,EAAG,CACDrlC,KAAM,IACNga,KAAM0oB,EAAWmH,sBACjBzH,SAAUnC,EAASiF,MACnBz/E,MAAO,EACPyC,OAAQ,GAGVie,EAAG,CACD65B,KAAM,IACNga,KAAM0oB,EAAWsH,IACjB5H,SAAUnC,EAASsI,aACnB9iF,MAAO,EACPyC,OAAQ,GAEV2qF,KAAM,CACJ7yC,KAAM,OACNga,KAAM0oB,EAAWsH,IACjB5H,SAAUnC,EAASuI,YACnB/iF,MAAO,EACPyC,OAAQ,GAEV47D,EAAG,CACD9jB,KAAM,IACNga,KAAM0oB,EAAWsH,IACjB5H,SAAUnC,EAASsI,aACnB9iF,MAAO,EACPyC,OAAQ,GAEV4qF,MAAO,CACL9yC,KAAM,QACNga,KAAM0oB,EAAWsH,IACjB5H,SAAUnC,EAASuI,YACnB/iF,MAAO,EACPyC,OAAQ,IAIR6qF,EAAU,CACZC,OAAQ,QACRC,OAAQ,OACRC,KAAM,OACNC,MAAO,OACPC,MAAO,OACPC,MAAO,OACPC,KAAM,MACNC,OAAQ,QACRC,UAAW,WACXhsD,GAAI,IACJisD,OAAQ,QACRC,MAAO,QACPC,OAAQ,QACRC,UAAW,WACXC,YAAa,aACbC,OAAQ,QACRC,WAAY,YACZC,YAAa,aACbC,MAAO,OACPC,KAAM,MACNC,MAAO,OACPC,OAAQ,QACRC,QAAS,SACTC,YAAa,aACbC,WAAY,YACZC,UAAW,WACXC,KAAM,MACNC,MAAO,OACPC,KAAM,MACNC,OAAQ,QACRC,OAAQ,QACRC,MAAO,OACPC,OAAQ,QACRC,YAAa,YACbC,eAAgB,gBAChBC,OAAQ,QACRC,GAAI,MACJC,IAAK,MACLC,KAAM,MACNC,IAAK,gBACLC,MAAO,OACPC,SAAU,UACVC,OAAQ,OACRC,OAAQ,OACRC,OAAQ,OACRC,QAAS,OACTC,KAAM,OACNC,MAAO,QACPC,MAAO,QACPC,QAAS,SACTC,KAAM,SACNC,QAAS,SACTC,KAAM,SACNC,MAAO,OACPC,GAAI,OACJC,IAAK,OACLC,KAAM,MACNC,MAAO,OACPC,OAAQ,QACRC,MAAO,OACPC,QAAS,SACTC,UAAW,UACXC,UAAW,aACX5H,MAAO,QACP1kF,QAAS,SACTD,QAAS,SACTwsF,SAAU,UACVC,OAAQ,QACRC,UAAW,SACXC,WAAY,SACZC,UAAW,SACXC,WAAY,SACZC,KAAM,MACNC,MAAO,OACPC,OAAQ,QACRC,QAAS,SACTC,SAAU,UACVC,MAAO,OACPC,KAAM,MACNC,OAAQ,QACRC,OAAQ,QACRC,OAAQ,QACRC,cAAe,eACfC,MAAO,OACPC,IAAK,OACLC,KAAM,oBAQsBC,MACN,cAAlBA,EAAOv/C,OAAwB,KAC7B2lB,EAAK65B,GAASxY,KACZyP,IAAI3pF,MAAQ,IAAIk6E,EAAW,KAC3B13C,IAAIxiC,MAAQ64D,EAAGlH,IAAI,OAEnBk4B,KAAK7pF,MAAQ64D,EAAGlH,IAAI,OAEpBo4B,MAAM/pF,MAAQ64D,EAAGnI,MAAM,KAEvBs5B,OAAOhqF,MAAQ64D,EAAGlH,IAAI,SAEtBs4B,OAAOjqF,MAAQ64D,EAAGlH,IAAI,cAGtBg4B,IAAI3pF,MAAQ,IACZwiC,IAAIxiC,MAAQiB,KAAKe,GAAK,MAEtB6nF,KAAK7pF,MAAQiB,KAAKe,GAAK,MAEvB+nF,MAAM/pF,MAAkB,EAAViB,KAAKe,KAEnBgoF,OAAOhqF,MAAQiB,KAAKe,GAAK,QAEzBioF,OAAOjqF,MAAQiB,KAAKe,GAAK,QAI3B4nF,OAAO5pF,MAAQ08E,EAAMiN,IAAI3pF,QACzB0iC,OAAO1iC,MAAQ08E,EAAMl6C,IAAIxiC,QACzB8pF,QAAQ9pF,MAAQ08E,EAAMmN,KAAK7pF,QAId89B,GAEjBk9B,KAEC,UAAU,SAAUlhB,EAAMD,GACvBC,EAAK5G,SAAW2G,EAAK3G,UACF4G,UAWvBokC,EAAe,CACjBC,GAAI,CAEF1D,KAAM,CACJxoC,KAAMqoC,EACNC,OAAQC,EAASC,KAAK,KAExBwI,OAAQ,CACNhxC,KAAMyqC,EAAM57E,EACZy5E,OAAQC,EAASiF,MAAM,KAEzBuD,KAAM,CACJ/wC,KAAMyqC,EAAMr8D,EACZk6D,OAAQC,EAASiF,MAAM97C,GAEzBu/C,KAAM,CACJjxC,KAAMyqC,EAAMj8E,EACZ85E,OAAQC,EAASiF,MAAM,KAEzB0D,QAAS,CACPlxC,KAAMyqC,EAAMte,EACZmc,OAAQC,EAASiF,MAAM,KAEzB2D,YAAa,CACXnxC,KAAMyqC,EAAMyN,EACZ5P,OAAQC,EAASiF,MAAM,KAEzB4D,mBAAoB,CAClBpxC,KAAMyqC,EAAMmO,GACZtQ,OAAQC,EAASiF,MAAM,KAEzB6D,oBAAqB,CACnBrxC,KAAMyqC,EAAMiO,IACZpQ,OAAQC,EAASiF,MAAM,KAEzB6E,MAAO,CACLryC,KAAMyqC,EAAMiN,IACZpP,OAAQC,EAASiF,MAAM,KAEzB8E,IAAK,CACHtyC,KAAMyqC,EAAM0Q,KACZ7S,OAAQC,EAASiF,MAAM,KAGzB8D,MAAO,CACLtxC,KAAMyqC,EAAMle,EACZ+b,OAAQC,EAASiF,MAAM,KAEzBiE,OAAQ,CACNzxC,KAAMyqC,EAAM4O,EACZ/Q,OAAQC,EAASiF,MAAM,KAEzBkE,MAAO,CACL1xC,KAAMyqC,EAAMc,EACZjD,OAAQC,EAASiF,MAAM,KAEzBmE,SAAU,CACR3xC,KAAMyqC,EAAMqP,GACZxR,OAAQC,EAASiF,MAAM,KAEzBoE,gBAAiB,CACf5xC,KAAMyqC,EAAMpe,EACZic,OAAQC,EAASiF,MAAM,KAEzBqE,qBAAsB,CACpB7xC,KAAMyqC,EAAM+P,EACZlS,OAAQC,EAASiF,MAAM,KAEzBsE,mBAAoB,CAClB9xC,KAAMyqC,EAAMiQ,EACZpS,OAAQC,EAASiF,MAAM,KAEzBuE,oBAAqB,CACnB/xC,KAAMyqC,EAAMkQ,IACZrS,OAAQC,EAASiF,MAAM,KAEzBwE,oBAAqB,CACnBhyC,KAAMyqC,EAAMoQ,EACZvS,OAAQC,EAASiF,MAAM,KAEzByE,qBAAsB,CACpBjyC,KAAMyqC,EAAMsQ,EACZzS,OAAQC,EAASiF,MAAM,KAEzB0E,cAAe,CACblyC,KAAMyqC,EAAMwQ,GACZ3S,OAAQC,EAASiF,MAAM,KAEzB2E,sBAAuB,CACrBnyC,KAAMyqC,EAAMkD,EACZrF,OAAQC,EAASiF,MAAM,KAEzB4E,UAAW,CACTpyC,KAAMyqC,EAAMgN,GACZnP,OAAQC,EAASiF,MAAM,SAKhBkT,IAAMx4C,KAAK7H,MAAM6H,KAAKC,UAAU8jC,EAAaC,OAC7CwU,IAAI1P,OAAS,CACxBhxC,KAAMyqC,EAAM57E,EACZy5E,OAAQC,EAASiF,MAAMl6D,KAEZotE,IAAI3P,KAAO,CACtB/wC,KAAMyqC,EAAMr8D,EACZk6D,OAAQC,EAASiF,MAAM,OAEZkT,IAAIpP,MAAQ,CACvBtxC,KAAMyqC,EAAMsO,IACZzQ,OAAQC,EAASiF,MAAM,OAEZkT,IAAIjP,OAAS,CACxBzxC,KAAMyqC,EAAM8O,IACZjR,OAAQC,EAASC,KAAK,OAIXmY,GAAKz4C,KAAK7H,MAAM6H,KAAKC,UAAU8jC,EAAaC,OAC5CyU,GAAG3P,OAAS,CACvBhxC,KAAMyqC,EAAMuI,GACZ1K,OAAQC,EAASC,KAAK,OAEXmY,GAAG5P,KAAO,CACrB/wC,KAAMyqC,EAAMkM,IACZrO,OAAQC,EAASC,KAAK,OAEXmY,GAAGxP,YAAc,CAC5BnxC,KAAMyqC,EAAM2N,KACZ9P,OAAQC,EAASC,KAAK,OAEXmY,GAAGrP,MAAQ,CACtBtxC,KAAMyqC,EAAMwO,IACZ3Q,OAAQC,EAASC,KAAK,OAEXmY,GAAGlP,OAAS,CACvBzxC,KAAMyqC,EAAMgG,IACZnI,OAAQC,EAASkI,IAAI,OAEVkQ,GAAGjP,MAAQ,CACtB1xC,KAAMyqC,EAAMmP,GACZtR,OAAQC,EAASC,KAAK,OAEXmY,GAAGhP,SAAW,CACzB3xC,KAAMyqC,EAAMsP,IACZzR,OAAQC,EAASC,KAAK,OAIXuB,KAAO7hC,KAAK7H,MAAM6H,KAAKC,UAAU8jC,EAAaC,SAEvDJ,EAAoBG,EAAalC,aAkE5B6W,OA5DJC,cAAgB,SAAU3xE,OACzBw3B,GAAeulC,EAAc/8D,SAGzB,IAAIhhB,MAAM,eAAiBghB,EAAO,iCAAmC6K,OAAOytB,KAAKykC,GAAc7jC,KAAK,SAFtF6jC,EAAa/8D,MAWhC4xE,cAAgB,mBACVC,KAAQ9U,KACXvlC,GAAeulC,EAAc8U,IAC3B9U,EAAa8U,KAAUjV,SAClBiV,KAWVC,eAAiB,CACpBnnC,UAAW,SAAmBjsD,UACrB,IAAIq6E,EAAWr6E,EAAI,KAE5BosD,SAAU,SAAkBpsD,UACnB,IAAIs6E,EAAUt6E,IAEvBksD,QAAS,SAAiBlsD,UACjBA,GAETqzC,OAAQ,SAAgBrzC,UACfA,MAYN08E,oBAAsB,SAAUt5C,OAC9B4kC,EAAKorB,eAAehwD,SACjB,IAAIuV,UAAU,qBAAuBvV,EAAO,YAG7C4kC,EAAKorB,eAAehwD,IAIXy5C,KACZ/jC,GAAe+jC,EAAOmW,GAAQ,KAC5B5gD,EAAOyqC,EAAMmW,KACZxY,WAAapoC,EAAKsiB,KAAK8lB,mBAKvB6Y,KAAU5F,KACb30C,GAAe20C,EAAS4F,GAAS,KAC/BC,EAASzW,EAAM4Q,EAAQ4F,IACvBE,EAAQ,WAEHC,KAASF,EACZx6C,GAAew6C,EAAQE,OACnBA,GAASF,EAAOE,MAIpB94C,KAAO24C,IACPA,GAAUE,WAUfnY,aAAe,SAAsB7yE,SACjC,aAAaoyC,KAAKpyC,MAoCtBkrF,WAAa,SAAUvsD,EAAKwG,MACZ,iBAARxG,QACH,IAAIyR,UAAU,gEAIlBjL,GAAWA,EAAQgmD,iBACZC,KAASzsD,KACZ4R,GAAe5R,EAAKysD,MACjBC,WAAWD,GAGdzsD,EAAIysD,GAAOE,gBACJnwF,EAAI,EAAGA,EAAIwjC,EAAIysD,GAAOE,QAAQlyF,OAAQ+B,MACxCkwF,WAAW1sD,EAAIysD,GAAOE,QAAQnwF,QAOvCowF,UAEKC,KAAS7sD,EACZ4R,GAAe5R,EAAK6sD,OACX/rB,EAAKgsB,iBAAiBD,EAAO7sD,EAAI6sD,YAIzCD,KAgCJE,iBAAmB,SAAU1yE,EAAM4lB,EAAKwG,MACvC,MAAOxG,MACH,IAGY,iBAAT5lB,QACH,IAAIq3B,UAAU,sEAIlBG,GAAe+jC,EAAOv7D,SAClB,IAAIhhB,MAAM,uBAAyBghB,EAAO,qDAzGrBA,WACpB5d,EAAI,EAAGA,EAAI4d,EAAK3f,OAAQ+B,IAAK,MAChC4d,EAAKK,OAAOje,GAEN,IAANA,IAAYskE,EAAKoT,aAAal4E,SAC1B,IAAI5C,MAAM,yDAA2DghB,EAAO,QAGhF5d,EAAI,MAAY03E,aAAal4E,KAAM83E,EAAQ93E,SACvC,IAAI5C,MAAM,kEAAoEghB,EAAO,OAoGzEA,OAKlB2yE,EACAnX,EACAoX,EANAC,EAAU,KAEVN,EAAU,GACVjxF,EAAS,KAKTskC,GAAoB,SAAbA,EAAI9D,OACH8D,EAAIwH,gBACU,iBAARxH,EACJ,KAARA,MACWA,WAES,iBAARA,QAUV,IAAIyR,UAAU,uBAAyBr3B,EAAO,WAAa4lB,EAAIvjC,WAAa,iDATrEujC,EAAI+sD,aACN/sD,EAAI41C,WACN51C,EAAItkC,SACFskC,EAAIgtD,SAEXhtD,EAAI2sD,YACI3sD,EAAI2sD,QAAQn7C,cAMtBm7C,UACOnwF,EAAI,EAAGA,EAAImwF,EAAQlyF,OAAQ+B,OAC9Bo1C,GAAe+jC,EAAOgX,EAAQnwF,UAC1B,IAAIpD,MAAM,wBAA0BuzF,EAAQnwF,GAAK,8CAKzDuwF,GAAoC,iBAAfA,IAA4BE,QAEvCnsB,EAAKv1B,MAAMwhD,EAAY,CAC/B7X,cAAc,UAETvF,WACJjuB,QAAU,0BAA4BtnC,EAAO,WAAa2yE,EAAa,MAAQpd,EAAGjuB,QAC/EiuB,OAECod,GAAkC,SAApBA,EAAW7wD,SACxB6wD,EAAWvlD,WAGbmlD,GAAW,KACZjxF,GAAU,IAEfk6E,GAAYA,EAASz4E,aACZs2E,EAASmC,EAASz4E,gBAElBs2E,EAASC,SAKlBwZ,EAAU,MAETD,EAwCE,GACK,CACRz5C,KAAMp5B,EACNnhB,MAAOg0F,EAAQh0F,MACfq6E,WAAY2Z,EAAQ3Z,WAAWj4D,MAAM,GACrCu6D,SAAAA,EACAl6E,OAAAA,OAGEyxF,GAAW,UAEN7sB,KAAO4V,KACVtkC,GAAeskC,EAAY5V,GAAM,SAC/BzrB,GAAQ,EAEHn1B,EAAI,EAAGA,EAAIi0D,EAAgBl5E,OAAQilB,OACtCxlB,KAAKa,OAAau4E,WAAW5zD,IAAM,MAAiB4gD,GAAKgT,WAAW5zD,IAAM,IAAM,MAAO,IACjF,WAKRm1B,EAAO,IACE,IACH2Y,KAAO0oB,EAAW5V,cAM3B6sB,EAAU,GACFH,GAAY5yE,EAAO,aAG1BgzE,EAAe,CACjB9Z,WAAY2Z,EAAQ3Z,WAAWj4D,MAAM,MAE1BshB,IAAMqwD,IACRA,GAAYI,IACLJ,GAAY,CAC5B9hD,KAAMgiD,EACN1Z,OAAQC,EAASC,KAAK,OAEhBlmB,KAAO0oB,EAAW8W,QAnFhB,MAEDA,GAAY5yE,EAAO,SAE1Bu5D,EAAgBryC,QAAQ0rD,IAAa,QACjC,IAAI5zF,MAAM,gCAAkCghB,EAAO,mFAKlDxgB,OAFOivB,KAAKmkE,GAEP9W,EACRtkC,GAAeskC,EAAYt8E,OAClBA,GAAG05E,WAAWK,EAAgBl5E,OAAS,GAAK,WAKvD4yF,EAAc,CAChB/Z,WAAY,IAGLga,EAAM,EAAGA,EAAM3Z,EAAgBl5E,OAAQ6yF,MAClCha,WAAWga,GAAO,IAGpBha,WAAWK,EAAgBl5E,OAAS,GAAK,IACzCkiC,IAAMqwD,IACPA,GAAYK,IACb,CACR75C,KAAMp5B,EACNnhB,MAAO,EACPq6E,WAAY4C,EAAW8W,GAAU1Z,WAAWj4D,MAAM,GAClDu6D,SAAAA,EACAl6E,OAAAA,EACA8xD,KAAM0oB,EAAW8W,MAEDA,GAAY,CAC5B9hD,KAAMgiD,EACN1Z,OAAQC,EAASC,KAAK,OAiDrBiC,MAAMv7D,GAAQ8yE,UAEVK,EAAM,EAAGA,EAAMZ,EAAQlyF,OAAQ8yF,IAAO,KACzCC,EAAYb,EAAQY,GACpBE,EAAS,WAEJC,KAASR,EACZt7C,GAAes7C,EAASQ,OACnBA,GAASR,EAAQQ,MAIrBl6C,KAAOg6C,IACT7X,MAAM6X,GAAaC,gBAKnB1Y,EAAUzK,MACV,IAAIxJ,EAAK,KAAM1mD,MAGnBsyE,WAAa,SAAUtyE,UACnB0mD,EAAK6U,MAAMv7D,MAIfq5D,SAAWA,IACXE,gBAAkBA,IAClBuC,WAAaA,IACbiB,aAAeA,IACfxB,MAAQA,EACN7U,IACN,CACDza,SAAS,IC74HAsnC,MAHA,OACQ,CAAC,QAAS,SAE+C7oC,QACtEhR,MACFA,OACAgtB,GACEhc,SAyBGhR,EAhCE,OAgCU,CACjBgtB,KAAM,SAAchoE,UACXA,EAAE0uC,SAEXxtB,OAAQ,SAAgBlhB,UAClBgoE,EAAKqV,gBAAgBr9E,GAChB,IAAIgoE,EAAK,KAAMhoE,GAGjBgoE,EAAKv1B,MAAMzyC,EAAG,CACnBo8E,cAAc,KAGlB0Y,kDAAmD,SAA8C30F,EAAOiyC,UAC/F,IAAI41B,EAAK7nE,EAAOiyC,IAEzB8xB,iBAAkB,SAAqBlkE,UAC9BojE,GAAQpjE,EAAGE,YChDb60F,MAFA,aACQ,CAAC,QAAS,SAC6C/oC,QACpEhR,MACFA,OACAgtB,GACEhc,SA2CGhR,EAjDE,aAiDU,CAEjBg6C,iBAAkB,SAAsB9tD,EAAKwG,UACpCs6B,EAAKyrB,WAAWvsD,EAAKwG,IAG9BvhB,OAAQ,SAAgB+a,UACf8gC,EAAKyrB,WAAWvsD,EAAK,KAG9B+tD,yCAA0C,SAAsC3zE,EAAM4zE,EAAKxnD,OACrFxG,EAAM,YACN5lB,GAAQ4zE,EACLltB,EAAKyrB,WAAWvsD,EAAKwG,IAG9BynD,iCAAkC,SAAgC7zE,EAAM4zE,OAClEhuD,EAAM,YACN5lB,GAAQ4zE,EACLltB,EAAKyrB,WAAWvsD,EAAK,KAG9BhmB,OAAQ,SAAgBI,OAClB4lB,EAAM,YACN5lB,GAAQ,GACL0mD,EAAKyrB,WAAWvsD,EAAK,UClEvBkuD,MAFA,MACQ,CAAC,QAAS,SAAU,YAAa,cAAe,cAAe,iBACfppC,QAC7DhR,MACFA,SACA3kC,YACAyN,cACAmhD,cACA9Y,eACA+Y,GACElZ,EACAwkB,EAAcnF,GAAkB,CAClCrwB,MAAAA,IAEEq6C,EAAcvpB,GAAkB,CAClC9wB,MAAAA,EACAiqB,YAAAA,IAEEwL,EAActE,GAAkB,CAClCnxB,MAAAA,EACAmR,YAAAA,IAEEihB,EAAchB,GAAkB,CAClCpxB,MAAAA,IAEEmvB,EAAcV,GAAkB,CAClCzuB,MAAAA,WAqCKA,EA/DE,MA+DU60B,GAAO,CAExBrC,2BAA4B,SAAgCxtE,EAAGC,UACtDmtE,EAAYptE,EAAGC,EAAG6jB,IAE3BypD,4BAA6B,SAAiCvtE,EAAGC,UACxDuwE,EAAYxwE,EAAGC,EAAG6jB,GAAW,IAEtCwpD,4BAA6B,SAAiCttE,EAAGC,UACxDuwE,EAAYvwE,EAAGD,EAAG8jB,GAAW,IAEtCupD,6BAA8B,SAAkCrtE,EAAGC,UAC1Do1F,EAAYr1F,EAAGC,EAAG6jB,IAE3B2pD,eAAgB,SAAoBztE,EAAGC,UAE9BC,KAAKmW,EAAOrW,GAAIqW,EAAOpW,IAAIy4C,WAEpCg1B,gBAAiB,SAAqB1tE,EAAGC,UAEhCC,KAAKmW,EAAOrW,GAAIC,IAEzB0tE,gBAAiB,SAAqB3tE,EAAGC,UAEhCC,KAAKF,EAAGqW,EAAOpW,KAExB4tE,mBAAoB,SAAwB7tE,EAAGC,UACtCkqE,EAAYnqE,EAAGC,EAAG6jB,GAAW,IAEtC8pD,oBAAqB,SAAyB5tE,EAAGC,UACxCwwE,EAAYzwE,EAAGC,EAAG6jB,GAAW,IAEtCiqD,mBAAoB,SAAwB/tE,EAAGC,UACtCkqE,EAAYlqE,EAAGD,EAAG8jB,GAAW,IAEtCgqD,oBAAqB,SAAyB9tE,EAAGC,UACxCwwE,EAAYxwE,EAAGD,EAAG8jB,GAAW,IAEtCkqD,aAAc,SAAkBhuE,EAAGC,UAE1BkqE,EAAY9zD,EAAOrW,GAAIC,EAAG6jB,GAAW,GAAO40B,WAErDu1B,aAAc,SAAkBjuE,EAAGC,UAE1BkqE,EAAY9zD,EAAOpW,GAAID,EAAG8jB,GAAW,GAAM40B,WAEpDy3B,WAAYrsD,EACZssD,mBAAoB,SAAmBpwE,EAAGC,EAAGowE,WACvC5hC,EAASvuC,KAAKF,EAAGC,GAEZyD,EAAI,EAAGA,EAAI2sE,EAAK1uE,OAAQ+B,MACtBxD,KAAKuuC,EAAQ4hC,EAAK3sE,WAGtB+qC,IAER3qB,EAAU63B,gBC1HJ25C,MAFA,MACQ,CAAC,QAAS,YAAa,iBAAkB,OAAQ,SACDtpC,QAC7DhR,MACFA,YACAl3B,iBACA9iB,OACAu0F,EACAh1B,QACEvU,SAyBGhR,EAlCE,MAkCU,CACjBw6C,oDAgCiB30F,EAAGC,OAChB69D,EAAI82B,EAAa50F,EAAGC,GAEpB4oE,EAAQ1yB,GAASn2C,GAAKA,EAAEsgE,MAAQtgE,EAChCwoE,EAAMryB,GAASn2C,GAAKA,EAAEugE,eAAY,EAClCiL,EAAQr1B,GAASl2C,GAAKA,EAAEqgE,MAAQrgE,EAChC8qE,EAAM50B,GAASl2C,GAAKA,EAAEsgE,eAAY,EAElCs0B,EAAgC,IAApB/rD,EAAM9oC,GAAGc,OACrBg0F,EAAgC,IAApBhsD,EAAM7oC,GAAGa,OACrBi0F,EAAM9xE,EACN+xE,EAAM70F,KAENqoE,GAAOuC,GAAOvC,IAAQuC,GAAsB,iBAARvC,EAAkB,KACpD5kE,EAAK4kE,IAEHruB,EAAMsK,KAAKxhC,EAAW,CAACrf,EAAIA,MAC3Bu2C,EAAMsK,KAAKtkD,EAAgB,CAACyD,EAAIA,QAInCixF,IAAcC,EAAW,SACxBzyF,EAAI2yF,EAAIN,EAAK7rB,EAAM,IAAK2C,EAAM,IAEzB3oE,EAAI,EAAGA,EAAIi7D,EAAGj7D,MACjBkyF,EAAI1yF,EAAG2yF,EAAIN,EAAK7rB,EAAMhmE,IAAK2oE,EAAM3oE,YAGhCR,MAIJwyF,GAAaC,EAAW,SACvBG,EAAKD,EAAIN,EAAK7rB,EAAM,IAAK2C,EAAM,GAAG,IAE7B3F,EAAK,EAAGA,EAAK/H,EAAG+H,MAClBkvB,EAAIE,EAAID,EAAIN,EAAK7rB,EAAMhD,IAAM2F,EAAM3F,GAAI,YAGvCovB,KAILJ,IAAcC,EAAW,SACvBI,EAAMF,EAAIN,EAAK7rB,EAAM,GAAG,IAAK2C,EAAM,IAE9BzF,EAAM,EAAGA,EAAMjI,EAAGiI,MACnBgvB,EAAIG,EAAKF,EAAIN,EAAK7rB,EAAM9C,GAAK,IAAKyF,EAAMzF,YAGzCmvB,KAILL,GAAaC,EAAW,SACtBK,EAAMH,EAAIN,EAAK7rB,EAAM,GAAG,IAAK2C,EAAM,GAAG,IAEjCxF,EAAM,EAAGA,EAAMlI,EAAGkI,MACnB+uB,EAAII,EAAKH,EAAIN,EAAK7rB,EAAM7C,GAAK,IAAKwF,EAAMxF,GAAK,YAG9CmvB,IA5FT3oB,sCAgGkBrtE,EAAGC,KACRD,EAAGC,OAEZg2F,EAASj2F,EAAEqlE,OACX6wB,EAAUl2F,EAAEolE,QACZ+wB,EAASl2F,EAAEolE,OACX+wB,EAAUn2F,EAAEmlE,QAEZliE,EAAI,EACJ0yF,EAAM9xE,EACN+xE,EAAM70F,EACN0C,EAAI,EACJkjB,EAAI,OAEDljB,EAAIuyF,EAAOt0F,QAAUilB,EAAIuvE,EAAOx0F,QAAQ,KACzCsqF,EAAIgK,EAAOvyF,GACX+nF,EAAI0K,EAAOvvE,GAEXqlE,EAAIR,MAKJQ,EAAIR,MAKJQ,IAAMR,MACJmK,EAAI1yF,EAAG2yF,EAAIK,EAAQxyF,GAAI0yF,EAAQxvE,qBAMhC1jB,gBAhIalD,EAAGC,OAKnBo2F,EAAMC,EAJNC,EAAQ5sD,EAAM3pC,GAEdw2F,EAAQ7sD,EAAM1pC,MAIG,IAAjBs2F,EAAM50F,SACD40F,EAAM,WACa,IAAjBA,EAAM50F,QAA6B,IAAb40F,EAAM,SAG/B,IAAI7qC,WAAW,2DAA6D6qC,EAAM/7C,KAAK,MAAQ,OAF9F+7C,EAAM,MAKM,IAAjBC,EAAM70F,SACD60F,EAAM,WACa,IAAjBA,EAAM70F,QAA6B,IAAb60F,EAAM,SAG/B,IAAI9qC,WAAW,2DAA6D8qC,EAAMh8C,KAAK,MAAQ,OAF9Fg8C,EAAM,MAKXH,IAASC,QAAY,IAAI5qC,WAAW,mCAAqC2qC,EAAO,OAASC,EAAO,QACvF,IAATD,QAAkB,IAAI3qC,WAAW,4DAC9B2qC,aA2GMr2F,UACNg3C,GAASh3C,GAAKA,EAAEugE,OAAS7+C,EAAK1hB,OC7K9By2F,GAAW,CACpBrsE,KAAK,GCIIssE,MAFA,OACQ,CAAC,sBACgD1qC,QAC9D2qC,kBACFA,GACE3qC,oCAMoB4qC,SACd,IAAIt5C,YAAY,6DAUrB/5C,UAAUonC,SAAW,SAAUuH,UAC3BhyC,KAAKyyC,UAAUhI,SAASuH,MAG5B3uC,UAAU6/B,KAAO,SACjB7/B,UAAUm0C,QAAS,IACnBn0C,UAAUszF,QAAU,KAUpBtzF,UAAUovC,QAAU,eACnBmkD,EAAO52F,KAAK62F,SAASJ,EAAmB,IAExCx4C,EAAO,SAWJ,CACLxT,kBATgBuH,OACZtxC,EAAIsxC,GAAS,mBA+WGA,WACb8kD,KAAU9kD,KACb4G,GAAe5G,EAAO8kD,IACpBA,KAAUP,SACN,IAAIn2F,MAAM,sCAAwC02F,EAAS,4BAjXtDp2F,GAERk2F,EAAKl2F,EAAGu9C,EAPH,WA6BX56C,UAAUwzF,SAAW,SAAU5kD,EAAM8kD,SAClC,IAAI32F,MAAM,iDAAmDJ,KAAKkjC,SAQrE7/B,UAAU42C,QAAU,SAAU9uC,SAE3B,IAAI/K,MAAM,6CAUbiD,UAAUk1C,IAAM,SAAUptC,SAEvB,IAAI/K,MAAM,yCAUbiD,UAAU2zF,QAAU,SAAUtjE,OAC5B8jB,GAAO9jB,SACJ,IAAI+kB,UAAU,+CAGf/kB,KAUJrwB,UAAU4zF,SAAW,SAAU9rF,KAGzBnL,KAAM,KAAM,iBAEF0zB,EAAMwjE,KAClBj9C,SAAQ,SAAU3d,EAAO66D,EAAMp7D,KACzBO,EAAO66D,EAAMp7D,KAEZO,EAAO46D,OAIXl3F,KAAMmL,MAyBb9H,UAAU+zF,UAAY,SAAUjsF,qBACfmxB,EAAO66D,EAAMp7D,OAC3B6kC,EAAcz1D,EAASmxB,EAAO66D,EAAMp7D,UAEpC6kC,IAAgBtkC,EAEXskC,EAGFtkC,EAAMic,IAAI8+C,GAGZA,CAAWr3F,KAAM,KAAM,SAkB3BqD,UAAUi5C,OAAS,SAAUnxC,OAC5BsuE,EAAQ,eACPwd,UAAS,SAAUvjE,EAAMyjE,EAAMp7D,GAC9B5wB,EAASuoB,EAAMyjE,EAAMp7D,MACjBlM,KAAK6D,MAGR+lD,KAQJp2E,UAAUmrC,MAAQ,iBAEf,IAAIpuC,MAAM,oCAQbiD,UAAUi0F,UAAY,kBAClBt3F,KAAKu4C,KAAI,SAAU7kB,UACjBA,EAAK4jE,kBAWXj0F,UAAUwgB,OAAS,SAAUu5D,WACzBA,GAAQrkC,GAAgB/4C,KAAMo9E,MAmBlC/5E,UAAUI,SAAW,SAAU+pC,OAC9B+pD,KAEA/pD,GAA8B,iBAAZA,gBACLA,EAAQgqD,aAChB,aACA,sBAGA,aACYhqD,EAAQgqD,QAAQx3F,KAAMwtC,uBAI/B,IAAIiL,UAAU,uDAIE,IAAjB8+C,EACFA,EAGFv3F,KAAKy3F,UAAUjqD,MAUnBnqC,UAAU4pD,OAAS,iBAChB,IAAI7sD,MAAM,sDAAwDJ,KAAKkjC,SAmB1E7/B,UAAUq0F,OAAS,SAAUlqD,OAC5B+pD,KAEA/pD,GAA8B,iBAAZA,gBACLA,EAAQgqD,aAChB,aACA,sBAGA,aACYhqD,EAAQgqD,QAAQx3F,KAAMwtC,uBAI/B,IAAIiL,UAAU,uDAIE,IAAjB8+C,EACFA,EAGFv3F,KAAK03F,OAAOlqD,MAUhBnqC,UAAUo0F,UAAY,iBAEnB,IAAIr3F,MAAM,iCAAmCJ,KAAKkjC,SAmBrD7/B,UAAUs0F,MAAQ,SAAUnqD,OAC3BoqD,KAEApqD,GAA8B,iBAAZA,gBACLA,EAAQgqD,aAChB,aACA,sBAGA,aACShqD,EAAQgqD,QAAQx3F,KAAMwtC,uBAI5B,IAAIiL,UAAU,uDAID,IAAdm/C,EACFA,EAGF53F,KAAK63F,OAAOrqD,MAWhBnqC,UAAUw0F,OAAS,SAAUrqD,SAE1B,IAAIptC,MAAM,8BAAgCJ,KAAKkjC,SAQlD7/B,UAAUy0F,cAAgB,kBACtB93F,KAAKkjC,QAQT7/B,UAAU00F,WAAa,kBACnB/3F,MAmBF02F,IACN,CACDrpC,SAAS,EACT7V,QAAQ,ICtaH,YAAwBgH,UACzBA,GAAOA,EAAIkN,aACN,IAAI9C,GAAWpK,EAAIr+C,MAAQ,EAAGq+C,EAAIr9C,IAAM,OAAe,IAAZq9C,EAAIp9C,IAAoBo9C,EAAIp9C,IAAM,OAAI,GAGnFo9C,ECVF,YAAuBsN,OACxB6U,OACFA,GACE7U,SAaG,SAAgBvnC,EAAQpkB,UAEvB86B,MAAM4b,QAAQtyB,UACTo8C,EAAOp8C,EAAQpkB,MACbokB,GAAmC,mBAAlBA,EAAOo8C,cAE1Bp8C,EAAOo8C,OAAOxgE,MACM,iBAAXokB,SAETo8C,EAAOp8C,EAAQpkB,MACK,iBAAXokB,EAAqB,KAChCpkB,EAAM63F,yBACH,IAAIv/C,UAAU,0DAGf87B,GAAgBhwD,EAAQpkB,EAAM83F,2BAE/B,IAAIx/C,UAAU,wDAEf+F,SACD05C,GAAe15C,KClC3B,IAEW25C,MAFA,eACQ,CAAC,SAAU,SAC8CrsC,QACtE6U,OACFA,EACAy3B,QACEtsC,EACAusC,EAASC,GAAc,CACzB33B,OAAAA,eAYoBp8C,EAAQpkB,wBACNo4F,SACd,IAAIn7C,YAAY,wDAGnB5F,GAAOjzB,SACJ,IAAIk0B,UAAU,4CAGjBT,GAAY73C,SACT,IAAIs4C,UAAU,iDAGjBl0B,OAASA,GAAU,UACnBpkB,MAAQA,SAENk5C,eAAer5C,KAAM,OAAQ,CAClCyzB,IAAK,kBACCzzB,KAAKG,MACAH,KAAKG,MAAM63F,mBAAqBh4F,KAAKG,MAAM83F,oBAAsB,GAEjEj4F,KAAKukB,OAAOi2B,MAAQ,IAE7Bg+C,KAAKx4F,MACP+F,IAAK,iBACG,IAAI3F,MAAM,6DAsJGszB,cAECA,IAAS+jB,GAAY/jB,IAASmkB,GAAenkB,IAASqkB,GAAerkB,IAASukB,GAAavkB,IAASykB,GAAkBzkB,IAAS2kB,GAAa3kB,aAnJzJrwB,UAAY,IAAIqzF,IAChBrzF,UAAU6/B,KAAO,iBACjB7/B,UAAUk0C,gBAAiB,IAe3Bl0C,UAAUwzF,SAAW,SAAU5kD,EAAM8kD,OAC5C0B,EAAaz4F,KAAKukB,OAAOsyE,SAAS5kD,EAAM8kD,GAExC2B,EAAY14F,KAAKG,MAAM02F,SAAS5kD,EAAM8kD,MAEtC/2F,KAAKG,MAAM63F,mBAAoB,KAC7Bn/C,EAAO74C,KAAKG,MAAM83F,2BACf,SAA0BjmD,EAAOiM,EAAM06C,UACrCpkB,GAAgBkkB,EAAWzmD,EAAOiM,EAAM06C,GAAU9/C,WAGpD,SAA0B7G,EAAOiM,EAAM06C,OACxCp0E,EAASk0E,EAAWzmD,EAAOiM,EAAM06C,GACjCx4F,EAAQu4F,EAAU1mD,EAAOiM,EAAM15B,UAE5B8zE,EAAO9zE,EAAQpkB,OAUfkD,UAAU42C,QAAU,SAAU9uC,KAChCnL,KAAKukB,OAAQ,SAAUvkB,QACvBA,KAAKG,MAAO,QAASH,SAUnBqD,UAAUk1C,IAAM,SAAUptC,UAC9B,IAAIotF,EAAav4F,KAAKg3F,QAAQ7rF,EAASnL,KAAKukB,OAAQ,SAAUvkB,OAAQA,KAAKg3F,QAAQ7rF,EAASnL,KAAKG,MAAO,QAASH,WAQ7GqD,UAAUmrC,MAAQ,kBACtB,IAAI+pD,EAAav4F,KAAKukB,OAAQvkB,KAAKG,UAS/BkD,UAAUo0F,UAAY,SAAUjqD,OACvCjpB,EAASvkB,KAAKukB,OAAO9gB,SAAS+pC,UAE9BorD,EAAgB54F,KAAKukB,YACd,IAAMA,EAAS,KAGnBA,EAASvkB,KAAKG,MAAMsD,SAAS+pC,MASzBnqC,UAAUq0F,OAAS,SAAUlqD,OACpCjpB,EAASvkB,KAAKukB,OAAOmzE,OAAOlqD,UAE5BorD,EAAgB54F,KAAKukB,YACd,iEAAmEA,EAAS,kEAGhFA,EAASvkB,KAAKG,MAAMu3F,OAAOlqD,MASvBnqC,UAAUw0F,OAAS,SAAUrqD,OACpCjpB,EAASvkB,KAAKukB,OAAOozE,MAAMnqD,UAE3BorD,EAAgB54F,KAAKukB,YACd,iCAGJA,EAASvkB,KAAKG,MAAMw3F,MAAMnqD,MAQtBnqC,UAAU4pD,OAAS,iBACvB,CACLC,OAAQ,eACR3oC,OAAQvkB,KAAKukB,OACbpkB,MAAOH,KAAKG,UAYHgtD,SAAW,SAAUC,UACzB,IAAImrC,EAAanrC,EAAK7oC,OAAQ6oC,EAAKjtD,QAarCo4F,IACN,CACDlrC,SAAS,EACT7V,QAAQ,IC1MCqhD,MAFA,YACQ,CAAC,SACqD/sC,QAErEssC,QACEtsC,aAQegtC,wBACKC,SACd,IAAI37C,YAAY,4DAGnB07C,MAAQA,GAAS,IAEjB79D,MAAM4b,QAAQ72C,KAAK84F,SAAW94F,KAAK84F,MAAM3tC,MAAM3T,UAC5C,IAAIiB,UAAU,4CAIdp1C,UAAY,IAAIqzF,IAChBrzF,UAAU6/B,KAAO,cACjB7/B,UAAUo0C,aAAc,IAexBp0C,UAAUwzF,SAAW,SAAU5kD,EAAM8kD,OACzCiC,EAAYzgD,GAAIv4C,KAAK84F,OAAO,SAAU3+C,UACjCA,EAAK08C,SAAS5kD,EAAM8kD,SAES,UAAvB9kD,EAAK0oB,OAAOxkD,OAEb,KACRA,EAAS87B,EAAK97B,cACX,SAAuB67B,EAAOiM,EAAM06C,UAClCxiF,EAAOoiC,GAAIygD,GAAW,SAAUC,UAC9BA,EAASjnD,EAAOiM,EAAM06C,eAI1B,SAAuB3mD,EAAOiM,EAAM06C,UAClCpgD,GAAIygD,GAAW,SAAUC,UACvBA,EAASjnD,EAAOiM,EAAM06C,UAW3Bt1F,UAAU42C,QAAU,SAAU9uC,WAC7B3H,EAAI,EAAGA,EAAIxD,KAAK84F,MAAMr3F,OAAQ+B,IAAK,GAC/BxD,KAAK84F,MAAMt1F,GACP,SAAWA,EAAI,IAAKxD,UAW7BqD,UAAUk1C,IAAM,SAAUptC,WAC9B2tF,EAAQ,GAEHt1F,EAAI,EAAGA,EAAIxD,KAAK84F,MAAMr3F,OAAQ+B,MAC/BA,GAAKxD,KAAKg3F,QAAQ7rF,EAASnL,KAAK84F,MAAMt1F,GAAI,SAAWA,EAAI,IAAKxD,cAG/D,IAAI+4F,EAAUD,MAQbz1F,UAAUmrC,MAAQ,kBACnB,IAAIuqD,EAAU/4F,KAAK84F,MAAMz2E,MAAM,OAU9Bhf,UAAUo0F,UAAY,SAAUjqD,SAIjC,IAHKxtC,KAAK84F,MAAMvgD,KAAI,SAAU7kB,UAC5BA,EAAKjwB,SAAS+pC,MAEJ8M,KAAK,MAAQ,OAQxBj3C,UAAU4pD,OAAS,iBACpB,CACLC,OAAQ,YACR4rC,MAAO94F,KAAK84F,UAYN3rC,SAAW,SAAUC,UACtB,IAAI2rC,EAAU3rC,EAAK0rC,UAUlBz1F,UAAUq0F,OAAS,SAAUlqD,SAI9B,kEAHKxtC,KAAK84F,MAAMvgD,KAAI,SAAU7kB,UAC5BA,EAAKgkE,OAAOlqD,MAE4D8M,KAAK,yCAA2C,qEASzHj3C,UAAUw0F,OAAS,SAAUrqD,OACjC9sC,EAAI,+BACHo4F,MAAM7+C,SAAQ,SAAUvmB,GACvBA,EAAKolE,SACFplE,EAAKolE,MAAMvgD,KAAI,SAAU2gD,UACrBA,EAAUvB,MAAMnqD,MACtB8M,KAAK,QAEH5mB,EAAKikE,MAAMnqD,MAIb,aAEF,kBAIAurD,IACN,CACD1rC,SAAS,EACT7V,QAAQ,ICrKH,IAAI2hD,GAAa,CAAC,CAEvBC,eAAgB,GAChBC,uBAAwB,IACvB,CAEDC,gBAAiB,CACfC,iBAAiB,EACjBC,kBAAkB,EAClBC,aAAa,IAId,CAEDC,kBAAmB,CACjBC,cAAe,OACfC,gBAAiB,KAElB,CAEDC,mBAAoB,CAClBF,cAAe,OACfC,gBAAiB,KAElB,CAEDE,mBAAoB,CAClBH,cAAe,OACfC,gBAAiB,KAElB,CAEDG,qBAAsB,CACpBJ,cAAe,OACfC,gBAAiB,KAElB,CAEDI,sBAAuB,CACrBL,cAAe,OACfC,gBAAiB,KAElB,CAEDK,sBAAuB,CACrBN,cAAe,OACfC,gBAAiB,KAElB,CAEDM,qBAAsB,CACpBP,cAAe,OACfC,gBAAiB,IAEnBO,uBAAwB,CACtBR,cAAe,OACfC,gBAAiB,IAEnBQ,uBAAwB,CACtBT,cAAe,OACfC,gBAAiB,IAEnBS,sBAAuB,CACrBV,cAAe,OACfC,gBAAiB,IAEnBU,yBAA0B,CACxBX,cAAe,OACfC,gBAAiB,IAEnBW,wBAAyB,CACvBZ,cAAe,OACfC,gBAAiB,IAEnBY,eAAgB,CACdb,cAAe,OACfC,gBAAiB,KAElB,CAEDa,yBAA0B,CACxBd,cAAe,OACfC,gBAAiB,IAEnBc,+BAAgC,CAC9Bf,cAAe,OACfC,gBAAiB,IAEnBe,6BAA8B,CAC5BhB,cAAe,OACfC,gBAAiB,KAElB,CAEDgB,kBAAmB,CACjBjB,cAAe,OACfC,gBAAiB,KAElB,CAEDiB,UAAW,IACV,CAEDC,mBAAoB,CAClBnB,cAAe,OACfC,gBAAiB,CAAC,mBAAoB,0BAExCmB,wBAAyB,CACvBpB,cAAe,OACfC,gBAAiB,KAElB,CAEDoB,wBAAyB,CACvBrB,cAAe,OACfC,gBAAiB,CAAC,wBAAyB,sBAAuB,uBAAwB,uBAE5FqB,sBAAuB,CACrBtB,cAAe,OACfC,gBAAiB,GACjBL,iBAAiB,EACjBC,kBAAkB,EAClBC,aAAa,GAKfyB,2BAA4B,CAC1BvB,cAAe,OACfC,gBAAiB,CAAC,wBAAyB,sBAAuB,2BAA4B,0BAEhGuB,yBAA0B,CACxBxB,cAAe,OACfC,gBAAiB,IAEnBwB,mBAAoB,CAClBzB,cAAe,OACfC,gBAAiB,KAElB,CAEDyB,yBAA0B,CACxB1B,cAAe,SAEjB2B,0BAA2B,CACzB3B,cAAe,SAEjB4B,sBAAuB,CACrB5B,cAAe,SAEjB6B,mBAAoB,CAClB7B,cAAe,UAEhB,CAED8B,mBAAoB,CAClB9B,cAAe,QACfC,gBAAiB,GACjBJ,kBAAkB,GAKpBkC,sBAAuB,CACrB/B,cAAe,QACfC,gBAAiB,KAElB,CAED+B,yBAA0B,CACxBhC,cAAe,SAEhB,CAEDiC,yBAA0B,CACxBjC,cAAe,UAaZ,YAAuBkC,EAAOC,OAC/BpoE,EAAOmoE,EAES,SAAhBC,MAEKD,EAAM9D,sBAGXgE,EAAaroE,EAAKokE,gBAEbt0F,EAAI,EAAGA,EAAI21F,GAAW13F,OAAQ+B,OACjCu4F,KAAc5C,GAAW31F,UACpBA,SAIJ,KAaF,YAA0Bq4F,EAAOC,OAClCpoE,EAAOmoE,EAES,SAAhBC,MAEKD,EAAM9D,kBAGXgE,EAAaroE,EAAKokE,gBAClB33F,EAAQ67F,GAActoE,EAAMooE,MAElB,OAAV37F,SAEK,SAGLq5C,EAAW2/C,GAAWh5F,GAAO47F,MAE7BnjD,GAAeY,EAAU,iBAAkB,IACd,SAA3BA,EAASmgD,oBACJ,UAGsB,UAA3BngD,EAASmgD,oBACJ,cAIHv5F,MAAM,IAAO27F,EAAa,oCAAwCviD,EAASmgD,cAAgB,aAI5F,KAYF,YAA2BsC,EAAOC,EAAOJ,OAE1Cn7F,EAAoB,SAAhBm7F,EAAyBG,EAAMlE,aAAekE,EAClDr7F,EAAoB,SAAhBk7F,EAAyBG,EAAMlE,aAAemE,EAClDC,EAAcx7F,EAAEm3F,gBAChBsE,EAAcx7F,EAAEk3F,gBAChB33F,EAAQ67F,GAAcr7F,EAAGm7F,MAEf,OAAV37F,SAEK,SAGLq5C,EAAW2/C,GAAWh5F,GAAOg8F,MAE7BvjD,GAAeY,EAAU,oBAAsBA,EAASogD,2BAA2B3+D,MAAO,SACnFz3B,EAAI,EAAGA,EAAIg2C,EAASogD,gBAAgBn4F,OAAQ+B,OAC/Cg2C,EAASogD,gBAAgBp2F,KAAO44F,SAC3B,SAIJ,SAIF,KC7ST,IAGWC,MAHA,iBACQ,CAAC,SAAU,UAC9B,SAC8EvwC,QACxE6U,OACFA,SACAxqD,EACAiiF,QACEtsC,EACAusC,EAASC,GAAc,CACzB33B,OAAAA,IAEE3iC,EChBC,SAAuB8tB,OACxB6U,OACFA,SACAxqD,GACE21C,SAgBG,SAAgBvnC,EAAQpkB,EAAOF,UAE9Bg7B,MAAM4b,QAAQtyB,UAETpO,EAAOoO,GAAQo8C,OAAOxgE,EAAOF,GAAOu4C,aAClCj0B,GAAmC,mBAAlBA,EAAOo8C,cAE1Bp8C,EAAOo8C,OAAOxgE,EAAOF,MACD,iBAAXskB,SAETo8C,EAAOp8C,EAAQpkB,EAAOF,MACF,iBAAXskB,EAAqB,KAChCpkB,EAAM63F,yBACHv/C,UAAU,6DAGFl0B,EAAQpkB,EAAM83F,oBAAqBh4F,GAC5CskB,QAED,IAAIk0B,UAAU,wDAEf+F,SACD05C,GAAe15C,KD1BZ89C,CAAc,CACzB37B,OAAAA,EACAxqD,OAAAA,eA6BsBoO,EAAQpkB,EAAOF,wBACfm5F,SACd,IAAIh8C,YAAY,4DAGnB74B,OAASA,OACTpkB,MAAQF,EAAQE,EAAQ,UACxBF,MAAQA,GAASE,GAEjBk4C,GAAa9zB,KAAYgzB,GAAehzB,SACrC,IAAIk0B,UAAU,sDAGlBJ,GAAa9zB,IAA2B,QAAhBA,EAAOi2B,WAC3B,IAAIp6C,MAAM,oCAGdJ,KAAKG,QAAU63C,GAAYh4C,KAAKG,aAE5B,IAAIs4C,UAAU,qCAGjBjB,GAAOx3C,KAAKC,aACT,IAAIw4C,UAAU,mCAIfY,eAAer5C,KAAM,OAAQ,CAClCyzB,IAAK,kBACCzzB,KAAKG,MACAH,KAAKG,MAAM63F,mBAAqBh4F,KAAKG,MAAM83F,oBAAsB,GAEjEj4F,KAAKukB,OAAOi2B,MAAQ,IAE7Bg+C,KAAKx4F,MACP+F,IAAK,iBACG,IAAI3F,MAAM,6DAgJGszB,EAAMooE,GACxBA,MACW,YAGZS,EAAaP,GAActoE,EAAMooE,GACjCU,EAAiBR,GAActoE,EAAKzzB,MAAO67F,SACxB,QAAhBA,GAA4C,OAAnBU,GAA2BA,GAAkBD,WAlJhEl5F,UAAY,IAAIqzF,IAChBrzF,UAAU6/B,KAAO,mBACjB7/B,UAAUq0C,kBAAmB,IAe7Br0C,UAAUwzF,SAAW,SAAU5kD,EAAM8kD,OAC9C0B,EAAaz4F,KAAKukB,OAAOsyE,SAAS5kD,EAAM8kD,GAExC2B,EAAY14F,KAAKG,MAAQH,KAAKG,MAAM02F,SAAS5kD,EAAM8kD,GAAY,KAE/D0F,EAAYz8F,KAAKC,MAAM42F,SAAS5kD,EAAM8kD,GAEtC31E,EAAOphB,KAAKukB,OAAOi2B,QAElBx6C,KAAKG,UASCH,KAAKG,MAAM63F,mBAAoB,KAEpCn/C,EAAO74C,KAAKG,MAAM83F,2BACf,SAA4BjmD,EAAOiM,EAAM06C,OAC1Cp0E,EAASk0E,EAAWzmD,EAAOiM,EAAM06C,GACjC14F,EAAQw8F,EAAUzqD,EAAOiM,EAAM06C,UAC5B+D,GAAgBn4E,EAAQs0B,EAAM54C,OAE9Bo4C,GAAar4C,KAAKukB,eAEpB,SAA4BytB,EAAOiM,EAAM06C,OAC1CgE,EAAclE,EAAWzmD,EAAOiM,EAAM06C,GACtC14F,EAAQw8F,EAAUzqD,EAAOiM,EAAM06C,GAC/Bx4F,EAAQu4F,EAAU1mD,EAAOiM,EAAM0+C,aAEnB3qD,EAAO5wB,EAAM4c,EAAO2+D,EAAax8F,EAAOF,IACjDA,OAQL28F,EAAmB58F,KAAKukB,OAAOA,OAAOsyE,SAAS5kD,EAAM8kD,MAErD/2F,KAAKukB,OAAOpkB,MAAM63F,mBAAoB,KACpC6E,EAAa78F,KAAKukB,OAAOpkB,MAAM83F,2BAC5B,SAA4BjmD,EAAOiM,EAAM06C,OAC1C58D,EAAS6gE,EAAiB5qD,EAAOiM,EAAM06C,GACvCgE,EAAcpoB,GAAgBx4C,EAAQ8gE,GACtC18F,EAAQu4F,EAAU1mD,EAAOiM,EAAM0+C,GAE/B18F,EAAQw8F,EAAUzqD,EAAOiM,EAAM06C,aACnB58D,EAAQ8gE,EAAY7+D,EAAO2+D,EAAax8F,EAAOF,IACxDA,OAIL68F,EAAkB98F,KAAKukB,OAAOpkB,MAAM02F,SAAS5kD,EAAM8kD,UAEhD,SAA4B/kD,EAAOiM,EAAM06C,OAC1C58D,EAAS6gE,EAAiB5qD,EAAOiM,EAAM06C,GACvCoE,EAAcD,EAAgB9qD,EAAOiM,EAAMliB,GAE3C4gE,EAActE,EAAOt8D,EAAQghE,GAC7B58F,EAAQu4F,EAAU1mD,EAAOiM,EAAM0+C,GAE/B18F,EAAQw8F,EAAUzqD,EAAOiM,EAAM06C,YAC5B58D,EAAQghE,EAAa/+D,EAAO2+D,EAAax8F,EAAOF,IAChDA,OAzDNo4C,GAAar4C,KAAKukB,cACf,IAAIk0B,UAAU,wCAGf,SAA4BzG,EAAOiM,EAAM06C,UACvC+D,GAAgB1qD,EAAO5wB,EAAMq7E,EAAUzqD,EAAOiM,EAAM06C,QA+DlDt1F,UAAU42C,QAAU,SAAU9uC,KAClCnL,KAAKukB,OAAQ,SAAUvkB,MAE5BA,KAAKG,SACEH,KAAKG,MAAO,QAASH,QAGvBA,KAAKC,MAAO,QAASD,SAUjBqD,UAAUk1C,IAAM,SAAUptC,UAOhC,IAAIiuF,EANEp5F,KAAKg3F,QAAQ7rF,EAASnL,KAAKukB,OAAQ,SAAUvkB,OAE9CA,KAAKG,MAAQH,KAAKg3F,QAAQ7rF,EAASnL,KAAKG,MAAO,QAASH,OAAS,KAEjEA,KAAKg3F,QAAQ7rF,EAASnL,KAAKC,MAAO,QAASD,WAU1CqD,UAAUmrC,MAAQ,kBACxB,IAAI4qD,EAAep5F,KAAKukB,OAAQvkB,KAAKG,MAAOH,KAAKC,UA0B3CoD,UAAUo0F,UAAY,SAAUjqD,OACzCjpB,EAASvkB,KAAKukB,OAAO9gB,SAAS+pC,GAC9BrtC,EAAQH,KAAKG,MAAQH,KAAKG,MAAMsD,SAAS+pC,GAAW,GACpDvtC,EAAQD,KAAKC,MAAMwD,SAAS+pC,UAE5BorD,EAAgB54F,KAAMwtC,GAAWA,EAAQsuD,iBACnC,IAAM77F,EAAQ,KAGjBskB,EAASpkB,EAAQ,MAAQF,KAQnBoD,UAAU4pD,OAAS,iBACzB,CACLC,OAAQ,iBACR3oC,OAAQvkB,KAAKukB,OACbpkB,MAAOH,KAAKG,MACZF,MAAOD,KAAKC,UAYDktD,SAAW,SAAUC,UAC3B,IAAIgsC,EAAehsC,EAAK7oC,OAAQ6oC,EAAKjtD,MAAOitD,EAAKntD,UAS3CoD,UAAUq0F,OAAS,SAAUlqD,OACtCjpB,EAASvkB,KAAKukB,OAAOmzE,OAAOlqD,GAC5BrtC,EAAQH,KAAKG,MAAQH,KAAKG,MAAMu3F,OAAOlqD,GAAW,GAClDvtC,EAAQD,KAAKC,MAAMy3F,OAAOlqD,UAE1BorD,EAAgB54F,KAAMwtC,GAAWA,EAAQsuD,iBACnC,iEAAmE77F,EAAQ,kEAG9EskB,EAASpkB,EAAQ,uHAAyHF,KASpIoD,UAAUw0F,OAAS,SAAUrqD,OACtCjpB,EAASvkB,KAAKukB,OAAOozE,MAAMnqD,GAC3BrtC,EAAQH,KAAKG,MAAQH,KAAKG,MAAMw3F,MAAMnqD,GAAW,GACjDvtC,EAAQD,KAAKC,MAAM03F,MAAMnqD,UAEzBorD,EAAgB54F,KAAMwtC,GAAWA,EAAQsuD,iBACnC,UAAU7+C,OAAOh9C,EAAO,aAG3BskB,EAASpkB,EAAQ,KAAOF,GAG1Bm5F,IACN,CACD/rC,SAAS,EACT7V,QAAQ,IE7TCwlD,MAFA,YACQ,CAAC,YAAa,SACwClxC,QACnEkB,UACFA,EACAorC,QACEtsC,aAWemxC,wBACKC,SACd,IAAI9/C,YAAY,wDAInBniB,MAAM4b,QAAQomD,SAAe,IAAI78F,MAAM,uBACvC68F,OAASA,EAAO1kD,KAAI,SAAU4kD,OAC7BzpE,EAAOypE,GAASA,EAAMzpE,KACtB0pE,GAAUD,QAA2B,IAAlBA,EAAMC,SAAwBD,EAAMC,YACtD5lD,GAAO9jB,SAAa,IAAI+kB,UAAU,qCAChB,kBAAZ2kD,QAA6B,IAAI3kD,UAAU,8CAC/C,CACL/kB,KAAAA,EACA0pE,QAAAA,eAKI/5F,UAAY,IAAIqzF,IAChBrzF,UAAU6/B,KAAO,cACjB7/B,UAAUs0C,aAAc,IAexBt0C,UAAUwzF,SAAW,SAAU5kD,EAAM8kD,OACzCsG,EAAa9kD,GAAIv4C,KAAKi9F,QAAQ,SAAUE,SACnC,CACL1yD,SAAU0yD,EAAMzpE,KAAKmjE,SAAS5kD,EAAM8kD,GACpCqG,QAASD,EAAMC,mBAGZ,SAAwBprD,EAAOiM,EAAM06C,OACtC2E,EAAU,aACND,GAAY,SAAuBF,OACrC5uD,EAAS4uD,EAAM1yD,SAASuH,EAAOiM,EAAM06C,GAErCwE,EAAMC,WACAvtE,KAAK0e,MAGV,IAAIye,EAAUswC,OASfj6F,UAAU42C,QAAU,SAAU9uC,WAC7B3H,EAAI,EAAGA,EAAIxD,KAAKi9F,OAAOx7F,OAAQ+B,MAC7BxD,KAAKi9F,OAAOz5F,GAAGkwB,KAAM,UAAYlwB,EAAI,SAAUxD,SAWlDqD,UAAUk1C,IAAM,SAAUptC,WAC9B8xF,EAAS,GAEJz5F,EAAI,EAAGA,EAAIxD,KAAKi9F,OAAOx7F,OAAQ+B,IAAK,KACvC25F,EAAQn9F,KAAKi9F,OAAOz5F,GAEpBkwB,EAAO1zB,KAAKg3F,QAAQ7rF,EAASgyF,EAAMzpE,KAAM,UAAYlwB,EAAI,SAAUxD,SAEhEwD,GAAK,CACVkwB,KAAAA,EACA0pE,QAASD,EAAMC,gBAIZ,IAAIF,EAAUD,MAQb55F,UAAUmrC,MAAQ,kBAOnB,IAAI0uD,EANEl9F,KAAKi9F,OAAO1kD,KAAI,SAAU4kD,SAC9B,CACLzpE,KAAMypE,EAAMzpE,KACZ0pE,QAASD,EAAMC,gBAaX/5F,UAAUo0F,UAAY,SAAUjqD,UACjCxtC,KAAKi9F,OAAO1kD,KAAI,SAAU2D,UACxBA,EAAMxoB,KAAKjwB,SAAS+pC,MAAkB4vD,QAAU,GAAK,QAC3D9iD,KAAK,SAQAj3C,UAAU4pD,OAAS,iBACpB,CACLC,OAAQ,YACR+vC,OAAQj9F,KAAKi9F,WAYP9vC,SAAW,SAAUC,UACtB,IAAI8vC,EAAU9vC,EAAK6vC,WAUlB55F,UAAUq0F,OAAS,SAAUlqD,UAC9BxtC,KAAKi9F,OAAO1kD,KAAI,SAAU2D,UACxBA,EAAMxoB,KAAKgkE,OAAOlqD,MAAkB4vD,QAAU,GAAK,4CACzD9iD,KAAK,iDASAj3C,UAAUw0F,OAAS,SAAUrqD,UAC9BxtC,KAAKi9F,OAAO1kD,KAAI,SAAU2D,UACxBA,EAAMxoB,KAAKikE,MAAMnqD,MAAkB4vD,QAAU,GAAK,QACxD9iD,KAAK,aAGH4iD,IACN,CACD7vC,SAAS,EACT7V,QAAQ,IC1LC+lD,MAFA,kBACQ,CAAC,SAC2DzxC,QAE3EssC,QACEtsC,aAYqB0xC,EAAWC,EAAUC,wBACtBpE,SACd,IAAIl8C,YAAY,wDAGnB5F,GAAOgmD,SAAkB,IAAI/kD,UAAU,0CACvCjB,GAAOimD,SAAiB,IAAIhlD,UAAU,yCACtCjB,GAAOkmD,SAAkB,IAAIjlD,UAAU,2CACvC+kD,UAAYA,OACZC,SAAWA,OACXC,UAAYA,WAGHr6F,UAAY,IAAIqzF,IAChBrzF,UAAU6/B,KAAO,oBACjB7/B,UAAUu0C,mBAAoB,IAe9Bv0C,UAAUwzF,SAAW,SAAU5kD,EAAM8kD,OAC/C4G,EAAgB39F,KAAKw9F,UAAU3G,SAAS5kD,EAAM8kD,GAE9C6G,EAAe59F,KAAKy9F,SAAS5G,SAAS5kD,EAAM8kD,GAE5C8G,EAAgB79F,KAAK09F,UAAU7G,SAAS5kD,EAAM8kD,UAE3C,SAA6B/kD,EAAOiM,EAAM06C,mBAwJ5B6E,MACI,iBAAdA,GAA+C,kBAAdA,GAAgD,iBAAdA,UACnEA,KAGPA,EAAW,IACThnD,GAAYgnD,UACNA,EAAU/1C,YAGhB/Q,GAAU8mD,cACQhiC,KAAMgiC,EAAU/hC,OAGlC7kB,GAAO4mD,WACAA,EAAUv9F,SAInBu9F,MAAAA,SACK,QAGH,IAAI/kD,UAAU,kCAAoC2oB,GAAOo8B,GAAa,KA9KnEM,CAAcH,EAAc3rD,EAAOiM,EAAM06C,IAAYiF,EAAa5rD,EAAOiM,EAAM06C,GAAWkF,EAAc7rD,EAAOiM,EAAM06C,OAShHt1F,UAAU42C,QAAU,SAAU9uC,KACnCnL,KAAKw9F,UAAW,YAAax9F,QAC7BA,KAAKy9F,SAAU,WAAYz9F,QAC3BA,KAAK09F,UAAW,YAAa19F,SAUxBqD,UAAUk1C,IAAM,SAAUptC,UACjC,IAAImuF,EAAgBt5F,KAAKg3F,QAAQ7rF,EAASnL,KAAKw9F,UAAW,YAAax9F,OAAQA,KAAKg3F,QAAQ7rF,EAASnL,KAAKy9F,SAAU,WAAYz9F,OAAQA,KAAKg3F,QAAQ7rF,EAASnL,KAAK09F,UAAW,YAAa19F,WAQpLqD,UAAUmrC,MAAQ,kBACzB,IAAI8qD,EAAgBt5F,KAAKw9F,UAAWx9F,KAAKy9F,SAAUz9F,KAAK09F,cASjDr6F,UAAUo0F,UAAY,SAAUjqD,OAC1CsuD,EAActuD,GAAWA,EAAQsuD,YAActuD,EAAQsuD,YAAc,OACrES,EAAaP,GAAch8F,KAAM87F,GAKjC0B,EAAYx9F,KAAKw9F,UAAU/5F,SAAS+pC,GACpCuwD,EAAsB/B,GAAch8F,KAAKw9F,UAAW1B,IAEpC,QAAhBA,GAAiD,iBAAxB97F,KAAKw9F,UAAUt6D,MAAmD,OAAxB66D,GAAgCA,GAAuBxB,OAChH,IAAMiB,EAAY,SAG5BC,EAAWz9F,KAAKy9F,SAASh6F,SAAS+pC,GAClCwwD,EAAiBhC,GAAch8F,KAAKy9F,SAAU3B,IAE9B,QAAhBA,GAAgD,iBAAvB97F,KAAKy9F,SAASv6D,MAA8C,OAAnB86D,GAA2BA,GAAkBzB,OACtG,IAAMkB,EAAW,SAG1BC,EAAY19F,KAAK09F,UAAUj6F,SAAS+pC,GACpCywD,EAAkBjC,GAAch8F,KAAK09F,UAAW5B,UAEhC,QAAhBA,GAAiD,iBAAxB97F,KAAK09F,UAAUx6D,MAA+C,OAApB+6D,GAA4BA,GAAmB1B,OACxG,IAAMmB,EAAY,KAGzBF,EAAY,MAAQC,EAAW,MAAQC,KAQhCr6F,UAAU4pD,OAAS,iBAC1B,CACLC,OAAQ,kBACRswC,UAAWx9F,KAAKw9F,UAChBC,SAAUz9F,KAAKy9F,SACfC,UAAW19F,KAAK09F,cAYJvwC,SAAW,SAAUC,UAC5B,IAAIksC,EAAgBlsC,EAAKowC,UAAWpwC,EAAKqwC,SAAUrwC,EAAKswC,cASjDr6F,UAAUq0F,OAAS,SAAUlqD,OACvCsuD,EAActuD,GAAWA,EAAQsuD,YAActuD,EAAQsuD,YAAc,OACrES,EAAaP,GAAch8F,KAAM87F,GAKjC0B,EAAYx9F,KAAKw9F,UAAU9F,OAAOlqD,GAClCuwD,EAAsB/B,GAAch8F,KAAKw9F,UAAW1B,IAEpC,QAAhBA,GAAiD,iBAAxB97F,KAAKw9F,UAAUt6D,MAAmD,OAAxB66D,GAAgCA,GAAuBxB,OAChH,iEAAmEiB,EAAY,sEAGzFC,EAAWz9F,KAAKy9F,SAAS/F,OAAOlqD,GAChCwwD,EAAiBhC,GAAch8F,KAAKy9F,SAAU3B,IAE9B,QAAhBA,GAAgD,iBAAvB97F,KAAKy9F,SAASv6D,MAA8C,OAAnB86D,GAA2BA,GAAkBzB,OACtG,iEAAmEkB,EAAW,sEAGvFC,EAAY19F,KAAK09F,UAAUhG,OAAOlqD,GAClCywD,EAAkBjC,GAAch8F,KAAK09F,UAAW5B,UAEhC,QAAhBA,GAAiD,iBAAxB97F,KAAK09F,UAAUx6D,MAA+C,OAApB+6D,GAA4BA,GAAmB1B,OACxG,iEAAmEmB,EAAY,kEAGtFF,EAAY,iEAAmEC,EAAW,iEAAmEC,KAStJr6F,UAAUw0F,OAAS,SAAUrqD,SACpC,mBAAqBxtC,KAAKy9F,SAAS9F,MAAMnqD,GAAW,4BAA8BxtC,KAAKw9F,UAAU7F,MAAMnqD,GAAW,SAAWxtC,KAAK09F,UAAU/F,MAAMnqD,GAAW,6CAmC/J8rD,IACN,CACDjsC,SAAS,EACT7V,QAAQ,ICzONsrC,GAAW72D,OAAO+R,QAAU,SAAUpsB,WAAmBpO,EAAI,EAAGA,EAAIyL,UAAUxN,OAAQ+B,IAAK,KAAMyhE,EAASh2D,UAAUzL,WAAamgC,KAAOshC,EAAch5C,OAAO5oB,UAAUu1C,eAAea,KAAKwrB,EAAQthC,OAAeA,GAAOshC,EAAOthC,WAAmB/xB,GAEnPssF,GAAiB,CACnBC,IAAK,MACLC,IAAK,MACLC,KAAM,oBACNC,IAAK,MACLC,EAAG,MACHC,IAAK,MACLC,IAAK,MACLC,IAAK,sBACLC,EAAG,MACHC,IAAK,sBAEHC,GAAgB,CAClBC,IAAU,OACVC,IAAU,QACVC,IAAK,IACLC,KAAM,YACNC,OAAQ,cACRC,KAAM,eAGJC,GAAqB,SAA4BC,EAAgBC,UAC5Dxc,GAAS,GAAIuc,EAAgBC,IC1B3BC,GAAe,CAExBC,MAAO,IACPl9F,MAAO,UACPm9F,KAAM,IACNC,KAAM,SACNC,MAAO,UACPC,MAAO,UACPC,MAAO,UACPp9E,MAAO,UACPq9E,QAAS,IACTvxF,QAAS,YACTwxF,WAAY,eACZC,KAAM,IACNC,KAAM,SACNC,IAAK,IACLC,IAAK,QACLC,MAAO,UACP3yF,MAAO,UACP4yF,SAAU,aACVC,KAAM,IACNC,KAAM,SACNC,MAAO,IACPC,MAAO,UACPC,SAAU,aACVC,OAAQ,WACRr8F,OAAQ,WACRs8F,GAAI,IACJC,GAAI,OACJC,GAAI,IACJC,GAAI,OACJC,GAAI,OACJvpC,GAAI,OACJwpC,QAAS,IACTC,QAAS,IACTrf,GAAI,OACJ/oB,GAAI,OACJqoC,MAAO,UACPC,IAAK,IACLC,IAAK,QACLC,OAAQ,WACRC,MAAO,UACPC,MAAO,UACPC,SAAU,aACVC,IAAK,IACLC,IAAK,QACLC,QAAS,YACTC,QAAS,YACTC,IAAK,QACLj0F,IAAK,QACLk0F,OAAQ,WACRC,IAAK,IACLC,IAAK,QACLC,IAAK,QACLjW,IAAK,QACLkW,MAAO,UACPC,MAAO,UAEPC,KAAM,iBACNC,MAAO,kBAEP9+F,EAAG,IAEHkxD,IAAK,UACL6tC,IAAK,UACLC,SAAU,UACVv/E,SAAU,UACVw/E,GAAI,UACJC,IAAK,QACLC,UAAW,eAEFC,GAAiB,CAC1Bl4E,UAAW,SACXm4E,WAAY,KACZC,UAAW,IACX99F,IAAK,IACL+9F,OAAQ,YAERC,UAAW,IACX3yB,WAAY,IACZ4yB,OAAQ,MAERC,IAAK,QACLjnE,SAAU,SACVs1B,OAAQ,SAER4xC,YAAa,UAEbC,UAAW,KAEXluC,IAAK,QACL3xC,IAAK,IACLw2D,SAAU,IACV1rC,GAAI,eACJg1D,UAAW,KACXC,gBAAiB,KACjBC,cAAe,MACftpB,MAAO,IACPupB,QAAS,QACTrrB,QAAS,IACTC,OAAQ,IACRqrB,UAAW,QACXC,SAAU,QACVC,OAAQ,MACRC,OAAQ,iBACRC,MAAO,IACPC,IAAK,UACLC,IAAK,WACLC,GAAI,SAEKC,GAAiB,CAE1BliG,IAAK,CACHmiG,EAAG,6BAEL3gF,IAAK,CACH4gF,EAAG,oBAAoBlnD,OAAO2lD,GAAer/E,IAAK,uBAEpD2tC,KAAM,CACJgzC,EAAG,yBAELtiG,KAAM,CACJsiG,EAAG,yCAELE,KAAM,CACJF,EAAG,+BAEL3yC,OAAQ,CACN4yC,EAAG,kCAELf,UAAW,CACTe,EAAG,oBAAoBlnD,OAAO2lD,GAAeQ,UAAW,uBAE1DD,YAAa,CACXgB,EAAG,oBAAoBlnD,OAAO2lD,GAAeO,YAAa,uBAE5DJ,OAAQ,CACNoB,EAAG,oBAAoBlnD,OAAO2lD,GAAeG,OAAQ,uBAEvDt+F,IAAK,CACHy/F,EAAG,kCAELpoC,MAAO,WAAW7e,OAAO2lD,GAAe59F,IAAK,0BAC7Cg1E,IAAK,CACHkqB,EAAG,8CAELviG,MAAO,CACLuiG,EAAG,2CAELxlC,IAAK,8BACL7D,MAAO,gCACP51D,IAAK,CACHi/F,EAAG,gCACHC,EAAG,+CAELrpC,MAAO,CACLopC,EAAG,uCAELG,MAAO,CACLH,EAAG,kCACHC,EAAG,iDAELppC,KAAM,qCACN7F,IAAK,CACHivC,EAAG,oBAAoBlnD,OAAO2lD,GAAe1tC,IAAK,uBAEpDj5B,SAAU,CACRkoE,EAAG,oBAAoBlnD,OAAO2lD,GAAe3mE,SAAU,uBAEzDqoE,KAAM,CACJJ,EAAG,gCACHC,OAAG,GAGLI,QAAS,CACPJ,EAAG,kCAELK,SAAU,CACRL,EAAG,yCAELn/F,IAAK,CACHm/F,EAAG,4BAA4BlnD,OAAO2lD,GAAe59F,IAAK,iBAE5DnD,MAAO,CACLqiG,EAAG,yCACHC,OAAG,GAGLtpE,KAAM,CACJqpE,EAAG,8CAELpiG,KAAM,CACJoiG,EAAG,sBAELO,OAAQ,CACNP,EAAG,+BAELnqB,SAAU,CACRoqB,EAAG,oBAAoBlnD,OAAO2lD,GAAe7oB,SAAU,uBAEzD1J,WAAY,CACV6zB,EAAG,GAAGjnD,OAAO2lD,GAAevyB,WAAY,8BAE1C2yB,UAAW,CACTkB,EAAG,GAAGjnD,OAAO2lD,GAAeI,UAAW,8BAGzCW,OAAQ,CACNQ,EAAG,oBAAoBlnD,OAAO2lD,GAAee,OAAQ,uBAEvDV,OAAQ,CACNiB,EAAGtB,GAAeK,OAAS,6BAE7BY,MAAO,CACLM,EAAG,oBAAoBlnD,OAAO2lD,GAAeiB,MAAO,uBAEtDD,OAAQ,CACNO,EAAG,oBAAoBlnD,OAAO2lD,GAAegB,OAAQ,uBAEvDP,UAAW,CACTc,EAAG,oBAAoBlnD,OAAO2lD,GAAeS,UAAW,uBAE1DC,gBAAiB,CACfa,EAAG,oBAAoBlnD,OAAO2lD,GAAeU,gBAAiB,uBAEhEC,cAAe,CACbY,EAAG,oBAAoBlnD,OAAO2lD,GAAeW,cAAe,uBAG9DmB,YAAa,CACXR,EAAG,4BAELS,QAAS,CACPT,EAAG,4BAELU,WAAY,CACVT,EAAG,qCAGL9jD,IAAK,CACH6jD,EAAG,kCAEL7O,KAAM,CACJ6O,EAAG,+BAELzoC,GAAI,CACFyoC,EAAG,+CAEL1oC,GAAI,CACF0oC,EAAG,+CAGLJ,IAAK,CACHK,EAAG,oBAAoBlnD,OAAO2lD,GAAekB,IAAK,uBAEpDZ,IAAK,CACHgB,EAAGtB,GAAeM,IAAM,6BAE1Bc,GAAI,CACFG,EAAG,oBAAoBlnD,OAAO2lD,GAAeoB,GAAI,uBAEnDD,IAAK,CACHI,EAAG,oBAAoBlnD,OAAO2lD,GAAemB,IAAK,uBAGpDp6E,MAAO,CACLw6E,EAAG,6DAELtB,WAAY,CACVqB,EAAG,4BAA4BjnD,OAAO2lD,GAAeC,aAEvDzuF,IAAK,CACH8vF,EAAG,kCAEL16F,IAAK,CACH26F,EAAG,6CAELU,KAAM,CACJX,EAAG,kCAELY,IAAK,CACHZ,EAAG,kCAELa,MAAO,CACLb,EAAG,eAAejnD,OAAO2lD,GAAe59F,IAAK,mBAE/CoE,MAAO,CACL86F,EAAG,yCAELx5E,UAAW,CACTw5E,EAAG,4BAA4BjnD,OAAO2lD,GAAel4E,YAGvDs6E,aAAc,CACZb,EAAG,mCAELc,oBAAqB,CACnBd,EAAG,gEAELrB,UAAW,CACToB,EAAG,4BAA4BjnD,OAAO2lD,GAAeE,YAEvDlD,MAAO,CACLsE,EAAG,oCAGLjqB,MAAO,CACLkqB,EAAG,oBAAoBlnD,OAAO2lD,GAAe3oB,MAAO,uBAEtD7B,OAAQ,CACN+rB,EAAG,oBAAoBlnD,OAAO2lD,GAAexqB,OAAQ,uBAEvDsrB,SAAU,CACRS,EAAG,oBAAoBlnD,OAAO2lD,GAAec,SAAU,uBAEzDvrB,QAAS,CACPgsB,EAAG,oBAAoBlnD,OAAO2lD,GAAezqB,QAAS,uBAExDsrB,UAAW,CACTU,EAAG,oBAAoBlnD,OAAO2lD,GAAea,UAAW,uBAE1DD,QAAS,CACPW,EAAG,oBAAoBlnD,OAAO2lD,GAAeY,QAAS,uBAGxD0B,IAAK,CACHhB,EAAG,gCAGL9iG,IAAK,8BACLD,IAAK,8BACLgkG,SAAU,sCAEV17F,KAAM,CACJy6F,EAAG,uCAEL9wC,MAAO,CACL8wC,EAAG,wCAEL7nC,KAAM,CACJ6nC,EAAG,uCAELnnC,MAAO,CACLmnC,EAAG,wCAEL3nC,KAAM,CACJ2nC,EAAG,uCAELlnC,MAAO,CACLknC,EAAG,gDAEL5nC,KAAM,CACJ4nC,EAAG,uCAELjnC,MAAO,CACLinC,EAAG,gDAEL1tF,KAAM,CACJ0tF,EAAG,uCAEL1wC,MAAO,CACL0wC,EAAG,wCAELpwC,KAAM,CACJowC,EAAG,uCAELliG,MAAO,CACLmiG,EAAG,yCAELzwC,MAAO,CACLwwC,EAAG,wCAELjhG,IAAK,CACHihG,EAAG,kCAEL/xC,KAAM,CACJ+xC,EAAG,mCAELjoC,IAAK,CACHioC,EAAG,kCAEL1nC,KAAM,CACJ0nC,EAAG,mCAEL/nC,IAAK,CACH+nC,EAAG,kCAELznC,KAAM,CACJynC,EAAG,2CAELhoC,IAAK,CACHgoC,EAAG,kCAELxnC,KAAM,CACJwnC,EAAG,2CAELhhG,IAAK,CACHghG,EAAG,kCAEL1xC,KAAM,CACJ0xC,EAAG,mCAELzkF,IAAK,CACHykF,EAAG,kCAELpxC,KAAM,CACJoxC,EAAG,mCAGL71D,GAAI,CACF81D,EAAG,oBAAoBlnD,OAAO2lD,GAAev0D,GAAI,uBAGnDunC,QAAS,SAAiBliD,EAAM8Z,UAEvB9Z,EAAKuqB,KAAK,GAAG05C,SAGtBxkD,OAAQ,CACNiyD,EAAG,IACHlB,EAAG,4BACHC,EAAG,sDAELnjF,OAAQ,CACNokF,EAAG,eACHlB,EAAG,6CAEL/uB,UAAW,CACTiwB,EAAG,IACHlB,EAAG,6BAELmB,QAAS,CACPD,EAAG,IACHlB,EAAG,4BACHC,EAAG,oCAAoClnD,OAAOsiD,GAAa/7F,EAAG,4CAEhE2S,OAAQ,CACNivF,EAAG,iCACHlB,EAAG,4BACHC,EAAG,6BAELmB,OAAQ,CACNF,EAAG,iCACHlB,EAAG,6BAELhyD,KAAM,CACJgyD,EAAG,4BACHC,EAAG,uDAIHoB,GAAa,CACf9iE,IAAK,WAEA,YAAqBzhB,UDjaX,SAAU46B,WACrBkQ,EAAO78C,UAAUxN,OAAS,QAAsB,IAAjBwN,UAAU,GAAmBA,UAAU,GAAK,GAC3Eu2F,EAAwB15C,EAAK25C,mBAC7BA,OAA+C,IAA1BD,GAA8CA,EACnEE,EAAmB55C,EAAK65C,YACxBA,OAAmC,IAArBD,EAAiCtG,GAAqBsG,EAEpEE,EAAa9/C,OAAOlK,GACpBrN,EAAS,GAETs3D,EAAUF,EAAY7iB,GAAS,GAAIob,IAAiBuH,EAAqB3iB,GAAS,GAAI+b,IAAiB,IACvGiH,EAAa75E,OAAOytB,KAAKmsD,GAMzBE,EAAQ,eACNC,GAAmB,IACZ/rD,SAAQ,SAAUtW,EAAKxjC,GAC5B6lG,GAGAJ,EAAWnkG,QAAUkiC,EAAIliC,QAAUmkG,EAAWvjF,MAAM,EAAGshB,EAAIliC,UAAYkiC,OAC/DkiE,EAAQC,EAAW3lG,MAChBylG,EAAWvjF,MAAMshB,EAAIliC,OAAQmkG,EAAWnkG,WAClC,MAGlBukG,OACOJ,EAAWvjF,MAAM,EAAG,KACjBujF,EAAWvjF,MAAM,EAAGujF,EAAWnkG,UAIzCmkG,cAGAr3D,EC4XA03D,CAAejlF,EAAQ,CAC5BykF,oBAAoB,IAKjB,YAAkBrkF,EAAM8kF,iBACF,IAAXA,GAAiCA,GAG3CttD,GAAe2sD,GAAYnkF,GACtBmkF,GAAWnkF,GAGb,YAAc+kF,GAAY/kF,GAAQ,IAGvCw3B,GAAe2mD,GAAcn+E,GACxBm+E,GAAan+E,GAGf+kF,GAAY/kF,GC3drB,IAEWglF,MAFA,eACQ,CAAC,SACwDt6C,QAExEssC,QACEtsC,aAckB7rD,wBACEomG,SACd,IAAIjpD,YAAY,yDAGnBn9C,MAAQA,WAGFoD,UAAY,IAAIqzF,IAChBrzF,UAAU6/B,KAAO,iBACjB7/B,UAAUw0C,gBAAiB,IAe3Bx0C,UAAUwzF,SAAW,SAAU5kD,EAAM8kD,OAC5C92F,EAAQD,KAAKC,aACV,kBACEA,MASEoD,UAAU42C,QAAU,SAAU9uC,OAU9B9H,UAAUk1C,IAAM,SAAUptC,UAC9BnL,KAAKwuC,WAQDnrC,UAAUmrC,MAAQ,kBACtB,IAAI63D,EAAarmG,KAAKC,UASlBoD,UAAUo0F,UAAY,SAAUjqD,UACpC8a,GAAOtoD,KAAKC,MAAOutC,MASfnqC,UAAUq0F,OAAS,SAAUlqD,OACpCvtC,EAAQD,KAAKy3F,UAAUjqD,UAEnB4zB,GAAOphE,KAAKC,YACb,aACA,gBACA,iBACI,6BAA+BA,EAAQ,cAE3C,eACI,6BAA+BA,EAAQ,cAE3C,gBACI,8BAAgCA,EAAQ,cAE5C,aACI,kCAAoCA,EAAQ,cAEhD,kBACI,gCAAkCA,EAAQ,wBAG1C,6BAA+BA,EAAQ,cASvCoD,UAAU4pD,OAAS,iBACvB,CACLC,OAAQ,eACRjtD,MAAOD,KAAKC,UAYHktD,SAAW,SAAUC,UACzB,IAAIi5C,EAAaj5C,EAAKntD,UASlBoD,UAAUw0F,OAAS,SAAUrqD,OACpCvtC,EAAQD,KAAKy3F,UAAUjqD,UAEnB4zB,GAAOphE,KAAKC,YACb,eACI,YAAckmG,GAAYlmG,GAAS,QAEvC,aACA,gBAEI80B,SAAS/0B,KAAKC,cACVD,KAAKC,MAAMu4C,UAAY,EAAI,WAAa,cAG7Cr4C,EAAQF,EAAM0hB,cAAc2mB,QAAQ,gBAEpCnoC,EACKF,EAAM6nD,UAAU,EAAG3nD,GAAS,aAAeF,EAAM6nD,UAAU3nD,EAAQ,GAAK,IAG5EF,MAEJ,kBACID,KAAKC,MAAMm/D,yBAGXn/D,IAINomG,IACN,CACDh5C,SAAS,EACT7V,QAAQ,IClLC8uD,MAFA,yBACQ,CAAC,QAAS,SACyDx6C,QAChFhR,MACFA,EACAs9C,QACEtsC,aAc4B1qC,EAAM66B,EAAQ26C,wBACtByC,SACd,IAAIj8C,YAAY,uDAIJ,iBAATh8B,QAAyB,IAAIq3B,UAAU,4CAC7Cxd,MAAM4b,QAAQoF,SAAe,IAAIxD,UAAU,2EAC3CjB,GAAOo/C,SAAa,IAAIn+C,UAAU,yCACnCr3B,KAAQm1E,SAAgB,IAAIn2F,MAAM,2BAA6BghB,EAAO,gCACrEo5B,KAAOp5B,OACP66B,OAASA,EAAO1D,KAAI,SAAU2D,UAC1BA,GAASA,EAAM1B,MAAQ0B,UAE3BnB,MAAQkB,EAAO1D,KAAI,SAAU2D,UACzBA,GAASA,EAAMhZ,MAAQ,cAE3B0zD,KAAOA,aA0FWljE,EAAMooE,OACzBS,EAAaP,GAActoE,EAAMooE,GACjCU,EAAiBR,GAActoE,EAAKkjE,KAAMkF,SACvB,QAAhBA,GAA4C,OAAnBU,GAA2BA,GAAkBD,WA1FxDl5F,UAAY,IAAIqzF,IAChBrzF,UAAU6/B,KAAO,2BACjB7/B,UAAUy0C,0BAA2B,IAerCz0C,UAAUwzF,SAAW,SAAU5kD,EAAM8kD,OACtDwP,EAAgBt6E,OAAOi5B,OAAO6xC,MAC1B/2F,KAAKi8C,QAAQ,SAAUC,KACfA,IAAS,SAGrBsqD,EAAWxmG,KAAK42F,KAAKC,SAAS5kD,EAAMs0D,GAEpCnlF,EAAOphB,KAAKw6C,KACZyB,EAASj8C,KAAKi8C,OACdT,EAAYlB,GAAKt6C,KAAK+6C,MAAO,KAC7BsN,EAASjnC,EAAO,IAAMk5B,GAAKt6C,KAAKi8C,OAAQ,MAAQ,WAC7C,SAAoCjK,EAAOiM,EAAM06C,OAClDl9C,EAAa,KAEND,GAAa,mBAClBirD,EAAYx6E,OAAOi5B,OAAOjH,GAErBz6C,EAAI,EAAGA,EAAIy4C,EAAOx6C,OAAQ+B,MACvBy4C,EAAOz4C,IAAMyL,UAAUzL,UAG5BgjG,EAASx0D,EAAOy0D,EAAW9N,QAGhCp9C,EAAKT,EAAM15B,EAAMq6B,YAClB4M,OAASA,KACIrW,EAAO5wB,EAAMm6B,GACtBA,MASYl4C,UAAU42C,QAAU,SAAU9uC,KAC1CnL,KAAK42F,KAAM,OAAQ52F,SAUPqD,UAAUk1C,IAAM,SAAUptC,OAC3CyrF,EAAO52F,KAAKg3F,QAAQ7rF,EAASnL,KAAK42F,KAAM,OAAQ52F,cAE7C,IAAIq5F,EAAuBr5F,KAAKw6C,KAAMx6C,KAAKi8C,OAAO55B,MAAM,GAAIu0E,MAQ9CvzF,UAAUmrC,MAAQ,kBAChC,IAAI6qD,EAAuBr5F,KAAKw6C,KAAMx6C,KAAKi8C,OAAO55B,MAAM,GAAIriB,KAAK42F,SAsBnDvzF,UAAUo0F,UAAY,SAAUjqD,OACjDsuD,EAActuD,GAAWA,EAAQsuD,YAActuD,EAAQsuD,YAAc,OACrElF,EAAO52F,KAAK42F,KAAKnzF,SAAS+pC,UAE1BorD,EAAgB54F,KAAM87F,OACjB,IAAMlF,EAAO,KAGf52F,KAAKw6C,KAAO,IAAMx6C,KAAKi8C,OAAO3B,KAAK,MAAQ,OAASs8C,KAQtCvzF,UAAU4pD,OAAS,eACpClS,EAAQ/6C,KAAK+6C,YACV,CACLmS,OAAQ,yBACR1S,KAAMx6C,KAAKw6C,KACXyB,OAAQj8C,KAAKi8C,OAAO1D,KAAI,SAAU2D,EAAO/7C,SAChC,CACLq6C,KAAM0B,EACNhZ,KAAM6X,EAAM56C,OAGhBy2F,KAAM52F,KAAK42F,SAYQzpC,SAAW,SAAUC,UACnC,IAAIisC,EAAuBjsC,EAAK5S,KAAM4S,EAAKnR,OAAQmR,EAAKwpC,SAS1CvzF,UAAUq0F,OAAS,SAAUlqD,WAC9CsuD,EAActuD,GAAWA,EAAQsuD,YAActuD,EAAQsuD,YAAc,OACrE7/C,EAAS,GAEJz4C,EAAI,EAAGA,EAAIxD,KAAKi8C,OAAOx6C,OAAQ+B,MAC/BqsB,KAAK,4CAA8C62E,GAAO1mG,KAAKi8C,OAAOz4C,IAAM,eAGjFozF,EAAO52F,KAAK42F,KAAKc,OAAOlqD,UAExBorD,EAAgB54F,KAAM87F,OACjB,iEAAmElF,EAAO,kEAG5E,+BAAiC8P,GAAO1mG,KAAKw6C,MAAQ,wEAA+EyB,EAAO3B,KAAK,yCAA2C,qLAAuLs8C,KASpWvzF,UAAUw0F,OAAS,SAAUrqD,OAC9CsuD,EAActuD,GAAWA,EAAQsuD,YAActuD,EAAQsuD,YAAc,OACrElF,EAAO52F,KAAK42F,KAAKe,MAAMnqD,UAEvBorD,EAAgB54F,KAAM87F,OACjB,UAAU7+C,OAAO25C,EAAM,aAGzB,YAAc52F,KAAKw6C,KAAO,WAAax6C,KAAKi8C,OAAO1D,IAAIouD,IAAUrsD,KAAK,KAAO,aAAes8C,GAG9FyC,IACN,CACDhsC,SAAS,EACT7V,QAAQ,IClOCovD,MAFA,YACQ,CAAC,QAAS,OAAQ,SACoC96C,QACnEkU,MACFA,EACAo4B,OACA/3B,QACEvU,aAiBewuB,EAAYusB,wBACPC,SACd,IAAI1pD,YAAY,4DAGnBk9B,WAAaA,OACbusB,YAAcA,IAAe,GAE7B5rE,MAAM4b,QAAQyjC,KAAgBA,EAAWnvB,MAAM3T,UAC5C,IAAIiB,UAAU,iEAGlBz4C,KAAK6mG,cAAgB7mG,KAAKg4F,yBACtB,IAAI53F,MAAM,gEA4NC6pB,EAAOC,EAAKvgB,UACxB,IAAIq2D,EAAMxpB,GAAYvsB,GAASA,EAAM0iC,WAAa1iC,EAAOusB,GAAYtsB,GAAOA,EAAIyiC,WAAaziC,EAAKssB,GAAY7sC,GAAQA,EAAKgjD,WAAahjD,YAzNvItG,UAAY,IAAIqzF,IAChBrzF,UAAU6/B,KAAO,cACjB7/B,UAAU20C,aAAc,IAexB30C,UAAUwzF,SAAW,SAAU5kD,EAAM8kD,OAMzCgQ,EAAiBxuD,GAAIv4C,KAAKs6E,YAAY,SAAUz1E,EAAOrB,MACrD40C,GAAYvzC,GAAQ,IAClBA,EAAMmiG,WAAY,KAEhBT,EAAgBt6E,OAAOi5B,OAAO6xC,KACpB7sE,KAAM,MAEhB+8E,EAAYpiG,EAAMolB,MAAM4sE,SAAS5kD,EAAMs0D,GAEvCW,EAAUriG,EAAMqlB,IAAI2sE,SAAS5kD,EAAMs0D,GAEnCY,EAAWtiG,EAAM8E,KAAO9E,EAAM8E,KAAKktF,SAAS5kD,EAAMs0D,GAAiB,kBAC9D,UAEF,SAAuBv0D,EAAOiM,EAAM06C,OACrCj4F,EAAI8gB,EAAKm3E,GAASngD,UAClBiuD,EAAYx6E,OAAOi5B,OAAOjH,YACpB/zB,IAAMxpB,EAAE8C,GACX4jG,EAAYH,EAAUj1D,EAAOy0D,EAAW9N,GAAUuO,EAAQl1D,EAAOy0D,EAAW9N,GAAUwO,EAASn1D,EAAOy0D,EAAW9N,SAItH0O,EAAaxiG,EAAMolB,MAAM4sE,SAAS5kD,EAAM8kD,GAExCuQ,EAAWziG,EAAMqlB,IAAI2sE,SAAS5kD,EAAM8kD,GAEpCwQ,EAAY1iG,EAAM8E,KAAO9E,EAAM8E,KAAKktF,SAAS5kD,EAAM8kD,GAAY,kBAC1D,UAGF,SAAuB/kD,EAAOiM,EAAM06C,UAClCyO,EAAYC,EAAWr1D,EAAOiM,EAAM06C,GAAU2O,EAASt1D,EAAOiM,EAAM06C,GAAU4O,EAAUv1D,EAAOiM,EAAM06C,QAGvGtgD,GAAaxzC,IAAyB,QAAfA,EAAM21C,KAAgB,KAElDgtD,EAAiBv7E,OAAOi5B,OAAO6xC,KAEpB7sE,KAAM,MAEjBu9E,EAAY5iG,EAAMgyF,SAAS5kD,EAAMu1D,UAE9B,SAAuBx1D,EAAOiM,EAAM06C,OACrCj4F,EAAI8gB,EAAKm3E,GAASngD,UAClBiuD,EAAYx6E,OAAOi5B,OAAOjH,YACpB/zB,IAAMxpB,EAAE8C,GACXikG,EAAUz1D,EAAOy0D,EAAW9N,QAIjC+O,EAAa7iG,EAAMgyF,SAAS5kD,EAAM8kD,UAE/B,SAAuB/kD,EAAOiM,EAAM06C,UAClC+O,EAAW11D,EAAOiM,EAAM06C,OAIjCx4F,EAAQo0E,GAAgBtiC,EAAM,gBAC3B,SAAuBD,EAAOiM,EAAM06C,OACrCre,EAAa/hC,GAAIwuD,GAAgB,SAAUY,UACtCA,EAAc31D,EAAOiM,EAAM06C,aAE7Bx4F,KAASm6E,OASVj3E,UAAU42C,QAAU,SAAU9uC,WAC7B3H,EAAI,EAAGA,EAAIxD,KAAKs6E,WAAW74E,OAAQ+B,MACjCxD,KAAKs6E,WAAW92E,GAAI,cAAgBA,EAAI,IAAKxD,SAWhDqD,UAAUk1C,IAAM,SAAUptC,WAC9BmvE,EAAa,GAER92E,EAAI,EAAGA,EAAIxD,KAAKs6E,WAAW74E,OAAQ+B,MAC/BA,GAAKxD,KAAKg3F,QAAQ7rF,EAASnL,KAAKs6E,WAAW92E,GAAI,cAAgBA,EAAI,IAAKxD,cAG9E,IAAI8mG,EAAUxsB,EAAYt6E,KAAK6mG,gBAQ9BxjG,UAAUmrC,MAAQ,kBACnB,IAAIs4D,EAAU9mG,KAAKs6E,WAAWj4D,MAAM,GAAIriB,KAAK6mG,gBAQ5CxjG,UAAU20F,iBAAmB,kBACH,IAA3Bh4F,KAAKs6E,WAAW74E,QAAgBo2C,GAAe73C,KAAKs6E,WAAW,KAA2C,iBAA7Bt6E,KAAKs6E,WAAW,GAAGr6E,SAS/FoD,UAAU40F,kBAAoB,kBAC/Bj4F,KAAKg4F,mBAAqBh4F,KAAKs6E,WAAW,GAAGr6E,MAAQ,QASpDoD,UAAUo0F,UAAY,SAAUjqD,UAEjCxtC,KAAK6mG,YAAc,IAAM7mG,KAAKi4F,oBAAsB,IAAMj4F,KAAKs6E,WAAWhgC,KAAK,MAAQ,OAQtFj3C,UAAU4pD,OAAS,iBACpB,CACLC,OAAQ,YACRotB,WAAYt6E,KAAKs6E,WACjBusB,YAAa7mG,KAAK6mG,gBAYZ15C,SAAW,SAAUC,UACtB,IAAI05C,EAAU15C,EAAKktB,WAAYltB,EAAKy5C,gBASnCxjG,UAAUq0F,OAAS,SAAUlqD,WAEjC8sC,EAAa,GAER92E,EAAI,EAAGA,EAAIxD,KAAKs6E,WAAW74E,OAAQ+B,MAC/BA,GAAKxD,KAAKs6E,WAAW92E,GAAGk0F,gBAGjC13F,KAAK6mG,YACA,sGAA6GH,GAAO1mG,KAAKi4F,qBAAuB,UAEhJ,kEAAoE3d,EAAWhgC,KAAK,yCAA2C,qEAUhIj3C,UAAUw0F,OAAS,SAAUrqD,OACjC8sC,EAAat6E,KAAKs6E,WAAW/hC,KAAI,SAAU1zC,UACtCA,EAAM8yF,MAAMnqD,aAEdxtC,KAAK6mG,YAAc,IAAM7mG,KAAKi4F,oBAA2B,KAAO3d,EAAWhgC,KAAK,KAAO,KAQzFwsD,IACN,CACDz5C,SAAS,EACT7V,QAAQ,ICtQCowD,MAFA,aACQ,CAAC,SACsD97C,QAEtEssC,QACEtsC,aAQgBhB,wBACI+8C,SACd,IAAIzqD,YAAY,4DAGnB+7C,WAAaruC,GAAc,GAE5BA,IAC0B,iBAAfA,IAA6B7+B,OAAOytB,KAAKoR,GAAYK,OAAM,SAAUxnB,UACzE6T,GAAOsT,EAAWnnB,cAEnB,IAAI8U,UAAU,6CAKfp1C,UAAY,IAAIqzF,IAChBrzF,UAAU6/B,KAAO,eACjB7/B,UAAU40C,cAAe,IAezB50C,UAAUwzF,SAAW,SAAU5kD,EAAM8kD,OAC1C+Q,EAAc,WAETnkE,KAAO3jC,KAAKm5F,cACfvgD,GAAe54C,KAAKm5F,WAAYx1D,GAAM,KAGpCokE,EAAiB1tD,GAAU1W,GAC3BqkE,EAAY5tD,KAAK7H,MAAMw1D,OAEtBl1B,GAAe7yE,KAAKm5F,WAAY6O,SAC7B,IAAI5nG,MAAM,0BAA4B4nG,EAAY,OAG9CA,GAAahoG,KAAKm5F,WAAWx1D,GAAKkzD,SAAS5kD,EAAM8kD,UAI1D,SAAwB/kD,EAAOiM,EAAM06C,OACtC3xD,EAAM,WAEDisD,KAAQ6U,EACXlvD,GAAekvD,EAAa7U,OAC1BA,GAAQ6U,EAAY7U,GAAMjhD,EAAOiM,EAAM06C,WAIxC3xD,MASA3jC,UAAU42C,QAAU,SAAU9uC,WAC9Bw4B,KAAO3jC,KAAKm5F,WACfvgD,GAAe54C,KAAKm5F,WAAYx1D,MACzB3jC,KAAKm5F,WAAWx1D,GAAM,cAAgB0W,GAAU1W,GAAO,IAAK3jC,SAYhEqD,UAAUk1C,IAAM,SAAUptC,OAC/B2/C,EAAa,WAERnnB,KAAO3jC,KAAKm5F,WACfvgD,GAAe54C,KAAKm5F,WAAYx1D,OACvBA,GAAO3jC,KAAKg3F,QAAQ7rF,EAASnL,KAAKm5F,WAAWx1D,GAAM,cAAgB0W,GAAU1W,GAAO,IAAK3jC,eAIjG,IAAI6nG,EAAW/8C,MAQbznD,UAAUmrC,MAAQ,eACvBsc,EAAa,WAERnnB,KAAO3jC,KAAKm5F,WACfvgD,GAAe54C,KAAKm5F,WAAYx1D,OACvBA,GAAO3jC,KAAKm5F,WAAWx1D,WAI/B,IAAIkkE,EAAW/8C,MAUbznD,UAAUo0F,UAAY,SAAUjqD,OACrCiX,EAAU,WAEL9gB,KAAO3jC,KAAKm5F,WACfvgD,GAAe54C,KAAKm5F,WAAYx1D,MAC1B9T,KAAKwqB,GAAU1W,GAAO,KAAO3jC,KAAKm5F,WAAWx1D,GAAKlgC,SAAS+pC,UAIhE,IAAMiX,EAAQnK,KAAK,MAAQ,OAQzBj3C,UAAU4pD,OAAS,iBACrB,CACLC,OAAQ,aACRisC,WAAYn5F,KAAKm5F,eAYVhsC,SAAW,SAAUC,UACvB,IAAIy6C,EAAWz6C,EAAK+rC,eAUlB91F,UAAUq0F,OAAS,SAAUlqD,OAClCiX,EAAU,WAEL9gB,KAAO3jC,KAAKm5F,WACfvgD,GAAe54C,KAAKm5F,WAAYx1D,MAC1B9T,KAAK,2CAA6C62E,GAAO/iE,GAAO,8HAAqI3jC,KAAKm5F,WAAWx1D,GAAK+zD,OAAOlqD,UAItO,iEAAmEiX,EAAQnK,KAAK,yCAA2C,oEASzHj3C,UAAUw0F,OAAS,SAAUrqD,OAClCiX,EAAU,WAEL9gB,KAAO3jC,KAAKm5F,WACfvgD,GAAe54C,KAAKm5F,WAAYx1D,MAC1B9T,KAAK,YAAc8T,EAAM,QAAU3jC,KAAKm5F,WAAWx1D,GAAKg0D,MAAMnqD,GAAW,cAI9E,8BAA8ByP,OAAOwH,EAAQnK,KAAK,MAAO,2BAG3DutD,IACN,CACDx6C,SAAS,EACT7V,QAAQ,IC7MCywD,MAFA,eACQ,CAAC,SACwDn8C,QAExEssC,QACEtsC,aAYkBo8C,EAAI3sD,EAAI0C,EAAMkqD,wBACZC,SACd,IAAIhrD,YAAY,uDAIN,iBAAP8qD,QACH,IAAIzvD,UAAU,yCAGJ,iBAAP8C,QACH,IAAI9C,UAAU,0CAGjBxd,MAAM4b,QAAQoH,KAAUA,EAAKkN,MAAM3T,UAChC,IAAIiB,UAAU,6DAGjB0vD,UAAwB,IAAbA,OACXD,GAAKA,OACL3sD,GAAKA,OACL0C,KAAOA,GAAQ,cA8HiBid,EAAM4gC,EAAaqM,EAAUlqD,EAAMoqD,OAqBpE95D,EAnBAguD,EAAaP,GAAc9gC,EAAM4gC,GACjCnC,EAAgB2O,GAAiBptC,EAAM4gC,MAEvB,QAAhBA,GAAyB79C,EAAKx8C,OAAS,GAA8B,qBAAzBy5D,EAAK48B,iBAAmE,0BAAzB58B,EAAK48B,uBAC3F75C,EAAK1F,KAAI,SAAU8H,UAChBA,EAAI03C,aAAa70D,UAElB,gBACA,mBACA,iBACA,yBACI,iBAGA,aAOP+a,EAAKx8C,aACN,IACM,cAGN,MAIG8mG,EAAoBvM,GAAc/9C,EAAK,GAAI69C,MAE3CuM,GAA+B,OAAtBE,EAA4B,KACnCC,EACAC,KAEgB,SAAhB3M,KACkB79C,EAAK,GAAG65C,kBACX58B,EAAK48B,oBAGF75C,EAAK,GAAG85C,aAAaD,kBACxB58B,EAAK68B,aAAaD,kBAG0B,IAA3DqB,GAAWoD,GAAYkM,GAAgBlP,gBAA2B,GAC3D,EAAC,aAIyD,IAAjEJ,GAAWoP,GAAmBC,GAAmB/O,YAAuB,GACjE,EAAC,aAKY,OAAtB8O,EAA4B,GAErB,EAAC,YAIRA,GAAqBhM,EAAY,GAE1B,EAAC,WAKH,EAAC,cAIT,MAGGmM,EAuBAC,EApBAC,EAAgB5M,GAAc/9C,EAAK,GAAI69C,GAEvC+M,EAAeC,GAAkB5tC,EAAMjd,EAAK,GAAI69C,KAE9B,OAAlB8M,IAIOA,IAAkBrM,GAAgC,UAAlB5C,IAA8BkP,GAM9DD,EAAgBrM,OA+BrBwM,EAEAC,EACAC,EAzBFC,EAAgBlN,GAAc/9C,EAAK,GAAI69C,GAEvCqN,EAAeL,GAAkB5tC,EAAMjd,EAAK,GAAI69C,QAE9B,OAAlBoN,IAIOA,IAAkB3M,GAAgC,SAAlB5C,IAA6BwP,GAM7DD,EAAgB3M,GAOvB8L,EAMkB,SAAhBvM,KACgB5gC,EAAK48B,kBACP58B,EAAKjd,KAAK,GAAG65C,kBACb58B,EAAKjd,KAAK,GAAG65C,oBAGX58B,EAAK68B,aAAaD,kBACpB58B,EAAKjd,KAAK,GAAG85C,aAAaD,kBAC1B58B,EAAKjd,KAAK,GAAG85C,aAAaD,iBAGtB,OAAlB8Q,KAC8D,IAA5DzP,GAAWoD,GAAYwM,GAAiBxP,qBAC9B,IAG+C,IAAzDJ,GAAWyP,GAAeI,GAAevP,iBAC/B,IAIM,OAAlByP,KAC+D,IAA7D/P,GAAWoD,GAAYwM,GAAiBvP,sBAC9B,IAG+C,IAAzDL,GAAW+P,GAAeD,GAAexP,iBAC/B,MAKT,CAACiP,EAAWC,iBAKM,qBAAzBztC,EAAK48B,iBAAmE,0BAAzB58B,EAAK48B,oBAC7C75C,EAAK1F,KAAI,SAAU8H,OACtB+oD,EAAgBpN,GAAc37C,EAAKy7C,GACnCuN,EAAeP,GAAkB5tC,EAAM7a,EAAKy7C,GAC5CwN,EAAmBhB,GAAiBjoD,EAAKy7C,UAEvB,OAAlBsN,IAGO7M,IAAe6M,GAAiBzP,IAAkB2P,IAAqBD,GAEvED,EAAgB7M,cAc/Bt+C,EAAKx8C,QAAU,GAA8B,0BAAzBy5D,EAAK48B,iBAA+C58B,EAAKitC,UAA4B,SAAhBrM,GAAuC,SAAbqM,MAC5GlqD,EAAK1F,KAAI,SAAU8H,EAAKlgD,OAC3BopG,EAA4C,oBAAxBlpD,EAAIy3C,yBAExBvpD,EAAOpuC,KAAUopG,OASlBh7D,WAzUIlrC,UAAY,IAAIqzF,IAChBrzF,UAAU6/B,KAAO,iBACjB7/B,UAAU60C,gBAAiB,IAe3B70C,UAAUwzF,SAAW,SAAU5kD,EAAM8kD,MAEzB,iBAAZ/2F,KAAKu7C,KAAoBu3B,GAAa7gC,EAAMjyC,KAAKu7C,UACrDtJ,EAAKjyC,KAAKu7C,IAGP,IAAIn7C,MAAM,0BAA4BJ,KAAKu7C,GAAK,KAFhD,IAAIn7C,MAAM,YAAcJ,KAAKu7C,GAAK,6CAMxCA,EAAKg5B,GAAgBtiC,EAAMjyC,KAAKu7C,IAChCiuD,EAAWjxD,GAAIv4C,KAAKi+C,MAAM,SAAUoC,UAC/BA,EAAIw2C,SAAS5kD,EAAM8kD,SAGJ,IAApByS,EAAS/nG,OAAc,KACrBgoG,EAAWD,EAAS,UACjB,SAA0Bx3D,EAAOiM,EAAM06C,UACrCp9C,EAAGkuD,EAASz3D,EAAOiM,EAAM06C,QAEL,IAApB6Q,EAAS/nG,OAAc,KAC5BioG,EAAWF,EAAS,GACpBG,EAAWH,EAAS,UACjB,SAA0Bx3D,EAAOiM,EAAM06C,UACrCp9C,EAAGmuD,EAAS13D,EAAOiM,EAAM06C,GAAUgR,EAAS33D,EAAOiM,EAAM06C,YAG3D,SAA0B3mD,EAAOiM,EAAM06C,UACrCp9C,EAAGvb,MAAM,KAAMuY,GAAIixD,GAAU,SAAUI,UACrCA,EAAQ53D,EAAOiM,EAAM06C,WAWvBt1F,UAAU42C,QAAU,SAAU9uC,WAChC3H,EAAI,EAAGA,EAAIxD,KAAKi+C,KAAKx8C,OAAQ+B,MAC3BxD,KAAKi+C,KAAKz6C,GAAI,QAAUA,EAAI,IAAKxD,SAWjCqD,UAAUk1C,IAAM,SAAUptC,WACjC8yC,EAAO,GAEFz6C,EAAI,EAAGA,EAAIxD,KAAKi+C,KAAKx8C,OAAQ+B,MAC/BA,GAAKxD,KAAKg3F,QAAQ7rF,EAASnL,KAAKi+C,KAAKz6C,GAAI,QAAUA,EAAI,IAAKxD,cAG5D,IAAIooG,EAAapoG,KAAKkoG,GAAIloG,KAAKu7C,GAAI0C,EAAMj+C,KAAKmoG,aAQ1C9kG,UAAUmrC,MAAQ,kBACtB,IAAI45D,EAAapoG,KAAKkoG,GAAIloG,KAAKu7C,GAAIv7C,KAAKi+C,KAAK57B,MAAM,GAAIriB,KAAKmoG,aASxD9kG,UAAUwmG,QAAU,kBACH,IAArB7pG,KAAKi+C,KAAKx8C,UASN4B,UAAUirD,SAAW,kBACJ,IAArBtuD,KAAKi+C,KAAKx8C,UAwON4B,UAAUo0F,UAAY,SAAUjqD,OACvCsuD,EAActuD,GAAWA,EAAQsuD,YAActuD,EAAQsuD,YAAc,OACrEqM,EAAW36D,GAAWA,EAAQ26D,SAAW36D,EAAQ26D,SAAW,OAC5DlqD,EAAOj+C,KAAKi+C,KACZ6rD,EAASC,EAA8B/pG,KAAM87F,EAAaqM,EAAUlqD,GAAM,MAE1D,IAAhBA,EAAKx8C,OAAc,KAEjBuoG,EAAQ1B,GAAiBtoG,KAAM87F,GAC/BmO,EAAUhsD,EAAK,GAAGx6C,SAAS+pC,GAE3Bs8D,EAAO,OACC,IAAMG,EAAU,SAIxBC,EAAY,YAAYzvD,KAAKz6C,KAAKkoG,UAExB,UAAV8B,EAEKhqG,KAAKkoG,MAAkB,IAAM,IAAM+B,EACvB,SAAVD,EAEFC,KAAuB,IAAM,IAAMjqG,KAAKkoG,GAI1C+B,EAAUjqG,KAAKkoG,MACG,IAAhBjqD,EAAKx8C,OAAc,KACxB0oG,EAAMlsD,EAAK,GAAGx6C,SAAS+pC,GAEvB48D,EAAMnsD,EAAK,GAAGx6C,SAAS+pC,UAEvBs8D,EAAO,OAEH,IAAMK,EAAM,KAGhBL,EAAO,OAEH,IAAMM,EAAM,KAGhBpqG,KAAKmoG,UAAqC,0BAAzBnoG,KAAK83F,iBAA4D,SAAbqQ,EAChEgC,EAAM,IAAMC,EAGdD,EAAM,IAAMnqG,KAAKkoG,GAAK,IAAMkC,KAC1BnsD,EAAKx8C,OAAS,IAA+B,0BAApBq2F,iBAAmE,0BAAzB93F,KAAK83F,iBAA8C,KAC3HuS,EAAkBpsD,EAAK1F,KAAI,SAAU8H,EAAKlgD,YACtCkgD,EAAI58C,SAAS+pC,GAEfs8D,EAAO3pG,OAEH,IAAMkgD,EAAM,KAGbA,YAGLrgD,KAAKmoG,UAAqC,0BAAzBnoG,KAAK83F,iBAA4D,SAAbqQ,EAChEkC,EAAgB/vD,KAAK,KAGvB+vD,EAAgB/vD,KAAK,IAAMt6C,KAAKkoG,GAAK,YAGrCloG,KAAKu7C,GAAK,IAAMv7C,KAAKi+C,KAAK3D,KAAK,MAAQ,OASrCj3C,UAAU4pD,OAAS,iBACvB,CACLC,OAAQ,eACRg7C,GAAIloG,KAAKkoG,GACT3sD,GAAIv7C,KAAKu7C,GACT0C,KAAMj+C,KAAKi+C,KACXkqD,SAAUnoG,KAAKmoG,aAYNh7C,SAAW,SAAUC,UACzB,IAAIg7C,EAAah7C,EAAK86C,GAAI96C,EAAK7R,GAAI6R,EAAKnP,KAAMmP,EAAK+6C,aAS/C9kG,UAAUq0F,OAAS,SAAUlqD,OACpCsuD,EAActuD,GAAWA,EAAQsuD,YAActuD,EAAQsuD,YAAc,OACrEqM,EAAW36D,GAAWA,EAAQ26D,SAAW36D,EAAQ26D,SAAW,OAC5DlqD,EAAOj+C,KAAKi+C,KACZ6rD,EAASC,EAA8B/pG,KAAM87F,EAAaqM,EAAUlqD,GAAM,MAE1D,IAAhBA,EAAKx8C,OAAc,KAEjBuoG,EAAQ1B,GAAiBtoG,KAAM87F,GAC/BmO,EAAUhsD,EAAK,GAAGy5C,OAAOlqD,UAEzBs8D,EAAO,OACC,iEAAmEG,EAAU,kEAG3E,UAAVD,EAEK,gFAAkFtD,GAAO1mG,KAAKkoG,IAAM,UAAY+B,EAGhHA,EAAU,iFAAmFvD,GAAO1mG,KAAKkoG,IAAM,aAE/F,IAAhBjqD,EAAKx8C,OAAc,KAExB0oG,EAAMlsD,EAAK,GAAGy5C,OAAOlqD,GAErB48D,EAAMnsD,EAAK,GAAGy5C,OAAOlqD,UAErBs8D,EAAO,OAEH,iEAAmEK,EAAM,kEAG7EL,EAAO,OAEH,iEAAmEM,EAAM,kEAG7EpqG,KAAKmoG,UAAqC,0BAAzBnoG,KAAK83F,iBAA4D,SAAbqQ,EAChEgC,EAAM,yFAA2FC,EAGnGD,EAAM,kFAAoFzD,GAAO1mG,KAAKkoG,IAAM,UAAYkC,MAE3HC,EAAkBpsD,EAAK1F,KAAI,SAAU8H,EAAKlgD,YACtCkgD,EAAIq3C,OAAOlqD,GAEbs8D,EAAO3pG,OAEH,iEAAmEkgD,EAAM,kEAG1EA,YAGLpC,EAAKx8C,OAAS,IAA+B,0BAApBq2F,iBAAmE,0BAAzB93F,KAAK83F,iBACtE93F,KAAKmoG,UAAqC,0BAAzBnoG,KAAK83F,iBAA4D,SAAbqQ,EAChEkC,EAAgB/vD,KAAK,0FAGvB+vD,EAAgB/vD,KAAK,kFAAoFosD,GAAO1mG,KAAKkoG,IAAM,WAG3H,+BAAiCxB,GAAO1mG,KAAKu7C,IAAM,wEAA0E8uD,EAAgB/vD,KAAK,yCAA2C,oEAW7Lj3C,UAAUw0F,OAAS,SAAUrqD,OACpCsuD,EAActuD,GAAWA,EAAQsuD,YAActuD,EAAQsuD,YAAc,OACrEqM,EAAW36D,GAAWA,EAAQ26D,SAAW36D,EAAQ26D,SAAW,OAC5DlqD,EAAOj+C,KAAKi+C,KACZ6rD,EAASC,EAA8B/pG,KAAM87F,EAAaqM,EAAUlqD,GAAM,GAC1EiqD,EAAKtF,GAAe5iG,KAAKu7C,cACV,IAAP2sD,EAAqBloG,KAAKkoG,GAAKA,EAEvB,IAAhBjqD,EAAKx8C,OAAc,KAEjBuoG,EAAQ1B,GAAiBtoG,KAAM87F,GAC/BmO,EAAUhsD,EAAK,GAAG05C,MAAMnqD,UAExBs8D,EAAO,OACC,UAAU7sD,OAAOgtD,EAAS,aAGxB,UAAVD,EAEK9B,EAAK+B,EAGLA,EAAU/B,KAKM,IAAhBjqD,EAAKx8C,OAAc,KAExB0oG,EAAMlsD,EAAK,GAEXqsD,EAASH,EAAIxS,MAAMnqD,GAEnBs8D,EAAO,OACA,UAAU7sD,OAAOqtD,EAAQ,iBAYhCtB,EAPAuB,EAFMtsD,EAAK,GAEE05C,MAAMnqD,UAEnBs8D,EAAO,OACA,UAAU7sD,OAAOstD,EAAQ,eAMhB,SAAhBzO,EACcqO,EAAIrS,gBAGJqS,EAAIpS,aAAaD,gBAG3B93F,KAAK83F,qBACN,6BAEIoQ,EAAK,IAAMoC,EAAS,KAAYC,EAAS,QAE7C,4BACM,IAAMD,EAAS,MACf,IAAMC,EAAS,IAEhBvB,OACD,sBAEA,wBACM,UAAU/rD,OAAOqtD,EAAQ,sBAKnC,2BACCtqG,KAAKmoG,UAAyB,SAAbA,SACZmC,EAAS,IAAMC,SAKrBD,EAASpC,EAAKqC,KACZtsD,EAAKx8C,OAAS,IAA+B,0BAApBq2F,iBAAmE,0BAAzB93F,KAAK83F,iBAA8C,KAC3H0S,EAAevsD,EAAK1F,KAAI,SAAU8H,EAAKlgD,YACnCkgD,EAAIs3C,MAAMnqD,GAEZs8D,EAAO3pG,OACH,UAAU88C,OAAOoD,EAAK,aAGvBA,WAGoB,0BAAzBrgD,KAAK83F,iBAA+C93F,KAAKmoG,SACpDqC,EAAalwD,KAAK,KAGpBkwD,EAAalwD,KAAK4tD,SAKlB,YAAcloG,KAAKu7C,GAAK,WAAa0C,EAAK1F,KAAI,SAAU8H,UACtDA,EAAIs3C,MAAMnqD,MAChB8M,KAAK,KAAO,cASNj3C,UAAUy0F,cAAgB,kBAC9B93F,KAAKkjC,KAAO,IAAMljC,KAAKu7C,IAGzB6sD,IACN,CACD/6C,SAAS,EACT7V,QAAQ,ICvqBCizD,MAFA,kBACQ,CAAC,SAC2D3+C,QAE3EssC,QACEtsC,aASqB4+C,wBACDC,SACd,IAAIvtD,YAAY,wDAInB5F,GAAOkzD,SACJ,IAAIjyD,UAAU,8CAGjBiyD,QAAUA,WAGDrnG,UAAY,IAAIqzF,IAChBrzF,UAAU6/B,KAAO,oBACjB7/B,UAAU80C,mBAAoB,IAe9B90C,UAAUwzF,SAAW,SAAU5kD,EAAM8kD,UAC5C/2F,KAAK0qG,QAAQ7T,SAAS5kD,EAAM8kD,MASrB1zF,UAAU00F,WAAa,kBAC9B/3F,KAAK0qG,QAAQ3S,gBAQN10F,UAAU42C,QAAU,SAAU9uC,KACnCnL,KAAK0qG,QAAS,UAAW1qG,SAUpBqD,UAAUk1C,IAAM,SAAUptC,UAEjC,IAAIw/F,EADGx/F,EAASnL,KAAK0qG,QAAS,UAAW1qG,UASlCqD,UAAUmrC,MAAQ,kBACzB,IAAIm8D,EAAgB3qG,KAAK0qG,YAUlBrnG,UAAUo0F,UAAY,SAAUjqD,UACzCA,GAAWA,IAAYA,EAAQsuD,aAAetuD,GAAmC,SAAxBA,EAAQsuD,YAC7D,IAAM97F,KAAK0qG,QAAQjnG,SAAS+pC,GAAW,IAGzCxtC,KAAK0qG,QAAQjnG,SAAS+pC,MAQfnqC,UAAU4pD,OAAS,iBAC1B,CACLC,OAAQ,kBACRw9C,QAAS1qG,KAAK0qG,YAYFv9C,SAAW,SAAUC,UAC5B,IAAIu9C,EAAgBv9C,EAAKs9C,YAUlBrnG,UAAUq0F,OAAS,SAAUlqD,UACtCA,GAAWA,IAAYA,EAAQsuD,aAAetuD,GAAmC,SAAxBA,EAAQsuD,YAC7D,iEAAmE97F,KAAK0qG,QAAQhT,OAAOlqD,GAAW,iEAGpGxtC,KAAK0qG,QAAQhT,OAAOlqD,MAUbnqC,UAAUw0F,OAAS,SAAUrqD,UACtCA,GAAWA,IAAYA,EAAQsuD,aAAetuD,GAAmC,SAAxBA,EAAQsuD,YAC7D,UAAU7+C,OAAOj9C,KAAK0qG,QAAQ/S,MAAMnqD,GAAU,YAGhDxtC,KAAK0qG,QAAQ/S,MAAMnqD,IAGrBm9D,IACN,CACDt9C,SAAS,EACT7V,QAAQ,IC7JCozD,MAFA,YACQ,CAAC,SACqD9+C,QAErEssC,QACEtsC,aAUe7hC,EAAOC,EAAKvgB,wBACPkxF,SACd,IAAIz9C,YAAY,wDAInB5F,GAAOvtB,SAAc,IAAIwuB,UAAU,qBACnCjB,GAAOttB,SAAY,IAAIuuB,UAAU,oBAClC9uC,IAAS6tC,GAAO7tC,SAAa,IAAI8uC,UAAU,oBAC3CxpC,UAAUxN,OAAS,QAAS,IAAIrB,MAAM,2BACrC6pB,MAAQA,OAERC,IAAMA,OAENvgB,KAAOA,GAAQ,gBAgGiB+pB,EAAMooE,OACvCS,EAAaP,GAActoE,EAAMooE,GACjCgO,EAAS,GACTe,EAAkB7O,GAActoE,EAAKzJ,MAAO6xE,QACzC7xE,MAA4B,OAApB4gF,GAA4BA,GAAmBtO,GAA8B,QAAhBT,EAExEpoE,EAAK/pB,KAAM,KACTmhG,EAAiB9O,GAActoE,EAAK/pB,KAAMmyF,KACvCnyF,KAA0B,OAAnBmhG,GAA2BA,GAAkBvO,GAA8B,QAAhBT,MAGvEiP,EAAgB/O,GAActoE,EAAKxJ,IAAK4xE,YACrC5xE,IAAwB,OAAlB6gF,GAA0BA,GAAiBxO,GAA8B,QAAhBT,EAC/DgO,WA1GCzmG,UAAY,IAAIqzF,IAChBrzF,UAAU6/B,KAAO,cACjB7/B,UAAU+0C,aAAc,IAOxB/0C,UAAU2jG,SAAW,kBAEZhnG,KAAKs8C,QAAO,SAAU5oB,UAC9B2kB,GAAa3kB,IAAuB,QAAdA,EAAK8mB,QAElB/4C,OAAS,KAiBnB4B,UAAUwzF,SAAW,SAAU5kD,EAAM8kD,OACzClyF,EAAQotC,EAAKptC,MAEboiG,EAAYjnG,KAAKiqB,MAAM4sE,SAAS5kD,EAAM8kD,GAEtCmQ,EAAUlnG,KAAKkqB,IAAI2sE,SAAS5kD,EAAM8kD,MAElC/2F,KAAK2J,KAAM,KACTw9F,EAAWnnG,KAAK2J,KAAKktF,SAAS5kD,EAAM8kD,UAEjC,SAAuB/kD,EAAOiM,EAAM06C,UAClC9zF,EAAMoiG,EAAUj1D,EAAOiM,EAAM06C,GAAUuO,EAAQl1D,EAAOiM,EAAM06C,GAAUwO,EAASn1D,EAAOiM,EAAM06C,YAG9F,SAAuB3mD,EAAOiM,EAAM06C,UAClC9zF,EAAMoiG,EAAUj1D,EAAOiM,EAAM06C,GAAUuO,EAAQl1D,EAAOiM,EAAM06C,QAU/Dt1F,UAAU42C,QAAU,SAAU9uC,KAC7BnL,KAAKiqB,MAAO,QAASjqB,QACrBA,KAAKkqB,IAAK,MAAOlqB,MAEtBA,KAAK2J,QACE3J,KAAK2J,KAAM,OAAQ3J,SAWtBqD,UAAUk1C,IAAM,SAAUptC,UAC3B,IAAI0vF,EAAU76F,KAAKg3F,QAAQ7rF,EAASnL,KAAKiqB,MAAO,QAASjqB,OAAQA,KAAKg3F,QAAQ7rF,EAASnL,KAAKkqB,IAAK,MAAOlqB,OAAQA,KAAK2J,MAAQ3J,KAAKg3F,QAAQ7rF,EAASnL,KAAK2J,KAAM,OAAQ3J,WAQrKqD,UAAUmrC,MAAQ,kBACnB,IAAIqsD,EAAU76F,KAAKiqB,MAAOjqB,KAAKkqB,IAAKlqB,KAAK2J,MAAQ3J,KAAK2J,SAiCrDtG,UAAUo0F,UAAY,SAAUjqD,OAIpCoO,EAFAkuD,EAASC,EAA8B/pG,KADzBwtC,GAAWA,EAAQsuD,YAActuD,EAAQsuD,YAAc,QAIrE7xE,EAAQjqB,KAAKiqB,MAAMxmB,SAAS+pC,MAE5Bs8D,EAAO7/E,UACD,IAAMA,EAAQ,OAGlBA,EAEFjqB,KAAK2J,KAAM,KACTA,EAAO3J,KAAK2J,KAAKlG,SAAS+pC,GAE1Bs8D,EAAOngG,SACF,IAAMA,EAAO,QAGf,IAAMA,MAGXugB,EAAMlqB,KAAKkqB,IAAIzmB,SAAS+pC,UAExBs8D,EAAO5/E,QACH,IAAMA,EAAM,QAGb,IAAMA,KASL7mB,UAAU4pD,OAAS,iBACpB,CACLC,OAAQ,YACRjjC,MAAOjqB,KAAKiqB,MACZC,IAAKlqB,KAAKkqB,IACVvgB,KAAM3J,KAAK2J,SAYLwjD,SAAW,SAAUC,UACtB,IAAIytC,EAAUztC,EAAKnjC,MAAOmjC,EAAKljC,IAAKkjC,EAAKzjD,SASxCtG,UAAUq0F,OAAS,SAAUlqD,OAIjCoO,EAFAkuD,EAASC,EAA8B/pG,KADzBwtC,GAAWA,EAAQsuD,YAActuD,EAAQsuD,YAAc,QAIrE7xE,EAAQjqB,KAAKiqB,MAAMytE,OAAOlqD,MAE1Bs8D,EAAO7/E,UACD,iEAAmEA,EAAQ,oEAG/EA,EAEFjqB,KAAK2J,KAAM,KACTA,EAAO3J,KAAK2J,KAAK+tF,OAAOlqD,GAExBs8D,EAAOngG,SACF,iEAAmEA,EAAO,qEAG5E,2DAA6DA,MAGlEugB,EAAMlqB,KAAKkqB,IAAIwtE,OAAOlqD,UAEtBs8D,EAAO5/E,QACH,iEAAmEA,EAAM,qEAG1E,2DAA6DA,KAU5D7mB,UAAUw0F,OAAS,SAAUrqD,OAEjCs8D,EAASC,EAA8B/pG,KADzBwtC,GAAWA,EAAQsuD,YAActuD,EAAQsuD,YAAc,QAErElgD,EAAM57C,KAAKiqB,MAAM0tE,MAAMnqD,MAEvBs8D,EAAO7/E,UACH,UAAUgzB,OAAOrB,EAAK,aAG1B57C,KAAK2J,KAAM,KACTA,EAAO3J,KAAK2J,KAAKguF,MAAMnqD,GAEvBs8D,EAAOngG,SACF,UAAUszC,OAAOtzC,EAAM,gBAGzB,IAAMA,MAGXugB,EAAMlqB,KAAKkqB,IAAIytE,MAAMnqD,UAErBs8D,EAAO5/E,QACH,UAAU+yB,OAAO/yB,EAAK,gBAGvB,IAAMA,GAIR2wE,IACN,CACDxtC,SAAS,EACT7V,QAAQ,ICvRCwzD,MAFA,iBACQ,CAAC,SAC0Dl/C,QAE1EssC,QACEtsC,aAWoBm/C,EAAchvD,wBACdu+C,SACd,IAAIp9C,YAAY,wDAGnBniB,MAAM4b,QAAQo0D,SAAqB,IAAIxyD,UAAU,+CACjDxd,MAAM4b,QAAQoF,SAAe,IAAIxD,UAAU,wCAC5CwyD,EAAaxpG,SAAWw6C,EAAOx6C,OAAS,QAAS,IAAIg3C,UAAU,2FAC9DwyD,aAAeA,OACfhvD,OAASA,WAGD54C,UAAY,IAAIqzF,IAChBrzF,UAAU6/B,KAAO,mBACjB7/B,UAAU6nG,kBAAmB,IAe7B7nG,UAAUwzF,SAAW,SAAU5kD,EAAM8kD,OAC9CoU,EAAOnrG,KACPorG,EAAWprG,KAAKi8C,OAAO1D,QAASvuC,EAAE6sF,SAAS5kD,EAAM8kD,YAC9C,SAA4B/kD,EAAOiM,EAAM06C,WAC1C0S,EACAC,EAAUF,EAAS,GAAGp5D,EAAOiM,EAAM06C,GAE9Bn1F,EAAI,EAAGA,EAAI2nG,EAAKF,aAAaxpG,OAAQ+B,IAAK,MACvC8nG,IACAF,EAAS5nG,EAAI,GAAGwuC,EAAOiM,EAAM06C,IAC1BpkB,GAAgBtiC,EAAMk5D,EAAKF,aAAaznG,GAEhD+nG,CAAOF,EAASC,UACZ,SAIJ,MASIjoG,UAAU42C,QAAU,SAAU9uC,QACtC8wC,OAAOhC,SAAQ,CAACp2C,EAAGL,IAAM2H,EAAStH,EAAG,UAAYL,EAAI,IAAKxD,OAAOA,SAUzDqD,UAAUk1C,IAAM,SAAUptC,UAChC,IAAIqvF,EAAex6F,KAAKirG,aAAa5oF,QAASriB,KAAKi8C,OAAO1D,KAAI,CAAC10C,EAAGL,IAAMxD,KAAKg3F,QAAQ7rF,EAAStH,EAAG,UAAYL,EAAI,IAAKxD,QAAQA,UAQxHqD,UAAUmrC,MAAQ,kBACxB,IAAIgsD,EAAex6F,KAAKirG,aAAcjrG,KAAKi8C,WASrC54C,UAAUo0F,UAAY,SAAUjqD,WACzCsuD,EAActuD,GAAWA,EAAQsuD,YAActuD,EAAQsuD,YAAc,OACrES,EAAaP,GAAch8F,KAAM87F,GACjC0P,EAAexrG,KAAKi8C,OAAO1D,KAAI,SAAUvuC,EAAG7J,OAC1CsrG,EAAkBzP,GAAchyF,EAAG8xF,SAChB,QAAhBA,GAA6C,OAApB2P,GAA4BA,GAAmBlP,EAAa,IAAMvyF,EAAEvG,SAAS+pC,GAAW,IAAMxjC,EAAEvG,SAAS+pC,MAEvIk+D,EAAc,CAChBzxB,MAAO,KACPupB,QAAS,KACTrrB,QAAS,IACTC,OAAQ,IACRqrB,UAAW,KACXC,SAAU,MAERtmC,EAAMouC,EAAa,GAEdhoG,EAAI,EAAGA,EAAIxD,KAAKirG,aAAaxpG,OAAQ+B,OACrC,IAAMkoG,EAAY1rG,KAAKirG,aAAaznG,IAAM,IAAMgoG,EAAahoG,EAAI,UAGnE45D,KAQM/5D,UAAU4pD,OAAS,iBACzB,CACLC,OAAQ,iBACR+9C,aAAcjrG,KAAKirG,aACnBhvD,OAAQj8C,KAAKi8C,WAYFkR,SAAW,SAAUC,UAC3B,IAAIotC,EAAeptC,EAAK69C,aAAc79C,EAAKnR,WASrC54C,UAAUq0F,OAAS,SAAUlqD,WACtCsuD,EAActuD,GAAWA,EAAQsuD,YAActuD,EAAQsuD,YAAc,OACrES,EAAaP,GAAch8F,KAAM87F,GACjC0P,EAAexrG,KAAKi8C,OAAO1D,KAAI,SAAUvuC,EAAG7J,OAC1CsrG,EAAkBzP,GAAchyF,EAAG8xF,SAChB,QAAhBA,GAA6C,OAApB2P,GAA4BA,GAAmBlP,EAAa,iEAAmEvyF,EAAE0tF,OAAOlqD,GAAW,iEAAmExjC,EAAE0tF,OAAOlqD,MAE7Pk+D,EAAc,CAChBzxB,MAAO,KACPupB,QAAS,KACTrrB,QAAS,IACTC,OAAQ,IACRqrB,UAAW,KACXC,SAAU,MAERtmC,EAAMouC,EAAa,GAEdhoG,EAAI,EAAGA,EAAIxD,KAAKirG,aAAaxpG,OAAQ+B,OACrC,kFAAoFkjG,GAAOgF,EAAY1rG,KAAKirG,aAAaznG,KAAO,UAAYgoG,EAAahoG,EAAI,UAG/J45D,KASM/5D,UAAUw0F,OAAS,SAAUrqD,WACtCsuD,EAActuD,GAAWA,EAAQsuD,YAActuD,EAAQsuD,YAAc,OACrES,EAAaP,GAAch8F,KAAM87F,GACjC0P,EAAexrG,KAAKi8C,OAAO1D,KAAI,SAAUvuC,EAAG7J,OAC1CsrG,EAAkBzP,GAAchyF,EAAG8xF,SAChB,QAAhBA,GAA6C,OAApB2P,GAA4BA,GAAmBlP,EAAa,UAAYvyF,EAAE2tF,MAAMnqD,GAAW,UAAYxjC,EAAE2tF,MAAMnqD,MAE7I4vB,EAAMouC,EAAa,GAEdhoG,EAAI,EAAGA,EAAIxD,KAAKirG,aAAaxpG,OAAQ+B,OACrCo/F,GAAe5iG,KAAKirG,aAAaznG,IAAMgoG,EAAahoG,EAAI,UAG1D45D,GAGFo9B,IACN,CACDntC,SAAS,EACT7V,QAAQ,IClNV,wBAAiCvrB,OAAO+R,QAAU,SAAUpsB,WAAmBpO,EAAI,EAAGA,EAAIyL,UAAUxN,OAAQ+B,IAAK,KAAMyhE,EAASh2D,UAAUzL,WAAamgC,KAAOshC,EAAch5C,OAAO5oB,UAAUu1C,eAAea,KAAKwrB,EAAQthC,OAAeA,GAAOshC,EAAOthC,WAAmB/xB,IAA2BouB,MAAMhgC,KAAMiP,WCAhT,wBAAiCgd,OAAO+R,QAAU,SAAUpsB,WAAmBpO,EAAI,EAAGA,EAAIyL,UAAUxN,OAAQ+B,IAAK,KAAMyhE,EAASh2D,UAAUzL,WAAamgC,KAAOshC,EAAch5C,OAAO5oB,UAAUu1C,eAAea,KAAKwrB,EAAQthC,OAAeA,GAAOshC,EAAOthC,WAAmB/xB,IAA2BouB,MAAMhgC,KAAMiP,WAMhT,ICDW08F,GAAwB,CACjC3wC,qBAAAA,ICDS4wC,GAAsB,CAC/BpuC,mBAAAA,ICDSquC,GAAqB,CAC9BtrC,kBAAAA,ICASurC,GAA0B,CACnCD,mBAAAA,GACA7qC,uBAAAA,ICHS+qC,GAAuB,CAChCjsC,oBAAAA,ICGSksC,GAAoB,CAC7BL,sBAAAA,GACAC,oBAAAA,GACAE,wBAAAA,GACAC,qBAAAA,GACAlgD,YAAAA,ICRSogD,GAA0B,CACnCD,kBAAAA,GACA/nC,kBAAAA,ICASioC,GAA2B,CACpCL,mBAAAA,GACAI,wBAAAA,GACAD,kBAAAA,GACAlnC,wBAAAA,ICNSqnC,GAAqB,CAC9BH,kBAAAA,GACAnkC,aAAAA,ICDSukC,GAAuB,CAChCL,qBAAAA,GACAC,kBAAAA,GACA7jC,eAAAA,ICDSkkC,GAAqB,CAC9BP,wBAAAA,GACAD,mBAAAA,GACAK,yBAAAA,GACAF,kBAAAA,GACA5jC,aAAAA,ICRSkkC,GAAyB,CAClCN,kBAAAA,GACAtjC,iBAAAA,ICFS6jC,GAAkB,CAC3BP,kBAAAA,GACArjC,UAAAA,ICFS6jC,GAAwB,CACjCR,kBAAAA,GACApjC,gBAAAA,ICGS6jC,GAAoB,CAC7Bd,sBAAAA,GACAG,wBAAAA,GACAG,wBAAAA,GACAI,mBAAAA,GACAL,kBAAAA,GACAU,kBCT6B,CAC7Bf,sBAAAA,GACAU,mBAAAA,GACAL,kBAAAA,GACAv3B,YAAAA,IDMA4C,YAAAA,IETSs1B,GAAkB,CAC3Bb,wBAAAA,GACAG,wBAAAA,GACAI,mBAAAA,GACAL,kBAAAA,GACAn/B,UAAAA,ICRS+/B,GAA6B,CACtCZ,kBAAAA,GACAh+B,qBAAAA,ICDS6+B,GAAmB,CAC5BR,mBAAAA,GACAL,kBAAAA,GACAv5B,WAAAA,ICCSq6B,GAAuB,CAChCN,sBAAAA,GACAO,gBCH2B,CAC3BP,sBAAAA,GACAQ,iBCN4B,CAC5BhB,kBAAAA,GACAr7B,WAAAA,IDKAi8B,2BAAAA,GACAC,iBAAAA,GACAb,kBAAAA,GACA5W,UAAAA,IDFA6W,wBAAAA,GACAI,mBAAAA,GACAO,2BAAAA,GACAZ,kBAAAA,GACA59B,eAAAA,IGPS6+B,GAAuB,CAChCnB,wBAAAA,GACAU,sBAAAA,GACAP,wBAAAA,GACAI,mBAAAA,GACAL,kBAAAA,GACAM,uBAAAA,GACAl8B,eAAAA,ICVS88B,GAAqB,CAC9BpB,wBAAAA,GACAO,mBAAAA,GACAL,kBAAAA,GACA/zB,aAAAA,ICFSk1B,GAAuB,CAChCxB,sBAAAA,GACAG,wBAAAA,GACAI,yBAAAA,GACAG,mBAAAA,GACAL,kBAAAA,GACAr6B,eAAAA,ICLSy7B,GAAkB,CAC3BtB,wBAAAA,GACAI,yBAAAA,GACAM,sBAAAA,GACAP,wBAAAA,GACAI,mBAAAA,GACAL,kBAAAA,GACA9W,UAAAA,ICVSmY,GAAsB,CAC/BC,sBCFiC,CACjC3B,sBAAAA,GACAK,kBAAAA,GACA9jC,gBAAAA,IDAAkkC,qBAAAA,GACAD,mBAAAA,GACAl3B,cAAAA,IELSs4B,GAA2B,CACpCF,oBAAAA,GACArB,kBAAAA,GACAr2B,mBAAAA,ICHS63B,GAAqB,CAC9BnB,mBAAAA,GACAL,kBAAAA,GACA74B,aAAAA,ICUSs6B,GAAmB,CAC5B9B,sBAAAA,GACAC,oBAAAA,GACAG,qBAAAA,GACAQ,gBAAAA,GACAC,sBAAAA,GACAe,yBAAAA,GACAG,kBClB6B,CAC7B5B,wBAAAA,GACAG,wBAAAA,GACAI,mBAAAA,GACAL,kBAAAA,GACAl0B,YAAAA,IDcA61B,gBElB2B,CAC3B/B,oBAAAA,GACAgC,iBCH4B,CAC5B3B,wBAAAA,GACAI,mBAAAA,GACAI,kBAAAA,GACAT,kBAAAA,GACAjiC,WAAAA,IDDA8jC,kBEJ6B,CAC7B5B,wBAAAA,GACAI,mBAAAA,GACAI,kBAAAA,GACAT,kBAAAA,GACA9gC,YAAAA,IFAAmhC,mBAAAA,GACAL,kBAAAA,GACAvhC,UAAAA,IFaAqjC,mBKvB8B,CAC9B9B,kBAAAA,GACAn3B,aAAAA,ILsBAk5B,sBMxBiC,CACjC/B,kBAAAA,GACAnoC,gBAAAA,INuBA+oC,2BAAAA,GACAT,mBAAAA,GACA6B,gBOrB2B,CAC3BpC,oBAAAA,GACAQ,qBAAAA,GACAe,qBAAAA,GACAd,mBAAAA,GACAS,qBAAAA,GACAX,mBAAAA,GACAH,kBAAAA,GACAh2B,UAAAA,IPcAy2B,kBAAAA,GACAQ,qBAAAA,GACAnzB,gBAAAA,IQ7BSm0B,GAAmB,CAC5BR,iBAAAA,GACAzB,kBAAAA,GACArX,mBAAAA,ICHSuZ,GAAyB,CAClCT,iBAAAA,GACAzB,kBAAAA,GACAnX,iBAAAA,ICLSsZ,GAAmB,CAC5B3X,WAAAA,ICCS4X,GAAyB,CAClCX,iBAAAA,GACAU,iBAAAA,GACAE,oBCNS,aACQ,CAAC,OAAQ,QAAS,SACqCviD,QACpE7Z,KACFA,OACA61B,EACAswB,QACEtsC,aAOqB1qC,WAChB0mD,GAAOA,EAAKqV,gBAAgB/7D,cAWjBA,wBACIktF,SACd,IAAIlxD,YAAY,uDAIJ,iBAATh8B,QAAyB,IAAIq3B,UAAU,6CAC7C+B,KAAOp5B,WAGH/d,UAAY,IAAIqzF,IAChBrzF,UAAU6/B,KAAO,eACjB7/B,UAAUg1C,cAAe,IAezBh1C,UAAUwzF,SAAW,SAAU0X,EAAMxX,OAC1C31E,EAAOphB,KAAKw6C,SAEO,IAAnBu8C,EAAS31E,UAGJ,SAAU4wB,EAAOiM,EAAM06C,UACrB16C,EAAK78B,OAELA,KAAQmtF,SACV,SAAUv8D,EAAOiM,EAAM06C,UACLpkB,GAAhBnzD,KAAQ4wB,EAAwBA,EAA+Bu8D,EAAxBntF,QAG5C8kF,EAAS/oB,EAAgB/7D,UACtB,SAAU4wB,EAAOiM,EAAM06C,UACrBv3E,KAAQ4wB,EAAQuiC,GAAgBviC,EAAO5wB,GAAQ8kF,EAAS,IAAIp+B,EAAK,KAAM1mD,YA6BrEA,SACP,IAAIhhB,MAAM,oBAAsBghB,GA9BoDgiC,CAAMhiC,OAUvF/d,UAAU42C,QAAU,SAAU9uC,OAU9B9H,UAAUk1C,IAAM,SAAUptC,UAC5BnL,KAAKwuC,WAiBHnrC,UAAUmrC,MAAQ,kBACpB,IAAI8/D,EAAWtuG,KAAKw6C,SAUlBn3C,UAAUo0F,UAAY,SAAUjqD,UAClCxtC,KAAKw6C,QAUHn3C,UAAUq0F,OAAS,SAAUlqD,OAClCpsB,EAAOslF,GAAO1mG,KAAKw6C,YAEV,SAATp5B,GAA4B,UAATA,EACd,0CAA4CA,EAAO,UACxC,MAATA,EACF,mDAAqDA,EAAO,UACjD,aAATA,EACF,kDAAoDA,EAAO,UAChD,QAATA,EACF,6CAA+CA,EAAO,UAC3C,SAATA,EACF,8CAAgDA,EAAO,UAC5C,cAATA,EACF,mDAAqDA,EAAO,UAG9D,6BAA+BA,EAAO,aAQpC/d,UAAU4pD,OAAS,iBACrB,CACLC,OAAQ,aACR1S,KAAMx6C,KAAKw6C,SAYJ2S,SAAW,SAAUC,UACvB,IAAIkhD,EAAWlhD,EAAK5S,SAUlBn3C,UAAUw0F,OAAS,SAAUrqD,OAClC04D,GAAS,OAEkB,IAApBj0D,EAAKjyC,KAAKw6C,OAAyB2iC,EAAgBn9E,KAAKw6C,WACxD,OAGPs8C,EAAS6P,GAAS3mG,KAAKw6C,KAAM0rD,SAEf,OAAdpP,EAAO,GAEFA,EAIF,IAAMA,GAGRwX,IACN,CACDjhD,SAAS,EACT7V,QAAQ,KCtMCg3D,GAAuB,CAChCC,kBCc6B,CAC7BC,yBChBoC,CACpCP,iBAAAA,GACAX,mBAAAA,GACArV,mBAAAA,IDcAwW,sBElBiC,CACjCR,iBAAAA,GACAtV,gBAAAA,IFiBA+V,2BGjBsC,CACtCvC,mBAAAA,GACA8B,iBAAAA,GACAX,mBAAAA,GACAnR,qBAAAA,IHcAwS,sBInBiC,CACjCV,iBAAAA,GACAW,sBCJiC,CACjC/hD,gBAAAA,IDIAiwC,gBAAAA,IJiBA+R,4BMrBuC,CACvCZ,iBAAAA,GACA5Q,sBAAAA,INoBAyR,yBOtBoC,CACpCb,iBAAAA,GACA/H,mBAAAA,IPqBA6I,mCQtB8C,CAC9Cd,iBAAAA,GACAnC,kBAAAA,GACA1F,6BAAAA,IRoBA4I,yBSvBoC,CACpCf,iBAAAA,GACAC,uBAAAA,GACAe,sBvDDS,eACQ,CAAC,OAAQ,OAAQ,eACwCrjD,QACtE7Z,KACFA,EACAmmD,kBACAkW,GACExiD,aAUkBvQ,EAAI0C,wBACFmxD,SACd,IAAIhyD,YAAY,uDAGN,iBAAP7B,MACJ,IAAI+yD,EAAW/yD,KAIjB/D,GAAO+D,SAAW,IAAI9C,UAAU,uCAEhCxd,MAAM4b,QAAQoH,KAAUA,EAAKkN,MAAM3T,UAChC,IAAIiB,UAAU,6DAGjB8C,GAAKA,OACL0C,KAAOA,GAAQ,UAEb5E,eAAer5C,KAAM,OAAQ,CAClCyzB,IAAK,kBACIzzB,KAAKu7C,GAAGf,MAAQ,IACvBg+C,KAAKx4F,MACP+F,IAAK,iBACG,IAAI3F,MAAM,oDAKTiD,UAAY,IAAIqzF,IAChBrzF,UAAU6/B,KAAO,iBACjB7/B,UAAU00C,gBAAiB,IAe3B10C,UAAUwzF,SAAW,SAAU0X,EAAMxX,wBAC1BqY,SACd,IAAI32D,UAAU,6BAIlB+wD,EAAWjxD,GAAIv4C,KAAKi+C,MAAM,SAAUoC,UAC/BA,EAAIw2C,SAAS0X,EAAMxX,SAGxB1+C,GAAar4C,KAAKu7C,IAAK,KAErBmD,EAAQ1+C,KAAKu7C,GAAGf,KAChBe,EAAKmD,KAAS6vD,EAAOh6B,GAAgBg6B,EAAM7vD,QAAS,KAC9B,mBAAPnD,IAAoC,IAAfA,EAAG8zD,QAEhC,KAGLA,EAAUrvG,KAAKi+C,YACZ,SAA0BjM,EAAOiM,EAAM06C,eAC3B3mD,EAAQuiC,GAAgBviC,EAAO0M,GAASnD,GAAI8zD,EAASd,EAAMzrB,GAAS,GAAI9wC,EAAOiM,QAI1E,IAApBurD,EAAS/nG,OAAc,KACrBgoG,EAAWD,EAAS,UACjB,SAA0Bx3D,EAAOiM,EAAM06C,eAC3B3mD,EAAQuiC,GAAgBviC,EAAO0M,GAASnD,GAAIkuD,EAASz3D,EAAOiM,EAAM06C,QAExD,IAApB6Q,EAAS/nG,OAAc,KAC5BioG,EAAWF,EAAS,GACpBG,EAAWH,EAAS,UACjB,SAA0Bx3D,EAAOiM,EAAM06C,eAC3B3mD,EAAQuiC,GAAgBviC,EAAO0M,GAASnD,GAAImuD,EAAS13D,EAAOiM,EAAM06C,GAAUgR,EAAS33D,EAAOiM,EAAM06C,YAG9G,SAA0B3mD,EAAOiM,EAAM06C,eAC3B3mD,EAAQuiC,GAAgBviC,EAAO0M,GAASnD,GAAIvb,MAAM,KAAMuY,GAAIixD,GAAU,SAAUI,UACxFA,EAAQ53D,EAAOiM,EAAM06C,WAK3BphD,GAAev3C,KAAKu7C,KAAOvD,GAAYh4C,KAAKu7C,GAAGp7C,QAAUH,KAAKu7C,GAAGp7C,MAAM63F,mBAAoB,KAEhGS,EAAaz4F,KAAKu7C,GAAGh3B,OAAOsyE,SAAS0X,EAAMxX,GAE3Cl+C,EAAO74C,KAAKu7C,GAAGp7C,MAAM83F,oBACrBqX,EAAWtvG,KAAKi+C,YACb,SAA0BjM,EAAOiM,EAAM06C,OACxCp0E,EAASk0E,EAAWzmD,EAAOiM,EAAM06C,UxChC7C,SAA4Bp0E,EAAQyuD,OAC7BF,GAAavuD,EAAQyuD,SAClB,IAAI5yE,MAAM,wBAA0B4yE,EAAS,MwC+B5BzuD,EAAQs0B,GACft0B,EAAOs0B,IAASt0B,EAAOs0B,GAAMw2D,QAC1B9qF,EAAOs0B,GAAMy2D,EAAUf,EAAMzrB,GAAS,GAAI9wC,EAAOiM,IAC9D15B,EAAOs0B,GAAM7Y,MAAMzb,EAAQg0B,GAAIixD,GAAU,SAAUI,UAE5CA,EAAQ53D,EAAOiM,EAAM06C,YAM5B4W,EAASvvG,KAAKu7C,GAAGs7C,SAAS0X,EAAMxX,GAEhCyY,EAAYxvG,KAAKi+C,YACd,SAA0BjM,EAAOiM,EAAM06C,OACxCr1C,EAAKisD,EAAOv9D,EAAOiM,EAAM06C,UACjBr1C,GAAMA,EAAG+rD,QACN/rD,EAAGksD,EAAWjB,EAAMzrB,GAAS,GAAI9wC,EAAOiM,IACrDqF,EAAGtjB,MAAMsjB,EAAI/K,GAAIixD,GAAU,SAAUI,UAE9BA,EAAQ53D,EAAOiM,EAAM06C,WAWvBt1F,UAAU42C,QAAU,SAAU9uC,KAChCnL,KAAKu7C,GAAI,KAAMv7C,cAEfwD,EAAI,EAAGA,EAAIxD,KAAKi+C,KAAKx8C,OAAQ+B,MAC3BxD,KAAKi+C,KAAKz6C,GAAI,QAAUA,EAAI,IAAKxD,SAWjCqD,UAAUk1C,IAAM,SAAUptC,WACjCowC,EAAKv7C,KAAKg3F,QAAQ7rF,EAASnL,KAAKu7C,GAAI,KAAMv7C,OAE1Ci+C,EAAO,GAEFz6C,EAAI,EAAGA,EAAIxD,KAAKi+C,KAAKx8C,OAAQ+B,MAC/BA,GAAKxD,KAAKg3F,QAAQ7rF,EAASnL,KAAKi+C,KAAKz6C,GAAI,QAAUA,EAAI,IAAKxD,cAG5D,IAAIovG,EAAa7zD,EAAI0C,MAQjB56C,UAAUmrC,MAAQ,kBACtB,IAAI4gE,EAAapvG,KAAKu7C,GAAIv7C,KAAKi+C,KAAK57B,MAAM,SAK/CotF,EAAeL,EAAa/rG,UAAUI,oBA8FlBisG,EAAUh8E,EAAM8Z,WAOlCqO,EANAwsD,EAAQ,GAGRsH,EAAQ,qDACRC,EAAW,EAI2B,UAA1BD,EAAMzuF,KAAKwuF,WAGhBA,EAAS5nD,UAAU8nD,EAAU/zD,EAAM17C,SACjC07C,EAAM17C,MAEA,OAAb07C,EAAM,MAEC,YAEJ,IAEOA,EAAM,GAAGp6C,WACjB+3C,EAAW9lB,EAAKmoB,EAAM,QAErBrC,QACG,IAAIq2D,eAAe,sBAAwBh0D,EAAM,GAAK,4BAG7C,IAAbA,EAAM,iBAEOrC,OACR,YACMA,YAGN,YACChC,GAAOgC,MACAA,EAASm+C,MAAMnqD,YACfvS,MAAM4b,QAAQ2C,SAUjB,IAAIf,UAAU,aAAeoD,EAAM,GAAK,kDARrCrC,EAASjB,KAAI,SAAU8H,EAAKlgD,MAC/Bq3C,GAAO6I,UACFA,EAAIs3C,MAAMnqD,SAGb,IAAIiL,UAAU,aAAeoD,EAAM,GAAK,IAAM17C,EAAQ,uBAC3Dm6C,KAAK,yBAQJ,IAAI7B,UAAU,aAAeoD,EAAM,GAAK,mDAE7C,KAEDrE,GAAOgC,EAASqC,EAAM,KAAOrC,EAASqC,EAAM,WAGxC,IAAIpD,UAAU,aAAeoD,EAAM,GAAK,IAAMA,EAAM,GAAK,uBAFtDrC,EAASqC,EAAM,IAAI87C,MAAMnqD,cAQjCkiE,EAASrtF,MAAMutF,KAnJbvsG,UAAUI,SAAW,SAAU+pC,OACtC+pD,EACAn2E,EAAOphB,KAAKu7C,GAAG93C,SAAS+pC,UAExBA,GAAsC,iBAApBA,EAAQgqD,SAAwB5+C,GAAepL,EAAQgqD,QAASp2E,OAErEosB,EAAQgqD,QAAQp2E,GAAMphB,KAAMwtC,SAGjB,IAAjB+pD,EACFA,EAIFkY,EAAah2D,KAAKz5C,KAAMwtC,MASpBnqC,UAAUo0F,UAAY,SAAUjqD,OACvCyQ,EAAOj+C,KAAKi+C,KAAK1F,KAAI,SAAU8H,UAC1BA,EAAI58C,SAAS+pC,aAEbsK,GAAyB93C,KAAKu7C,IAAM,IAAMv7C,KAAKu7C,GAAG93C,SAAS+pC,GAAW,IAAMxtC,KAAKu7C,GAAG93C,SAAS+pC,IAE1F,IAAMyQ,EAAK3D,KAAK,MAAQ,OAQzBj3C,UAAU4pD,OAAS,iBACvB,CACLC,OAAQ,eACR3R,GAAIv7C,KAAKu7C,GACT0C,KAAMj+C,KAAKi+C,SAYFkP,SAAW,SAAUC,UACzB,IAAIgiD,EAAahiD,EAAK7R,GAAI6R,EAAKnP,SAS3B56C,UAAUq0F,OAAS,SAAUlqD,OACpCyQ,EAAOj+C,KAAKi+C,KAAK1F,KAAI,SAAU8H,UAC1BA,EAAIq3C,OAAOlqD,YAGb,+BAAiCk5D,GAAO1mG,KAAKu7C,IAAM,wEAA0E0C,EAAK3D,KAAK,yCAA2C,sEAsFvLw1D,EAAYV,EAAa/rG,UAAUs0F,eAa1Bt0F,UAAUs0F,MAAQ,SAAUnqD,OACnCoqD,SAEApqD,GAAsC,iBAApBA,EAAQgqD,SAAwB5+C,GAAepL,EAAQgqD,QAASx3F,KAAKw6C,UAE7EhN,EAAQgqD,QAAQx3F,KAAKw6C,MAAMx6C,KAAMwtC,SAGtB,IAAdoqD,EACFA,EAIFkY,EAAUr2D,KAAKz5C,KAAMwtC,MASjBnqC,UAAUw0F,OAAS,SAAUrqD,OAKpCuiE,EAYAC,EAhBA/xD,EAAOj+C,KAAKi+C,KAAK1F,KAAI,SAAU8H,UAE1BA,EAAIs3C,MAAMnqD,aAIfy2D,GAAejkG,KAAKw6C,UACLypD,GAAejkG,KAAKw6C,QAInCvI,EAAKjyC,KAAKw6C,OAA2C,mBAA1BvI,EAAKjyC,KAAKw6C,MAAMm9C,OAAyD,iBAA1B1lD,EAAKjyC,KAAKw6C,MAAMm9C,OAAuD,iBAA1B1lD,EAAKjyC,KAAKw6C,MAAMm9C,UAExH1lD,EAAKjyC,KAAKw6C,MAAMm9C,cAKpBoY,OACR,aAEWA,EAAe/vG,KAAMwtC,aAGhC,WAEWyiE,EAAeF,EAAgB/vG,KAAMwtC,aAGhD,uBAEYuiE,EAAe9xD,EAAKx8C,aAC5B,aACWsuG,EAAe9xD,EAAKx8C,QAAQzB,KAAMwtC,aAG7C,WACWyiE,EAAeF,EAAe9xD,EAAKx8C,QAASzB,KAAMwtC,gBAM7C,IAAhBwiE,EACFA,EAGFC,ETSkB,0CSTcjwG,KAAMwtC,MAQlCnqC,UAAUy0F,cAAgB,kBAC9B93F,KAAKkjC,KAAO,IAAMljC,KAAKw6C,MAGzB40D,IACN,CACD/hD,SAAS,EACT7V,QAAQ,K8C5aR04D,sBUvBiC,CACjC/B,iBAAAA,GACAgC,kBCL6B,CAC7BpwC,iBAAAA,IDKA8sC,iBAAAA,GACAjG,gBAAAA,IVoBAwJ,uBY1BkC,CAClCjC,iBAAAA,GACAvG,iBAAAA,IZyBAyI,yBa3BoC,CACpClC,iBAAAA,GACAlG,mBAAAA,Ib0BAqI,4Bc5BuC,CACvCnC,iBAAAA,GACA1D,sBAAAA,Id2BA8F,sBe7BiC,CACjCpC,iBAAAA,GACAvD,gBAAAA,If4BA4F,2BgB9BsC,CACtCrC,iBAAAA,GACAnD,qBAAAA,IhB6BAoD,uBAAAA,GACAf,oBAAAA,GACArB,kBAAAA,GACAyE,e7ClCS,QACQ,CAAC,QAAS,UAAW,SAAU,eAAgB,YAAa,iBAAkB,YAAa,kBAAmB,eAAgB,yBAA0B,eAAgB,YAAa,aAAc,eAAgB,kBAAmB,YAAa,iBAAkB,eACnN3kD,QAC/DhR,MACFA,EACA86B,UACAjb,sBACA49B,YACAQ,iBACAK,YACA8D,kBACA5D,eACA+M,yBACAhN,eACA+V,YACAtI,aACAe,eACAO,kBACAuC,YACA9P,iBACAL,aACA8T,GACExiD,EAyCAvZ,EAAQuI,EA/DH,QA+De,CACtB95B,OAAQ,SAAgB0vF,UACfC,EAAWD,EAAY,KAEhC1sC,iBAAkB,SAAqB4sC,UAC9BC,EAAcD,EAAa,KAEpC/rD,iBAAkB,SAAsB6rD,EAAYljE,UAE3CmjE,EAAWD,OADiB,IAAlBljE,EAAQisC,MAAsBjsC,EAAQisC,MAAQ,KAGjEq3B,yBAA0BD,eAGLD,OACjBpjE,EAAUv+B,UAAUxN,OAAS,QAAsB,IAAjBwN,UAAU,GAAmBA,UAAU,GAAK,GAC9E8hG,OAA+B,IAAlBvjE,EAAQisC,MAAsBjsC,EAAQisC,MAAQ,UAExDvW,GAAQ0tC,GAAa,SAAU3nD,MAChB,iBAATA,QAAyB,IAAIxQ,UAAU,0BAC3Ck4D,EAAW1nD,EAAM8nD,UAKxBC,EACI,EADJA,EAES,EAFTA,EAGM,EAHNA,EAIM,EAJNA,EAKO,EAGPC,EAAa,CACfC,KAAK,EACLC,KAAK,EACLC,KAAK,EACLC,KAAK,EACLC,KAAK,EACLnT,KAAK,EACLC,KAAK,EACLmT,KAAK,EACLC,KAAM,EACNC,KAAK,EACLC,KAAK,EACLC,KAAK,EACLC,KAAK,EACLC,MAAM,EACNC,KAAK,EACLC,MAAM,EACNvT,KAAK,EACLE,KAAK,EACLsT,MAAM,EACNpT,KAAK,EACLqT,KAAK,EACLxT,KAAK,EACLyT,KAAK,EACLC,MAAM,EACNC,KAAK,EACLC,KAAK,EACLC,KAAK,EACLC,MAAM,EACNC,MAAM,EACNC,KAAK,EACLC,KAAK,EACLC,MAAM,EACNC,MAAM,EACNC,MAAM,EACNC,MAAM,EACNC,OAAO,GAGLC,EAAmB,CACrB99C,KAAK,EACL7mB,IAAI,EACJ42C,IAAI,EACJ6e,KAAK,EACLC,KAAK,EACLC,IAAI,EACJd,KAAK,GAEH+P,EAAY,CACd5Q,MAAM,EACNC,OAAO,EACPv6B,KAAM,KACN46B,eAAW,GAETuQ,EAAoB,CAAC,MAAO,uBAgCTx3E,EAAOj6B,UACrBi6B,EAAMg1E,WAAWt8B,OAAO14C,EAAMv7B,MAAOsB,cAWpBi6B,UACjBy3E,EAAcz3E,EAAO,cAUhBA,KACNv7B,mBASeu7B,UACdA,EAAMg1E,WAAWjvF,OAAOia,EAAMv7B,MAAQ,cASxBu7B,UACdA,EAAMg1E,WAAWjvF,OAAOia,EAAMv7B,MAAQ,cAS7Bu7B,SACV03E,UAAYpC,IACZqC,MAAQ,KACR1c,QAAU,GAGTpkD,EAAM+gE,aAAaC,EAAiB73E,GAAQA,EAAM83E,iBAClD93E,MAIyB,MAA5B63E,EAAiB73E,QACgB,OAA5B63E,EAAiB73E,IAA+C,KAA5B63E,EAAiB73E,MACpDi7D,SAAW4c,EAAiB73E,KAC7BA,MAKuB,KAA5B63E,EAAiB73E,OAOW,OAA5B63E,EAAiB73E,KAAoBA,EAAM83E,sBACvCJ,UAAYpC,IACZqC,MAAQE,EAAiB73E,UAC1BA,OAIHtzB,EAAKmrG,EAAiB73E,GACtB14B,EAAKmwG,EAAcz3E,EAAO,GAC1BrzB,EAAK8qG,EAAcz3E,EAAO,MAEZ,IAAdrzB,EAAG5G,QAAgBwvG,EAAW5oG,YAC1B+qG,UAAYpC,IACZqC,MAAQhrG,IACTqzB,KACAA,UACAA,MAKW,IAAd14B,EAAGvB,QAAgBwvG,EAAWjuG,YAC1BowG,UAAYpC,IACZqC,MAAQrwG,IACT04B,UACAA,MAKHu1E,EAAW7oG,YACPgrG,UAAYpC,IACZqC,MAAQjrG,SACTszB,MAKH6W,EAAMkhE,WAAWrrG,MACbgrG,UAAYpC,MAEdpb,EAAKud,EAAcz3E,EAAO,MAEnB,OAAPk6D,GAAsB,OAAPA,GAAsB,OAAPA,EAAa,OACvCyd,OAASE,EAAiB73E,KAC3BA,KACC23E,OAASE,EAAiB73E,KAC3BA,GAEE6W,EAAMmhE,WAAWH,EAAiB73E,OACjC23E,OAASE,EAAiB73E,KAC3BA,aAOuB,MAA5B63E,EAAiB73E,KACb23E,OAASE,EAAiB73E,KAC3BA,GAEA6W,EAAMuoC,QAAQy4B,EAAiB73E,QAE5B03E,UAAYpC,OAEf,MACEz+D,EAAMuoC,QAAQy4B,EAAiB73E,OAC9B23E,OAASE,EAAiB73E,KAC3BA,GAGH6W,EAAMohE,cAAcJ,EAAiB73E,GAAQk4E,EAAcl4E,QACvD23E,OAASE,EAAiB73E,KAC3BA,SAIF6W,EAAMuoC,QAAQy4B,EAAiB73E,OAC9B23E,OAASE,EAAiB73E,KAC3BA,MAIyB,MAA5B63E,EAAiB73E,IAA8C,MAA5B63E,EAAiB73E,MAClD6W,EAAMuoC,QAAQ84B,EAAcl4E,KAAoC,MAAzBk4E,EAAcl4E,IAA2C,MAAzBk4E,EAAcl4E,GAAgB,MACjG23E,OAASE,EAAiB73E,KAC3BA,GAE2B,MAA5B63E,EAAiB73E,IAA8C,MAA5B63E,EAAiB73E,OAChD23E,OAASE,EAAiB73E,KAC3BA,KAIF6W,EAAMuoC,QAAQy4B,EAAiB73E,UAC5Bm4E,GAAkBn4E,EAAO,wBAA0B63E,EAAiB73E,GAAS,UAG9E6W,EAAMuoC,QAAQy4B,EAAiB73E,OAC9B23E,OAASE,EAAiB73E,KAC3BA,MAGH6W,EAAMohE,cAAcJ,EAAiB73E,GAAQk4E,EAAcl4E,UACvDm4E,GAAkBn4E,EAAO,wBAA0B63E,EAAiB73E,GAAS,aAEnD,MAAzBk4E,EAAcl4E,WAClBA,GACCm4E,GAAkBn4E,EAAO,wBAA0B63E,EAAiB73E,GAAS,cAQrF6W,EAAMuhE,QAAQP,EAAiB73E,GAAQq4E,EAAcr4E,GAAQk4E,EAAcl4E,WAgBzE03E,UAAYpC,EAEiB,KAA5BuC,EAAiB73E,MAChB23E,OAASE,EAAiB73E,KAC3BA,SAGDm4E,GAAkBn4E,EAAO,yBAA2BA,EAAM23E,MAAQ,UAtB/D9gE,EAAMuhE,QAAQP,EAAiB73E,GAAQq4E,EAAcr4E,GAAQk4E,EAAcl4E,KAAW6W,EAAMuoC,QAAQy4B,EAAiB73E,OACpH23E,OAASE,EAAiB73E,KAC3BA,GAGHkd,GAAeo6D,EAAkBt3E,EAAM23E,SACnCD,UAAYpC,IAEZoC,UAAYpC,UAnIdoC,UAAYpC,aAwJOt1E,QAEhBA,SACc,OAAhBA,EAAM23E,kBASG33E,KACZ83E,0BAQa93E,KACb83E,0BAoHY9C,EAAYK,OAC1Br1E,EA1YG,CACLq1E,WAAY,GAEZL,WAAY,GAEZ/Z,QAAS,GAETx2F,MAAO,EAEPkzG,MAAO,GAEPD,UAAWpC,EAEXwC,aAAc,EAEdQ,iBAAkB,SA6XXt4E,EAAO,CACdg1E,WAAAA,EACAK,WAAAA,MAGOr1E,OACLhI,WAwBcgI,OACdhI,EAEA0pE,EADAH,EAAS,GAGO,KAAhBvhE,EAAM23E,OAAgC,OAAhB33E,EAAM23E,OAAkC,MAAhB33E,EAAM23E,WAC/CY,EAAgBv4E,IAClBi7D,QAAUj7D,EAAMi7D,cAIA,OAAhBj7D,EAAM23E,OAAkC,MAAhB33E,EAAM23E,OAEb,IAAlBpW,EAAOx7F,QAAgBiyB,MACC,MAAhBgI,EAAM23E,QACTxjF,KAAK,CACV6D,KAAAA,EACA0pE,QAAAA,OAIK1hE,GAEW,OAAhBA,EAAM23E,OAAkC,MAAhB33E,EAAM23E,OAAiC,KAAhB33E,EAAM23E,WAChDY,EAAgBv4E,IAClBi7D,QAAUj7D,EAAMi7D,UACK,MAAhBj7D,EAAM23E,QACTxjF,KAAK,CACV6D,KAAAA,EACA0pE,QAAAA,YAKFH,EAAOx7F,OAAS,EACX,IAAIy7F,EAAUD,IAEhBvpE,OACI,IAAI2yE,OAAa,IACnB1P,QAAUj7D,EAAMi7D,SAGhBjjE,GAlEEwgF,CAAWx4E,MAGF,KAAhBA,EAAM23E,YACJ33E,EAAM03E,YAAcpC,EAGhB/sD,GAAYvoB,EAAO,uBAAyBA,EAAM23E,OAElDQ,GAAkBn4E,EAAO,oBAAsBA,EAAM23E,MAAQ,YAIhE3/E,aAkEgBgI,OACnBta,EAAM68B,EAAMh+C,EAAOk0G,EACnBzgF,WAmDoBgI,OACpBhI,WA8BkBgI,OAClBhI,EAAO0gF,EAAgB14E,QAEJ,OAAhBA,EAAM23E,SAES33E,KACb,IAAI0sE,EAAa,KAAM,KAAM,CAAC10E,EAAM0gF,EAAgB14E,YAGtDhI,EAvCI2gF,CAAe34E,QAEH,MAAhBA,EAAM23E,OAAe,KAItBv5D,EAAOpe,EAAMs4E,mBACXA,iBAAmBt4E,EAAM83E,eACX93E,OAChB8hE,EAAY9pE,EACZ+pE,EAAWwW,EAAgBv4E,MACX,MAAhBA,EAAM23E,YAAqBQ,GAAkBn4E,EAAO,mDAClDs4E,iBAAmB,OACLt4E,OAChBgiE,EAAYuW,EAAgBv4E,KAEzB,IAAI49D,EAAgBkE,EAAWC,EAAUC,KAE1CsW,iBAAmBl6D,SAGpBpmB,EAzEI4gF,CAAiB54E,MAER,MAAhBA,EAAM23E,MAAe,IACnBh7D,GAAa3kB,YAERA,EAAK8mB,OACQ9e,KACZu4E,EAAgBv4E,GACjB,IAAI09D,EAAe,IAAIkV,EAAWltF,GAAOnhB,MACvCs3C,GAAe7jB,YAEJgI,KACZu4E,EAAgBv4E,GACjB,IAAI09D,EAAe1lE,EAAKnP,OAAQmP,EAAKvzB,MAAOF,MAC1C83C,GAAerkB,IAAS2kB,GAAa3kB,EAAK6nB,SAE3C,IACD,KACA7nB,EAAK8mB,OACPyD,KAAKhE,SAAQ,SAAUoG,EAAKlgD,GAC3Bk4C,GAAagI,KACVlgD,GAASkgD,EAAI7F,QAEV,KAIR25D,YACkBz4E,KACZu4E,EAAgBv4E,GACjB,IAAI29D,EAAuBj4E,EAAM68B,EAAMh+C,SAI5C4zG,GAAkBn4E,EAAO,0DAG1BhI,aA+DgBgI,WACnBhI,EAAO6gF,EAAgB74E,GAEJ,QAAhBA,EAAM23E,SAES33E,KACb,IAAI0sE,EAAa,MAAO,MAAO,CAAC10E,EAAM6gF,EAAgB74E,YAGxDhI,aASgBgI,WACnBhI,EAAO8gF,EAAe94E,GAEH,QAAhBA,EAAM23E,SAES33E,KACb,IAAI0sE,EAAa,MAAO,MAAO,CAAC10E,EAAM8gF,EAAe94E,YAGvDhI,aASegI,WAClBhI,EAAO+gF,EAAgB/4E,GAEJ,MAAhBA,EAAM23E,SAES33E,KACb,IAAI0sE,EAAa,IAAK,QAAS,CAAC10E,EAAM+gF,EAAgB/4E,YAGxDhI,aASgBgI,WACnBhI,EAAOghF,EAAgBh5E,GAEJ,OAAhBA,EAAM23E,SAES33E,KACb,IAAI0sE,EAAa,KAAM,SAAU,CAAC10E,EAAMghF,EAAgBh5E,YAG1DhI,aASgBgI,WACnBhI,EAAOihF,EAAgBj5E,GAEJ,MAAhBA,EAAM23E,SAES33E,KACb,IAAI0sE,EAAa,IAAK,SAAU,CAAC10E,EAAMihF,EAAgBj5E,YAGzDhI,aAQgBgI,WACnBugB,EAAS,CAAC24D,EAAWl5E,IACrBuvE,EAAe,GACf4J,EAAY,CACdtC,KAAM,QACNC,KAAM,UACNC,IAAK,UACLC,IAAK,SACLC,KAAM,YACNC,KAAM,YAGDh6D,GAAei8D,EAAWn5E,EAAM23E,QAAQ,KAEzCyB,EAAO,CACTt6D,KAAM9e,EAAM23E,MACZ93D,GAAIs5D,EAAUn5E,EAAM23E,UAETxjF,KAAKilF,KACEp5E,KACb7L,KAAK+kF,EAAWl5E,WAGH,IAAlBugB,EAAOx6C,OACFw6C,EAAO,GACa,IAAlBA,EAAOx6C,OACT,IAAI2mG,EAAa6C,EAAa,GAAGzwD,KAAMywD,EAAa,GAAG1vD,GAAIU,GAE3D,IAAIu+C,EAAeyQ,EAAa1yD,QAASv1C,EAAEu4C,KAAKU,cAUvCvgB,OACdhI,EAAMtS,EAAMm6B,EAAIU,IACb84D,EAAgBr5E,WACnBm5E,EAAY,CACdhC,KAAM,YACNC,KAAM,kBACNC,MAAO,iBAGFn6D,GAAei8D,EAAWn5E,EAAM23E,UAEhCwB,IADEn5E,EAAM23E,SAEO33E,KACX,CAAChI,EAAMqhF,EAAgBr5E,MACzB,IAAI0sE,EAAahnF,EAAMm6B,EAAIU,UAG7BvoB,aASgBgI,OACnBhI,EAAMtS,EAAMm6B,EAAIU,IACb+4D,EAAWt5E,WACdm5E,EAAY,CACdxmE,GAAI,KACJ42C,GAAI,MAICrsC,GAAei8D,EAAWn5E,EAAM23E,UAEhCwB,IADEn5E,EAAM23E,SAEO33E,GAEP,OAATta,GAAiC,KAAhBsa,EAAM23E,QAElB,IAAIjL,EAAa,IAAK,WAAY,CAAC10E,EAAM,IAAI46E,EAAW,QAAQ,MAG9D,CAAC56E,EAAMshF,EAAWt5E,MACpB,IAAI0sE,EAAahnF,EAAMm6B,EAAIU,WAI/BvoB,aASWgI,OACdhI,EACAuoB,EAAS,QAEO,MAAhBvgB,EAAM23E,MAED,IAAIhN,EAAa,GAGjB4O,EAAiBv5E,GAGN,MAAhBA,EAAM23E,OAAiB33E,EAAMs4E,mBAAqBt4E,EAAM83E,aAAc,OAEjE3jF,KAAK6D,GAEW,MAAhBgI,EAAM23E,OAAiBp3D,EAAOx6C,OAAS,KAExBi6B,GAEA,MAAhBA,EAAM23E,OAAiC,MAAhB33E,EAAM23E,OAAiC,MAAhB33E,EAAM23E,OAAiC,KAAhB33E,EAAM23E,QAEtExjF,KAAK,IAAIy+E,EAAW,UAGpBz+E,KAAKolF,EAAiBv5E,MAIX,IAAlBugB,EAAOx6C,OAEF,IAAIo5F,EAAU5+C,EAAO,GAAIA,EAAO,GAAIA,EAAO,IAI3C,IAAI4+C,EAAU5+C,EAAO,GAAIA,EAAO,WAIpCvoB,aASiBgI,OACpBhI,EAAMtS,EAAMm6B,EAAIU,IACbi5D,EAAoBx5E,WACvBm5E,EAAY,CACdnD,IAAK,MACLC,IAAK,YAGA/4D,GAAei8D,EAAWn5E,EAAM23E,UAEhCwB,IADEn5E,EAAM23E,SAEO33E,KACX,CAAChI,EAAMwhF,EAAoBx5E,MAC7B,IAAI0sE,EAAahnF,EAAMm6B,EAAIU,UAG7BvoB,aASoBgI,OACvBhI,EAAM6pB,EAAMn8B,EAAMm6B,MACf45D,EAA4Bz5E,WAE/Bm5E,EAAY,CACdjD,IAAK,WACLC,KAAM,cACNC,IAAK,SACLC,KAAM,YACNvT,IAAK,MACLtpC,IAAK,OAIDtc,GAAei8D,EAAWn5E,EAAM23E,UAG7BwB,IADEn5E,EAAM23E,SAEO33E,KACby5E,EAA4Bz5E,KAC5B,IAAI0sE,EAAahnF,EAAMm6B,EAAI,CAAC7nB,EAAM6pB,WAMtC7pB,aAS4BgI,OAC/BhI,EAAM6pB,UACH63D,EAAW15E,GAIZA,EAAM03E,YAAcpC,GAAoC,OAAhBt1E,EAAM23E,OAAkBx7D,GAAenkB,MAASgI,EAAM03E,YAAcpC,GAAqBn5D,GAAe0F,IAAWrF,GAAeqF,IAAqB,MAAZA,EAAK2qD,KAA+B,MAAhBxsE,EAAM23E,SAMxM+B,EAAW15E,KACX,IAAI0sE,EAAa,IAAK,WAAY,CAAC10E,EAAM6pB,IAAO,UAQpD7pB,aAWWgI,WACdhI,EAAO2hF,GAAW35E,GAClB6hB,EAAO7pB,EACP4hF,EAAc,GAII,MAAhB55E,EAAM23E,OAAiBx7D,GAAe0F,IAF/B,MAIG1tB,KAAKizD,GAAS,GAAIpnD,MACVA,GAEhBA,EAAM03E,YAAcpC,EAqBjB,IAEIt1E,EAAO45E,EAAY7zE,kBArBhB5R,KAAKizD,GAAS,GAAIpnD,MACVA,GAEhBA,EAAM03E,YAAcpC,GAAoC,MAAhBt1E,EAAM23E,MAQ3C,GAEO5xE,SAEH/F,EAAO45E,EAAY7zE,gBATnB/F,EAAO45E,EAAY7zE,SAEhBA,QACL4zE,GAAW35E,KACX,IAAI0sE,EAAa,IAAK,SAAU,CAAC10E,EAAM6pB,WAoB/C7pB,cASWgI,OACdta,EAAM66B,EAAQV,EACds5D,EAAY,CACdlD,IAAK,aACLD,IAAK,YACL9S,IAAK,SACLsE,IAAK,cAGHtqD,GAAei8D,EAAWn5E,EAAM23E,UAC7BwB,EAAUn5E,EAAM23E,SACd33E,EAAM23E,QACO33E,KACX,CAAC25E,GAAW35E,IACd,IAAI0sE,EAAahnF,EAAMm6B,EAAIU,aAapBvgB,OACZhI,EAAMtS,EAAMm6B,EAAIU,aAqBUvgB,OAC1BhI,EAAMtS,EAAMm6B,aAgDQ7f,OACpBugB,EAAS,MAETvgB,EAAM03E,YAAcpC,GAAoBp4D,GAAeld,EAAMq1E,WAAYr1E,EAAM23E,OAAQ,KACrFkC,EAAa75E,EAAMq1E,WAAWr1E,EAAM23E,YAC/B33E,GAEW,MAAhBA,EAAM23E,MAAe,MACd,KACE33E,KACFA,GAEW,MAAhBA,EAAM23E,YACDxjF,KAAKokF,EAAgBv4E,IAEL,MAAhBA,EAAM23E,SAEF33E,KACF7L,KAAKokF,EAAgBv4E,OAIZ,MAAhBA,EAAM23E,YACFQ,GAAkBn4E,EAAO,4BAGrBA,KACHA,UAKJ,IAAI65E,EAAWt5D,mBAYLvgB,OACTta,KAENsa,EAAM03E,YAAcpC,GAAoBt1E,EAAM03E,YAAcpC,GAAuBt1E,EAAM23E,SAASL,WAC7Ft3E,EAAM23E,QACJ33E,GAaF85E,GAAe95E,EAXlBkd,GAAeq6D,EAAW7xF,GAErB,IAAIilF,EAAa4M,EAAU7xF,SACzB8xF,EAAkB5qE,QAAQlnB,GAE5B,IAAIilF,EAAavwB,EAAQ10D,EAAM,WAE/B,IAAIktF,EAAWltF,oBA4GKsa,OACrBkgB,KAEU,MAAhBlgB,EAAM23E,eACFoC,GAA6B/5E,GAI5B85E,GAAe95E,EAFf,IAAI2qE,EAAazqD,oBA6CKlgB,OACrBkgB,KAEU,MAAhBlgB,EAAM23E,eACFqC,GAA6Bh6E,GAI5B85E,GAAe95E,EAFf,IAAI2qE,EAAazqD,oBA6CPlgB,OACfj5B,EAAOw5C,EAAQ2mB,EAAMoP,KAEL,MAAhBt2C,EAAM23E,MAAe,MAEZ33E,KACFA,GAEW,MAAhBA,EAAM23E,MAAe,KAEnB9tC,EAAMowC,GAASj6E,MAEC,MAAhBA,EAAM23E,MAAe,OAEhB,IACE,CAAC9tC,GAEa,MAAhB7pC,EAAM23E,SAEF33E,KACFknC,GAAQ+yC,GAASj6E,UAIN,MAAhBA,EAAM23E,YACFQ,GAAkBn4E,EAAO,8BAGrBA,KACHA,KAEFugB,EAAO,GAAG68C,MAAMr3F,eAEd8H,EAAI,EAAGA,EAAIq5D,EAAMr5D,OACpB0yC,EAAO1yC,GAAGuvF,MAAMr3F,SAAWuwE,QACvB/tB,GAAYvoB,EAAO,+BAAsCugB,EAAO1yC,GAAGuvF,MAAMr3F,OAAS,QAAUuwE,EAAO,OAIrG,IAAI+mB,EAAU98C,OACjB,IAEe,MAAhBvgB,EAAM23E,YACFQ,GAAkBn4E,EAAO,8BAGrBA,KACHA,KACD6pC,UAIE7pC,KACHA,KACD,IAAIq9D,EAAU,WAGjByc,GAAe95E,EAAOj5B,mBAgCZi5B,MACC,MAAhBA,EAAM23E,MAAe,KAEnB1vE,IADOjI,OAEPovB,EAAa,WAGNpvB,GAEW,MAAhBA,EAAM23E,MAAe,IAEH,MAAhB33E,EAAM23E,QACFoC,GAA6B/5E,WACV,MAAhBA,EAAM23E,QACTqC,GAA6Bh6E,aAC1BA,EAAM03E,YAAcpC,GAAoBt1E,EAAM03E,YAAcpC,GAAuBt1E,EAAM23E,SAASL,SAIrGa,GAAkBn4E,EAAO,6CAHzBA,EAAM23E,QACH33E,MAMS,MAAhBA,EAAM23E,YACFQ,GAAkBn4E,EAAO,uCAGxBA,KAEEiI,GAAOswE,EAAgBv4E,UAEb,MAAhBA,EAAM23E,UAGK,MAAhB33E,EAAM23E,YACFQ,GAAkBn4E,EAAO,sDAGrBA,KACHA,OACLhI,EAAO,IAAIm0E,EAAW/8C,YAEnB0qD,GAAe95E,EAAOhI,mBAaZgI,OACfk6E,KAEAl6E,EAAM03E,YAAcpC,WAEVt1E,EAAM23E,QACT33E,GACF,IAAI2qE,EAAavwB,EAAQ8/B,EAAW73E,EAAOoV,yBAY5BzX,OACpBhI,KAEgB,MAAhBgI,EAAM23E,MAAe,MAEZ33E,KACFA,KACFu4E,EAAgBv4E,GAEH,MAAhBA,EAAM23E,YACFQ,GAAkBn4E,EAAO,mCAGrBA,KACHA,KAEF85E,GAAe95E,IADf,IAAIivE,EAAgBj3E,oBAcbgI,QACI,KAAhBA,EAAM23E,MAEFQ,GAAkBn4E,EAAO,gCAEzBm4E,GAAkBn4E,EAAO,kBAd1Bm6E,CAASn6E,GA7BTo6E,CAAiBp6E,GAnBjB8/C,CAAY9/C,GA3EZq6E,CAAYr6E,GAnGZs6E,CAAYt6E,GAnDZu6E,CAAwBv6E,GAhHxBw6E,CAAwBx6E,GA/BxBy6E,CAAYz6E,GAlFZ06E,CAAiB16E,OACpBm5E,EAAY,CACd5C,IAAK,YACLT,IAAM,mBAGD54D,GAAei8D,EAAWn5E,EAAM23E,UAEhCwB,IADEn5E,EAAM23E,SAEJ33E,KAGF85E,GAAe95E,IADf,IAAI0sE,EAAahnF,EAAMm6B,EADrB,CAAC7nB,YAKLA,EArCA2iF,CAAuB36E,IAEV,MAAhBA,EAAM23E,OAAiC,OAAhB33E,EAAM23E,WAEjB,SADP33E,EAAM23E,OACO,MAAQ,WACR33E,KACX,CAAChI,EAAM2hF,GAAW35E,MAEpB,IAAI0sE,EAAahnF,EAAMm6B,EAAIU,WAG7BvoB,EAvBA4iF,CAAS56E,eAqKMA,EAAOhI,EAAMqnB,WAC/BkB,IAEoB,QAAVo3D,OAAiC,MAAhB33E,EAAM23E,OAAiC,MAAhB33E,EAAM23E,OAAoBt4D,QAASA,EAAMzS,QAAQ5M,EAAM23E,cAElG,GAEW,MAAhB33E,EAAM23E,MAAe,KACnBh7D,GAAa3kB,KAAS6jB,GAAe7jB,UA0BhCA,OAxBIgI,KACFA,GAEW,MAAhBA,EAAM23E,YACDxjF,KAAKokF,EAAgBv4E,IAEL,MAAhBA,EAAM23E,SAEF33E,KACF7L,KAAKokF,EAAgBv4E,OAIZ,MAAhBA,EAAM23E,YACFQ,GAAkBn4E,EAAO,4BAGrBA,KACHA,KACF,IAAI0zE,EAAa17E,EAAMuoB,WAOP,MAAhBvgB,EAAM23E,MAAe,MAEnB33E,KACFA,GAEW,MAAhBA,EAAM23E,YACDxjF,KAAKokF,EAAgBv4E,IAEL,MAAhBA,EAAM23E,SAEF33E,KACF7L,KAAKokF,EAAgBv4E,OAIZ,MAAhBA,EAAM23E,YACFQ,GAAkBn4E,EAAO,4BAGrBA,KACHA,KACF,IAAI68D,EAAa7kE,EAAM,IAAIozE,EAAU7qD,QACvC,MAEIvgB,GAELA,EAAM03E,YAAcpC,QAChB6C,GAAkBn4E,EAAO,sCAG1B7L,KAAK,IAAIw2E,EAAa3qE,EAAM23E,UAC1B33E,KAEF,IAAI68D,EAAa7kE,EAAM,IAAIozE,EAAU7qD,GAD1B,WAKfvoB,cA6B6BgI,WAChCkgB,EAAM,GAEyB,KAA5B23D,EAAiB73E,IAA6C,MAA5B63E,EAAiB73E,IACxB,OAA5B63E,EAAiB73E,QAGZ63E,EAAiB73E,KACnBA,OAGA63E,EAAiB73E,KACnBA,QAGEA,GAEW,MAAhBA,EAAM23E,YACFQ,GAAkBn4E,EAAO,qCAGxBA,GACF0e,KAAK7H,MAAM,IAAMqJ,EAAM,iBA6BMlgB,WAChCkgB,EAAM,GAEyB,KAA5B23D,EAAiB73E,IAA6C,MAA5B63E,EAAiB73E,IACxB,OAA5B63E,EAAiB73E,QAGZ63E,EAAiB73E,KACnBA,OAGA63E,EAAiB73E,KACnBA,QAGEA,GAEW,MAAhBA,EAAM23E,YACFQ,GAAkBn4E,EAAO,qCAGxBA,GACF0e,KAAK7H,MAAM,IAAMqJ,EAAM,iBA6EdlgB,WACZugB,EAAS,CAACg4D,EAAgBv4E,IAC1B/zB,EAAM,EAEa,MAAhB+zB,EAAM23E,SAEF33E,KAEF/zB,GAAOssG,EAAgBv4E,cAIzB,IAAIq9D,EAAU98C,eA2IVvgB,UACJA,EAAMv7B,MAAQu7B,EAAM23E,MAAM5xG,OAAS,cAWjBi6B,EAAOgtB,OAC5B1lD,EAAIuzG,GAAI76E,GACRnwB,EAAQ,IAAI6xC,YAAYsL,EAAU,UAAY1lD,EAAI,cAChDwzG,KAAOxzG,EACNuI,cAWYmwB,EAAOgtB,OACtB1lD,EAAIuzG,GAAI76E,GACRnwB,EAAQ,IAAI6xC,YAAYsL,EAAU,UAAY1lD,EAAI,cAChDwzG,KAAOxzG,EACNuI,WA/vCHuoG,QAAU,SAAiB9wG,EAAGyzG,EAAOC,UAClCnkE,EAAMokE,oBAAoB3zG,IAAMuvC,EAAMqkE,kBAAkB5zG,EAAG0zG,IAAUnkE,EAAMqkE,kBAAkBH,EAAOzzG,MASvG2zG,oBAAsB,SAA6B3zG,SAChD,sDAAsDy3C,KAAKz3C,MAmB9D4zG,kBAAoB,SAA2BhyG,EAAMD,SAClD,aAAa81C,KAAK71C,IAAS,oBAAoB61C,KAAK91C,IAAQ,2KAA2K81C,KAAK91C,MAU/O2uG,aAAe,SAAsBtwG,EAAGwwG,SAE/B,MAANxwG,GAAmB,OAANA,GAAoB,OAANA,GAAcwwG,EAAe,KAW3DG,cAAgB,SAAuB3wG,EAAG0zG,SACjC,MAAN1zG,GAAuB,MAAV0zG,GAA2B,MAAVA,GAA2B,MAAVA,KASlDjD,WAAa,SAAoBzwG,UAC9BA,GAAK,KAAOA,GAAK,KAAa,MAANA,KAS3B83E,QAAU,SAAiB93E,UACxBA,GAAK,KAAOA,GAAK,OASpB0wG,WAAa,SAAoB1wG,UAC9BA,GAAK,KAAOA,GAAK,KAAOA,GAAK,KAAOA,GAAK,KAAOA,GAAK,KAAOA,GAAK,KA6qCnEuvC,M4CnsDPy5D,kBAAAA,GACA6K,kBkBRS,WACQ,CAAC,QAAS,UAC2C/qD,QAClEhR,MACFA,QACAvI,GACEuZ,SAkCGhR,EAxCE,WAwCU,CACjB95B,OAAQ,SAAgB41E,UAEfrkD,EAAMqkD,GAAMnkD,UAAUhI,SADjB,KAGdoa,iBAAkB,SAAsB+xC,EAAM5kD,UACrCO,EAAMqkD,GAAMnkD,UAAUhI,SAASuH,IAExCgyB,iBAAkB,SAAqB4yB,OACjC5kD,EAAQ,UACLkxB,GAAQ0zB,GAAM,SAAUz7C,UACtB5I,EAAM4I,GAAO1I,UAAUhI,SAASuH,OAG3C8+D,yBAA0B,SAA2Bla,EAAM5kD,UAClDkxB,GAAQ0zB,GAAM,SAAUz7C,UACtB5I,EAAM4I,GAAO1I,UAAUhI,SAASuH,aC/CpC8kE,GAAqB,CAC9BvJ,yBAAAA,GACAtB,wBAAAA,GACA8K,gBCA2B,CAC3BxK,gBAAAA,GACAC,sBAAAA,GACAwK,gBCN2B,CAC3BC,gBCM2B,CAC3BnL,wBAAAA,GACAoL,gBCZ2B,CAC3BC,0BCFqC,CACrCjK,mBAAAA,GACAkK,oBCD+B,CAC/BtL,wBAAAA,GACAO,mBAAAA,GACAL,kBAAAA,GACAh0B,cAAAA,IDFAE,yBAAAA,IDAAs0B,sBAAAA,GACAP,wBAAAA,GACA9yB,eAAAA,IDSA+yB,yBAAAA,GACAK,gBAAAA,GACAC,sBAAAA,GACAe,yBAAAA,GACAtB,wBAAAA,GACAiB,mBAAAA,GACAb,mBAAAA,GACAO,2BAAAA,GACAK,qBAAAA,GACAjB,kBAAAA,GACAM,uBAAAA,GACA+K,aI9BS,MACQ,CAAC,QAAS,SAAU,MAAO,YAAa,eAAgB,iBAAkB,WAAY,SAAU,cAAe,aAAc,cAAe,eAAgB,QAC5GvrD,QAC7DhR,MACFA,SACA3kC,EACApU,gBACA6hB,eACAliB,iBACAZ,WACAi5E,SACA3B,cACArT,aACAsL,cACApkB,eACA+Y,MACAoU,GACEttB,SA4BGhR,EA7CE,MA6CU,CACjBmR,YAAa,SAAqBlrD,UACzBu2G,EAAUv2G,IAEnBikE,aAAc,SAAsBjkE,mBAqMlBA,OAqBdyC,EAAGkjB,EAAGkd,EAnBNg/B,EAAO7hE,EAAE0oC,MAAM,GACfo5B,EAAU9hE,EAAE0oC,MAAM,GAElB5lC,EAAI3C,KAAKC,IAAIyhE,EAAMC,GAEnB3oB,EAASn5C,EAAEmkE,QACX/kE,EAAQY,EAAEokE,OACVE,EAAMtkE,EAAEqkE,KAERmyC,EAAU,GACVC,EAAS,GACTC,EAAO,GACPC,EAAQ,CAAC90C,EAAM/+D,GAEf8zG,EAAU,GACVC,EAAS,GACTC,EAAO,GACPC,EAAQ,CAACj0G,EAAGg/D,GAIZk1C,EAAO,GACPC,EAAO,OAENx0G,EAAI,EAAGA,EAAIo/D,EAAMp/D,MACfA,GAAKA,IACLA,GAAKA,MAIRy0G,EAAc,SAAqBn4G,EAAGC,OAEpC0nE,EAAKuwC,EAAKl4G,GACV4nE,EAAKswC,EAAKj4G,KAET0nE,GAAM1nE,IACN2nE,GAAM5nE,IAENA,GAAK4nE,IACL3nE,GAAK0nE,GAIRs+B,EAAQ,eAENmS,EAAM,IAAI9+B,EAEV1yD,EAAIk8C,MAED/yC,KAAK0nF,EAAQ91G,UAEVouB,KAAK,KACNA,KAAKnJ,MAITmJ,KAAK8nF,EAAQl2G,YAEdskE,EAAKV,EAAI3+C,GACTs/C,EAAKX,EAAI3+C,EAAI,OAEZkd,EAAImiC,EAAIniC,EAAIoiC,EAAIpiC,MAEfzjC,EAAMyjC,KAEN79B,IAAIgyG,EAAKv0G,GAAI02C,EAAOtW,IAItBld,EAAI,KAEFuzB,QAAQ,EAAGvzB,EAAI,GAAG,SAAUyxF,EAAGC,KAEpB5wC,YAAY2wC,EAAGZ,EAASC,EAAQC,GAAM,SAAU99C,EAAG0+C,GAE1D1+C,EAAIw+C,KAEF5+B,WAAW5f,EAAG0W,EAAWvvE,EAAeu3G,EAAKD,eAOrDt/C,EAAKpyC,EACL4xF,EAAMJ,EAAIzkF,IAAI/M,GACd6xF,EAAQ58C,EAAI28C,KAEZr+D,QAAQvzB,EAAI,EAAGk8C,EAAO,GAAG,SAAU9iE,EAAGQ,OAEpCk4G,EAAO78C,EAAIr7D,GAEX83E,EAAOogC,EAAMD,OAEVz4G,IAEG04G,IAEFl4G,MAINomB,IAAMoyC,MAEKkK,UAAUt8C,EAAGoyC,EAAI4+C,EAAM,GAAIH,EAASC,EAAQC,KAG5Cz0C,UAAUt8C,EAAGoyC,EAAIg/C,EAAM,GAAIH,EAASC,EAAQC,KAGrDn+B,KAAKhzD,EAAGoyC,KAEApyC,EAAGoyC,MAIb7e,QAAQ,EAAG2oB,EAAO,GAAG,SAAU9iE,EAAGQ,GAEhCR,GAAK4mB,KAECmJ,KAAKvvB,KACNuvB,KAAK/vB,OAGR4B,EAAapB,EAAGg4G,GAEfvzC,EAAYzkE,EAAG,OAEVuvB,KAAKvvB,KACNuvB,KAAK/vB,aAMf4mB,EAAI,EAAGA,EAAIm8C,EAASn8C,iBAKpBmJ,KAAK8nF,EAAQl2G,UACbouB,KAAK0nF,EAAQ91G,QAEX,CACLykF,EAAG,IAAIlhB,EAAa,CAClB7tC,OAAQogF,EACRp3G,MAAOq3G,EACPnyC,IAAKoyC,EACLp3C,KAAMq3C,IAERe,EAAG,IAAIzzC,EAAa,CAClB7tC,OAAQwgF,EACRx3G,MAAOy3G,EACPvyC,IAAKwyC,EACLx3C,KAAMy3C,IAER9tG,EAAG+tG,EACHt0G,SAAU,iBACD,MAAQzD,KAAKkmF,EAAEziF,WAAa,QAAUzD,KAAKy4G,EAAEh1G,WAAa,QAAUzD,KAAKgK,IApW3E0uG,CAAW33G,IAEpBk6B,MAAO,SAAet6B,OAIhB4I,EAAI+tG,EAFAnhG,EAAOxV,UAKR,CACLulF,EAAG38E,EAAE28E,EAAE1tC,UACPigE,EAAGlvG,EAAEkvG,EAAEjgE,UACPxuC,EAAGT,EAAES,iBAKQjJ,OAebyC,EAAGkjB,EAAGkd,EAbNg/B,EAAO7hE,EAAE0oC,MAAM,GACfo5B,EAAU9hE,EAAE0oC,MAAM,GAElB5lC,EAAI3C,KAAKC,IAAIyhE,EAAMC,GAEnB9jB,EAAOvQ,GAAMztC,EAAEkgE,OAEf03C,EAAQ,GACRjB,EAAQ,CAAC90C,EAAM/+D,GAEf+0G,EAAQ,GACRd,EAAQ,CAACj0G,EAAGg/D,GAIZ74D,EAAI,OAEHxG,EAAI,EAAGA,EAAIo/D,EAAMp/D,MAClBA,GAAKA,MAIJkjB,EAAI,EAAGA,EAAIm8C,EAASn8C,IAAK,IAExBA,EAAI,MAEDljB,EAAI,EAAGA,EAAIo/D,EAAMp/D,IAAK,KAErBnC,EAAMH,KAAKC,IAAIqC,EAAGkjB,GAElBhmB,EAAI,MAEHkjC,EAAI,EAAGA,EAAIviC,EAAKuiC,MAEfhgB,EAAUljB,EAAGI,EAAei+C,EAAKv7C,GAAGogC,GAAImb,EAAKnb,GAAGld,OAGjDljB,GAAGkjB,GAAKqzD,EAASh7B,EAAKv7C,GAAGkjB,GAAIhmB,OAKlCo4D,EAAKpyC,EACL6xF,EAAQ,EACRD,EAAM,MAEL90G,EAAIkjB,EAAGljB,EAAIo/D,EAAMp/D,IAAK,KAErBlD,EAAIy+C,EAAKv7C,GAAGkjB,GAEZ8xF,EAAO78C,EAAIr7D,GAEX83E,EAAOogC,EAAMD,OAEV/0G,IAEGg1G,IAEFl4G,MAKNomB,IAAMoyC,MAENpyC,GAAK,CAAC1c,EAAE8uD,GAAK9uD,EAAE8uD,GAAM9uD,EAAE0c,IAAI,KAEjBs8C,UAAUt8C,EAAGoyC,EAAI/Z,IAI3Br4B,EAAIk8C,MAEDp/D,EAAIkjB,EAAI,EAAGljB,EAAIo/D,EAAMp/D,IAAK,KAEzBq1G,EAAM95D,EAAKv7C,GAAGkjB,GAEbq+C,EAAY8zC,EAAK,OAEfr1G,GAAGkjB,GAAKhlB,EAAaq9C,EAAKv7C,GAAGkjB,GAAI4xF,SAOzC5xF,EAAI,EAAGA,EAAIm8C,EAASn8C,QAElBljB,EAAI,EAAGA,EAAIo/D,EAAMp/D,IAEV,IAANkjB,IAEEljB,EAAIq/D,MAEAr/D,GAAK,MAIPA,GAAK,IAITA,EAAIkjB,GAEFljB,EAAIq/D,MAEAr/D,GAAGkjB,GAAKq4B,EAAKv7C,GAAGkjB,IAIpBA,EAAIk8C,MAEAp/D,GAAGkjB,GAAK,IAOdljB,IAAMkjB,GAiBNljB,EAAIq/D,MAEAr/D,GAAGkjB,GAAK,GAIZA,EAAIk8C,MAEAp/D,GAAGkjB,GAAKq4B,EAAKv7C,GAAGkjB,MAvBlBljB,EAAIq/D,MAEAr/D,GAAGkjB,GAAKq4B,EAAKv7C,GAAGkjB,IAIpBA,EAAIk8C,MAEAp/D,GAAGkjB,GAAK,QAqBlB3c,EAAI,IAAIkiD,EAAY,CACtBlN,KAAM45D,EACNt4C,KAAMq3C,IAGJzpF,EAAI,IAAIg+B,EAAY,CACtBlN,KAAM65D,EACNv4C,KAAMy3C,IAGJjyC,EAAK,OAEJriE,EAAI,EAAGK,EAAImG,EAAEvI,OAAQ+B,EAAIK,EAAGL,MAC5BwG,EAAExG,IAAMA,QAIN,CACL0iF,EAAGn8E,EACH0uG,EAAGxqF,EACHjkB,EAAG67D,EACHpiE,SAAU,iBACD,MAAQzD,KAAKkmF,EAAEziF,WAAa,QAAUzD,KAAKy4G,EAAEh1G,WAAa,QAAUzD,KAAKgK,SLtOtFqiG,mBAAAA,GACAS,qBAAAA,GACAG,qBAAAA,GACAjB,kBAAAA,GACAM,uBAAAA,GACAwM,aMdS,MACQ,CAAC,QAAS,SAAU,WAAY,WAAY,aAAc,QACVhtD,QAC7DhR,MACFA,SACA3kC,WACA4jE,WACA99C,aACAo0C,MACA0oC,GACEjtD,SA2BGhR,EArCE,MAqCU,CACjBg6B,IAAK,SAAah1E,UACT0uC,GAAM1uC,IAEfkkE,iBAAkB,SAAalkE,OACzB0hB,YAEAs1B,GAASh3C,GACJA,EAAEugE,OACAplC,MAAM4b,QAAQ/2C,MACnBqW,EAAOrW,IACFugE,OAGF,IAGI5+D,aACN,SAEI+sC,GAAM1uC,QAEV,KAEa,IAAZ0hB,EAAK,UACAgtB,GAAM1uC,EAAE04C,UAAU,UAEnB,IAAIgT,WAAW,gCAAuClD,GAAO9mC,GAAQ,UAG1E,MAGGohD,EAAOphD,EAAK,MAGZohD,IAFOphD,EAAK,mBAwBZw3F,EAAQp2C,EAAMoP,MACb,IAATpP,SAEKp0B,GAAMwqE,EAAO,GAAG,OACL,IAATp2C,SAGFmX,EAAS99C,EAAS+8E,EAAO,GAAG,GAAIA,EAAO,GAAG,IAAK/8E,EAAS+8E,EAAO,GAAG,GAAIA,EAAO,GAAG,aAGnFC,EAASF,EAAIC,GAEb5kG,EAAM6kG,EAAOR,EAAE,GAAG,GAEbjyC,EAAK,EAAGA,EAAK5D,EAAM4D,MACpBvqC,EAAS7nB,EAAK6kG,EAAOR,EAAEjyC,GAAIA,YAK/B0yC,EAAa,EACb11G,EAAI,EACJ21G,EAAU,KAED,MACJA,EAAQ31G,WAIXA,GAAKo/D,gBACLl8C,EAAIljB,EACJg8D,EAAW,GAEP25C,EAAQF,EAAOjvG,EAAE0c,OACfuyF,EAAOjvG,EAAE0c,KAAM,IACnBuyF,EAAOjvG,EAAE0c,OAIX84C,EAAW,GAAM,cAKhB05C,EAAa,GAAM,EAAI9kG,EAAMi8D,EAAWj8D,GAjEhCglG,CAAKt5G,EAAE0uC,QAAQgK,UAAWoqB,SAE3B,IAAIpX,WAAW,gCAAuClD,GAAO9mC,GAAQ,mBAMzE,IAAIgqC,WAAW,yCAAgDlD,GAAO9mC,GAAQ,aPpE5F+rF,yBAAAA,GACAJ,qBAAAA,GACAd,mBAAAA,GACAS,qBAAAA,GACAd,kBAAAA,GACAM,uBAAAA,GACA+M,aQpBS,MACQ,CAAC,QAAS,SAAU,eAAgB,YAAa,WAAY,aAAc,MAAO,WAAY,QAC9CvtD,QAC7DhR,MACFA,SACA3kC,eACAzU,YACAkiB,WACAqY,aACAo0C,MACAj8D,WACAwiB,EACA70B,OACE+pD,SAsBGhR,EAnCE,MAmCU,CACjBkpB,iBAAkB,SAAqBlkE,OACjC0hB,EAAOs1B,GAASh3C,GAAKA,EAAEugE,OAASzW,GAAU9pD,UAEtC0hB,EAAK/f,aACN,KAEa,IAAZ+f,EAAK,UACHs1B,GAASh3C,GACJqW,EAAO,CAACzU,EAAa,EAAG5B,EAAE04C,UAAU,MAEpC,CAAC92C,EAAa,EAAG5B,EAAE,WAGtB,IAAI0rD,WAAW,gCAAuClD,GAAO9mC,GAAQ,UAG1E,MAGGohD,EAAOphD,EAAK,GACZwwD,EAAOxwD,EAAK,MAEZohD,IAASoP,SACPl7B,GAASh3C,GACJqW,EAAOmjG,EAAKx5G,EAAE04C,UAAWoqB,EAAMoP,GAAOlyE,EAAE2gE,WAGxC64C,EAAKx5G,EAAG8iE,EAAMoP,SAGjB,IAAIxmB,WAAW,gCAAuClD,GAAO9mC,GAAQ,mBAMzE,IAAIgqC,WAAW,yCAAgDlD,GAAO9mC,GAAQ,OAG1FszD,IAAK,SAAah1E,UAET4B,EAAa,EAAG5B,iBAYby5G,EAAK32C,EAAMoP,OACnBzoE,EAAG7I,EAAGmH,EAAG5H,EAAO62D,KAEP,IAAT8L,EAAY,IAIA,OAFN22C,EAAI,GAAG,UAGPn5G,MAAM,uDAGP,CAAC,CAACsB,EAAa,EAAGzB,QACP,IAAT2iE,EAAY,KAEjBjyD,EAAIyD,EAAImlG,MAEF,IAAN5oG,QACIvQ,MAAM,uDAGP,CAAC,CAACsB,EAAa63G,EAAI,GAAG,GAAI5oG,GAAIjP,EAAa2uE,EAAWkpC,EAAI,GAAG,IAAK5oG,IAAK,CAACjP,EAAa2uE,EAAWkpC,EAAI,GAAG,IAAK5oG,GAAIjP,EAAa63G,EAAI,GAAG,GAAI5oG,SAQ3I0tD,EAAIk7C,EAAIt8D,aAEP1zC,EAAI,EAAGA,EAAIq5D,EAAMr5D,MAClBA,GAAK80D,EAAE90D,GAAG0zC,iBAKVqhB,EAAI1nC,EAASgsC,GAAMpqB,UAEdx1C,EAAI,EAAGA,EAAIgvE,EAAMhvE,IAAK,KAEzBw2G,EAAO79C,EAAI0C,EAAEr7D,GAAGA,IAChBy2G,EAAOz2G,QACPA,EAAI,EAEDuG,EAAIq5D,GACLjH,EAAI0C,EAAE90D,GAAGvG,IAAMw2G,MACV79C,EAAI0C,EAAE90D,GAAGvG,MACTuG,UAME,IAATiwG,QACIp5G,MAAM,oDAGVq5G,KAEMz2G,MACDq7D,EAAEr7D,KACPA,GAAKq7D,EAAE90D,KACPA,GAAKutD,IACAwH,EAAEt7D,KACPA,GAAKs7D,EAAE/0D,KACPA,GAAKutD,OAIL4iD,EAAKr7C,EAAEr7D,GACP22G,EAAKr7C,EAAEt7D,OAENuG,EAAI,EAAGA,EAAIq5D,EAAMr5D,IAAK,KACrBqwG,EAAKv7C,EAAE90D,GACPswG,EAAKv7C,EAAE/0D,MAEPA,IAAMvG,MAEM,IAAV42G,EAAG52G,GAAU,OACXtB,EAAa2uE,EAAWupC,EAAG52G,IAAK02G,EAAG12G,IAGlCtC,EAAIsC,EAAGtC,EAAIsxE,EAAMtxE,MACjBA,GAAKkjB,EAAUg2F,EAAGl5G,GAAIu7B,EAASp0B,EAAG6xG,EAAGh5G,SAGrCA,EAAI,EAAGA,EAAIsxE,EAAMtxE,MACjBA,GAAKkjB,EAAUi2F,EAAGn5G,GAAIu7B,EAASp0B,EAAG8xG,EAAGj5G,UAGvC,OAGDg5G,EAAG12G,GAEFtC,EAAIsC,EAAGtC,EAAIsxE,EAAMtxE,MACjBA,GAAKgB,EAAak4G,EAAGl5G,GAAImH,OAGzBnH,EAAI,EAAGA,EAAIsxE,EAAMtxE,MACjBA,GAAKgB,EAAam4G,EAAGn5G,GAAImH,YAM7By2D,OTxLX+tC,mBAAAA,GACAS,qBAAAA,GACAd,kBAAAA,GACA8N,gBUdS,SACQ,CAAC,QAAS,SAAU,WAAY,cAAe,eAAgB,QACZhuD,QAChEhR,MACFA,SACA3kC,WACA8lB,cACA8oC,eACArjE,MACAojG,GACEh5C,EACAke,EAAclB,GAAkB,CAClChuB,MAAAA,EACAiqB,YAAAA,IAEEkF,EAAcV,GAAkB,CAClCzuB,MAAAA,WAkCKA,EAAM,SAAU60B,GAAO,CAE5BoqC,iCAAkC,SAAgCj6G,EAAGC,UAK5Dk8B,EAASn8B,EAAGglG,EAAI/kG,KAEzB4tE,mBAAoB,SAAwB7tE,EAAGC,UACtCkqE,EAAYnqE,EAAGC,EAAG2B,GAAc,IAEzCgsE,oBAAqB,SAAyB5tE,EAAGC,UACxCiqE,EAAYlqE,EAAGC,EAAG2B,GAAc,IAEzCosE,aAAc,SAAkBhuE,EAAGC,UAE1BkqE,EAAY9zD,EAAOrW,GAAIC,EAAG2B,GAAc,GAAO82C,WAExDwhE,sBAAuB,SAAwBl6G,EAAGC,UACzCk8B,EAASn8B,EAAGglG,EAAI/kG,MAExB2B,EAAa+5C,iCC5ElB,eAKA8hB,GAAEl6D,UAAY,CACZ43D,GAAI,SAAU75C,EAAMjW,EAAU8uG,OACxBj5G,EAAIhB,KAAKgB,SAAWA,EAAI,aAEzBogB,OAAYA,GAAQ,KAAKyO,KAAK,CAC/B0rB,GAAIpwC,EACJ8uG,IAAAA,IAGKj6G,MAGTk6G,KAAM,SAAU94F,EAAMjW,EAAU8uG,OAC1B9O,EAAOnrG,oBAEJm6G,IAAI/4F,EAAMg5F,KACNp6E,MAAMi6E,EAAKhrG,oBAGb0vF,EAAIxzF,EACNnL,KAAKi7D,GAAG75C,EAAMg5F,EAAUH,IAGjCpgE,KAAM,SAAUz4B,WACV29B,EAAO,GAAG18B,MAAMo3B,KAAKxqC,UAAW,GAChCorG,SAAgBr5G,SAAWA,EAAI,KAAKogB,IAAS,IAAIiB,QACjD7e,EAAI,EACJmE,EAAM0yG,EAAO54G,OAET+B,EAAImE,EAAKnE,MACRA,GAAG+3C,GAAGvb,MAAMq6E,EAAO72G,GAAGy2G,IAAKl7D,UAG7B/+C,MAGTm6G,IAAK,SAAU/4F,EAAMjW,OACfnK,EAAIhB,KAAKgB,SAAWA,EAAI,IACxBs5G,EAAOt5G,EAAEogB,GACTm5F,EAAa,MAEbD,GAAQnvG,UACD3H,EAAI,EAAGmE,EAAM2yG,EAAK74G,OAAQ+B,EAAImE,EAAKnE,IACtC82G,EAAK92G,GAAG+3C,KAAOpwC,GAAYmvG,EAAK92G,GAAG+3C,GAAGojD,IAAMxzF,KACnC0kB,KAAKyqF,EAAK92G,WAQ1B+2G,EAAW94G,OACRT,EAAEogB,GAAQm5F,SACHv5G,EAAEogB,GAENphB,OAIXw6G,WAAiBj9C,0BACYA,qBC7DtB,YAAuBziB,EAAO2/D,EAAMxoE,EAAMyoE,cA4H9Bt5F,EAAMnhB,EAAOutC,OAuNK+N,KArN7B/N,EAAQmtE,MAAyB,mBAAV16G,eAoFds7C,OACTq/D,EAAU,mBACR38D,EAAO,GAEFz6C,EAAI,EAAGmE,EAAMsH,UAAUxN,OAAQ+B,EAAImE,EAAKnE,IAAK,KAChD68C,EAAMpxC,UAAUzL,KACfA,GAAK68C,GAAOA,EAAI7H,iBAGhB+C,EAAGvb,MAAMiS,EAAMgM,IAGpB1C,EAAG67C,cACGA,UAAY77C,EAAG67C,kBAGlBwjB,EAlGGC,CAAM56G,IAoNK,mBADYs7C,EA/MHt7C,IAgN6B,iBAAjBs7C,EAAGC,cA/MnCV,EAAM15B,EAAM,EACjBnhB,EAAMu7C,WAAYv7C,KAInB66G,EAAgB7oE,EAAK7wB,KAAU05F,EAAgB76G,YAC7CutC,EAAQgmD,SAEF14C,EAAM15B,EAAMnhB,EAAMw7C,YAGlBX,EAAM7I,EAAK7wB,GAAOnhB,KAGvBmhB,GAAQnhB,SACNy6G,EAAkBt5F,KAERA,EAAMnhB,UAElB45C,KAAK,SAAUz4B,GAAM,kBACjBnhB,aAKQ,IAAfgyC,EAAK7wB,IAAuBosB,EAAQgmD,kBACjCpyE,GAAQnhB,SACNy6G,EAAkBt5F,KAERA,EAAMnhB,UAElB45C,KAAK,SAAUz4B,GAAM,kBACjBnhB,SAKNutC,EAAQutE,aACL,IAAI36G,MAAM,kBAAoBghB,EAAO,gCAIrBA,EAAMnhB,GAC1BA,GAAoC,mBAApBA,EAAMm3F,aACnBsZ,WAAWtZ,UAAUh2E,GAAQnhB,EAAMm3F,UAEpC4jB,EAAqB55F,OAClBsvF,WAAWja,kBAAkBr1E,GAAQnhB,EAAMm3F,oBAI3CnlD,EAAKy+D,WAAWtZ,UAAUh2E,GAE7B45F,EAAqB55F,OAClBsvF,WAAWja,kBAAkBr1E,GAAQnhB,eAKtBmhB,UACjB6wB,EAAKy+D,WAAWtZ,UAAUh2E,GAE7B45F,EAAqB55F,KAClBsvF,WAAWja,kBAAkBr1E,GAAQ6wB,EAAK7wB,UAExC6wB,EAAKy+D,WAAWja,kBAAkBr1E,cAuCrBqkC,EAASjY,OAC3BpsB,EAAOnS,UAAUxN,OAAS,QAAsB,IAAjBwN,UAAU,GAAmBA,UAAU,GAAKw2C,EAAQlK,MAEnF0/D,GAAS75F,EAAM,WACX,IAAIhhB,MAAM,wDAA+Dg6C,KAAKC,UAAUj5B,QAG5F85F,EAAYC,EAA2B11D,GAAWxT,EAAKy+D,WAAWtZ,UAAYnlD,EAC9EmpE,EAAqBh6F,KAAQ6wB,EAAKy+D,WAAWtZ,UAC7CikB,EAAWziE,GAAesiE,EAAW95F,GAAQ85F,EAAU95F,QAAQ,EAE/Dk6F,EAAW,eAET3wD,EAAe,KACXW,aAAa/S,IAAIyS,IAAuB/Q,gBAC1CghE,GAAShwD,EAAY,WACjB,IAAI7qD,MAAM,8DAAqEg6C,KAAKC,UAAU4Q,IAGnF,SAAfA,IACWhZ,KAAOA,EACI,sBAAfgZ,IACIwrC,kBAAoBxkD,EAAKy+D,WAAWja,kBACzB,YAAfxrC,IAEIswD,QAAUtpE,IAEVgZ,GAAchZ,EAAKgZ,UAGhCuwD,IAAkC7wD,MAElC6wD,GAA0C,mBAAvBA,EAASpkB,gBACxB,IAAIh3F,MAAM,iJAGD,IAAbi7G,GAA0B7tE,EAAQgmD,gBAC7BgoB,KAGLV,EAAgBO,IAAaP,EAAgBU,UAExC1gE,EAAMugE,EAAUG,MAGrBhuE,EAAQutE,cAEHM,QAED,IAAIj7G,MAAM,kBAAoBghB,EAAO,sBAK1CqkC,EAAQmF,OAA8B,IAAtBnF,EAAQmF,KAAK6wD,QAWtBr6F,GAAQk6F,IAEdD,GAAYD,IACGh6F,IAEb+5F,EAA2B11D,IAAYi2D,EAA4Bj2D,QAChExT,EAAKy+D,WAAWja,kBAAmBr1E,GAAM,IAAM85F,EAAU95F,UAhB7D85F,EAAW95F,EAAMk6F,GAElBD,GAAYD,IACGh6F,IAEb+5F,EAA2B11D,IAAYi2D,EAA4Bj2D,QAChExT,EAAKy+D,WAAWja,kBAAmBr1E,GAAM,IAAM85F,EAAU95F,QAgBlDA,GAAQqkC,IACrB5L,KAAK,SAAUz4B,EAAMk6F,cAUH/2F,SACE,mBAAXA,GAA2C,iBAAXA,GAAyC,iBAAXA,GAAyC,kBAAXA,GAAmC,OAAXA,GAAmBqyB,GAAOryB,IAAWmyB,GAAUnyB,IAAWiyB,GAAYjyB,IAAWoyB,GAAWpyB,IAAWuyB,GAASvyB,IAAW0W,MAAM4b,QAAQtyB,cASpPg3B,SACF,mBAAPA,GAA8C,iBAAlBA,EAAGE,sBAOjBr6B,UACpBw3B,GAAe+iE,EAAQv6F,cAGIqkC,gBAC5BA,EAAQlK,GAAGjT,QAAQ,MACzBsQ,GAAe+iE,EAAQl2D,EAAQlK,KAASkK,EAAQmF,MAASnF,EAAQmF,KAAKyC,oBAGrC5H,eACf,IAAZA,QAA0C,IAAjBA,EAAQmF,OAA2D,IAArCnF,EAAQmF,KAAKgxD,sBAAgC,MAIzGD,EAAS,CACXjL,YAAY,EACZxtE,MAAM,EACN24E,MAAM,EACNtwG,OAAO,EACP6hD,MAAM,EACN23B,OAAO,mBAnTW+2B,EAAWtuE,OACzBmnB,EAAM1lD,UAAUxN,UAER,IAARkzD,GAAqB,IAARA,QACT,IAAI4d,GAAe,SAAU5d,EAAK,EAAG,cAOrBonD,EAAYC,EAAOC,MACrChhF,MAAM4b,QAAQmlE,KACV/hE,YAAgBiiE,EAAeH,EAAY5hE,aACvB,iBAAV6hE,UACPt9D,KAASs9D,EACZpjE,GAAeojE,EAAOt9D,MACTq9D,EAAYC,EAAMt9D,GAAQA,WAGpC2M,GAAU2wD,SAAmB,IAATC,EAAoB,KAC7CE,EAAW9wD,GAAU2wD,GAASb,EAA2Ba,GAASA,EAAMzgE,GAAK,aACjFygE,EAAMzgE,GAAK0gE,KAEPrjE,GAAemjE,EAAYI,IAAaJ,EAAWI,KAAcH,IAAUxuE,EAAQutE,aAC/E,IAAI36G,MAAM,kBAAoB+7G,EAAW,aAGtCA,GAAYH,WAElBxuE,EAAQutE,aACL,IAAItiE,UAAU,sCAxBrBjL,MACO,QA4BR4uE,EAAa,WAGRh7F,OAFMg7F,EAAYN,GAEVM,KACXxjE,GAAewjE,EAAYh7F,GAAO,KAEhCnhB,EAAQm8G,EAAWh7F,MAEnBiqC,GAAUprD,KAIGA,EAAOutC,WACb6uE,EAAgBp8G,KACjBmhB,EAAMnhB,EAAOutC,YAEhBA,EAAQutE,aACL,IAAItiE,UAAU,wCClHhC,wBAAiCxsB,OAAO+R,QAAU,SAAUpsB,WAAmBpO,EAAI,EAAGA,EAAIyL,UAAUxN,OAAQ+B,IAAK,KAAMyhE,EAASh2D,UAAUzL,WAAamgC,KAAOshC,EAAch5C,OAAO5oB,UAAUu1C,eAAea,KAAKwrB,EAAQthC,OAAeA,GAAOshC,EAAOthC,WAAmB/xB,IAA2BouB,MAAMhgC,KAAMiP,WAqDzS,YAAgBqtG,EAAWv+E,OAC5Bw+E,EAAiBz5B,GAAS,GAAI1sC,GAAgBrY,MAGrB,mBAAlB9R,OAAOi5B,aACV,IAAI9kD,MAAM,qHCnDE4mC,EAEhBw1E,EDqDAvqE,GCvDgBjL,EDuDK,CAEvB2e,SAAAA,GACAjP,UAAAA,GACAF,YAAAA,GACAG,WAAAA,GACAC,OAAAA,GACAwR,SAAAA,GACAvR,QAAAA,GACAC,SAAAA,GACAsrB,aAAAA,GACArrB,cAAAA,GACAC,eAAAA,GACAC,QAAAA,GACAC,QAAAA,GACAiV,UAAAA,GACAhV,YAAAA,GACAC,OAAAA,GACAgV,WAAAA,GACAC,OAAAA,GACAC,SAAAA,GACAG,SAAAA,GACAF,OAAAA,GACAC,YAAAA,GACAjV,eAAAA,GACAE,YAAAA,GACAC,iBAAAA,GACAC,YAAAA,GACAC,kBAAAA,GACAC,eAAAA,GACAC,yBAAAA,GACAC,eAAAA,GACAC,YAAAA,GACAR,OAAAA,GACAS,aAAAA,GACAC,eAAAA,GACAC,kBAAAA,GACAC,YAAAA,GACAC,aAAAA,GACAC,QAAAA,IC5FEkkE,EAAU,IAAIC,KAEdxhD,GAAKuhD,EAAQvhD,GAAGu9B,KAAKgkB,KACrBrC,IAAMqC,EAAQrC,IAAI3hB,KAAKgkB,KACvBtC,KAAOsC,EAAQtC,KAAK1hB,KAAKgkB,KACzB3iE,KAAO2iE,EAAQ3iE,KAAK2+C,KAAKgkB,GACtBx1E,KDyFF2zB,OAAS+hD,GAAcH,EAAgBtqE,EAAK4H,QAC5C62D,WAAa,CAChBtZ,UAAW,GACXX,kBAAmB,CACjB97B,OAAQ1oB,EAAK0oB,aAqDb+/C,EAAoB,OAUpBiC,EAAiBC,uBAPVtoC,EAAOrlE,UAAUxN,OAAQw8C,EAAO,IAAIhjB,MAAMq5C,GAAO2e,EAAO,EAAGA,EAAO3e,EAAM2e,MAC1EA,GAAQhkF,UAAUgkF,UAGlBhhD,EAAK6I,MAAM9a,MAAMiS,EAAK6I,MAAOmD,OAGchM,EAAMyoE,YACrDmC,OAASF,IAGT1hD,GAAG,UAAU,QACTy/C,GAAmBzgE,aACpBwL,GAAWA,EAAQmF,MAAQnF,EAAQmF,KAAKkyD,0BAG3Br3D,EAAS,CACtB+tC,UAAU,YAObtuC,OAASA,GAAOszC,KAAK,KAAM8jB,KAE3B13C,QAAUA,KAGVi4C,OAAO1lF,GAAO4lF,GAAYT,OAC1B/pC,eAAiBA,KACjB9pB,eAAiBA,KACjBG,WAAaA,GACX3W,WE9JLpyC,YAAmBw0B,EAAmByG,6CAE/BoqB,GAAO,CACVspD,qBAAAA,GACApB,gBAAAA,GACAH,qBAAAA,GACAH,qBAAAA,GACAgK,mBAAAA,GACAnK,gBAAAA,GACAR,mBAAAA,GACA+B,uBAAAA,GACAD,iBAAAA,IAAyB,CACzB33D,aAAa,iCAGS,IAAIhF,mBAElB,CACRtL,WAAO,EACPrD,OAAQ3iC,KAAKiyC,KAAKC,KAAK,UACvBpM,MAAO9lC,KAAKiyC,KAAKC,KAAK,SACtBnM,MAAO/lC,KAAKiyC,KAAKshD,WAAW,QAAQ,CAACI,QAAQ,CAAC,SAAS,QACvDzgD,aAAS,EACT8pE,UAAM,EACNx4E,QAAI,EACJC,QAAI,uBAGS,2BACC,yBACF,sBAEH,IAAIqJ,GAAiB,CAC9B0B,WAAY,EACZR,SAAU,EACV7C,OAAQA,GAAOb,UACflc,UAAW,EACXqgB,MAAO,EACPC,SAAU,EACVC,QAAS,GACTC,OAAO,kBAGA,IAAI3R,GAAgB,CAC3BK,gBAAiB,EACjBC,kBAAmBtb,EAAAA,EACnBmkB,kBAAmB,GACnB3I,sBAAuB,GACvBC,UAAW,EACXC,kBAAmB,EACnBC,kBAAmB,EACnBJ,UAAW,GACXM,YAAa,KACbD,YAAa,EACbE,cAAe,qBAMP,IAAIk+E,GAAoBj9G,uBAKtB,IAAIk9G,uBAKD,IAAI95G,EAAQ,IAAK,oBAMtB,EAAE,aAKP,oBAKQ,EAAE,oBAKH,IAAIkuC,sBAKH,IAAIA,yBAKQ,mBAab5d,QACLA,QAAY,IAAItzB,MAAM,4BACvBuwB,EAAU3wB,KAAKqzC,YAAY5f,IAAIC,UAC9B/C,MACS,IAAIwsF,GAAkBn9G,KAAM0zB,QACjC2f,YAAYttC,IAAI2tB,EAAM/C,IAExBA,iBAMC+C,QACHA,QAAY,IAAItzB,MAAM,+BACpBJ,KAAKu8B,WAAW7I,GAAM9hB,wBAOnB8hB,QACNJ,EAAUtzB,KAAKwzB,aAAaC,IAAIC,UAC/BJ,MACS,IAAI8pF,GAAep9G,KAAM0zB,QAC9BF,aAAaztB,IAAI2tB,EAAMJ,IAEzBA,6BAMY,CAAsBrzB,EAAS89B,WAC5Cj6B,EAAI,IAAI0tC,GAAexxC,KAAMC,EAAO89B,EAAQ/9B,KAAKiuC,wBAClDovE,gBAAgBxtF,KAAK/rB,GACnBA,wBAIe,IAAIV,iBACV,IAAIA,0BAoDK,yBArGpBpD,KAAKq0B,eAAgB,IAAIj0B,MAAM,kDAC7BJ,KAAKu8B,WAAWv8B,KAAKq0B,UAwDhCx0B,OAAOigC,EAAkBw9E,QAEhBx9E,UAAY5+B,KAAKE,IAAI0+B,EAAW9/B,KAAKu9G,mBACrCC,KAAOF,EAEPt9G,KAAKy9G,gBAAgB55F,OAAO7jB,KAAKu1B,iBAAoBv1B,KAAK09G,UAAU75F,OAAO7jB,KAAKw0B,YAAY8gB,oBACxF5S,UAAUs6E,KAAOh9G,KAAKiyC,KAAKC,KAAKlyC,KAAKu1B,eAAex1B,EAAEC,KAAKw0B,YAAY8gB,YAAYv1C,EAAE,WACrF2iC,UAAU8B,GAAKxkC,KAAKiyC,KAAKC,KAAKlyC,KAAKu1B,eAAez1B,EAAE,IAAI,WACxD4iC,UAAU+B,GAAKzkC,KAAKiyC,KAAKC,KAAKlyC,KAAKu1B,eAAex1B,EAAE,IAAI,WACxD49G,mBAAqB,SAEzBF,gBAAgB/yG,KAAK1K,KAAKu1B,qBAC1BmoF,UAAUhzG,KAAK1K,KAAKw0B,YAAY8gB,uBAE1B3kB,KAAW3wB,KAAKqzC,YAAYlc,SAAU,GACrCnH,aAAc,QAChBsD,EAAUtzB,KAAKwzB,aAAaC,IAAI9C,EAAQ+C,MAC1CJ,MACQqe,QAAQ3hB,aAAc,IACtB6L,YAAY7L,aAAc,IAC1BiD,OAAOjD,aAAc,IACrBsC,YAAYtC,aAAc,IAC1BmJ,iBAAiBnJ,aAAc,IAC/B2D,YAAY3D,aAAc,IAC1BiE,kBAAkBjE,aAAc,aAIrC4tF,KAAkB59G,KAAKq9G,kBACfrtF,aAAc,YAGtB4tF,KAAkB59G,KAAKq9G,kBACfp1G,cAGdoxB,YAAYpxB,mBAENqrB,KAAWtzB,KAAKwzB,aAAa2D,WAC5BxG,QAAQ1oB,SAOxBpI,cAAckyC,EAAuBG,MACV,iBAAZH,SAA6BA,KACpCA,KAAW/xC,KAAK29G,0BAA2B39G,KAAK29G,mBAAmB5rE,OAElE/xC,KAAKqyC,wBAAwB3U,IAAIqU,GAAU,OAEtCO,EADOtyC,KAAKiyC,KAAKM,MAAMR,GACXU,eACbJ,wBAAwBtsC,IAAIgsC,EAASO,SAExCI,EAAO1yC,KAAKqyC,wBAAwB5e,IAAIse,GACxCxD,EAASmE,EAAKjI,SAASzqC,KAAK0iC,WAC5BziC,EAA0B,iBAAXsuC,EAAsBA,EACvCvuC,KAAKiyC,KAAKkB,OAAOT,EAAKjI,SAASzqC,KAAK0iC,WAAYwP,eAC/CyrE,mBAAmB5rE,GAAW9xC,EAC5BA,GCnQf,MAAM49G,GAAiB,IAAIxvG,WAIvBxO,YACWi+G,EAA2B,EAC3BC,EAAyB,EACzB9wF,EAAkB,kGAIlBjtB,KAAK89G,kBAAoB17E,wBAGdlsB,QACb4nG,kBAAoB5nG,EAAIozB,+BAItBtpC,KAAK+9G,gBAAkB37E,sBAGdlsB,QACX6nG,gBAAkB7nG,EAAIozB,EAG/BzpC,eAAem+G,EAAmBC,EAAiBhxF,eAC1C6wF,kBAAoBE,OACpBD,gBAAkBE,OAClBhxF,SAAWA,EACTjtB,KAGXH,eAAem+G,EAAmBC,EAAiBhxF,eAC1CixF,kBAAoBF,OACpBG,gBAAkBF,OAClBhxF,SAAWA,EACTjtB,KAGXH,uBAAuBu+G,SACb/2F,EAAYw2F,GAAenzG,KAAK0zG,GAAW/7G,wBAC5C07G,gBAAkB78G,KAAKsV,KAAK6Q,EAAUtnB,GAAKqiC,OAC3C07E,kBAAoB58G,KAAKc,MAAMqlB,EAAUvnB,GAAIunB,EAAUrhB,GAAKo8B,OAC5DnV,SAAW,EACTjtB,KAGXH,sBAAsBu+G,eACbC,uBAAuBD,QACvBnxF,SAAWmxF,EAAU38G,SACnBzB,KAGXH,qBAAqB6uB,SACX4vF,EAAyBt+G,KAAK+9G,gBAC9BQ,GAAyBr9G,KAAKe,GAAKjC,KAAK89G,kBACxC/9G,EAAImB,KAAKgC,IAAIo7G,GACbx+G,EAAIoB,KAAK+B,IAAIq7G,GAA0Bp9G,KAAKgC,IAAIq7G,GAChDv4G,GAAM9E,KAAK+B,IAAIq7G,GAA0Bp9G,KAAK+B,IAAIs7G,UACjD7vF,EAAI3oB,IAAIjG,EAAGC,EAAGiG,GAAG3D,YAG5BxC,oBAAoB6uB,UACT1uB,KAAKw+G,qBAAqB9vF,GAAK5tB,eAAed,KAAKitB,uBCvBhEwxF,EACAC,EACAlmB,EACA7uB,EAAQ,qBAICrtC,KADEmiF,EAAQE,YAAcF,GACQG,kBAAmBtiF,EAAOA,EAAQA,EAAMuiF,mBAAoB,IAC9FviF,EAAsBwiF,4BACrBC,EAAoB,WAA0BA,kCAAmB,CAACt1D,SAAQ,OAC5Es1D,YAA6BC,KAAYD,EACvCL,EAAKjlE,KAAK++C,EAAMwmB,EAAUr1C,OACNrtC,EAAOoiF,EAAMlmB,EAAM7uB,GAGzC+0C,EAAKjlE,KAAK++C,EAAMl8D,EAAOqtC,OACHrtC,EAAOoiF,EAAMlmB,EAAM7uB,gBAKpBs1C,EAAWC,EAAiBC,EAAch/G,GAC/D,eAAgB8+G,IACZG,WAAWF,EAAW,IAAMC,EAAQ,IAAKh/G,GACtC,YAAa8+G,KAChBI,QAAQH,EAAUC,EAAOh/G,ICtElC,SAAS4J,4BAA4BpJ,EAAEqC,aAAK,IAASrC,EAAE,QAAQA,SAAI,IAAAqC,EAAW,CAACs8G,OAAM,GAAIt8G,OAAKuG,EAAO++B,QAAQ3nC,EAAEghB,qBAAqB,IAAI6pC,WAAW,oEAAoE7qD,EAAE,qBAAqBqC,EAAEs8G,YAAYl/G,MAAM,oFACpHO,WAAWqC,EAAE,EAAE6E,EAAE3G,KAAKC,IAAI,MAAMR,EAAEc,OAAO,GAAGT,EAAE,IAAIu+G,YAAY13G,GAAGqO,EAAE,GAAGvF,EAAE,IAAI,KAAK/P,EAAEoC,EAAErC,EAAEc,WAAWb,GAAG+P,GAAG9I,EAAE,EAAE,MAAGgoB,KAAKi2B,OAAO05D,aAAax/E,MAAM,KAAKh/B,EAAEy+G,SAAS,EAAE9uG,MAAS/P,SAASsV,EAAEokC,KAAK,MAAM35C,EAAE8+G,SAASz8G,KAAKA,EAAE,KAAc,IAAO,OAAjBrC,EAAEqC,SAAsB2N,KAAK/P,UAAU,MAAS,OAAK,KAAK0f,EAAS,GAAP3f,EAAEqC,OAAU2N,MAAQ,OAAK,EAAE2P,UAAU,MAAS,OAAK,GAAU,GAAP3f,EAAEqC,SAAYa,EAAS,GAAPlD,EAAEqC,OAAU2N,MAC/e,OAAK,GAAG2P,GAAG,EAAEzc,UAAU,MAAS,OAAK,WAA8C,MAAI,MAAxC,GAAPlD,EAAEqC,OAAmD,MAAlC,GAAPrC,EAAEqC,OAA6C,EAAxB,GAAPrC,EAAEqC,WAA8C,MAAMhC,EAAE2P,KAAK/P,IAAI,GAAG,KAAK,MAAMA,EAAE,MAAQ,KAAFA,KAAU+P,KAAK/P,OAAOmJ,EAAE21G,aAAa31G,EAAE41G,mBAAkB,MAAOp2G,EAAE,CAAC,QAAQ,OAAO,4BAA4B8vC,eAAet4C,EAAEsC,UAAU,WAAW,CAACpD,MAAM,YAAYoD,UAAUu8G,OAAO,SAASj/G,EAAEqC,cAAK,IAAAA,EAAW,CAAC68G,QAAO,GAAI78G,GAAO68G,aAAaz/G,MAAM,2DAA2D,UAAUyH,EAAElH,EAAEc,OAAOT,EAAE,EAAEkV,EAAEhV,KAAKE,IAAI,GACtfyG,OAAO,GAAG,GAAG8I,EAAE,IAAImvG,WAAW5pG,IAAI,GAAG,GAAGlT,EAAE6E,GAAG,KAAKjH,EAAED,EAAEi4D,WAAW51D,QAAQ,OAAOpC,GAAG,OAAOA,EAAE,IAAIoC,EAAE6E,EAAE,KAAKyY,EAAE3f,EAAEi4D,WAAW51D,GAAG,QAAW,aAAWA,EAAEpC,IAAM,SAAO,KAAO,QAAM,UAAU,OAAOA,GAAG,OAAOA,gBAAa,EAAE+P,EAAElP,YAAY,EAAoByU,GAAlBA,GAAG,EAAElT,EAAErC,EAAEc,OAAO,KAAQ,GAAG,GAAE6e,EAAE,IAAIw/F,WAAW5pG,IAAKnQ,IAAI4K,GAAGA,EAAE2P,GAAM,IAAO,gBAActf,KAAKJ,MAAM,IAAI,IAAO,gBAAcI,KAAKJ,IAAI,EAAE,GAAG,YAAY,IAAO,gBAAcI,KAAKJ,IAAI,GAAG,GAAG,IAAI+P,EAAE3P,KAAKJ,IAAI,EAAE,GAAG,YAAY,IAAO,yBAAcI,KAAKJ,IAAI,GAAG,EAAE,IAAI+P,EAAE3P,KAAKJ,IAAI,GAClf,GAAG,IAAI+P,EAAE3P,KAAKJ,IAAI,EAAE,GAAG,MAAoBI,KAAO,GAAFJ,EAAK,YAAY+P,EAAE0R,MAAM1R,EAAE0R,MAAM,EAAErhB,GAAG2P,EAAE8uG,SAAS,EAAEz+G,WAAWq4C,eAAezV,EAAEvgC,UAAU,WAAW,CAACpD,MAAM,iBAAiBo5C,eAAezV,EAAEvgC,UAAU,QAAQ,CAACpD,OAAM,WAAYo5C,eAAezV,EAAEvgC,UAAU,YAAY,CAACpD,OAAM,QAAS+J,EAAE7E,EAAE,mBAAoB46G,QAAQA,OAAOzxE,KAAKtkC,WAJmBrJ,UAAUo/G,OAAOzxE,KAAK3tC,EAAEq/G,OAAOr/G,EAAEs/G,WAAWt/G,EAAEu/G,YAAYz8G,SAAS,UAIlF,mBAAoB08G,MAAM,mBAAoBC,KAAK,mBAAoBA,IAAIC,6BAJ2B1/G,OAAOqC,EAAEo9G,IAAIC,gBAAgB,IAAIF,KAAK,CAACx/G,GAAG,CAACuiC,KAAK,sCACvdr7B,EAAE,IAAIy4G,wBAAiBC,KAAK,MAAMv9G,GAAE,KAAMw9G,OAAc34G,EAAE44G,mBAAmBz/G,UAAUmE,EAAExE,eAAe+/G,gBAAgB19G,QAG6SK,UAAUs9G,OAAO,SAAShgH,EAAEqC,cAAK,IAAAA,EAAW,CAAC68G,QAAO,GAAI78G,GAAO68G,aAAaz/G,MAAM,kEAC7fO,aAAam/G,WAAWn/G,EAAEA,EAAEq/G,kBAAkBY,YAAY,IAAId,WAAWn/G,EAAEq/G,QAAQ,IAAIF,WAAWn/G,GAAUqJ,EAAErJ,MAAM++G,YAAY3+G,IAAI4+G,YAAY/7E,EALjJ,CAKqJ,oBAAqBi9E,OAAOA,OAAmCC,aDqE9MjhH,wBACE,WACD,aACE,cACC,EACTA,KAAKkhH,eACEjrG,IAAMirG,EAAKjrG,SACXF,KAAOmrG,EAAKnrG,UACZorG,MAAQD,EAAKC,WACbC,OAASF,EAAKE,OACZjhH,eAIJH,wBACE,WACD,aACE,cACC,EACTA,KAAKkhH,eACEjrG,IAAMirG,EAAKjrG,SACXF,KAAOmrG,EAAKnrG,UACZC,MAAQkrG,EAAKlrG,WACbE,OAASgrG,EAAKhrG,OACZ/V,kBAKTy+G,EACAxrF,EAAiB,IAAIiuF,GACrBC,SAEMC,EAAM3C,EAAQ4C,cACdC,EAAQF,EAAIG,gBACZC,EAAOJ,EAAII,QAEb/C,IAAY6C,kBA4IgBG,EAAoBxuF,SAC9CsuF,EAAkBE,EAASF,gBAC3BC,EAAOC,EAASD,KAChBE,EAAuBC,iBAAiBJ,GACxCK,EAAYD,iBAAiBH,YAC5B1rG,IACL0rG,EAAKK,UAAY5gG,WAAWygG,EAAqBI,YACjD,EAAI7gG,WAAW2gG,EAAUE,YACzB,IACKlsG,KACL4rG,EAAKO,WAAa9gG,WAAWygG,EAAqBM,aAClD,EAAI/gG,WAAW2gG,EAAUI,aACzB,IACKhB,MAAQ9/G,KAAKE,IAClBF,KAAKE,IAAIogH,EAAKS,YAAaV,EAAgBU,aAC3C/gH,KAAKE,IAAIogH,EAAKU,YAAaX,EAAgBW,aAC3ChhH,KAAKE,IAAIogH,EAAKW,YAAaZ,EAAgBY,gBAEtClB,OAAS//G,KAAKE,IACnBF,KAAKE,IAAIogH,EAAKY,aAAcb,EAAgBa,cAC5ClhH,KAAKE,IAAIogH,EAAKa,aAAcd,EAAgBc,cAC5CnhH,KAAKE,IAAIogH,EAAKc,aAAcf,EAAgBe,eAEvCrvF,EAlKEsvF,CAAkBnB,EAAKnuF,MAG5BkuF,IAAqB1C,WAChB7oG,KAAO,IACPE,IAAM,IACNkrG,MAASvC,EAAwByD,mBACjCjB,OAAUxC,EAAwB4D,oBAIrCG,EAAc/D,EAAQ4C,cAAemB,gBAGvCC,EAFAC,EAAyBjE,EAGzBkE,EAAeD,EAAGC,aAClBC,EAAoBJ,EAAYb,iBAAiBe,EAAI,MACrD5sG,EAAM4sG,EAAGb,UACTjsG,EAAO8sG,EAAGX,eAGZY,GACAxB,GACAwB,EAAa1H,SAASkG,IACtBwB,IAAiBxB,OAEPA,EAAkBluF,EAAQ0vF,MAC5B1vF,EAAOrd,QACRqd,EAAOnd,QAIR4sG,EAAGG,gBACTH,IAAOlB,GACPkB,IAAOpB,GACPoB,IAAOvB,GAE4B,UAA/ByB,EAAkB9tG,YAIN0tG,EAAYb,iBAAiBe,EAAI,SAC1CA,EAAGI,aACFJ,EAAGK,WAEPL,IAAOC,OACFD,EAAGb,aACFa,EAAGX,cACJ9gG,WAAWwhG,EAAcO,iBAAmB,KAC3C/hG,WAAWwhG,EAAcQ,kBAAoB,IACtCP,EAAGC,gBAGAF,QASa,UAA/BG,EAAkB9tG,cACb5T,KAAKE,IAAIkgH,EAAMwB,UAAWtB,EAAKsB,cAC9B5hH,KAAKE,IAAIkgH,EAAMyB,WAAYvB,EAAKuB,eAmBnCntG,KAAOA,IACPE,IAAMA,IACNkrG,MAASvC,EAAwByD,cACjCjB,OAAUxC,EAAwB4D,aAClCpvF,cAGiBwrF,EAAkByE,MACI,OAAzCzE,EAAwBkE,2BACpB/sG,KAAOstG,EAAOrtG,MAAQqtG,EAAOptG,IAAMotG,EAAOntG,OAAS,OAGxDgL,EAAQ4gG,iBAAiBlD,KACtB7oG,KAAOqL,WAAWF,EAAMihG,aAAe,IACvCnsG,MAAQoL,WAAWF,EAAMoiG,cAAgB,IACzCrtG,IAAMmL,WAAWF,EAAM+gG,YAAc,IACrC/rG,OAASkL,WAAWF,EAAMqiG,eAAiB,EAgCpD,MAAMC,GAAiBC,SAASC,cAAc,mBAmC1BC,SACZ5I,EAAU0I,SAASC,cAAc,SAC/BE,UAAYD,QACdd,EAAK9H,EAAQgE,2BACX8E,YAAYhB,GACbA,EAvCTW,GAAevyC,GAAK,WACpBuyC,GAAetiG,MAAMjM,SAAW,QAChCuuG,GAAetiG,MAAMigG,MAAQ,QAC7BqC,GAAetiG,MAAMkgG,OAAS,QAC9BoC,GAAetiG,MAAM4iG,WAAa,SAClCN,GAAetiG,MAAM6iG,cAAgB,kBEnO5B,SAASC,SAEZC,EAAQxzF,OAAO,SACfyzF,EAAQzzF,OAAO,oBAELyrC,EAAOtX,GACA,iBAAVsX,MAECA,IACF,QAGLsE,KAAO,OACPtE,MAAQA,OACRioD,OAAShkH,KAAKikH,YAAS,OACvBC,QAAU,IAAI5yE,IAEfmT,SACGzmB,OAAOymB,GACRsX,EAAQ,SACLA,MAAQ/7D,KAAKqgE,kBAOT18B,EAAK1jC,QACb0jC,IAAMA,OACN1jC,MAAQA,OACR6jH,QAAS,OACTC,QAAS,aAmKOI,QAAoBhpE,MAAQgpE,aAa9BA,QAAoBhpE,MAAQgpE,aAY1BA,QAAoBhpE,MAAQgpE,IAlM3CC,OAASA,IAUV/gH,UAAUghH,iBAAmB,SAASlpE,GACvCA,IAAUn7C,KAAKikH,SAQf9oE,EAAM2oE,KACJ3oE,IAAUn7C,KAAKgkH,cACZA,OAAS7oE,EAAM2oE,MAEhBA,GAAOC,GAAS5oE,EAAM4oE,IAE1B5oE,EAAM4oE,OACFA,GAAOD,GAAS3oE,EAAM2oE,MAExBA,QAAS,IACTC,GAAS/jH,KAAKikH,OAChBjkH,KAAKikH,cACFA,OAAOH,GAAS3oE,QAElB8oE,OAAS9oE,MAGT93C,UAAU26B,OAAS,SAASymB,OAC7BtJ,EAAO4gB,EAAQ/7D,KAAK+7D,OAASt0D,OAAO68G,eACnCJ,QAAQhkF,YACTqkF,EAAK9/D,EAAQn0B,OAAOk0F,oBACfC,EAAMF,EAAGl6D,QAASo6D,EAAIC,KAAMD,EAAMF,EAAGl6D,OAAQ,KAChDrpD,EAAI,IAAI2jH,EAAMF,EAAIxkH,MAAM,GAAIwkH,EAAIxkH,MAAM,YACrCikH,QAAQn+G,IAAI/E,EAAE2iC,IAAK3iC,GACnBm6C,KAGG2oE,GAAS9iH,IACb+iH,GAAS5oE,QAHN6oE,OAAShjH,IAKRA,EACO,GAAX+6D,UACI,IAAI37D,MAAM,iBAGf6jH,OAAS9oE,OACTklB,KAAOrgE,KAAKkkH,QAAQ7jD,QAGpBh9D,UAAUowB,IAAM,SAASkQ,OAE1BwX,EAAQn7C,KAAKkkH,QAAQzwF,IAAIkQ,MACxBwX,cAEAkpE,iBAAiBlpE,GACfA,EAAMl7C,SAGRoD,UAAU0C,IAAM,SAAS49B,EAAK1jC,OAC/Bk7C,EAAQn7C,KAAKkkH,QAAQzwF,IAAIkQ,UAEzBwX,KAEIl7C,MAAQA,OACTokH,iBAAiBlpE,GACfn7C,YAIJkkH,QAAQn+G,IAAI49B,EAAMwX,EAAQ,IAAIwpE,EAAMhhF,EAAK1jC,IAE1CD,KAAKikH,aAEFA,OAAOH,GAAS3oE,IACf4oE,GAAS/jH,KAAKikH,aAGfD,OAAS7oE,OAIX8oE,OAAS9oE,IACZn7C,KAAKqgE,KACHrgE,KAAKqgE,KAAOrgE,KAAK+7D,YAEdvrB,QAGAxwC,SAGFqD,UAAUmtC,MAAQ,eAEnB2K,EAAQn7C,KAAKgkH,UACb7oE,SACEn7C,KAAKgkH,OAAOF,SAETE,OAAShkH,KAAKgkH,OAAOF,QACrBE,OAAOD,QAAS,SAGhBC,YAAS,OACTC,YAAS,KAIVH,GAAS3oE,EAAM4oE,QAAS,OACzBG,QAAQ7yE,OAAO8J,EAAMxX,OACxB3jC,KAAKqgE,KACA,CAACllB,EAAMxX,IAAKwX,EAAMl7C,UAQtBoD,UAAU+hD,KAAO,SAASzhB,OAC3B3iC,EAAIhB,KAAKkkH,QAAQzwF,IAAIkQ,UAClB3iC,EAAIA,EAAEf,WAAQ,KAGhBoD,UAAUq6B,IAAM,SAASiG,UACvB3jC,KAAKkkH,QAAQxmF,IAAIiG,MAGnBtgC,iBAAsB,SAASsgC,OAChCwX,EAAQn7C,KAAKkkH,QAAQzwF,IAAIkQ,MACxBwX,cACA+oE,QAAQ7yE,OAAO8J,EAAMxX,KACtBwX,EAAM2oE,IAAU3oE,EAAM4oE,MAElBA,GAAOD,GAAS3oE,EAAM2oE,KACtBA,GAAOC,GAAS5oE,EAAM4oE,IACnB5oE,EAAM2oE,MAETA,GAAOC,QAAS,OAEjBC,OAAS7oE,EAAM2oE,IACX3oE,EAAM4oE,MAETA,GAAOD,QAAS,OAEjBG,OAAS9oE,EAAM4oE,SAEfC,OAAShkH,KAAKikH,YAAS,OAGzB5jD,OACEllB,EAAMl7C,SAGRoD,UAAU68B,MAAQ,gBAElB8jF,OAAShkH,KAAKikH,YAAS,OACvB5jD,KAAO,OACP6jD,QAAQhkF,WAKD78B,UAAUitB,OAAOk0F,UAAY,kBAAoBxkH,QACjDqD,UAAUgnD,KAAO,eACzBu6D,EAAM5kH,KAAKm7C,aACXypE,QACGzpE,MAAQypE,EAAId,GACV,CAAEY,MAAM,EAAOzkH,MAAO,CAAC2kH,EAAIjhF,IAAKihF,EAAI3kH,SAEpC,CAAEykH,MAAM,EAAMzkH,WAAO,MAMpBoD,UAAUitB,OAAOk0F,UAAY,kBAAoBxkH,QACjDqD,UAAUgnD,KAAO,eACvBu6D,EAAM5kH,KAAKm7C,aACXypE,QACGzpE,MAAQypE,EAAId,GACV,CAAEY,MAAM,EAAOzkH,MAAO2kH,EAAIjhF,MAE1B,CAAE+gF,MAAM,EAAMzkH,WAAO,MAKlBoD,UAAUitB,OAAOk0F,UAAY,kBAAoBxkH,QACjDqD,UAAUgnD,KAAO,eACzBu6D,EAAM5kH,KAAKm7C,aACXypE,QACGzpE,MAAQypE,EAAId,GACV,CAAEY,MAAM,EAAOzkH,MAAO2kH,EAAI3kH,QAE1B,CAAEykH,MAAM,EAAMzkH,WAAO,MAKzBoD,UAAUq2C,KAAO,kBACf,IAAImrE,EAAY7kH,KAAKgkH,WAGvB3gH,UAAU8zB,OAAS,kBACjB,IAAI2tF,EAAc9kH,KAAKgkH,WAGzB3gH,UAAUohD,QAAU,kBAClBzkD,QAGFqD,UAAUitB,OAAOk0F,UAAY,kBAC3B,IAAIO,EAAc/kH,KAAKgkH,WAGzB3gH,UAAU42C,QAAU,SAAS+qE,EAAKC,GAChB,iBAAZA,MACCjlH,UAERm7C,EAAQn7C,KAAKgkH,YACV7oE,KACD1B,KAAKwrE,EAAS9pE,EAAMl7C,MAAOk7C,EAAMxX,IAAK3jC,QAClCm7C,EAAM2oE,MAKXzgH,UAAU4pD,OAAS,mBACpBvsD,EAAI,IAAIu6B,MAAMj7B,KAAKqgE,MAAO78D,EAAI,EAAG23C,EAAQn7C,KAAKgkH,OAC3C7oE,KACH33C,KAAO,CAAEmgC,IAAKwX,EAAMxX,IAAK1jC,MAAOk7C,EAAMl7C,SAChCk7C,EAAM2oE,UAETpjH,KAIF2C,UAAUI,SAAW,mBACtB/C,EAAI,GAAIy6C,EAAQn7C,KAAKgkH,OAClB7oE,MACA2K,OAAO3K,EAAMxX,KAAK,IAAIwX,EAAMl7C,SACzBk7C,EAAM2oE,SAEP,cAGFpjH,wCCpR2B0gB,EAAanhB,SACtC,IAAMmhB,EAAO,KAjBxB,SAAkCnhB,UACvBA,EACFuyC,QAAQ,KAAM,SACdA,QAAQ,KAAM,QACdA,QAAQ,KAAM,QACdA,QAAQ,KAAM,UACdA,QAAQ,KAAM,UAWQ0yE,CAAwBjlH,GAAS,IA0BhEklH,kBAAiCzxF,EAAc8Z,OACvC43E,EAAS,aACFvhH,KAAK6vB,EAAK2xF,aAAmBx1F,KAAKy1F,GAAgBzhH,EAAG2pC,WACzD+3E,QAAQC,IAAIJ,GAAQK,SAAeC,EAAOprE,KAAK,MAgD1D6qE,kBAA+BzxF,EAAW8Z,eAChCm4E,EAAW,WAAQC,0BAAWlyF,MACZ,iBAAbiyF,SACAA,KACkB,cAAlBjyF,EAAKmyF,UACM,uBAAlBnyF,EAAKmyF,gBACEC,GAAkBpyF,EAAiB8Z,MAClC9Z,EAAiBqyF,eApDjCZ,eAA4BzxF,EAAc8Z,SAChCu4E,EA9BV,SAAoBryF,OACZqyF,EAAUryF,EAAKqyF,cAEO,iCAAtBryF,EAAKsyF,iBACKD,EAAQpkG,eAEfokG,EAwBSE,CAAWvyF,OACvB0xF,EAAS,IAAMW,KAtBvB,SAA4BryF,EAAcwyF,UACbxyF,EAAKyyF,aAAa,cAMnCzyF,EAAKsyF,eAAiBtyF,EAAKmvF,cAAemD,aAGvC,GAFA,WAAatyF,EAAKsyF,aAAe,IAelCI,CAAmB1yF,EAAwB,IAAlB8Z,EAAQsI,aAErCuwE,EAAeP,GAAkBpyF,EAAM8Z,GAEvC84E,EAAoB,QAAZP,YAEHQ,KAAQ7yF,EAAK8yF,WAChBF,GAAuB,QAAdC,EAAK/rE,QACJisE,GAAmBF,EAAK/rE,WAAYksE,GAAYC,WAAWJ,EAAKtmH,WAEhEwmH,GAAmBF,EAAK/rE,KAAM+rE,EAAKtmH,cAIjDyzB,EAAK2xF,WAAW5jH,OAAS,KACjBq0C,WACE,aACMuwE,KACN,KAAON,EAAU,MACnBjwE,YAEE,KAEPsvE,EA2BIwB,CAAalzF,EAAiB8Z,MACZ,UAAlB9Z,EAAKmyF,gBAzBpB,SAAuBnyF,UACRA,EAAKmzF,WAAa,IApExBr0E,QAAQ,KAAM,SACdA,QAAQ,KAAM,QACdA,QAAQ,KAAM,QA2FRs0E,CAAcpzF,MACI,aAAlBA,EAAKmyF,kBAEa,mBAAlBnyF,EAAKmyF,gBAjBpB,SAAwBnyF,SACb,YAAcA,EAAKmzF,UAAY,MAiB3BE,CAAerzF,SAEnB,qBAQ6BA,EAAckyF,gBACbN,GAAgB5xF,EAAM,CAACoiB,MAAO,EAAG8vE,SAAAA,KA1HvDpzE,QAAQ,gCAAiC,kBCN3D,SAAU0oB,EAAMzV,OAETuhE,EAAU,IAcT,SAASA,KAEVC,YAAa,IAiBbC,aAAe,KACfC,UAAY,OAEhB/8B,EAAI,IAAI5wB,YAAY,CACpB,WAAY,WAAY,WAAY,WAAY,UAChD,WAAY,WAAY,WAAY,WAAY,UAChD,UAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,UAAY,UAChD,UAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,UAAY,UAAY,UAAY,UAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,UAAY,UAAY,UAChD,UAAY,UAAY,UAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,wBAEpBj5D,EAAGD,EAAG0J,EAAGo9G,EAAKz/G,WAC1BhH,EAAGC,EAAGoC,EAAG2N,EAAG3P,EAAG6G,EAAGyY,EAAGpK,EAAG+X,EAAGzqB,EAAGkjB,EAAG8B,EAAI4zC,EAClCz0D,GAAO,IAAI,OACVrH,EAAE,KACFA,EAAE,KACFA,EAAE,KACFA,EAAE,KACFA,EAAE,KACFA,EAAE,KACFA,EAAE,KACFA,EAAE,GACDkD,EAAI,EAAGA,EAAI,GAAIA,MACZ4jH,EAAU,EAAJ5jH,IACRA,IAAe,MAALkjB,KAAc,IAAmB,MAATA,EAAI,KAAc,IACrC,MAATA,EAAI,KAAc,EAAiB,IAAX1c,EAAE0c,EAAI,OAErCljB,EAAI,GAAIA,EAAI,GAAIA,UACbjD,EAAEiD,EAAI,MACE,GAAKyqB,GAAM,SAAmB,GAAKA,GAAM,IAAaA,IAAM,SACpE1tB,EAAEiD,EAAI,OACE,EAAIyqB,GAAM,SAAkB,GAAKA,GAAM,IAAaA,IAAM,IACpEzqB,MAAWjD,EAAEiD,EAAI,GAAK,MAAWjD,EAAEiD,EAAI,IAAM,OAE9CA,EAAI,EAAGA,EAAI,GAAIA,aACA,EAAIxC,GAAM,SAAkB,GAAKA,GAAM,SAC5C,GAAKA,GAAM,OAAmB6G,GAAO7G,EAAIsf,GAAO,SAC7C9c,GAAKjD,EAAEiD,GAAM,GAAM,GAAM,UACzB,EAAI7C,GAAM,SAAkB,GAAKA,GAAM,SAC1C,GAAKA,GAAM,QAAmBC,EAAMD,EAAIqC,EAAMpC,EAAIoC,GAAO,IAChEsd,IACAzY,IACA7G,IACC2P,EAAI6X,EAAM,IACXxlB,IACApC,IACAD,IACC6nB,EAAK4zC,EAAM,IAElB,IAAMz7D,IACN,IAAMC,IACN,IAAMoC,IACN,IAAM2N,IACN,IAAM3P,IACN,IAAM6G,IACN,IAAMyY,IACN,IAAMpK,KACD,MACA,UAEJkxG,MAGPC,EAAsB,6BAEbH,aAAeF,EAAQE,kBACvBC,UAAYH,EAAQG,eAEpBzrF,MAAQ,IAAI4rF,WAAW,QACvBxwD,KAAO,IAAIwwD,WAAW,SACtBtH,OAAS,IAAIF,WAAW,UACxByH,aAAe,OACfC,YAAc,OACdC,UAAW,OACXv5E,iBAIJ7qC,UAAU6qC,MAAQ,uBACdxS,MAAM,GAAK,gBACXA,MAAM,GAAK,gBACXA,MAAM,GAAK,gBACXA,MAAM,GAAK,gBACXA,MAAM,GAAK,gBACXA,MAAM,GAAK,gBACXA,MAAM,GAAK,eACXA,MAAM,GAAK,gBACX6rF,aAAe,OACfC,YAAc,OACdC,UAAW,EACTznH,QAGNqD,UAAUqkH,MAAQ,mBACVlkH,EAAI,EAAGA,EAAIxD,KAAKggH,OAAOv+G,OAAQ+B,SAC/Bw8G,OAAOx8G,GAAK,MAEZA,EAAI,EAAGA,EAAIxD,KAAK82D,KAAKr1D,OAAQ+B,SAC7BszD,KAAKtzD,GAAK,OAEd0qC,WASJ7qC,UAAU4E,OAAS,SAAU82C,EAAM4oE,WACjB,IAAfA,MAAsC5oE,EAAKt9C,QAC3CzB,KAAKynH,eACC,IAAIrnH,MAAM,uDAEhBwnH,EAAU,UACTJ,aAAeG,EAChB3nH,KAAKunH,aAAe,EAAG,MAChBvnH,KAAKunH,aAAe,IAAMI,EAAa,QACrC3H,OAAOhgH,KAAKunH,gBAAkBxoE,EAAK6oE,SAGlB,KAAtB5nH,KAAKunH,iBACMvnH,KAAK82D,KAAM92D,KAAK07B,MAAO17B,KAAKggH,OAAQ,EAAG,SAC7CuH,aAAe,OAGxBI,GAAc,OACJE,EAAW7nH,KAAK82D,KAAM92D,KAAK07B,MAAOqjB,EAAM6oE,EAASD,MAC7C,IAEXA,EAAa,QACX3H,OAAOhgH,KAAKunH,gBAAkBxoE,EAAK6oE,gBAGrC5nH,QAKNqD,UAAUykH,OAAS,SAAUp5F,OACzB1uB,KAAKynH,SAAU,KACZD,EAAcxnH,KAAKwnH,YACnB5xG,EAAO5V,KAAKunH,aACZQ,EAAYP,EAAc,UAAc,EACxCQ,EAAWR,GAAe,EAC1BS,EAAaT,EAAc,GAAK,GAAM,GAAK,SAC1CxH,OAAOpqG,GAAQ,YACXpS,EAAIoS,EAAO,EAAGpS,EAAIykH,EAAY,EAAGzkH,SACjCw8G,OAAOx8G,GAAK,OAEhBw8G,OAAOiI,EAAY,GAAMF,IAAa,GAAM,SAC5C/H,OAAOiI,EAAY,GAAMF,IAAa,GAAM,SAC5C/H,OAAOiI,EAAY,GAAMF,IAAa,EAAK,SAC3C/H,OAAOiI,EAAY,GAAMF,IAAa,EAAK,SAC3C/H,OAAOiI,EAAY,GAAMD,IAAa,GAAM,SAC5ChI,OAAOiI,EAAY,GAAMD,IAAa,GAAM,SAC5ChI,OAAOiI,EAAY,GAAMD,IAAa,EAAK,SAC3ChI,OAAOiI,EAAY,GAAMD,IAAa,EAAK,MACrChoH,KAAK82D,KAAM92D,KAAK07B,MAAO17B,KAAKggH,OAAQ,EAAGiI,QAC7CR,UAAW,MAEXjkH,EAAI,EAAGA,EAAI,EAAGA,MACX,EAAJA,EAAQ,GAAMxD,KAAK07B,MAAMl4B,KAAO,GAAM,MAClC,EAAJA,EAAQ,GAAMxD,KAAK07B,MAAMl4B,KAAO,GAAM,MAClC,EAAJA,EAAQ,GAAMxD,KAAK07B,MAAMl4B,KAAO,EAAK,MACjC,EAAJA,EAAQ,GAAMxD,KAAK07B,MAAMl4B,KAAO,EAAK,WAEtCxD,QAGNqD,UAAU6kH,OAAS,eAChBx5F,EAAM,IAAIoxF,WAAW9/G,KAAKknH,0BACzBY,OAAOp5F,GACLA,KAGNrrB,UAAU8kH,WAAa,SAAUz5F,WACzBlrB,EAAI,EAAGA,EAAIxD,KAAK07B,MAAMj6B,OAAQ+B,MAC/BA,GAAKxD,KAAK07B,MAAMl4B,MAIvBH,UAAU+kH,cAAgB,SAAU95E,EAAMk5E,WAClChkH,EAAI,EAAGA,EAAIxD,KAAK07B,MAAMj6B,OAAQ+B,SAC9Bk4B,MAAMl4B,GAAK8qC,EAAK9qC,QAEpBgkH,YAAcA,OACdC,UAAW,OACXF,aAAe,GAEjBc,EA/He,KAiIlBhB,KAAOA,MAEXiB,EAAsB,sBACR3kF,QACL1J,MAAQ,IAAIotF,OACZl9D,MAAQ,IAAIk9D,OACZF,UAAYnnH,KAAKi6B,MAAMktF,eACvBD,aAAelnH,KAAKi6B,MAAMitF,iBAC3BqB,EAAM,IAAIzI,WAAW9/G,KAAKmnH,cAC1BxjF,EAAIliC,OAASzB,KAAKmnH,WACjB,IAAIE,GAAQp/G,OAAO07B,GAAKmkF,OAAOS,GAAKb,qBAG5BlkH,EAAI,EAAGA,EAAImgC,EAAIliC,OAAQ+B,MACxBA,GAAKmgC,EAAIngC,OAGZA,EAAI,EAAGA,EAAI+kH,EAAI9mH,OAAQ+B,MACxBA,IAAM,QAETy2B,MAAMhyB,OAAOsgH,OACT/kH,EAAI,EAAGA,EAAI+kH,EAAI9mH,OAAQ+B,MACxBA,IAAM,SAET2mD,MAAMliD,OAAOsgH,QACbC,OAAS,IAAIhvD,YAAY,QACzBivD,OAAS,IAAIjvD,YAAY,QACzBv/B,MAAMkuF,WAAWnoH,KAAKwoH,aACtBr+D,MAAMg+D,WAAWnoH,KAAKyoH,YAClBjlH,EAAI,EAAGA,EAAI+kH,EAAI9mH,OAAQ+B,MACxBA,GAAK,WAMZH,UAAU6qC,MAAQ,uBACdjU,MAAMmuF,cAAcpoH,KAAKwoH,OAAQxoH,KAAKi6B,MAAMktF,gBAC5Ch9D,MAAMi+D,cAAcpoH,KAAKyoH,OAAQzoH,KAAKmqD,MAAMg9D,WAC1CnnH,QAGNqD,UAAUqkH,MAAQ,mBACVlkH,EAAI,EAAGA,EAAIxD,KAAKwoH,OAAO/mH,OAAQ+B,SAC/BilH,OAAOjlH,GAAKxD,KAAKwoH,OAAOhlH,GAAK,OAEjCy2B,MAAMytF,aACNv9D,MAAMu9D,WAGVrkH,UAAU4E,OAAS,SAAU82C,eACzB9kB,MAAMhyB,OAAO82C,GACX/+C,QAGNqD,UAAUykH,OAAS,SAAUp5F,UAC1B1uB,KAAKmqD,MAAMs9D,cACNt9D,MAAM29D,OAAOp5F,SAGbuL,MAAM6tF,OAAOp5F,QACby7B,MAAMliD,OAAOymB,EAAK1uB,KAAKknH,cAAcY,OAAOp5F,IAE9C1uB,QAGNqD,UAAU6kH,OAAS,eAChBx5F,EAAM,IAAIoxF,WAAW9/G,KAAKknH,0BACzBY,OAAOp5F,GACLA,GAEJg6F,EArEe,cAyEZ3pE,OACN7oC,GAAK,IAAImxG,GAAQp/G,OAAO82C,GACxBmpE,EAAShyG,EAAEgyG,kBACbR,QACKQ,aAMGvkF,EAAKob,OACX7oC,EAAK,IAAIoyG,EAAK3kF,GAAM17B,OAAO82C,GAC3BmpE,EAAShyG,EAAEgyG,kBACbR,QACKQ,aAKSlI,EAAQ2I,EAAMC,EAAMC,OAEhCl0D,EAAMk0D,EAAQ,MACN,IAARl0D,QACM,IAAIv0D,MAAM,8BAGf8tC,QAGDymB,EAAM,KACD1sD,OAAO+3G,GAGZ4I,KACK3gH,OAAO2gH,KAGX3gH,OAAO4gH,KAEPf,OAAO9H,KAEJ,OA3CJsI,KAAOA,IAQP72C,KAAOA,YAEMA,IAQbq3C,KAAOA,MA2BXC,EAAW,IAAIjJ,WAAWkH,EAAQE,yBACxBvjF,EAAKqlF,EAAMJ,EAAMnnH,QACd,IAATunH,MAA0BD,QACf,IAAXtnH,MAA8B,YAC9BonH,EAAU,IAAI/I,WAAW,CAAC,IAE1BmJ,EAAMH,EAAKE,EAAMrlF,GAGjBulF,EAAQ,IAAIZ,EAAKW,GAEjBjJ,EAAS,IAAIF,WAAWoJ,EAAMhC,cAC9BiC,EAASnJ,EAAOv+G,OAChBitB,EAAM,IAAIoxF,WAAWr+G,GAChB+B,EAAI,EAAGA,EAAI/B,EAAQ+B,IACpB2lH,IAAWnJ,EAAOv+G,WACPu+G,EAAQkJ,EAAON,EAAMC,KACvB,KAETrlH,GAAKw8G,EAAOmJ,cAEdzB,UACC0B,KAAK,KACJA,KAAK,GACN16F,aASK26F,EAAUL,EAAMzoF,EAAY+oF,WACpCC,EAAM,IAAIjB,EAAKe,GACf1hH,EAAM4hH,EAAIrC,aACVsC,EAAM,IAAI1J,WAAW,GACrBh8G,EAAI,IAAIg8G,WAAWn4G,GACnBsmB,EAAI,IAAI6xF,WAAWn4G,GACnB8hH,EAAK,IAAI3J,WAAWwJ,GACf9lH,EAAI,EAAGA,EAAImE,EAAM2hH,EAAO9lH,IAAK,KAC9BR,EAAIQ,EAAI,IACR,GAAMR,IAAM,GAAM,MAClB,GAAMA,IAAM,GAAM,MAClB,GAAMA,IAAM,EAAK,MACjB,GAAMA,IAAM,EAAK,MACjBkrC,UACAjmC,OAAO+gH,KACP/gH,OAAOuhH,KACP1B,OAAO75F,WACFvH,EAAI,EAAGA,EAAI/e,EAAK+e,MACnBA,GAAKuH,EAAEvH,OAEJA,EAAI,EAAGA,GAAK6Z,EAAY7Z,IAAK,GAC9BwnB,UACAjmC,OAAOgmB,GAAG65F,OAAO75F,WACZ2V,EAAI,EAAGA,EAAIj8B,EAAKi8B,MACnBA,IAAM3V,EAAE2V,OAGTld,EAAI,EAAGA,EAAI/e,GAAOnE,EAAImE,EAAM+e,EAAI4iG,EAAO5iG,MACzCljB,EAAImE,EAAM+e,GAAK5iB,EAAE4iB,OAGnBljB,EAAI,EAAGA,EAAImE,EAAKnE,MACnBA,GAAKyqB,EAAEzqB,GAAK,MAETA,EAAI,EAAGA,EAAI,EAAGA,MACfA,GAAK,WAETkkH,QACG+B,IA7CHC,KAAOA,IA+CPC,OAASA,GAtaL3C,OACJ4C,EAAS5C,kBACJpjF,KAAKojF,IACHpjF,GAAKojF,EAAQpjF,aAIHgmF,EAVxB,QC4BD,MAAMC,GAAU,IAAInK,qBAalB7/G,YAAmB4+G,EAAyBqL,0DAY7B,qBACA,oBAEA,CACbC,OAAO,EACPC,QAAQ,EACRC,OAAO,EACPr4G,QAAQ,iBAGmB,IAAIs4G,kBAEhB,IAAIhJ,gBACH,IAAIiJ,eACL,IAAIA,eACJ,IAAIA,oBAGP,2BAG4B,IAAI74E,sBACV,IAAIA,sBACL,IAAIA,4BAEV,iBACV,qBACI,4BACO,gBACZ,uBACOgyE,SAASC,cAAc,qCA2IvB7vF,OACnB1zB,KAAKy+G,UAAY/qF,eACf02F,EAAU12F,EACV22F,EAAQ3D,GAAY4D,OAAO72F,IAAI22F,MACjCC,EAAO,OACHp3F,EAASo3F,EAAMp3F,WACjBuzF,EAAa,SACX+D,EAAa,aAAat3F,EAAO+tF,MAAM,kBAAkB/tF,EAAOguF,OAAO,iBAAiBhuF,EAAO+tF,sBAAsB/tF,EAAOguF,iCAC9HuJ,GAAa,YACNjE,KAAQ8D,EAAM5L,QAAQ+H,WACb,QAAdD,EAAK/rE,OACQ,SAAb+rE,EAAK/rE,SACOisE,GAAmBF,EAAK/rE,KAAM+rE,EAAKtmH,MAAQ,IAAMsqH,MAClD,MAEC9D,GAAmBF,EAAK/rE,KAAM+rE,EAAKtmH,QAGhDuqH,OACW/D,GAAmB,QAAS8D,UAEtCE,EAAML,EAAQrE,QAAQpkG,oBACrB,IAAI8oG,KAAOjE,OAAgBiE,UA1MxBH,OAAOvkH,IAAI04G,EAASz+G,WAC3B8wE,GAAK2tC,EAAQiM,aAAahE,GAAYiE,wBAA2BjE,GAAYkE,uBAC1EC,aAAanE,GAAYiE,sBAAuB3qH,KAAK8wE,MACrD+5C,aAAanE,GAAYoE,gBAAgB,SAC5CC,YAAcrE,GAAYsE,gBAAgBhrH,KAAKy+G,SAAS,QACxDqL,cAAc,eAAgB,CAAEl4G,OAAQ6sG,OACpCwM,eAAelvD,MAAQ2qD,GAAY4D,OAAOjqD,KAAO6qD,GAASC,wBAC9DC,eAAepK,MAAQ,QACvBoK,eAAenK,OAAS,GAwC/BphH,kBAAkBwrH,SACVp4F,EAASjzB,KAAKsrH,aAAa73F,IAAI43F,GAC/BnI,EAASljH,KAAKurH,aAAa93F,IAAI43F,MACjCA,GAAWrrH,KAAKwrH,uBACdv4F,GAAUiwF,SACPuI,eAAiBx4F,OACjBy4F,eAAiBxI,IAEjB,EACF,OACCyI,EAAqBT,GAASU,cAAcn4F,IAAIzzB,KAAKwrH,iBACrDK,EAAaX,GAASU,cAAcn4F,IAAI43F,GACxCS,EAASZ,GAASD,eAAex3F,IAAIo4F,MACvCC,GAAU74F,GAAUiwF,cACjBsI,gBAAkBH,OAClBU,eAAiBD,OACjBL,eAAiBx4F,OACjBy4F,eAAiBxI,EAClByI,IAAuBE,GAAc7rH,KAAK8pH,oBAAoBA,cAAc,eAAgB,CAAEl4G,OAAQ5R,KAAKy+G,WACxG,SAGJ,6BAIAz+G,KAAK+rH,0CAIL/rH,KAAKyrH,0CAILzrH,KAAK0rH,+BAIR51E,EAAQ,EACRu0E,EAAQrqH,UACLqqH,EAAMU,eACHV,EAAMU,uBAGTj1E,sBAIHk2E,EAAYhsH,UACTgsH,EAAUjB,eAAyBiB,EAAUjB,mBAC7CiB,EAGTnsH,qBACE6+G,SAEMqM,EAAc/qH,KAAK+qH,YACrBA,MACUkB,qBAAqBvN,KAC5BqM,IAITlrH,eAAe6+G,KACR1+G,WACAksH,oBAAoBxN,GAG3B7+G,oBACE6+G,aAEWpiF,KAASt8B,KAAKmsH,cACjBC,eAAe1N,GAIzB7+G,UACOG,KAAKwrH,qBACExrH,KAAKy+G,QAASz+G,KAAKizB,OAAQjzB,KAAK+qH,aAAe/qH,KAAK+qH,YAAYtM,YAChEz+G,KAAKy+G,QAASz+G,KAAKkjH,aACxBuI,eAAiBzrH,KAAKizB,YACtBy4F,eAAiB1rH,KAAKkjH,aAExBmJ,cAAe,OACfC,iCACOC,oBAAoBvsH,MAG1BH,oCACA4+G,EAAUz+G,KAAKy+G,QACf0N,EAAcnsH,KAAKmsH,YACnBK,EAAiBL,EAAY9pG,QAE7BoqG,EAAsBzsH,KAAK+qH,iBAC5BA,YAAcrE,GAAYsE,gBAAgBhrH,KAAKy+G,SAAS,GACzDgO,IAAwBzsH,KAAK+qH,mBAC1BA,aAAe/qH,KAAK+qH,YAAYoB,YAAYt8F,KAAK7vB,WACjD8pH,cAAc,aAAc,CAAEl4G,OAAQ6sG,OAGjCh9G,OAAS,KACCg9G,EAASz+G,KAAK0sH,6BAA8B1sH,gBAEvDs8B,KAASkwF,EAAgB,CACd9F,GAAYsE,gBAAgB1uF,EAAMmiF,SAAS,OAEvDkO,cAAe,IACT98F,KAAKyM,KAKfz8B,6BAA6BgE,MAC/B7D,KAAK2sH,oBAAqB,QACxBjK,EAAK7+G,EACL+oH,EAASjL,iBAAiBe,GACrBA,EAAGgI,aAAahE,GAAYiE,0BAEhCE,aAAanE,GAAYiE,sBAAuBjE,GAAYkE,yBAEnDlI,EAAGyD,aAAaO,GAAYoE,kBACb,UAAhBpI,EAAGmD,UAA6C,SAArB+G,EAAOx1B,UAAsB,KACjE96D,EAAQoqF,GAAY4D,OAAO72F,IAAIivF,UAC9BpmF,MACK,IAAI4uF,GAASxI,EAAI1iH,KAAK8pH,qBAE3BqC,YAAYt8F,KAAKyM,IACf,SAEF,gCA8BDuwF,EAAe7sH,KAAKy+G,WACI,UAA1BoO,EAAahH,mBAEPgH,EAAc7sH,KAAKizB,OAAQ,cAAK83F,sBAAatM,YAC7CoO,EAAc7sH,KAAKkjH,YACzBlC,MAAEA,SAAOC,GAAWjhH,KAAKizB,aAEpB/xB,KAAKE,IAAIpB,KAAKkjH,OAAOttG,KAAM,GAAK1U,KAAKE,IAAIpB,KAAKkjH,OAAOrtG,MAAO,MAC3D3U,KAAKE,IAAIpB,KAAKkjH,OAAOptG,IAAK,GAAK5U,KAAKE,IAAIpB,KAAKkjH,OAAOntG,OAAQ,GAElEirG,EAAQC,EAAS,EAAG,WLrCDxC,EAAkBqO,OACvC/rG,EAAQ4gG,iBAAiBlD,KACrB7oG,KAAOqL,WAAWF,EAAMgsG,cAAgB,IACxCl3G,MAAQoL,WAAWF,EAAMisG,eAAiB,IAC1Cl3G,IAAMmL,WAAWF,EAAMksG,aAAe,IACtCl3G,OAASkL,WAAWF,EAAMmsG,gBAAkB,GKiCrCL,EAAc7sH,KAAK8sH,kBL9CVrO,EAAkB0O,OACtCpsG,EAAQ4gG,iBAAiBlD,KACtB7oG,KAAOqL,WAAWF,EAAMkiG,kBAAoB,IAC5CptG,MAAQoL,WAAWF,EAAMqsG,mBAAqB,IAC9Ct3G,IAAMmL,WAAWF,EAAMiiG,iBAAmB,IAC1CjtG,OAASkL,WAAWF,EAAMssG,oBAAsB,GK0CzCR,EAAc7sH,KAAKmtH,cAGvBG,EAAmB5G,GAAY6G,cAAc7G,GAAYiE,sBAAsB,GAAG3qH,KAAK8wE,IAEvF08C,EAA6C,WAD7B7L,iBAAiBkL,GACAY,WAC3BC,sBAAsBb,SAC5Bc,EAAc3tH,KAAK4tH,gBAAgBf,KAC7B,GAAKc,EAAY,GAAGn7E,QAC9B,OACA,QAAUk0E,GAAYmH,6BAA+B,YAGlDC,EAAQC,SAAmBxI,QAAQC,IAAI,CAC1CkB,GAAYsH,gBAAgBnB,GAC5BoB,GAAkBpB,EAAc7sH,KAAKkuH,2BAE3BH,EAAUv7E,QAAQ86E,EACxB,GAAGA,KAAoB5G,GAAYyH,0BAChCX,EAAmB,GAAG9G,GAAY0H,iCAAmC,OACxE1H,GAAY2H,oBAAoBruH,KAAKsuH,qBACrCC,EACJ,eACAvN,EACA,aACAC,EACA,gFACA6M,EAAOxzE,KAAK,MACZ,0DACO,GACP,gBACQ,GACR,KACAqzE,EAAY,GACZI,EACAJ,EAAY,GACZ,yBACIa,EAASxuH,KAAKyuH,aAAeF,EAC7BlD,EAAUrrH,KAAK0uH,SAAWhI,GAAYiI,oBAAoBC,gBAAY/E,GAAQjK,OAAO4O,KACzF,MAAQxN,EACR,MAAQC,UAELqK,aAAavlH,IAAIslH,GAAS,IAAInK,IAASx2G,KAAK1K,KAAKizB,cACjDs4F,aAAaxlH,IAAIslH,GAAS,IAAIlB,IAAQz/G,KAAK1K,KAAKkjH,SAGjDljH,KAAK6uH,kBAAkBxD,aAGfyD,oBAAoB9uH,gBAE3ByrH,eAAe/gH,KAAK1K,KAAKizB,aACzBy4F,eAAehhH,KAAK1K,KAAKkjH,iCAKzB,IAAIqC,SAAe,CAACwJ,EAASC,WAC5BC,EAAS,QACDC,iBAAiBlvH,WACxBmvH,SAASC,OAAS,eAGpBD,SAASC,OAAS,gBACVH,EAAQ,UAEhBE,SAASE,QAAW9jH,MAChBA,SAEJ+jH,oBAAsBtvH,KAAK0uH,cAC3BS,SAASI,IAAOvvH,KAAKwvH,QAAU,2BAA6BC,mBAAmBzvH,KAAKyuH,iBAI7F5uH,aAEOG,KAAKmvH,SAASO,UAAY1vH,KAAKmvH,SAASQ,aAAe3vH,KAAKmvH,SAASI,4BAC7D,IAAM7I,GAAYwI,iBAAiBlvH,OAAM,WAIhDqrH,EAAUrrH,KAAKsvH,wBAEhBtvH,KAAKsrH,aAAa5tF,IAAI2tF,KAAarrH,KAAKurH,aAAa7tF,IAAI2tF,oBACvDgB,cAAe,OAIlBrL,MAAEA,SAAOC,GAAWjhH,KAAKsrH,aAAa73F,IAAI43F,IAC1Cz1G,KAAEA,MAAME,QAAKD,SAAOE,GAAW/V,KAAKurH,aAAa93F,IAAI43F,SAEnDuE,EAAY5O,EAAQprG,EAAOC,EAC3Bg6G,EAAa5O,EAASnrG,EAAMC,EAE5B+5G,EAAgB9vH,KAAKorH,mBACvB2E,EAAKD,EAAc9O,MACnBgP,EAAKF,EAAc7O,aACjBgP,EAAOH,EAAcI,WAAW,QACjCC,UAAU,EAAG,EAAGJ,EAAIC,KACpBI,uBAAwB,IACxBC,UAAUrwH,KAAKmvH,SAAU,EAAG,EAAGS,EAAWC,EAAY,EAAG,EAAGE,EAAIC,SAC/DM,EAAWL,EAAKM,aAAa,EAAG,EAAGR,EAAIC,GAAIjxE,KAC3C8sE,EACJnF,GAAYiI,oBAAoBC,gBAAY,IAAI9O,WAAWwQ,KAEvD3E,EAAqBT,GAASU,cAAcn4F,IAAI43F,MAC7CO,cAAc7lH,IAAIslH,EAASQ,GAChCF,IAAuBE,MAChB2E,cAAczqH,IAAIslH,EAAS,SAGhCoF,EAAavF,GAASsF,cAAc/8F,IAAI43F,IAAU,QAC/CmF,cAAczqH,IAAIslH,EAASoF,EAAW,GAE3CA,EAAa,GAAKvF,GAASD,eAAevtF,IAAImuF,eAC5C7rH,KAAK0uH,WAAa1uH,KAAKsvH,0BACpBT,kBAAkB7uH,KAAK0uH,0BAIrB,IAAMhI,GAAYwI,iBAAiBlvH,OAAsC,OAAR,IAAhBkB,KAAKiC,UAAqBstH,GAElF9E,IAAuBE,eAErB6E,EACJ1wH,KAAK0wH,YACLzvG,WAAWjhB,KAAKy+G,QAAQiM,aAAahE,GAAYiK,yBACjD9P,OAAO+P,iBACHC,EACJ3F,GAASD,eAAe5qD,OAAS6qD,GAASD,eAAelvD,MACrDmvD,GAASD,eAAez6E,QAAS,GACjC8yE,SAASC,cAAc,cACzBhjH,EAAKswH,EAAU7P,MAAQ4O,EAAYc,EACnCx6G,EAAK26G,EAAU5P,OAAS4O,EAAaa,QACnCzW,EAAM4W,EAAUX,WAAW,QAC7BE,uBAAwB,IACxBD,UAAU,EAAG,EAAG5vH,EAAG2V,KACnBm6G,UAAUrwH,KAAKmvH,SAAU,EAAG,EAAGS,EAAWC,EAAY,EAAG,EAAGtvH,EAAG2V,MAC1D+0G,eAAellH,IAAI8lH,EAAYgF,WAChC5rH,IAAI,kBAAuBwrH,EAAYzwH,KAAKy+G,SAEhDz+G,KAAK0uH,WAAa1uH,KAAKsvH,0BACpBT,kBAAkBxD,GAInBxrH,gBAAgB4+G,SAChBqS,EAAQ,GACRC,EAAS,OACXh1F,EAAS0iF,EAAQoE,cAChB9mF,MAAiBunF,SAAS/B,mBAC5B,KACGkJ,EAAM1uF,EAAOgqF,QAAQpkG,cACrB6kG,EAAa,cACN7lH,KAAKo7B,EAAOyqF,WACN,UAAX7lH,EAAE65C,UAEQ,GAAG75C,EAAE65C,SAAS75C,EAAEV,iBAE1BsgH,EACJ,IACAkK,GACS,WACL,0DACEzqH,KAAKizB,OAAO+tF,sBAAsBhhH,KAAKizB,OAAOguF,2BAC9CjhH,KAAKmtH,OAAOr3G,IAAM9V,KAAKkjH,OAAOptG,IAAM9V,KAAK8sH,QAAQh3G,UACnD,IACJ0wG,EACA,GAAGE,GAAYsK,qCAGX5pE,QAAQm5D,SACR0Q,EAAQ,KAAOxG,EAAM,SACpB56F,KAAKohG,GACD,QAAPxG,cACI1uF,EAASA,IAAWunF,SAAS/B,gBAAkBxlF,EAAO8mF,eAAiBS,SAAS/B,gBAAkB,YACrG,CAACuP,EAAMx2E,KAAK,IAAKy2E,EAAOz2E,KAAK,iBApZjC42E,GACE/F,mBAAqB,EACb+F,GAAAV,cAAsC,IAAIl/E,IAC1C4/E,GAAAtF,cAA6C,IAAIxH,UAAO,KAHlE8M,GAIUjG,eAAwD,IAAI7G,UAAO8G,GAASC,oBCrC7F,ICAIgG,GACOC,GDDPC,GAAkB,GEAlBC,GAAM,iEDCCF,GAIRD,QAAwD,gBAHd,4BACC,0CACa,2BEJpD,ICAHI,GDAOrlG,GAAS,SAAU8a,UAAc/a,OAAOC,OAAO8a,IECtDwqF,YAC4BC,EAAYtK,QAC/BsK,WAAaA,OACbtK,UAAYA,KACVnnH,OCJX0xH,GAAmB,sBACM5xH,EAAGC,EAAGihH,EAAOC,eAC7BnhH,EAAIA,OACJC,EAAIA,OACJihH,MAAQA,OACRC,OAASA,OACTnrG,IAAM9V,KAAKD,OACX6V,KAAO5V,KAAKF,OACZiW,OAAS/V,KAAK8V,IAAM9V,KAAKihH,YACzBprG,MAAQ7V,KAAK4V,KAAO5V,KAAKghH,MACvB90F,GAAOlsB,eAEFqD,UAAU4pD,OAAS,eAC3BqO,EAAKt7D,WACF,CAAEF,EADUw7D,EAAGx7D,EACPC,EADcu7D,EAAGv7D,EACX+V,IADoBwlD,EAAGxlD,IACbD,MAD0BylD,EAAGzlD,MACfE,OAD+BulD,EAAGvlD,OAClBH,KADiC0lD,EAAG1lD,KACxBorG,MADsC1lD,EAAG0lD,MAC3BC,OAD2C3lD,EAAG2lD,WAGzH0Q,SAAW,SAAUC,UAC1B,IAAIC,EAAgBD,EAAU9xH,EAAG8xH,EAAU7xH,EAAG6xH,EAAU5Q,MAAO4Q,EAAU3Q,SAE7E4Q,EAnBY,GCDnBC,GAAQ,SAAUlgH,UAAiBA,aAAkBmgH,YAAc,YAAangH,GAChFogH,GAAW,SAAUpgH,MACjBkgH,GAAMlgH,GAAS,KACX0pD,EAAK1pD,EAAOqgH,UAAWjR,EAAQ1lD,EAAG0lD,MAAOC,EAAS3lD,EAAG2lD,cACjDD,IAAUC,MAElB1lD,EAAK3pD,EAAQswG,EAAc3mD,EAAG2mD,YAAaG,EAAe9mD,EAAG8mD,wBACzCA,GAAgBzwG,EAAOsgH,iBAAiBzwH,SAEhE0wH,GAAY,SAAUnrF,OAClBs0B,EAAIC,KACJv0B,aAAeorF,eACR,MAEPpgF,EAAoF,UAAvD,UAAThL,SAAwB,IAAPs0B,OAAgB,EAASA,EAAG+lD,qBAAkC,IAAP9lD,OAAgB,EAASA,EAAGinD,wBACzGx7E,aAAegL,EAAMogF,UCfjCtR,GAA2B,oBAAXD,OAAyBA,OAAS,GCMzDvvC,GAAQ,IAAI+gD,QACZC,GAAe,cACfC,GAAiB,eACjBC,GAAM,gBAAiB/3E,KAAKqmE,GAAO2R,WAAa3R,GAAO2R,UAAUC,WACjEC,GAAiB,SAAU5sF,UAAgB9kB,WAAW8kB,GAAS,MAC/Ds6B,GAAO,SAAUoxD,EAAYtK,EAAWyL,eACrB,IAAfnB,MAAsC,QACxB,IAAdtK,MAAoC,QACpB,IAAhByL,OAAwC,GACrC,IAAIpB,MAAkCrK,EAAYsK,IAAe,KAAkBA,EAAatK,IAAc,IAErH0L,GAAY3mG,GAAO,CACnB4mG,0BAA2BzyD,KAC3B0yD,cAAe1yD,KACf2yD,eAAgB3yD,KAChB4yD,YAAa,IAAIvB,GAAgB,EAAG,EAAG,EAAG,KAE1CwB,GAAoB,SAAUthH,EAAQuhH,WACX,IAAvBA,OAAsD,GACtD7hD,GAAM5zC,IAAI9rB,KAAYuhH,SACf7hD,GAAM79C,IAAI7hB,MAEjBogH,GAASpgH,aACH7L,IAAI6L,EAAQihH,IACXA,OAEPO,EAAKzR,iBAAiB/vG,GACtByhH,EAAMvB,GAAMlgH,IAAWA,EAAO0hH,iBAAmB1hH,EAAOqgH,UACxDsB,GAAiBf,IAAuB,eAAjBY,EAAGI,UAC1BZ,EAAcL,GAAe93E,KAAK24E,EAAGK,aAAe,IACpDC,GAAuBL,GAAOf,GAAa73E,KAAK24E,EAAGO,WAAa,IAChEC,GAAyBP,GAAOf,GAAa73E,KAAK24E,EAAGS,WAAa,IAClE5G,EAAaoG,EAAM,EAAIV,GAAeS,EAAGnG,YACzCD,EAAeqG,EAAM,EAAIV,GAAeS,EAAGpG,cAC3CE,EAAgBmG,EAAM,EAAIV,GAAeS,EAAGlG,eAC5CH,EAAcsG,EAAM,EAAIV,GAAeS,EAAGrG,aAC1C+G,EAAYT,EAAM,EAAIV,GAAeS,EAAGpQ,gBACxC+Q,EAAcV,EAAM,EAAIV,GAAeS,EAAGhG,kBAC1C4G,EAAeX,EAAM,EAAIV,GAAeS,EAAG/F,mBAE3C4G,EAAoBlH,EAAcC,EAClCkH,EAAkBjH,EAAaC,EAC/BiH,GAHad,EAAM,EAAIV,GAAeS,EAAGnQ,kBAGL8Q,EACpCK,EAAqBN,EAAYE,EACjCK,EAAgCT,EAA4BhiH,EAAOywG,aAAe+R,EAAqBxiH,EAAO0wG,aAAtD,EACxDgS,EAA8BZ,EAA0B9hH,EAAOswG,YAAciS,EAAuBviH,EAAOuwG,YAAvD,EACpDoS,EAAiBhB,EAAgBU,EAAoBE,EAAuB,EAC5EK,EAAkBjB,EAAgBW,EAAkBE,EAAqB,EACzEK,EAAepB,EAAMA,EAAIrS,MAAQ2R,GAAeS,EAAGpS,OAASuT,EAAiBD,EAC7EI,EAAgBrB,EAAMA,EAAIpS,OAAS0R,GAAeS,EAAGnS,QAAUuT,EAAkBH,EACjFM,EAAiBF,EAAeR,EAAoBK,EAA6BH,EACjFS,EAAkBF,EAAgBR,EAAkBG,EAA+BD,EACnFS,EAAQ3oG,GAAO,CACf4mG,0BAA2BzyD,GAAKn/D,KAAKW,MAAM4yH,EAAe7D,kBAAmB1vH,KAAKW,MAAM6yH,EAAgB9D,kBAAmBgC,GAC3HG,cAAe1yD,GAAKs0D,EAAgBC,EAAiBhC,GACrDI,eAAgB3yD,GAAKo0D,EAAcC,EAAe9B,GAClDK,YAAa,IAAIvB,GAAgB3E,EAAaE,EAAYwH,EAAcC,eAEtE3uH,IAAI6L,EAAQijH,GACXA,GAEPC,GAAmB,SAAUljH,EAAQmjH,EAAa5B,OAC9C73D,EAAK43D,GAAkBthH,EAAQuhH,GAAqBJ,EAAgBz3D,EAAGy3D,cAAeC,EAAiB13D,EAAG03D,eAAgBF,EAA4Bx3D,EAAGw3D,iCACrJiC,QACC5D,GAAyB6D,gCACnBlC,OACN3B,GAAyB8D,kBACnBlC,iBAEAC,ICzEfkC,YAC6BtjH,OACrBijH,EAAQ3B,GAAkBthH,QACzBA,OAASA,OACTqhH,YAAc4B,EAAM5B,iBACpBF,cAAgB7mG,GAAO,CAAC2oG,EAAM9B,qBAC9BC,eAAiB9mG,GAAO,CAAC2oG,EAAM7B,sBAC/BF,0BAA4B5mG,GAAO,CAAC2oG,EAAM/B,6BCRnDqC,GAAwB,SAAUzhG,MAC9Bs+F,GAASt+F,UACFzQ,EAAAA,UAEP6yB,EAAQ,EACR/Z,EAASrI,EAAK8I,WACXT,MACM,IACAA,EAAOS,kBAEbsZ,GCPPs/E,GAA8B,eAC1BC,EAAkBpyG,EAAAA,EAClBmN,EAAY,MACA6pB,SAAQ,SAAyBq7E,MACb,IAA5BA,EAAGC,cAAc9zH,YAGjBgjD,EAAU,KACX8wE,cAAct7E,SAAQ,SAAuBu7E,OACxCr6E,EAAQ,IAAI+5E,GAAoBM,EAAG5jH,QACnC6jH,EAAcN,GAAsBK,EAAG5jH,UACnCie,KAAKsrB,KACVu6E,iBAAmBZ,GAAiBU,EAAG5jH,OAAQ4jH,EAAGT,aACjDU,EAAcJ,MACII,QAGhB5lG,MAAK,aACR1kB,SAASsuC,KAAK67E,EAAGK,SAAUlxE,EAAS6wE,EAAGK,eAE3CJ,cAAchwE,OAAO,EAAG+vE,EAAGC,cAAc9zH,oBAEvC+kE,EAAK,EAAGovD,EAAcxlG,EAAWo2C,EAAKovD,EAAYn0H,OAAQ+kE,IAAM,IACtDovD,EAAYpvD,aAGxB6uD,GC5BPQ,GAAkC,SAAU//E,MAC5BmE,SAAQ,SAAyBq7E,KAC1CC,cAAchwE,OAAO,EAAG+vE,EAAGC,cAAc9zH,UACzCq0H,eAAevwE,OAAO,EAAG+vE,EAAGQ,eAAer0H,UAC3Cs0H,mBAAmB97E,SAAQ,SAAuBu7E,GAC7CA,EAAGQ,aACCb,GAAsBK,EAAG5jH,QAAUkkC,IAChCy/E,cAAc1lG,KAAK2lG,KAGnBM,eAAejmG,KAAK2lG,WCPvCS,GAAU,eZHNC,EYIApgF,EAAQ,SACoBA,GCLzBu7E,GAAgBh0E,MAAK,SAAUi4E,UAAaA,EAAGC,cAAc9zH,OAAS,QDOjE2zH,QACwBt/E,UER7Bu7E,GAAgBh0E,MAAK,SAAUi4E,UAAaA,EAAGQ,eAAer0H,OAAS,OdCpD,mBAAf00H,aACC,IAAIA,WAAW,QAAS,CAC5BztE,QAAS4oE,SAILhO,SAAS8S,YAAY,UACvBC,UAAU,SAAS,GAAO,KAC1B3tE,QAAU4oE,WAEbgF,cAAcJ,IYEdpgF,EAAQ,GVdf3lB,GAAY,GAEZomG,GAAiB,SAAUprH,OACtBomH,GAAS,KACNiF,EAAW,EACXC,EAAOnT,SAASoT,eAAe,QAE/BC,kBAAiB,kBANKxmG,GAAUo1B,OAAO,GAAGtL,SAAQ,SAAUtqB,UAAaA,UAMtBinG,QAAQH,EADlD,CAAEI,eAAe,OAEpB,aAAmBC,YAAc,MAAiBN,IAAaA,SAEnE3mG,KAAK1kB,SaRf4rH,GAAW,EAGXC,GAAiB,CAAExQ,YAAY,EAAMqQ,eAAe,EAAMI,WAAW,EAAMC,SAAS,GACpFC,GAAS,CACT,SACA,OACA,gBACA,eACA,iBACA,qBACA,QACA,UACA,UACA,YACA,YACA,WACA,OACA,SAEA3Z,GAAO,SAAU4Z,eACD,IAAZA,MAAgC,GAC7B//E,KAAKggF,MAAQD,GAEpBE,IAAY,EAkEZC,GAAY,IAjEC,4BAELC,EAAQx3H,UACPy3H,SAAU,OACVrd,SAAW,kBAAqBod,EAAME,qBAErCr0H,UAAUs0H,IAAM,SAAUP,OAC5BI,EAAQx3H,aACI,IAAZo3H,MA/BO,MAgCPE,QAGQ,MCvCgB3nG,EDwCxBioG,EAAQpa,GAAK4Z,GCxCWznG,EDyCR,eACZkoG,GAAsB,QAEA5B,oBAGV,IACF2B,EAAQpa,MA7CMuZ,UAiDpBc,IACMF,IAAI,KAELP,EAAU,IACTO,IAAIP,KAGJntG,cC1DP,iCACW0F,UD8DhBtsB,UAAUq0H,SAAW,gBACtBI,YACAH,SAECt0H,UAAUuzH,QAAU,eACtBY,EAAQx3H,KACR2vB,EAAK,kBAAqB6nG,EAAM7B,UAAY6B,EAAM7B,SAASiB,QAAQtT,SAAS9B,KAAMwV,cAC7ExV,KAAO7xF,IAAOmxF,GAAOiX,iBAAiB,mBAAoBpoG,MAE7DtsB,UAAU4mB,MAAQ,eACpButG,EAAQx3H,KACRA,KAAKy3H,eACAA,SAAU,OACV9B,SAAW,IAAIgB,iBAAiB32H,KAAKo6G,eACrCwc,aACE38E,SAAQ,SAAU74B,UAAe0/F,GAAOiX,iBAAiB32G,EAAMo2G,EAAMpd,UAAU,UAGpF/2G,UAAUy0H,KAAO,eACnBN,EAAQx3H,KACPA,KAAKy3H,eACD9B,UAAY31H,KAAK21H,SAASqC,gBACxB/9E,SAAQ,SAAU74B,UAAe0/F,GAAOmX,oBAAoB72G,EAAMo2G,EAAMpd,UAAU,WACpFqd,SAAU,IAGhBS,EA/DM,IAkEbC,GAAc,SAAUt0H,IACvBkzH,IAAYlzH,EAAI,GAAK0zH,GAAUttG,cACpBpmB,IACC0zH,GAAUO,QEzFvBM,GAAqB,sBACMxmH,EAAQmjH,QAC1BnjH,OAASA,OACTmjH,YAAcA,GAAe5D,GAAyBkH,iBACtD3C,iBAAmB,CACpBjE,WAAY,EACZtK,UAAW,YAGD9jH,UAAU2yH,SAAW,eAdPpkH,EAexB4P,EAAOszG,GAAiB90H,KAAK4R,OAAQ5R,KAAK+0H,aAAa,UAf/BnjH,EAgBJ5R,KAAK4R,OAfzBkgH,GAAMlgH,IZaM,SAAUA,UACtBA,EAAOm0G,aACN,WACmB,UAAhBn0G,EAAOsxB,eAGV,YACA,YACA,YACA,aACA,aACA,aACA,aACM,SAER,EY3BCo1F,CAAkB1mH,IACkB,WAArC+vG,iBAAiB/vG,GAAQ67G,eAcnBiI,iBAAmBl0G,GAExBxhB,KAAK01H,iBAAiBjE,aAAejwG,EAAKiwG,YACvCzxH,KAAK01H,iBAAiBvO,YAAc3lG,EAAK2lG,WAK7CoR,EApBc,GCRrBC,YAC8BC,EAAgBttH,QACrCoqH,cAAgB,QAChBO,eAAiB,QACjBC,mBAAqB,QACrBJ,SAAW8C,OACXttH,SAAWA,GCFpButH,GAAc,IAAIrG,QAClBsG,GAAsB,SAAU5C,EAAoBnkH,WAC3CpO,EAAI,EAAGA,EAAIuyH,EAAmBt0H,OAAQ+B,GAAK,KAC5CuyH,EAAmBvyH,GAAGoO,SAAWA,SAC1BpO,YAKfo1H,GAA4B,kCAGHC,QAAU,SAAUJ,EAAgBttH,OACrD2tH,EAAS,IAAIN,GAAqBC,EAAgBttH,MAC1CpF,IAAI0yH,EAAgBK,MAEXlC,QAAU,SAAU6B,EAAgB7mH,EAAQ47B,OAC7DsrF,EAASJ,GAAYjlG,IAAIglG,GACzBM,EAAwD,IAArCD,EAAO/C,mBAAmBt0H,OAC7Ck3H,GAAoBG,EAAO/C,mBAAoBnkH,GAAU,OACrCy/G,GAAgBxhG,KAAKipG,KAClC/C,mBAAmBlmG,KAAK,IAAIuoG,GAAkBxmH,EAAQ47B,GAAWA,EAAQhqB,SACpE,MACFk0G,eAGOsB,UAAY,SAAUP,EAAgB7mH,OACvDknH,EAASJ,GAAYjlG,IAAIglG,GACzBt4H,EAAQw4H,GAAoBG,EAAO/C,mBAAoBnkH,GACvDqnH,EAAuD,IAArCH,EAAO/C,mBAAmBt0H,OAC5CtB,GAAS,OACUkxH,GAAgB9rE,OAAO8rE,GAAgB/oF,QAAQwwF,GAAS,KACpE/C,mBAAmBxwE,OAAOplD,EAAO,cAIvB63H,WAAa,SAAUS,OACxCjB,EAAQx3H,KACR84H,EAASJ,GAAYjlG,IAAIglG,KACtB1C,mBAAmB1zG,QAAQ43B,SAAQ,SAAUu7E,UAAagC,EAAMwB,UAAUP,EAAgBjD,EAAG5jH,aAC7F2jH,cAAchwE,OAAO,EAAGuzE,EAAOvD,cAAc9zH,SAEjDy3H,EAjCqB,GCX5BC,GAAkB,sBACMhuH,MACK,IAArB8D,UAAUxN,aACJ,IAAIg3C,UAAU,qFAEA,mBAAbttC,QACD,IAAIstC,UAAU,oGAECogF,QAAQ74H,KAAMmL,YAE5B9H,UAAUuzH,QAAU,SAAUhlH,EAAQ47B,MACxB,IAArBv+B,UAAUxN,aACJ,IAAIg3C,UAAU,iGAEnB05E,GAAUvgH,SACL,IAAI6mC,UAAU,2FAECm+E,QAAQ52H,KAAM4R,EAAQ47B,MAEpCnqC,UAAU21H,UAAY,SAAUpnH,MAClB,IAArB3C,UAAUxN,aACJ,IAAIg3C,UAAU,mGAEnB05E,GAAUvgH,SACL,IAAI6mC,UAAU,6FAECugF,UAAUh5H,KAAM4R,MAE9BvO,UAAU20H,WAAa,cACTA,WAAWh4H,SAEzByD,SAAW,iBACf,kDAEJ21H,EAlCW,GCEtB,MAAMD,GAAkCE,KAAaF,gBAAkBG,GA6CvE,MAAMC,GAAc,IAAIrpH,EAClBspH,GAAc,IAAItpH,EAClBupH,GAAc,IAAI9Z,YACN4F,QAAQwJ,UAEnB,yDAEuC/uH,KAAK05H,iBAAmB,2CAC9B15H,KAAK05H,iBAAmB,8CACvB15H,KAAK05H,iBAAmB,8CACzB15H,KAAK05H,iBAAmB,8CACvB15H,KAAK05H,iBAAmB,8CACzB15H,KAAK05H,iBAAmB,mDAClB15H,KAAK05H,iBAAmB,uDAE1B15H,KAAK05H,iBAAmB,4DACjB15H,KAAK05H,iBAAmB,sEACrB15H,KAAK05H,iBAAmB,sEAC3B15H,KAAK05H,iBAAmB,qEACtB15H,KAAK05H,iBAAmB,wDAGtC,GAAM15H,KAAK25H,sCAwBrBC,SAEvB,GAAGA,EAAO7P,MAAQ,GAAG/pH,KAAK65H,sBAAwB,MAC/CD,EAAO3P,MAAQ,GAAGjqH,KAAK85H,sBAAwB,MAC/CF,EAAO5P,OAAS,GAAGhqH,KAAK+5H,uBAAyB,MACjDH,EAAOhoH,OAAS,GAAG5R,KAAKg6H,uBAAyB,qCAQzBvb,SACvBgD,EAAWhD,EAAQ4C,cACnB4Y,EAAWxb,EAAQyb,cACnBC,EAAY,SAAUF,EAAWA,EAASG,KAAOH,KACnDj6H,KAAKq6H,kBAAkB5mG,IAAIwmG,gBAEzBK,EAAiBt6H,KAAKu6H,sBAAwB9Y,EAAS8B,cAAc,WAClE6W,KAAKI,YAAYF,KACX7W,UAAY,YACtBgX,GAAYC,yKAUX35G,EAAQ/gB,KAAK26H,sBAAwBlZ,EAAS8B,cAAc,WACxDqX,OAAO75G,SACXk+F,EAAQl+F,EAAMk+F,UAChBz7G,EAAI,QAENy7G,EACA,IAAIwb,GAAY5M,kCAChB,8BACArqH,QAGAy7G,EACA,IAAIwb,GAAYtM,0BAA0BsM,GAAYtM,yBACtD,kCACA3qH,QAGAy7G,EACA,IAAIwb,GAAYtM,yBAAyBsM,GAAY3P,sBACnD2P,GAAYtM,yBAAyBsM,GAAY3P,qBACnD,iCACAtnH,QAGAy7G,EACA,IAAIwb,GAAYtM,uBAChB,iLACA3qH,QAGAy7G,EACA,IAAIwb,GAAYrM,8BAChB,6DACA5qH,QAGAy7G,EACA,IAAIwb,GAAYzJ,8BAChB,gQACAxtH,QAGAy7G,EACA,IAAIwb,GAAYzJ,yCAAyCyJ,GAAYzJ,qCACrE,uDACAxtH,KAGEy2H,IAAaxY,EAAU,KACrBoZ,EAAe,SACbC,EAAe,QACfD,GAAgBha,OAAOka,SAAStpD,MAC9BovC,OAAOka,SAAStpD,cAGXupD,cAAgBf,EAASgB,cAAcpa,OAAOka,SAAStpD,eAInDovC,OAAOka,SAAStpD,aAG1BsmD,iBAAiB,aAAc+C,GAAc,cAG7C/C,iBAAiB,WAAYmD,SAE7BC,aAAeD,EAAItpH,UACvB,UAEImmH,iBAAiB,YAAamD,SAE9BC,aAAe,QACnB,UAEIpD,iBAAiB,QAAS7B,iBAK7BkF,EAA6B,eACrBp6H,EAAE+I,KAAM/J,KAAKsqH,SAAU+B,cAAe,GAG9CgP,EAA8B3nG,QAC9BmyF,EAAWnyF,EAAKmyF,SAAS1hH,mBACzBm3H,EAAYhzF,QAAQu9E,MACjBkS,iBAAiB,OAAQqD,IAG5BE,EAAc,CAAC,QAAS,QACxB3F,EAAW,IAAIgB,kBAAkB4E,oBAC1Bx6H,KAAKw6H,EAAW,MACrBD,EAAYhzF,QAAQvnC,EAAE6Q,OAAOi0G,SAAS1hH,mCAEnCq3H,YAAY/nG,IAAIguF,OAAWpwE,OAAOtwC,EAAE6Q,mBAEhC8hB,KAAQ3yB,EAAE06H,aAAuC/nG,SAGvDkjG,QAAQnV,EAAU,CACzBwV,WAAW,EACXzQ,YAAY,EACZqQ,eAAe,EACfK,SAAS,EACTwE,mBAAmB,EACnBC,uBAAuB,SAGpBtB,kBAAkBt0H,IAAIk0H,EAAUtE,8BAGZtL,QACrBrqH,KAAK47H,eAAetzF,QAAQ+hF,SAAoBuR,eAAe/rG,KAAKw6F,8BAG/CA,QACrBrqH,KAAK67H,eAAevzF,QAAQ+hF,SAAoBwR,eAAehsG,KAAKw6F,2BAGlDA,QAClBrqH,KAAK87H,YAAYxzF,QAAQ+hF,SAAoByR,YAAYjsG,KAAKw6F,yBAOtD0R,cAAe,QACrBH,EAAiBnB,GAAYmB,eAC7BC,EAAiBpB,GAAYoB,eAC7BC,EAAcrB,GAAYqB,YAC1BE,EAAcvB,GAAYwB,mBAAqB,MACjDC,EAAYC,YAAY9E,WACrByE,EAAYr6H,QAAU06H,YAAY9E,MAAQ6E,EAAYF,KAC/CxrF,QAASy+E,eAEXkN,YAAY9E,MACjBuE,EAAen6H,QAAU06H,YAAY9E,MAAQ6E,EAAYF,KAC/CxrF,QAAS4rF,YAGxBP,EAAep6H,QACfg5H,GAAY4B,mBAAqB5B,GAAY6B,0BAEjCD,uBAET7rF,QACA+rF,YACAC,SAAQ,QACKH,wDAQdr8H,KAAK+7H,cACkC,IAAtCtB,GAAYmB,eAAen6H,QACO,IAAnCg5H,GAAYqB,YAAYr6H,SACe,OAA1Bo6H,eAAep6H,QAC5Bg5H,GAAY4B,qBAAuB5B,GAAY6B,6BAC9CP,cAAe,KACRU,aAAahC,GAAYiC,gCAGnB/sG,cAILA,EAAG,+BAIU06F,KACpBgC,cAAe,yBAGA5N,EAAkBke,EAAgC7S,MACnE2Q,GAAYzP,gBAAgBvM,SACxB,IAAIr+G,MAAM,yDAlRtB,SAAmCq+G,EAAkBjxE,MAC/C81E,SAASrI,SAASwD,UACbA,QAEHme,EAAYtZ,SAASC,cAAc,SAC/BsH,aAAanE,GAAYgU,8BAA+B,MACxD35G,MAAM4iG,WAAa,WACnB5iG,MAAM6iG,cAAgB,SACtB7iG,MAAM87G,YAAc,OACND,EAAUE,aAAa,CAACpsG,KAAM,SACtC8pG,YAAY/b,YACnB8C,gBAAgBiZ,YAAYoC,IAyQTne,MACdse,wBAAwBte,SAE9BkX,EAAW,IAAIgB,iBAAiB8D,GAAYuC,uBAC7CC,kBAAkBl3H,IAAI04G,EAASkX,QAC/BuH,sBAAsBze,SAErBga,EAAiB,IAAIU,kBACdgE,KAAUC,EAAS,OACtBC,EAAQr9H,KAAKgrH,gBAAgBmS,EAAOvrH,UACpCw6G,eAAeqO,GAAY6C,wBAC3BrR,qBAAqBwO,GAAY6C,4BAG5B1G,QAAQnY,QAClB4S,gBAAgBtrH,IAAI04G,EAASga,KAE1BV,iBAAiB,QAAS/3H,KAAKu9H,gBAAiB,CAAEC,SAAS,MAC3DzF,iBAAiB,UAAW/3H,KAAKu9H,gBAAiB,CAAEC,SAAS,MAC7DzF,iBAAiB,SAAU/3H,KAAKu9H,gBAAiB,CAAEC,SAAS,MAC5DzF,iBAAiB,SAAU/3H,KAAKu9H,gBAAiB,CAAEC,SAAS,MAC5DzF,iBAAiB,QAAS/3H,KAAKu9H,gBAAiB,CAAEC,SAAS,MAC3DzF,iBAAiB,OAAQ/3H,KAAKu9H,gBAAiB,CAAEC,SAAS,MAC1DzF,iBAAiB,gBAAiB/3H,KAAKu9H,gBAAiB,CAAEC,SAAS,UAErEnT,EAAQ,IAAI6G,GAASzS,EAASqL,eAC/B2T,WAAW13H,IAAI04G,EAAS4L,GACtBA,sBAGWA,MACdrqH,KAAKy9H,WAAW//F,IAAI2sF,EAAM5L,SAAU,MACjCgf,WAAWpsF,OAAOg5E,EAAM5L,SACZz+G,KAAKi9H,kBAAkBxpG,IAAI42F,EAAM5L,SACzCuZ,kBACJiF,kBAAkB5rF,OAAOg5E,EAAM5L,SACbz+G,KAAKqxH,gBAAgB59F,IAAI42F,EAAM5L,SACvCuZ,kBACV3G,gBAAgBhgF,OAAOg5E,EAAM5L,WAC5BA,QAAQwZ,oBAAoB,QAASj4H,KAAKu9H,gBAAiB,CAAEC,SAAS,MACtE/e,QAAQwZ,oBAAoB,UAAWj4H,KAAKu9H,gBAAiB,CAAEC,SAAS,MACxE/e,QAAQwZ,oBAAoB,SAAUj4H,KAAKu9H,gBAAiB,CAAEC,SAAS,MACvE/e,QAAQwZ,oBAAoB,SAAUj4H,KAAKu9H,gBAAiB,CAAEC,SAAS,MACvE/e,QAAQwZ,oBAAoB,QAASj4H,KAAKu9H,gBAAiB,CAAEC,SAAS,MACtE/e,QAAQwZ,oBAAoB,OAAQj4H,KAAKu9H,gBAAiB,CAAEC,SAAS,MACrE/e,QAAQwZ,oBAAoB,gBAAiBj4H,KAAKu9H,gBAAiB,CAAEC,SAAS,4BAIjE/e,EAAkBif,GAAU,OAC7C1C,EAAgB0C,EAAYjf,EAAUA,EAAQoE,oBAC5C8a,QAAsB3C,WAAe4C,QAAQ,IAAInD,GAAY3P,wBAC9D6S,EAAqB,OAClBE,oBAAiB3D,eAA6B2D,QAChDA,SACK79H,KAAKgrH,gBAAgB6S,EAAMH,UAG/B19H,KAAKsqH,OAAO72F,IAAIkqG,4BAGAlb,EAAmCzB,EAAcC,EAAe6c,EAAkBpvG,EAAM,IAAIxe,SAC7GknF,EAAYqrB,EAAcrrB,UAC1B2mC,EAAkBtb,EAAcsb,mBAEF,GAAhC3mC,EAAU9uD,QAAQ,WAAiB,GACjC1R,eACA2iF,EAAMniB,EACPtvC,UAAU,EAAGsvC,EAAU31F,OAAS,GAChCi6C,MAAM,MACNnD,IAAIt3B,cACHhgB,SAAS,GAAKs4G,EAAI,KAClBt4G,SAAS,GAAKs4G,EAAI,KAClBt4G,SAAS,GAAKs4G,EAAI,KAClBt4G,SAAS,GAAKs4G,EAAI,KAClBt4G,SAAS,IAAMs4G,EAAI,KACnBt4G,SAAS,IAAMs4G,EAAI,WACoB,GAAlCniB,EAAU9uD,QAAQ,oBAOpB,KANHixE,EAAMniB,EACPtvC,UAAU,EAAGsvC,EAAU31F,OAAS,GAChCi6C,MAAM,MACNnD,IAAIt3B,cACH7S,UAAUmrG,GAKQ,IAApB7qF,EAAIztB,SAAS,OAAcA,SAAS,GAAK,OACrB,IAApBytB,EAAIztB,SAAS,OAAcA,SAAS,GAAK,OACpB,IAArBytB,EAAIztB,SAAS,QAAeA,SAAS,IAAM,SAC3CA,SAAS,KAAO68H,IAChB78H,SAAS,QAAO68H,MAEhB12G,EAAS22G,EAAgBriF,MAAM,KAAKnD,IAAIt3B,YAExC+8G,KAAa,GAAKhd,EAAM,GAAK8c,EAC7BG,KAAa,GAAKhd,EAAO,GAAK6c,KAC9Bl1C,EAAKxhE,EAAO,IAAM,EAElB82G,EAAK3E,GAAY3iG,WAAWunG,iBAAiBH,GAAKC,GAAKr1C,GACvDw1C,EAAK5E,GAAY5iG,WAAWunG,gBAAgBH,EAAIC,EAAIr1C,aAE7C5nF,KAAK0tB,EAAIztB,YACdw3B,MAAMz3B,UAAW,YAGhB0tB,EAAI+C,YAAY2sG,GAAIniG,SAASiiG,uCAGFzf,SAC5B4f,EAAW,GACXp9H,EAAWw9G,EAAQ6f,iBAAiB,eAE/BlU,KAAWnpH,EAAU,OACxB4jF,EAAOulC,EAAQmU,eAAe,+BAAgC,QAChE15C,KACOh1D,KACP4qG,GAAY9T,WAAW9hC,GAAM4gC,YACnB+Y,kBAAkB,+BAAgC,UAClD3T,aAAa,OAAQ4T,aAI7BC,EAAatU,KACI,OAAnBA,EAAQrE,SAAmD,QAA/B2Y,EAAWnP,IAAIn7C,OAAO,EAAG,MAC9CvkD,KACP4qG,GAAY9T,WAAW+X,EAAWnP,KAAK9J,YAC7BoF,aAAa,MAAO4T,OAIN,gCAAxBrU,EAAQpE,cAAkDoE,EAAQjE,aAAa,SAAU,OACrFplG,EAAQqpG,EAAQM,aAAa,UAAY,KACtC76F,KACP4qG,GAAYkE,oBAAoB9d,OAAOka,SAAS6D,KAAM79G,GAAO0kG,UACvD1kG,GAAS89G,KAAahU,aAAa,QAASgU,cAKlDjS,EAASnO,EAAQ6f,iBAAiB,mBAC7Bv9G,KAAS6rG,IACT/8F,KACP4qG,GAAYkE,oBAAoB9d,OAAOka,SAAS6D,KAAM79G,EAAM0iG,WAAWgC,UACjE1kG,EAAM0iG,WAAaob,MAAWpb,UAAYob,cAI7CtZ,QAAQC,IAAI6Y,yCAIbpB,EAAoBxC,GAAYwC,kBAAkB9lG,mBAC7Cp2B,KAAKk8H,KACFD,iBAAiBj8H,EAAE+9H,iBAC7B9G,wDAKQh3H,KAAMy5H,GAAYwC,uBACvBC,sBAAsBl8H,gCAIMy9G,GAClBgc,GAAYwC,kBAAkBxpG,IAAIgrF,GAC1CmY,QAAQnY,EAAS,CACxB+H,YAAY,EACZyQ,WAAW,EACXC,SAAS,EACTL,eAAe,EACf8E,uBAAuB,EACvBD,mBAAmB,uCAgDoBta,SACnC2d,EAAS3d,EAAI4d,oBACVx7H,EAAI,EAAGA,EAAIu7H,EAAOt9H,OAAQ+B,cAEzBy7G,EAAQ8f,EAAOv7H,GACf27G,EAAQF,EAAMggB,aACf9f,iBACC+f,EAAW,WACRx4G,EAAI,EAAGA,EAAIy4F,EAAM19G,OAAQilB,IAAK,CACjCy4F,EAAMz4F,GAAGy4G,QAAQ72F,QAAQ,gBAClBzY,KAAKsvF,EAAMz4F,GAAGy4G,QAAQ3sF,QAAQ,IAAI8E,OAAO,SAAU,KAAM,IAAImjF,GAAYZ,qBAEhF1a,EAAMz4F,GAAGy4G,QAAQ72F,QAAQ,iBAClBzY,KACPsvF,EAAMz4F,GAAGy4G,QAAQ3sF,QAAQ,IAAI8E,OAAO,UAAW,KAAM,IAAImjF,GAAYV,sBAGrE5a,EAAMz4F,GAAGy4G,QAAQ72F,QAAQ,gBAClBzY,KAAKsvF,EAAMz4F,GAAGy4G,QAAQ3sF,QAAQ,IAAI8E,OAAO,SAAU,KAAM,IAAImjF,GAAYX,qBAEhF3a,EAAMz4F,GAAGy4G,QAAQ72F,QAAQ,iBAClBzY,KACPsvF,EAAMz4F,GAAGy4G,QAAQ3sF,QAAQ,IAAI8E,OAAO,UAAW,KAAM,IAAImjF,GAAYT,0BAGrEx0D,EAAM05D,EAAS52F,QAAQ62E,EAAMz4F,GAAGy4G,SAChC35D,QACOjgB,OAAOigB,EAAK,OAGhB9+C,EAAI,EAAGA,EAAIw4G,EAASz9H,OAAQilB,MAC7B04F,WAAW8f,EAASx4G,UAErB1lB,gCAIcssF,WACrB8xC,EAAS,GACTz3H,EAAM2lF,EAAM4yB,WACP18G,EAAI,EAAGA,EAAImE,EAAKnE,OACbsiD,OAAO05D,aAAalyB,EAAM9pF,WAE/Bq9G,OAAOwe,KAAKD,uBAGDh+G,EAAanhB,UACxBA,EAAQ,IAAImhB,MAASnhB,IAAU,IAAImhB,0BAGvBA,EAAanhB,UACzBA,EAAQ,GAAGmhB,MAASnhB,KAAW,GAAGmhB,wCAGVk+G,EAAYT,OACvCU,QACElB,EAAW,cAGXQ,EAAIrsF,QAAQ,IAAI8E,OAAO,SAAU,KAAMt3C,KAAKw/H,aAAax/H,KAAK65H,mBAC1DrnF,QAAQ,IAAI8E,OAAO,UAAW,KAAMt3C,KAAKw/H,aAAax/H,KAAK+5H,oBAC3DvnF,QAAQ,IAAI8E,OAAO,SAAU,KAAMt3C,KAAKw/H,aAAax/H,KAAK85H,mBAC1DtnF,QAAQ,IAAI8E,OAAO,UAAW,KAAMt3C,KAAKw/H,aAAax/H,KAAKg6H,yBAG/DyF,EAAQnoF,OAAO,wDACbioF,EAAQE,EAAMv+G,KAAK29G,IAAO,OAC1Ba,EAAcH,EAAM,KACjB1vG,KACP7vB,KAAK2mH,WAAW,IAAIvG,IAAIsf,EAAaJ,GAAKV,MAAMnZ,YACxCoZ,EAAIrsF,QAAQktF,EAAajB,oBAK/BlZ,QAAQC,IAAI6Y,GACXQ,sBAGWS,EAAYK,YACxB,IAAIvf,IAAIkf,EAAKze,OAAOka,SAAS6D,MAAMA,KAClC,IAAIrZ,iBACLqa,EAAM,IAAItf,iBAEVC,KAAK,MAAO+e,GAAK,GACjBK,KAAYE,iBAAiB,SAAUF,KAEvCG,aAAe,gBAEf1Q,OAAS,OACHwQ,MAGNvQ,QAAU,OACJuQ,MAGNpf,uCAMqBkC,SACrBuX,EAAWvX,EAAGwX,cACd6F,EAAW//H,KAAKw7H,YAAY/nG,IAAIwmG,IAAa,IAAI3oF,SAClDkqF,YAAYz1H,IAAIk0H,EAAU8F,SAEzBC,EAAgB/kG,MAAMqT,KAC1B2rF,EAASqE,iBAAiB,2DAEdzuG,KAAK7vB,KAAK26H,6BAGlBsF,EAAWvd,EAAGwX,wBAAyBgG,sBAElB/gB,OACrBghB,EAAW,GACXC,EAAY,aACLC,KAAQlhB,EACbkhB,EAAKn9F,OAASo9F,QAAQC,oBACX,OAASF,EAAKlB,YAEjB,OAASkB,EAAKlB,cAErB,CAACgB,SAAAA,EAAUC,UAAAA,aAIT3hB,KAAWuhB,EACfD,EAASriG,IAAI+gF,MAEP14G,IAAI04G,EAAS,IAAI8G,mBAClBib,EAAUC,aAAY,QACtBhiB,EAAQQ,MAAO,eACHuhB,SACRjyF,EAASmyF,EAAkBjiB,EAAQQ,MAAME,UAC3C8gB,GAAY1xF,EAAO6xF,UAAW,OAC1BO,EAAard,SAASC,cAAc,WAC/BE,UAAYl1E,EAAO6xF,mBACrBhG,KAAKI,YAAYmG,KACjB56H,IAAI46H,EAAYpb,QAAQwJ,QAAQ,UAEtC6R,4BAA4B3G,KACzB1rF,EAAO4xF,aAEjB,OACD1a,MAAM0Z,GAAYn/H,KAAK2+H,oBAAoB9d,OAAOka,SAAS6D,KAAMO,aAajE5Z,QAAQC,IAAIua,EAAS5oG,kCAKNmoG,MAClBt/H,KAAK6gI,WAAWnjG,IAAI4hG,UAAat/H,KAAK6gI,WAAWptG,IAAI6rG,SACnDwB,EAAiB,IAAIvb,SAAgBJ,MAAM4b,gBACzCnB,QAAY5/H,KAAKghI,OAAO1B,GACxBrwG,EAAM,IAAI6wF,WAAW8f,EAAIqB,UACzBC,EAAc,WAAIC,kBAAkB,0BAAiBzlF,MAAM,KAAK,OAClE+iF,EAAU,MACK,YAAfyC,EAA2B,KACzBrC,EAAMpF,GAAY9Y,OAAO1xF,WACjBjvB,KAAK2+H,oBAAoBW,EAAKT,SACpCuC,EAASvgB,OAAOwe,KAAKR,GACvBuC,EAAO3/H,OAAS,MACR,QAAUy/H,EAAc,WAAaE,UAGvC,QAAUF,EAAc,WAAalhI,KAAK2uH,oBAAoB1/F,KAE3DwvG,kBAEZoC,WAAW96H,IAAIu5H,EAAKwB,GAClBA,+BAGoBriB,GACvBA,EAAQ5+D,QAAQ,eAAewhF,sBAAsB5iB,aAC9Cz9G,KAAKy9G,EAAQ6iB,qBAAqB,cAAeD,sBAAsBrgI,gCAGvDugI,GACvBA,EAAapb,aAAa,WACvBob,EAAaC,WAAsBC,gBAAgB,WAEpDF,EAAaC,WAAsB3W,aAAa,UAAW,IAE7D0W,EAAa7W,aAAa,WAAa6W,EAAathI,SACzC4qH,aAAa,QAAS0W,EAAathI,2BAchCyhI,UACI,IAAIloE,YAAYkoE,EAAU1hB,QAC1B3iE,SAAwB,IAAVl8B,gBCzuBxC,GDoDOulG,GACEgT,iBAAmB,KADrBhT,GAgBUiT,SAAW,EAGnBjT,GAAAib,WAAa,IAAIC,cAEjBlb,GAAA+W,WAAqC,IAAInsF,IACzCo1E,GAAA4D,OAAiC,IAAIh5E,IAC7Bo1E,GAAAuW,kBAAoD,IAAI3rF,IACxDo1E,GAAA2K,gBAA0C,IAAI//E,IAxBxDo1E,GAyBEkV,eAAiB,GAzBnBlV,GA0BEmV,eAAiB,GA1BnBnV,GA2BEoV,YAAc,GA3BhBpV,GA8BWyU,aAAgC,KA9B3CzU,GA+BWmb,cAA6B,KA/BxCnb,GAgCWsU,cAA6B,KAkBtCtU,GAAA2T,kBAAoB,IAAI/oF,IAlD1Bo1E,GAqME4V,qBAAuB,EArMzB5V,GAsMEuV,mBAAqB,IAtMvBvV,GAuME2V,mBAAqB,EAvMvB3V,GAoOEqV,cAAe,EA6MPrV,GAAAsW,iBAAoBI,cACtBD,KAAUC,EAAS,IACR,eAAhBD,EAAOj6F,KAAuB,IACjBi6F,EAAOvrH,OACX84G,aAAayS,EAAO2E,iBAAoB3E,EAAO4E,qBAIxC,kBAAhB5E,EAAOj6F,KAA0B,IACpBi6F,EAAOvrH,OACXmtC,OAASo+E,EAAO4E,wBAIvBnwH,EACJurH,EAAOvrH,OAAOowH,WAAa5pC,KAAK6pC,aAC3B9E,EAAOvrH,OACRurH,EAAOvrH,OAAOixG,kBACfjxG,iBACCy4G,EAAQoQ,GAAYzP,gBAAgBp5G,MACrCy4G,MACe,eAAhB8S,EAAOj6F,MAAkD,UAAzBi6F,EAAO2E,cAA2B,KACjD3E,EAAO4E,SAAW5E,EAAO4E,SAAW,MAC/B5E,EAAOvrH,OAAuBswH,qBAIlDnX,YACFV,EAAMU,YAAYmB,oBAAoBuO,GAAY6C,sBAClDjT,EAAM+B,eAAeqO,GAAY6C,yBAI1B5W,GAAA6W,gBAAkBpY,MAAOnkH,UAChCqpH,EAAQoQ,GAAYzP,gBAAgBhqH,EAAE4Q,QAExCy4G,MAEIU,YACFV,EAAMU,YAAYmB,oBAAoBuO,GAAY6C,sBAClDjT,EAAM+B,eAAeqO,GAAY6C,wBAyG1B5W,GAAA8U,YAAc,IAAIlqF,IA+D1Bo1E,GAAAma,WAAa,IAAIvvF,ICrrBtB+nF,KAAK8I,UACHA,GAAQ9I,KAAK8I,WAEbA,GAAQC,EAwBd,MAAMC,GAAgB,IAAIF,GAAMjyH,QAC1BoyH,GAAgB,IAAIH,GAAM9zH,QAC1Bk0H,GAAiB,IAAIJ,GAAM9zH,QAC3Bm0H,GAAgB,IAAIthB,GACpBuhB,GAAiB,IAAIvhB,GAErBwhB,GAAmBpyG,OAAO,qCAEO6xG,GAAMQ,SAM3C9iI,YAAmB4+G,EAAyBjxE,EAA6B,uDAJzD,eA+BE,cACD,gBACE,gBAER,IAAI8D,6BA+BM,mBAEP,IAAI6wF,GAAMS,KACtBC,GAAWC,SACX,IAAIX,GAAMY,kBAAkB,CAC1BC,KAAMb,GAAMc,WACZC,YAAY,EACZC,aAAa,EACbC,UAAW,KACXzxF,QAAS,sBASS,IAAIwwF,GAAMS,KAC9BC,GAAWC,SACX,IAAIX,GAAMY,kBAAkB,CAC1B3lC,SAAS,iBAIJ,IAAI+kC,GAAMQ,4BAKH,IAAIR,GAAMkB,kBAAkB,CAC1CC,aAAcnB,GAAMoB,iBACpBH,UAAW,sBAGD,IAAIjB,GAAMQ,sBACZ,IAAIR,GAAM9zH,QAAQ,EAAE,EAAE,eAoCvB,IAAI6yG,eACJ,IAAIiJ,uBASyB,6BAeQ,YA7JvC3vE,KAAOikE,EAAQ3tC,QACf0yD,UAAY9c,GAAYsE,gBAAgBvM,KAC3B4L,MAAQrqH,UAErBujB,IAAIvjB,KAAKyjI,kBACTlgH,IAAIvjB,KAAK0jI,kBACTC,OAAOvmC,SAAU,OAEjBwmC,kBAAmB,OAEnBH,YAAYG,kBAAmB,OAC/BH,YAAYrmC,SAAU,OACtBqmC,gCAAqCzjI,KAAK6jI,mBAC1CJ,YAAYK,eAAiB,CAACC,EAAUC,EAAO33H,UAC7C43H,QAAU53H,QAGZq3H,YAAYE,kBAAmB,KAEzBM,gBAAgBn+H,IAAI/F,KAAKy+G,QAASz+G,SAClCmkI,aAAap+H,IAAI/F,KAAKyjI,YAAazjI,8BAYP,UAAnCA,KAAKwjI,UAAU/kB,QAAQsH,QAAqB,OACxCqe,EAAQpkI,KAAKwjI,UAAU/kB,YACzBriD,EAAIp8D,KAAKqkI,SAAS5wG,IAAI2wG,UACrBhoE,MACC,IAAI+lE,GAAMmC,aAAaF,KACzBG,MAAQpC,GAAMqC,sBACdC,MAAQtC,GAAMqC,sBACdE,UAAYvC,GAAMwC,aAChB3kI,KAAKwtC,QAAQo3F,oBAAmBC,SAAW7kI,KAAKwtC,QAAQo3F,sBACvDP,SAASt+H,IAAIq+H,EAAOhoE,IAEpBA,QAGH0vD,EAAS9rH,KAAKwjI,UAAUsB,kBAC1BhhI,EAAI9D,KAAKqkI,SAAS5wG,IAAIq4F,UACtBA,IAAWhoH,MACT,IAAIq+H,GAAM4C,QAAQjZ,KACpB97F,aAAc,IACdu0G,MAAQpC,GAAMqC,sBACdC,MAAQtC,GAAMqC,sBACdE,UAAYvC,GAAMwC,aAChB3kI,KAAKwtC,QAAQo3F,oBAAmBC,SAAW7kI,KAAKwtC,QAAQo3F,sBACvDP,SAASt+H,IAAI+lH,EAAQhoH,IAErBA,4BA6CA9D,KAAKwjI,UAAUlV,gCAOftuH,KAAKwjI,UAAU1tF,yBAOf91C,KAAKglI,eAAiBhlI,KAAKglI,eAAeC,eAAe38F,QAAQtoC,MAAQ,4BAIzEA,KAAKwjI,UAAUnX,aAGxBxsH,uBACO2jI,UAAUpX,eAAe1F,GAAY4W,gDAKnCt9H,KAAKwjI,UAAU7W,yCAQpB3sH,KAAKwjI,UAAUzY,aACf8X,GAAWqB,gBAAgBzwG,IAAIzzB,KAAKwjI,UAAUzY,YAAYtM,SAwBvD5+G,QAAQ2iE,GAAQ,cAChBghE,UAAU0B,eACVD,eAAexjI,OAAS,YAClBuB,KAAKhD,KAAKwjI,UAAUrX,YAAa,OACpC7vF,EAAQumG,GAAWqB,gBACtBzwG,IAAI,YAAYu3F,gBAAgBhoH,EAAEy7G,mBAAUA,SAC1CniF,SACA2oG,eAAep1G,KAAKyM,GACrBkmC,KAAe0iE,QAAQ1iE,SAExB2iE,sBAGCtlI,uBAEDulI,mBAEDplI,KAAKikI,QAAS,MAEXoB,QAAUnkI,KAAKa,IAClBugI,GAAcgD,sBAAsBtlI,KAAKmW,QAAQnQ,EACjDs8H,GAAcgD,sBAAsBtlI,KAAKyjI,YAAYttH,QAAQnQ,QAC1Du/H,OAASrkI,KAAKa,IAAI/B,KAAKyjI,YAAY+B,iBAAiBlD,IAAeh2H,aAAatM,KAAKikI,QAAQ13H,oBAAoBvG,OAElHy/H,EAAgBzlI,KAAKglI,eAAiBhlI,KAAKglI,eAAeU,SAAW1lI,KAAKulI,OAE1EvlI,KAAKqlI,QAAU,UACZK,SAAWD,OAEXC,SAAW1lI,KAAKulI,YAGlB9B,YAAYkC,kBAAoBn4F,QAAQo4F,mBAAqB,MAC3D1kI,KAAK+D,IAAIjF,KAAK0lI,SAAW,GAAKxkI,KAAK+D,IAAIjF,KAAKikI,QAAQhuH,IAAM,IAC7B,WAA5B6/B,MAAqB,KAAb91C,KAAKG,QAKjBN,sBACAgmI,EAAO7lI,KAAKyjI,YACZqC,EAAU9lI,KAAK+lI,eACfC,EAAWH,EAAKG,YAClBF,MAAoBG,OAASD,EAASztF,MAAQutF,GAAW9lI,KAAKkmI,oBAAqB,OAC/EC,EAAenmI,KAAKyjI,YAAY1uH,MAChCqxH,EAASllI,KAAKa,IAAIokI,EAAarmI,EAAIE,KAAK+U,MAAMjV,EAAIqmI,EAAapmI,EAAIC,KAAK+U,MAAMhV,GAC9EsmI,EAAermI,KAAKsmI,QAAQxmI,EAAIE,KAAKsmI,QAAQvmI,EAC/CmB,KAAKa,IAAIskI,EAAaD,GAAU,QACzB7tF,IAAMutF,OACVjC,kBAAuBiC,OACvBI,oBAAqB,IACjBl2G,aAAc,IACfA,aAAc,OACjB6zG,cAAc7zG,aAAc,KAG5BmzG,aAAc,QAIjBoD,EADMV,EAAKG,SACIr0F,QAAU,KAC3B40F,IAAenpC,SAAU,EACpByoC,EAAKG,SAASztF,QAAU6kD,SAAU,GACvCp9F,KAAK2sH,cAAgB4Z,IACnBvmI,KAAK+7B,aAAaA,OAAOi9C,OAAOh5E,WAC/BwmI,qCAKA3D,GAAWqB,gBAAgBzwG,IAAIzzB,KAAKwjI,UAAUxX,UAAUvN,UAIxDikB,OAEC7iI,iBACH6iI,WAEA+D,qBACAC,oBAEA5xH,SAASpK,KAAK1K,KAAK2mI,UAAU7xH,eAC7B/M,WAAW2C,KAAK1K,KAAK2mI,UAAU5+H,iBAC/BgN,MAAMrK,KAAK1K,KAAK2mI,UAAU5xH,YAC1B0uH,YAAY3uH,SAAS/O,IAAI,EAAE,EAAE,QAC7B09H,YAAY1uH,MAAMrK,KAAK1K,KAAKsmI,cAC5B7C,YAAY17H,WAAWhC,IAAI,EAAE,EAAE,EAAE,QACjC29H,YAAY5uH,SAAS/O,IAAI,EAAE,EAAE,QAC7B29H,YAAY3uH,MAAMrK,KAAK1K,KAAKsmI,cAC5B5C,YAAY37H,WAAWhC,IAAI,EAAE,EAAE,EAAE,GAElC/F,KAAKqsH,eAA6C,IAA7BrsH,KAAKwtC,QAAQo5F,kBAC/B1B,aACK2B,wBAGdhnI,OAAO2iE,GAAQ,GACTA,OAAcskE,uBAAuB9mI,KAAK+mI,gBACpCA,YAGZlnI,cAAcq/G,eACNT,EAAUz+G,KAAKy+G,QAAQwc,cAAc/b,KAC3B,cAAKT,QAAQE,qBAAYsc,cAAc/b,OACnDT,SACKokB,GAAWqB,gBAAgBzwG,IAAIgrF,GAK1C5+G,uBACE6+G,SAEMqM,EAAc/qH,KAAKglI,eACrBja,MACUic,uBAAuBtoB,KAC9BjlE,KAAKz5C,KAAM+qH,IAIpBlrH,uBACE6+G,OAE8B,IAA1BA,EAAKjlE,KAAKz5C,KAAMA,aAAwB,YACjCs8B,KAASt8B,KAAKilI,mBACoB,IAAvC3oG,EAAMwqG,uBAAuBpoB,UAAwB,SAEpD,EAGT7+G,wBACE6+G,aAEWpiF,KAASt8B,KAAKilI,mBACqB,IAAxC3oG,EAAM2qG,wBAAwBvoB,UAAwB,SAErDA,EAAKjlE,KAAKz5C,KAAMA,QAAS,EAGlCH,oBACaiE,KAAK9D,KAAKqkI,SAASltG,WAC1BqvG,eAEC/C,YAAY/+G,SAAS8hH,eACrB9C,YAAYh/G,SAAS8hH,aACdU,aAAalnI,KAAKwjI,qBACnBlnG,KAASt8B,KAAKilI,iBAAsBuB,UAGzC3mI,yBACwB,UAA1BG,KAAKy+G,QAAQoH,SAAsB,OAC/Bue,EAAQpkI,KAAKy+G,QACbqnB,EAAU9lI,KAAK+lI,eACftjB,EAAgBd,iBAAiB3hH,KAAKy+G,UACtC0oB,UAAEA,GAAc1kB,GACdzB,MAAOomB,EAAWnmB,OAAQomB,GAAernI,KAAKizB,OAAOvoB,KAAK1K,KAAKwjI,UAAU8D,gBAC3EC,WAAEA,cAAYC,GAAgBpD,EAC9BqD,EAAaF,EAAaC,EAC1BE,EAAYN,EAAYC,WACtBvkI,OAAOiD,IAAI,GAAK,IAChBohI,OACD,SACKQ,OAAO5hI,IAAIqhI,EAAYG,EAAYF,EAAaG,GAAan9F,YAAY,EAAG,aAEjF,cACA,kBACKs9F,OAAO5hI,IAAI,EAAG,GAClB2hI,EAAYD,EAAY,OACpBzmB,EAAQhhH,KAAKizB,OAAOguF,OAASwmB,GAAc,OAC5Cx0G,OAAOrd,YAAcqd,OAAO+tF,MAAQA,GAAS,OAC7C/tF,OAAO+tF,MAAQA,MACf,OACCC,EAASjhH,KAAKizB,OAAO+tF,MAAQymB,GAAc,OAC5Cx0G,OAAOnd,WAAamd,OAAOguF,OAASA,GAAU,OAC9ChuF,OAAOguF,OAASA,YAGpB,aACK0mB,OAAO5hI,IAAIqhI,EAAYG,EAAYF,EAAaG,GACpDE,EAAYD,EAAY,OACpBzmB,EAAQhhH,KAAKizB,OAAOguF,OAASwmB,GAAc,OAC5Cx0G,OAAOrd,YAAcqd,OAAO+tF,MAAQA,GAAS,OAC7C/tF,OAAO+tF,MAAQA,MACf,OACCC,EAASjhH,KAAKizB,OAAO+tF,MAAQymB,GAAc,OAC5Cx0G,OAAOnd,WAAamd,OAAOguF,OAASA,GAAU,OAC9ChuF,OAAOguF,OAASA,oBAIpB,SACK0mB,OAAO5hI,IAAI,EAAG,KAMtBlG,sBAEFG,KAAK2sH,0BAIH2a,cAACA,gBAAeM,GAAiB5nI,KAAKwjI,eAEvCmD,UAAU7xH,SAAS/O,IAAI,EAAE,EAAE,QAC3B4gI,UAAU5xH,MAAMhP,IAAI,EAAG,EAAG,QAC1B4gI,UAAU5+H,WAAWhC,IAAI,EAAG,EAAG,EAAG,SAEjC8hI,EAAoC,UAA1B7nI,KAAKy+G,QAAQoH,SACvB5yF,EAAS40G,EAAU7nI,KAAKizB,OAASjzB,KAAKizB,OAAOvoB,KAAK48H,GAClDpkB,EAAS2kB,EAAU7nI,KAAKkjH,OAASljH,KAAKkjH,OAAOx4G,KAAKk9H,GAElDhY,EAAY38F,EAAO+tF,MAAQkC,EAAOttG,KAAOstG,EAAOrtG,MAChDg6G,EAAa58F,EAAOguF,OAASiC,EAAOptG,IAAMotG,EAAOntG,OACjDirG,EAAQ/tF,EAAO+tF,MACfC,EAAShuF,EAAOguF,OAChB6c,EAAY,EAAI+E,GAAWiF,gCAE5BxB,QAAQvgI,IACX7E,KAAKE,IAAI08H,KAAqB5a,EAAOttG,KAAOstG,EAAOrtG,OAAQ,MAC3D3U,KAAKE,IAAI08H,KAAsB5a,EAAOptG,IAAMotG,EAAOntG,QAAS,MAC5D,IAGG8sH,GAAWkF,qBAAqB/nI,mBAE/B+qH,EAAc/qH,KAAKglI,mBACpBja,eAECid,EAAejd,EAAY93F,OAC3Bg1G,EAAeld,EAAY7H,OAC3BglB,EAAkBF,EAAahnB,MAAQinB,EAAaryH,KAAOqyH,EAAapyH,MACxEsyH,EAAmBH,EAAa/mB,OAASgnB,EAAalyH,OAASkyH,EAAalyH,OAC5EqyH,GAAmBF,EAAkB,EAAID,EAAaryH,KACtDyyH,EAAgBF,EAAmB,EAAIF,EAAanyH,SAErD6wH,UAAU7xH,SAAS/O,IACtB+3H,KAA8BlO,EAAU,EAAI38F,EAAOrd,KAAOstG,EAAOttG,MACjEkoH,KAA6BjO,EAAW,EAAI58F,EAAOnd,IAAMotG,EAAOptG,KAChE,SAGI2sG,EAAgBd,iBAAiB3hH,KAAKy+G,SACtCrnB,EAAYqrB,EAAcrrB,aAC5BA,GAA2B,SAAdA,EAAsB,OAC/BkxC,EAAe5hB,GAAY6hB,kBAAkB9lB,EAAexvF,EAAO+tF,MAAO/tF,EAAOguF,OAAQ6c,EAAWuE,IACtGiG,SACG3B,UAAU6B,oBACV7B,UAAUxwH,OAAO8lB,SAASqsG,QAC1B3B,UAAUxwH,OAAO4a,UAAU/wB,KAAK2mI,UAAU7xH,SAAU9U,KAAK2mI,UAAU5+H,WAAY/H,KAAK2mI,UAAU5xH,UAyBpG,uBAAyBotH,GAAMQ,SAuCpC9iI,YAAY4oI,EAAsCj7F,EAA6B,iDAJpD,mBACN,IAAI20F,GAAMuG,iCACH,6BAsEG,IAAI52F,wBACV,wBAEEu4E,IACrBA,EAAMiE,aAAavE,YAAY4e,qBAAqBplH,IAAI8mG,KACtDsZ,OAAOvmC,SAAU,IACjBkxB,aAAavE,OAAQ,OACtB6e,eAAe/4G,KAAKw6F,EAAMoZ,oBAxEzBhlB,EAAmC,iBAAlBgqB,EAA6BI,GAAIJ,GAAiBA,KAE7DK,gBAAgBrqB,EAASjxE,GAAS,CAAC0oF,GAAStkH,OAAAA,iBACxC,iBAAVskH,EAA0B,OACtB7L,EAAQ,IAAI0e,GAAkBn3H,EAAQ5R,KAAKwtC,SAC7C57B,IAAW6sG,KACPikB,IAAoB,IAAM1iI,KAAKgpI,wBAC/BC,QAAS,OACVjd,UAAY3B,OACZ9mG,IAAI8mG,eACE2a,mBAAgBzhH,IAAI8mG,GAC7BrqH,KAAKwtC,QAAQ07F,oBAAoB17F,QAAQ07F,cAAc7e,WACxC,iBAAV6L,EAA0B,OAC7B7L,EAAQ3D,GAAY4D,OAAO72F,IAAI7hB,GACrBu3H,GAAWjF,gBAAgBzwG,IAAI42F,EAAM5L,SAC7CynB,oBAAqB,UACrBjhI,IAAI,eAAgBolH,EAAM5L,iBACf,eAAVyX,EAAwB,OAC3B7L,EAAQ8e,GAAWjF,gBAAgBzwG,IAAI7hB,cACvCozH,mBAAgBzhH,IAAI8mG,YAIzB6a,eACAj9H,qCAzCqBoiH,SACpB+e,EAAS/e,EAAM0d,2BACG,WAAnBqB,IAA0C,IAAXA,GACZ,UAAnBA,IAAyC,IAAXA,KACpB,SAAXA,IAAqB/e,EAAM2a,gBAAkB3a,EAAMtuF,SAAWsuF,EAAM2a,6CA6CjEhlI,KAAKqpI,qCAEMC,QACbD,iBAAmBC,EAO1BzpI,cAAcq/G,UACLl/G,KAAKgsH,UAAUiP,cAAc/b,GAMtCr/G,eACOmsH,UAAUkZ,SAAQ,GAMzBrlI,cACOmsH,UAAU/jH,QAAO,4BAKfjI,KAAKgsH,UAAUyX,YAqBhB5jI,kBAAkBc,EAAeC,SACjC2oI,EAAS5oI,EAAE4jB,OAAOwX,OAClBytG,EAAS5oI,EAAE2jB,OAAOwX,cACpBwtG,EAAOzzF,QAAU0zF,EAAO1zF,MACnB0zF,EAAO1zF,MAAQyzF,EAAOzzF,MAExB0zF,EAAOrpI,MAAQopI,EAAOppI,MAGvBN,4BAGA4pI,EAAYzpI,KAAK2oI,uBACbzoG,aACL0oG,eAAennI,OAAS,OACxBuqH,UAAU8a,uBAAuB9mI,KAAK0pI,2BAEhCpiH,KAAOtnB,KAAKqpI,iBAAkB,CACnC/hH,aAAe66G,GAAMwH,SAAUC,WAAWtiH,IAAI5c,KAAK4c,QAEhDsiH,WAAWtiH,IAAIvhB,IAClBuhB,EAAIk+G,iBAAiBlD,IACrBh7G,EAAIuiH,kBAAkBtH,IAAgBl3G,eAErCy+G,kBAAkBroI,OAAS,QAC1BsoI,EAAgB/pI,KAAK4pI,WAAWI,iBAAiBhqI,KAAK4oI,gBAAgB,EAAO5oI,KAAK8pI,qBAE1ErhG,KAAKzoC,KAAKiqI,yBAClBC,EAAeH,EAAc,MAC/BG,EAAc,OACV7f,EAAQ6f,EAAa3lH,OAAOwX,SAC5B4nG,OAAO7uH,SAASpK,KAAKw/H,EAAaxmH,SAClCigH,OAAOvmC,SAAU,IACjBkxB,aAAavE,OAAQ,EACtB0f,EAAU/rG,IAAI2sF,MACX8f,6BAKD9f,KAASof,EACbpf,EAAMiE,aAAavE,SAChBogB,kBASZtqI,QAAQynB,SACA8iH,EAAYpqI,KAAK4pI,WACjBG,EAAgB/pI,KAAK8pI,kBACrBO,EAAUlB,GAAWhF,aACvB78G,aAAe66G,GAAMwH,SAClBC,WAAWtiH,IAAI5c,KAAK4c,QACjBsiH,WAAWtiH,IAAIvhB,IACvBuhB,EAAIk+G,iBAAiBlD,IACrBh7G,EAAIuiH,kBAAkBtH,IAAgBl3G,YAE1B5pB,OAAS,IACb6oI,gBAAgBtqI,MAAM,EAAM+pI,KAExBthG,KAAKzoC,KAAKiqI,6BACbC,KAAgBH,EAAe,OAClC1f,EAAQggB,EAAS52G,IAAIy2G,EAAa3lH,YACnC8lG,iBACCkgB,EAAoBC,GAAUngB,EAAM5L,QAAS+jB,QAC9C+H,EAAkBvpB,QAAUupB,EAAkBtpB,oBAC/CrvG,EAASy4G,EAAM5L,cACbgsB,EAAUP,EAAaQ,GAAI5qI,EAAIyqI,EAAkBvpB,MACjD2pB,KAAeT,EAAaQ,GAAI3qI,GAAKwqI,EAAkBtpB,iBACvCoJ,EAAM5L,iBACrB7sG,EAAOqpG,SAASyH,UAAY,QAC3BkoB,EAAsBJ,GAAU9nB,EAAI+f,IACpC1gB,EAAa6oB,EAAoBh1H,KAAO20H,EAAkB30H,KAC1DisG,EAAY+oB,EAAoB90H,IAAMy0H,EAAkBz0H,KACxDkrG,MAAEA,SAAOC,GAAW2pB,SAIxBH,EAAU1oB,GACV0oB,EAJkB1oB,EAAaf,GAK/B2pB,EAAU9oB,GACV8oB,EALmB9oB,EAAYZ,MAOtByB,GACF,MAIJ,CAAE2H,MAAAA,EAAO6f,aAAAA,EAAct4H,OAAAA,gBAvN3BixH,GAAAqB,gBAAkB,IAAI7R,QACtBwQ,GAAAsB,aAAe,IAAI9R,QAHrBwQ,GAKEgI,yBAA2B,KAL7BhI,GAMEiF,wBAA0B,IAN5BjF,GAOEC,SAAW,IAAIX,GAAM2I,cAAc,EAAG,EAAG,EAAG,SC3dxCC,GAAgB,CACzBlrI,YAAY8wB,EAAwB5L,SAC1BimH,EAAUr6G,EAAQ+C,QACnBs3G,EAAQC,cACJxpI,OAAS,UACT+B,EAAI,EAAGA,EAAIwnI,EAAQjmH,SAAStjB,OAAQ+B,MAChCA,GAAKwnI,EAAQjmH,SAASvhB,KAGvC3D,SAAS8wB,EAAwB+K,MACzB/K,EAAQ4C,OAAOc,WAAa1D,EAAQ+C,KAAM,OACpCw3G,EAAav6G,EAAQ+C,OAChBy3G,sBACH53G,OAAOiB,YAAY42G,mCAAmCF,EAAW1+H,wBAGvEknB,EAAO/C,EAAQ+C,KAChBA,EAAKu3G,eAELzC,iBACCj3G,YAAcmC,EAAKvd,SACnB4lB,OAASrI,EAAKqI,SACd4V,QAAU05F,GAAgB16G,IAAY,IAEhD9wB,mBAAmB8wB,EAAwBsC,SACjCS,EAAO/C,EAAQ+C,QAChBA,EAAKu3G,kBACNv3G,EAAKhP,UACAgP,EAAKhP,SAASC,eAAkBD,SAASE,qBACvCqO,EAAOvoB,KAAKgpB,EAAKhP,SAASC,cAE9BsO,GAEXpzB,MAAM8wB,EAAwB+K,SACpBhI,EAAO/C,EAAQ+C,QAChBA,EAAKu3G,eACNvvG,EAAMK,SAAWrI,EAAKqI,OAAQ,CACZL,EAAMK,OACdxY,IAAImQ,QAEb3rB,WAAW2C,KAAKgxB,EAAMR,oBACtBpmB,SAASpK,KAAKgxB,EAAMP,iBACpBpmB,MAAMrK,KAAKgxB,EAAMN,cACjBjlB,OAAOzL,KAAKgxB,EAAMnK,eAClB7kB,YAAYhC,KAAKgxB,EAAMhK,gBACVf,EAAS+K,EAAMiW,SAE7BlZ,MAAMiD,EAAMP,cAAcr7B,SAAU,IAAIM,QACvCwjI,kBAAmB,IACnB0H,wBAAyB,KAItC,YAAyB36G,SACf+C,EAAO/C,EAAQ+C,QACjBA,EAAKsyG,SAAU,OACTuF,EAAe73G,EAAKsyG,YACtBuF,EAAa9pI,kBACFV,KAAKwqI,UACM,IAAdxqI,EAAE4wC,eAA8B5wC,EAAE4wC,gBAGtC,YAAaje,EAAKsyG,gBAAiBtyG,EAAKsyG,SAASr0F,kBAGlDrV,KAAS3L,EAAQ2J,qBAAsB,OACxCqX,EAAU05F,GAAgB/uG,WAChB,IAAZqV,SAA8BA,GAK1C,YAA2BhhB,EAAwBghB,SACzCje,EAAO/C,EAAQ+C,QACjBA,EAAKsyG,SAAU,OACTuF,EAAe73G,EAAKsyG,YACtBuF,EAAa9pI,iBACFV,KAAKwqI,EACR,YAAaxqI,MAAK4wC,QAAUA,UAG7Bq0F,SAAqCr0F,QAAUA,YAEnDrV,KAAS3L,EAAQ2J,wBACNgC,EAAOqV,SAIpB65F,GAAkB,CAC3B3rI,YAAY8wB,EAAwB5L,GAC3B4L,EAAQ+C,KAAwBu3G,eACnBlwG,YAAYpK,EAAS5L,IAG3CllB,SAAS8wB,EAAwB+K,GACxB/K,EAAQ+C,KAAwBu3G,eACnB/uG,SAASvL,EAAS+K,IAGxCqB,oBAAmBpM,EAAwBsC,KAClCtC,EAAQ+C,KAAwBu3G,eACnBluG,mBAAmBpM,EAASsC,GAEvCA,GAEXpzB,MAAM8wB,EAAwB+K,GACrB/K,EAAQ+C,KAAwBu3G,eAClBjrG,MAAMrP,EAAS+K,iBAKWrH,EAAYyG,EAAS0wG,WAC/D,IAAIC,GAAqBp3G,EAAUyG"}